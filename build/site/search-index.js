antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,71.949,1,71.949]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[2,45.052,3,55.365,4,52.064,5,54.746]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[6,56.712,7,71.949]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[2,48.781,8,73.253,9,73.253]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[10,64.934,11,77.931,12,31.471]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[13,65.355,14,51.428]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1-7",[6,56.712,15,77.877]],["name/1-7",[]],["text/1-7",[]],["component/1-7",[]],["title/1-8",[13,65.355,16,79.862]],["name/1-8",[]],["text/1-8",[]],["component/1-8",[]],["title/1-9",[4,61.459,17,68.734]],["name/1-9",[]],["text/1-9",[]],["component/1-9",[]],["title/1-10",[6,56.712,18,76.142]],["name/1-10",[]],["text/1-10",[]],["component/1-10",[]],["title/1-11",[2,48.781,19,63.955,20,69.84]],["name/1-11",[]],["text/1-11",[]],["component/1-11",[]],["title/1-12",[17,68.734,21,74.599]],["name/1-12",[]],["text/1-12",[]],["component/1-12",[]],["title/1-13",[1,71.949,6,56.712]],["name/1-13",[]],["text/1-13",[]],["component/1-13",[]],["title/1-14",[6,56.712,7,71.949]],["name/1-14",[]],["text/1-14",[]],["component/1-14",[]],["title/1",[4,61.459,5,64.625]],["name/1",[4,0.094,5,0.098]],["text/1",[0,0.94,1,1.631,2,4.782,3,0.384,4,2.069,5,1.367,6,2.948,7,2.422,8,3.259,9,1.811,11,0.812,12,1.719,13,2.517,14,1.389,15,0.745,16,0.317,17,2.484,18,2.843,19,3.625,20,0.863,21,0.713,22,0.201,23,1,24,0.201,25,0.201,26,1.289,27,0.187,28,0.611,29,2.596,30,0.769,31,1.684,32,0.882,33,0.14,34,1.039,35,0.337,36,0.819,37,0.448,38,0.16,39,0.165,40,0.326,41,0.458,42,0.586,43,0.201,44,0.165,45,0.201,46,0.187,47,1.949,48,0.262,49,0.156,50,0.178,51,0.469,52,0.16,53,0.848,54,2.175,55,0.351,56,0.483,57,0.201,58,0.13,59,0.759,60,1.435,61,0.38,62,1.019,63,0.804,64,0.688,65,0.677,66,1.073,67,0.677,68,0.688,69,0.625,70,0.688,71,0.187,72,0.187,73,0.649,74,0.597,75,0.458,76,3.298,77,0.398,78,0.551,79,0.483,80,2.39,81,0.398,82,0.618,83,0.916,84,0.932,85,0.145,86,0.398,87,0.317,88,1.33,89,1.241,90,0.165,91,0.201,92,0.153,93,0.611,94,0.187,95,0.165,96,0.548,97,0.355,98,0.201,99,0.667,100,0.589,101,0.326,102,0.171,103,0.557,104,0.43,105,0.512,106,0.326,107,0.171,108,0.448,109,0.171,110,0.153,111,0.145,112,0.187,113,0.302,114,0.171,115,0.187,116,0.296,117,1.367,118,0.201,119,0.15,120,0.178,121,0.733,122,0.147,123,0.846,124,0.201,125,1.597,126,0.178,127,0.153,128,0.201,129,0.52,130,0.15,131,0.127,132,0.717,133,0.171,134,0.38,135,0.41,136,0.351,137,0.589,138,0.64,139,0.296,140,0.337,141,0.156,142,0.132,143,0.15,144,0.277,145,0.281,146,0.16,147,0.685,148,0.156,149,0.309,150,0.165,151,0.201,152,0.187,153,0.64,154,0.201,155,0.469,156,0.178,157,0.187,158,0.201,159,0.393,160,0.285,161,0.416,162,0.254,163,0.41,164,2.788,165,0.201,166,0.201,167,0.326,168,0.326,169,0.171,170,0.201,171,1.193,172,0.741,173,1.578,174,0.532,175,0.483,176,0.201,177,3.373,178,0.741,179,0.153,180,0.448,181,0.898,182,1.003,183,0.869,184,0.423,185,0.41,186,0.934,187,0.187,188,0.201,189,0.812,190,0.145,191,0.201,192,0.337,193,0.515,194,0.605,195,0.52,196,1.498,197,0.636,198,0.201,199,0.327,200,0.61,201,2.42,202,1.044,203,0.07,204,0.398,205,0.343,206,0.636,207,0.776,208,0.277,209,0.745,210,0.231,211,1.289,212,0.309,213,0.548,214,0.277,215,0.557,216,0.733,217,0.285,218,0.302,219,0.285,220,0.41,221,0.337,222,0.326,223,0.277,224,0.153,225,0.171,226,0.165,227,0.171,228,0.178,229,0.469,230,0.187,231,0.201,232,0.156,233,0.369,234,0.351,235,0.201,236,0.776,237,0.16,238,0.201,239,1.31,240,0.423,241,0.309,242,0.178,243,0.178,244,0.156,245,0.548,246,0.351,247,0.285,248,0.16,249,0.296,250,0.187,251,0.15,252,0.476,253,0.16,254,0.281,255,0.351,256,0.16,257,0.021,258,0.187,259,1.611,260,0.29,261,0.296,262,0.309,263,1.113,264,0.29,265,0.658,266,0.448,267,0.721,268,0.589,269,0.439,270,0.285,271,0.625,272,0.369,273,0.7,274,0.677,275,0.15,276,0.133,277,0.147,278,0.201,279,0.201,280,0.201,281,0.165,282,0.156,283,0.582,284,0.147,285,0.786,286,0.337,287,0.153,288,0.16,289,0.178,290,0.178,291,0.187,292,0.187,293,0.302,294,0.171,295,0.171,296,0.43,297,0.122,298,0.404,299,0.156,300,1.522,301,0.618,302,0.201,303,0.153,304,0.416,305,0.15,306,0.416,307,0.187,308,0.201,309,0.15,310,0.145,311,0.269,312,0.469,313,0.165,314,0.317,315,0.15,316,0.171,317,0.187,318,0.114,319,0.512,320,0.201,321,0.302,322,0.187,323,0.262,324,0.178,325,0.201,326,0.16,327,0.136,328,0.142,329,0.16,330,0.147,331,0.29,332,0.178,333,0.317,334,0.15,335,0.483,336,0.201,337,0.171,338,0.16,339,0.187,340,0.091,341,0.136,342,0.089,343,0.156,344,0.171,345,0.153,346,0.165,347,1.482,348,0.398,349,2.052,350,0.201,351,1.11,352,0.632,353,0.201,354,0.201,355,0.171,356,0.399,357,0.351,358,0.262,359,0.326,360,0.393,361,0.147,362,0.302,363,0.398,364,0.145,365,0.201,366,0.14,367,1.124,368,0.201,369,0.15,370,0.201,371,1.056,372,0.404,373,0.483,374,0.171,375,0.165,376,0.254,377,0.165,378,0.178,379,0.15,380,1.978,381,0.189,382,0.285,383,0.187,384,0.54,385,0.368,386,0.144,387,0.846,388,0.178,389,0.178,390,0.326,391,0.296,392,0.171,393,1.545,394,0.29,395,0.156,396,0.171,397,0.147,398,0.138,399,0.165,400,0.499,401,0.136,402,0.061,403,0.187,404,0.171,405,0.165,406,0.201,407,0.165,408,0.741,409,0.499,410,0.178,411,0.16,412,0.187,413,0.483,414,0.142,415,0.448,416,0.187,417,0.156,418,0.15,419,0.201,420,0.337,421,0.201,422,0.41,423,0.15,424,0.171,425,0.153,426,0.201,427,0.156,428,0.16,429,0.416,430,0.171,431,0.187,432,0.398,433,0.187,434,0.178,435,0.201,436,0.54,437,0.178,438,0.273,439,0.178,440,0.351,441,0.309,442,0.138,443,0.499,444,0.632,445,0.156,446,0.256,447,0.439,448,0.178,449,0.156,450,0.171,451,0.266,452,0.165,453,0.187,454,0.273,455,0.142,456,0.15,457,0.201,458,0.165,459,0.201,460,0.14,461,0.165,462,1.343,463,0.452,464,0.136,465,0.14,466,0.171,467,0.266,468,0.15,469,0.187,470,0.178,471,0.165,472,0.187,473,0.201,474,0.147,475,0.398,476,0.16,477,0.164,478,0.547,479,0.187,480,0.171,481,0.131,482,0.178,483,0.201,484,0.098,485,0.201,486,0.201,487,0.201,488,0.15,489,0.171,490,0.153,491,0.351,492,0.369,493,0.153,494,0.547,495,0.398,496,0.589,497,0.178,498,0.398,499,0.171,500,0.178,501,0.398,502,0.337,503,0.337,504,0.116,505,0.171,506,0.156,507,0.138,508,0.201,509,0.15,510,0.201,511,0.142,512,0.187,513,0.326,514,0.337,515,0.201,516,0.138,517,0.15,518,0.156,519,0.178,520,0.398,521,0.351,522,0.201,523,0.266,524,0.728,525,0.153,526,0.201,527,0.187,528,0.41,529,0.201,530,0.201,531,0.187,532,0.165,533,0.165,534,0.201,535,0.201,536,0.398,537,0.398,538,0.147,539,0.165,540,0.165,541,0.439,542,0.165,543,0.201,544,0.145,545,0.178,546,0.156,547,0.285,548,0.153,549,0.156,550,0.171,551,0.171,552,0.266,553,0.201,554,0.165,555,0.171,556,0.171,557,0.171,558,0.142,559,0.171,560,0.285,561,0.171,562,0.145,563,0.201,564,0.165,565,0.156,566,0.156,567,0.589,568,0.153,569,0.156,570,0.138,571,0.147]],["component/1",[29,0.109]],["title/2-1",[12,34.31,28,63.931]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[12,31.471,84,47.426,323,60.654]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[341,62.197,572,68.425,573,46.922]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[185,59.067,193,45.593,574,74.927,575,57.444]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[121,64.625,358,66.126]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2-6",[576,70.272]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["title/2-7",[6,56.712,577,57.12]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["title/2-8",[12,34.31,578,79.862]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["title/2-9",[579,90.329]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["title/2-10",[193,49.366,580,77.931,581,68.425]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["title/2-11",[582,90.329]],["name/2-11",[]],["text/2-11",[]],["component/2-11",[]],["title/2-12",[583,90.329]],["name/2-12",[]],["text/2-12",[]],["component/2-12",[]],["title/2-13",[584,102.349]],["name/2-13",[]],["text/2-13",[]],["component/2-13",[]],["title/2-14",[12,34.31,29,41.883]],["name/2-14",[]],["text/2-14",[]],["component/2-14",[]],["title/2-15",[29,41.883,578,79.862]],["name/2-15",[]],["text/2-15",[]],["component/2-15",[]],["title/2-16",[29,41.883,579,82.179]],["name/2-16",[]],["text/2-16",[]],["component/2-16",[]],["title/2",[12,34.31,571,73.211]],["name/2",[12,0.052,571,0.111]],["text/2",[3,0.543,4,0.746,5,1.02,6,1.628,12,2.595,14,1.901,21,0.318,23,0.26,26,3.087,28,2.363,29,2.511,30,0.289,32,0.209,34,0.525,42,1.911,47,0.325,48,0.803,51,0.34,52,0.663,53,0.39,56,1.297,60,2.506,61,0.784,62,1.399,63,0.766,64,1.385,65,1.362,66,1.258,67,1.362,68,1.385,69,1.258,70,1.385,73,0.955,74,0.489,76,1.351,78,0.384,80,0.753,83,0.753,84,0.22,88,0.289,89,0.27,93,0.273,95,0.35,100,0.325,105,0.803,106,0.35,111,0.307,113,0.632,114,0.705,117,0.537,119,0.318,125,0.549,131,0.27,132,0.27,136,0.377,138,0.812,140,1.031,142,0.524,143,0.318,144,0.297,150,0.35,153,1.056,155,0.34,159,0.285,160,0.307,162,0.531,168,0.35,171,0.549,172,0.793,173,0.793,178,0.279,181,0.571,185,1.1,186,0.525,193,2.255,194,0.525,199,0.791,210,0.301,216,0.537,217,0.307,219,0.307,233,0.397,247,0.307,248,0.34,249,0.318,251,0.318,252,0.51,253,0.34,254,0.302,257,0.044,260,0.889,271,1.258,274,0.302,276,0.803,282,0.332,283,0.961,284,0.312,307,0.397,309,0.318,311,0.563,314,0.34,315,0.318,319,0.549,327,0.823,341,0.289,342,0.856,356,0.563,358,0.549,360,0.556,361,1.881,366,0.297,376,0.273,379,0.318,384,0.297,385,1.206,386,0.104,393,2.072,398,0.293,408,0.543,410,0.377,413,0.35,425,0.924,438,0.293,445,0.332,447,0.318,449,0.647,454,0.293,467,0.285,468,0.619,477,0.176,481,0.279,504,0.481,511,0.302,516,0.293,528,0.579,544,0.307,558,0.302,562,0.307,571,1.409,572,2.141,573,1.756,574,0.734,575,2.999,576,2.363,577,1.468,578,1.537,579,1.297,580,1.031,582,1.853,583,1.297,584,2.393,585,0.273,586,1.26,587,1.801,588,0.427,589,0.427,590,0.969,591,0.997,592,0.307,593,1.1,594,0.427,595,0.35,596,0.997,597,0.647,598,0.427,599,0.753,600,1.682,601,1.13,602,1.201,603,0.427,604,0.377,605,0.905,606,0.427,607,0.377,608,1.26,609,1.297,610,1.635,611,0.663,612,1.362,613,0.285,614,0.289,615,0.302,616,0.427,617,0.563,618,0.34,619,0.945,620,0.377,621,1.031,622,0.35,623,0.682,624,1.135,625,0.377,626,0.619,627,0.377,628,0.997,629,1.201,630,0.427,631,2.539,632,0.773,633,1.469,634,0.832,635,0.803,636,1.469,637,0.377,638,0.362,639,0.332,640,0.663,641,0.427,642,0.397,643,0.427,644,0.427,645,0.773,646,0.397,647,1.469,648,0.397,649,0.832,650,0.647,651,0.647,652,0.705,653,1.469,654,0.318,655,0.397,656,0.832,657,1.285,658,1.499,659,0.579,660,0.597,661,0.35,662,0.325,663,0.325,664,0.377,665,0.682,666,0.889,667,0.427,668,0.427,669,0.34,670,0.427,671,0.397,672,0.362,673,0.24,674,1.031,675,0.267,676,0.734,677,0.427,678,0.427,679,0.377,680,0.34,681,0.362,682,0.332,683,0.285,684,0.427,685,0.293,686,0.571,687,0.397,688,0.705,689,0.481,690,0.307,691,0.556,692,0.663,693,0.318,694,1.469,695,0.427,696,0.397,697,0.377,698,0.427,699,0.377,700,0.35,701,0.803,702,0.427,703,0.427,704,0.325,705,0.377,706,0.549,707,0.289,708,0.397,709,0.302,710,0.125,711,0.332,712,0.293,713,0.377,714,2.916,715,0.332,716,0.597,717,0.608,718,0.832,719,0.427,720,0.773,721,0.773,722,0.397,723,0.773,724,0.362,725,0.332,726,1.02,727,0.307,728,0.397,729,0.397,730,0.397,731,1.442,732,0.397,733,0.397,734,0.427,735,0.832,736,0.349,737,0.506,738,0.332,739,1.574,740,0.245,741,1.428,742,0.997,743,0.846,744,0.773,745,0.427,746,0.832,747,0.427,748,0.427,749,1.409,750,1.682,751,0.289,752,0.332,753,0.427,754,0.427,755,0.427,756,0.734,757,0.427,758,0.302,759,0.325,760,0.619,761,0.377,762,0.427,763,0.397,764,0.297,765,0.397,766,0.251,767,0.832,768,0.619,769,0.362,770,0.136,771,0.264,772,0.427,773,1.341,774,0.427,775,0.597,776,0.427,777,0.427,778,1.396,779,0.427,780,0.427,781,0.427,782,0.377,783,0.427,784,0.427,785,0.362,786,0.773,787,0.397,788,0.377,789,0.34,790,0.427,791,0.264,792,0.325,793,0.663,794,0.377,795,0.362,796,0.832,797,0.35,798,0.832,799,0.905,800,0.76,801,0.22,802,0.362,803,0.427,804,0.619,805,0.734,806,0.35,807,0.332,808,0.312,809,0.427,810,0.427]],["component/2",[29,0.109]],["title/3-1",[811,81.997]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[252,67.554]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[193,45.593,518,65.973,812,67.654,813,71.975]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3-4",[63,7.46,726,59.277,751,62.197]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["title/3-5",[770,34.984]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["title/3-6",[203,38.525]],["name/3-6",[]],["text/3-6",[]],["component/3-6",[]],["title/3-7",[428,79.862,814,67.809]],["name/3-7",[]],["text/3-7",[]],["component/3-7",[]],["title/3-8",[706,66.126,815,79.862]],["name/3-8",[]],["text/3-8",[]],["component/3-8",[]],["title/3-9",[69,65.355,737,60.904]],["name/3-9",[]],["text/3-9",[]],["component/3-9",[]],["title/3",[569,77.877,570,68.734]],["name/3",[569,0.119,570,0.105]],["text/3",[3,0.802,4,1.399,5,0.793,6,2.258,16,0.979,26,0.747,29,2.666,42,2.059,58,0.793,61,1.471,62,0.761,63,0.185,69,2.083,76,2.79,85,0.882,88,2.161,89,1.441,93,0.784,97,0.74,99,1.588,105,1.506,117,1.471,121,1.471,122,1.667,127,0.934,135,0.855,142,0.408,162,0.784,171,1.506,181,0.843,183,0.722,185,0.855,186,2.016,193,2.143,203,0.798,208,1.588,214,0.855,216,2.059,220,0.855,225,1.042,245,0.868,252,0.754,254,0.868,257,0.238,271,0.802,273,0.898,275,0.915,281,1.008,283,0.747,287,0.934,292,1.142,296,0.898,306,0.868,309,0.915,310,1.638,311,0.832,319,2.107,321,0.934,328,0.868,331,0.898,341,0.832,351,1.042,358,3.878,360,3.926,369,0.915,376,2.037,385,0.768,390,1.008,396,1.042,414,0.868,422,0.855,428,3.18,429,3.757,448,1.085,449,0.955,451,0.821,460,0.855,467,0.821,468,0.915,481,0.802,490,0.934,504,1.32,518,1.773,528,1.588,542,1.008,544,0.882,552,0.821,565,0.955,569,3.101,570,4.376,596,1.008,599,0.761,617,1.544,629,0.934,690,0.882,691,0.821,693,1.698,700,4.361,706,3.097,707,0.832,710,0.36,712,0.843,716,0.882,726,2.573,737,2.425,751,1.544,758,2.819,759,0.934,770,0.725,800,0.768,811,2.377,812,0.979,814,3.977,815,3.74,816,1.085,817,3.99,818,5.928,819,1.229,820,3.383,821,1.818,822,2.333,823,2.818,824,1.142,825,1.229,826,1.042,827,3.101,828,1.008,829,1.612,830,2.281,831,1.229,832,1.229,833,2.818,834,1.229,835,0.915,836,1.229,837,1.142,838,1.142,839,1.042,840,1.142,841,0.979,842,1.142,843,2.281,844,1.773,845,1.042,846,0.868,847,1.142,848,2.12,849,1.229,850,1.042,851,1.085,852,1.229,853,1.008,854,1.085,855,0.898,856,1.142,857,1.008,858,0.868,859,0.979,860,1.229,861,1.042,862,0.976,863,0.979,864,1.142,865,0.898,866,1.229,867,1.229,868,1.229,869,1.085,870,1.008,871,1.934,872,1.042,873,0.915,874,1.085,875,1.229,876,1.085,877,1.229,878,1.008,879,1.142,880,1.085]],["component/3",[29,0.109]],["title/4",[881,97.219]],["name/4",[881,0.266]],["text/4",[29,4.405,61,5.817,63,0.511,69,4.106,97,3.793,108,4.784,137,4.784,148,4.893,190,4.521,219,4.521,254,4.448,384,4.381,561,5.338,617,4.26,717,6.59,814,6.103,855,4.6,881,5.557,882,4.784,883,5.557,884,6.296,885,6.296,886,4.381,887,5.85,888,5.018,889,5.85,890,4.319,891,5.85,892,3.975]],["component/4",[29,0.109]],["title/5",[812,87.782]],["name/5",[812,0.24]],["text/5",[29,4.28,61,4.871,63,0.402,97,6.642,148,3.85,159,3.309,219,3.557,254,3.499,507,3.398,617,3.352,675,5.723,717,5.518,736,2.077,812,3.948,814,5.111,883,4.372,886,3.447,887,4.603,888,3.948,889,4.603,890,3.398,891,4.603,892,3.128,893,8.377,894,3.764,895,4.953,896,4.953,897,4.953,898,4.953,899,4.953,900,4.953,901,4.062,902,3.352,903,4.062,904,4.953,905,4.953,906,4.953]],["component/5",[29,0.109]],["title/6-1",[32,44.873,599,56.903,907,81.128]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[14,51.428,592,71.949]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[29,32.961,32,38.501,193,42.355,261,58.708,614,53.365]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[29,38.417,32,44.873,908,67.152]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6",[193,53.82,614,67.809]],["name/6",[909,0.247]],["text/6",[6,1.551,10,1.248,12,0.777,14,0.628,23,0.386,26,0.743,28,0.406,29,2.755,31,2.497,32,4.108,36,2.244,37,0.929,38,0.974,42,0.911,47,0.483,51,0.507,56,0.521,59,1.831,60,0.43,62,0.757,63,0.806,64,0.878,65,0.864,66,1.152,67,0.864,68,0.878,69,0.797,70,0.878,73,0.606,76,2.085,78,0.665,83,1.406,88,0.43,89,0.772,96,0.864,99,0.442,117,0.41,121,0.789,125,0.42,131,0.401,132,0.772,134,0.41,135,0.442,137,0.929,138,0.425,145,2.807,146,1.81,149,0.95,150,1.003,153,0.425,155,0.507,156,0.561,159,1.18,162,0.406,163,0.442,172,2.341,173,2.073,178,0.797,179,0.483,185,0.442,186,0.772,192,0.539,193,4.083,194,1.434,196,0.449,200,1.472,203,0.428,210,0.428,213,1.936,214,0.442,215,1.968,216,0.41,220,0.442,223,0.851,226,0.521,232,0.494,245,0.449,246,0.561,251,0.473,262,0.494,274,0.449,276,0.42,283,1.38,297,0.386,304,0.449,305,0.91,309,0.473,310,0.457,311,0.43,327,0.43,330,0.893,334,0.473,341,0.43,342,0.282,345,0.929,352,1.498,356,0.43,360,0.817,372,0.436,377,0.521,390,0.521,394,0.893,398,0.436,408,0.415,414,0.449,417,0.494,418,0.473,423,0.473,424,0.539,438,0.436,446,0.41,447,0.473,454,0.436,455,0.449,464,0.43,465,1.907,467,0.425,488,0.91,500,0.561,504,0.368,507,0.436,562,0.457,581,0.91,592,1.268,593,1.229,595,0.521,599,2.222,604,0.561,613,1.831,614,3.164,635,3.297,639,0.494,654,0.473,673,0.357,685,1.88,691,0.817,692,0.507,701,0.42,707,0.43,736,0.267,751,0.43,760,0.473,764,0.442,768,0.473,800,0.397,801,0.328,808,0.465,855,0.465,861,0.539,862,0.272,890,0.436,892,0.401,893,0.483,902,0.827,909,1.862,910,0.636,911,2.13,912,0.591,913,0.974,914,0.636,915,0.591,916,0.591,917,0.507,918,0.636,919,0.539,920,1.559,921,0.878,922,0.636,923,0.636,924,2.147,925,0.483,926,2.007,927,1.604,928,0.436,929,0.521,930,0.636,931,0.521,932,0.483,933,0.483,934,0.539,935,0.521,936,0.494,937,0.636,938,0.636,939,0.561,940,0.561,941,0.591,942,3.369,943,1.925,944,0.483,945,0.591,946,2.547,947,0.539,948,0.507,949,0.591,950,0.457,951,0.636,952,0.591,953,0.591,954,1.641,955,1.223,956,1.223,957,1.223,958,1.136,959,1.448,960,1.766,961,1.81,962,0.561,963,0.591,964,1.223,965,0.636,966,0.636,967,1.641,968,0.539,969,2.958,970,0.494,971,2.607,972,1.079,973,0.442,974,0.591,975,0.591,976,1.766,977,2.11,978,0.636,979,0.636,980,3.693,981,1.136,982,0.636,983,1.136,984,0.974,985,0.636,986,0.539,987,0.636,988,1.003,989,0.473,990,0.636,991,0.591,992,0.425,993,0.561,994,0.591,995,0.591,996,0.591,997,0.636,998,2.184,999,0.636,1000,0.521,1001,0.591,1002,0.436,1003,0.591,1004,0.591,1005,0.591,1006,0.591,1007,0.591,1008,0.561,1009,0.591,1010,0.591,1011,0.591,1012,1.641,1013,0.539,1014,0.539,1015,0.591,1016,0.827,1017,0.465,1018,0.561,1019,0.539,1020,0.591,1021,0.507,1022,0.457,1023,0.591,1024,0.561,1025,0.521,1026,0.457,1027,0.539,1028,0.465,1029,1.003,1030,0.539,1031,0.539,1032,0.636,1033,0.636,1034,0.636,1035,0.561,1036,0.636,1037,0.636,1038,0.636,1039,0.539,1040,0.465,1041,0.507,1042,0.591,1043,1.497,1044,0.636,1045,0.636,1046,0.591,1047,0.636,1048,0.494,1049,0.494,1050,0.507]],["component/6",[29,0.109]],["title/7-1",[427,77.877,950,71.949]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[1051,88.448,1052,93.114]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[1051,88.448,1053,100.199]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[323,66.126,682,77.877]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7",[132,53.599,193,45.593,194,53.599,950,60.951]],["name/7",[196,0.108,950,0.11]],["text/7",[4,0.662,6,2.735,12,0.369,23,1.228,26,0.656,28,1.289,29,3.468,31,1.406,32,3.27,36,1.263,41,0.838,42,2.494,44,0.885,61,1.303,63,0.948,64,0.775,65,0.762,66,0.704,67,0.762,68,0.775,69,1.318,70,0.775,73,1.775,74,0.656,76,3.513,78,0.262,80,1.251,83,1.251,92,0.82,93,0.688,95,0.885,103,0.775,105,1.333,110,0.82,117,0.696,125,1.333,131,0.681,132,1.276,138,0.721,141,1.57,163,0.751,171,0.712,181,1.386,183,0.634,186,0.681,193,2.882,194,3.051,196,5.236,197,0.885,210,0.169,213,0.762,215,4.201,216,1.303,223,0.751,234,0.952,250,1.002,253,0.86,257,0.503,265,0.915,266,0.82,274,0.762,276,3.861,281,1.657,283,1.228,290,1.783,297,0.656,304,0.762,310,0.775,313,0.885,342,0.479,352,0.712,382,0.775,385,0.674,386,0.494,391,0.803,408,0.704,414,0.762,420,0.915,427,2.215,444,1.333,451,0.721,452,0.885,454,0.74,460,0.751,464,0.73,471,0.885,481,0.704,504,0.624,517,0.803,541,1.504,544,0.775,548,0.82,597,0.838,599,1.764,613,0.721,626,0.803,629,0.82,691,0.721,692,0.86,701,0.712,704,0.82,707,1.367,710,0.316,726,0.696,751,0.73,758,0.762,792,1.535,799,0.803,800,0.674,806,1.657,853,0.885,859,0.86,870,0.885,873,1.504,892,0.681,926,1.276,939,0.952,947,0.915,950,4.518,988,0.885,1000,0.885,1035,0.952,1051,3.744,1052,2.648,1054,0.775,1055,1.079,1056,1.079,1057,0.82,1058,1.079,1059,1.783,1060,1.002,1061,1.002,1062,0.82,1063,1.079,1064,1.079,1065,0.952,1066,1.079,1067,1.002,1068,4.832,1069,1.002,1070,1.079,1071,0.952,1072,2.02,1073,2.013,1074,1.079,1075,1.079,1076,0.915,1077,0.952,1078,0.803,1079,1.535,1080,0.885,1081,1.079,1082,1.002,1083,1.713,1084,1.079,1085,1.079,1086,1.079,1087,1.079,1088,0.465,1089,0.82,1090,0.86,1091,0.838,1092,1.079,1093,0.86,1094,3.585,1095,0.838,1096,2.02,1097,1.002,1098,1.079,1099,1.079,1100,1.079,1101,2.02,1102,0.915,1103,0.885,1104,0.86,1105,0.73,1106,1.333,1107,0.885,1108,1.079,1109,2.849,1110,1.002,1111,0.915,1112,1.079,1113,0.952]],["component/7",[29,0.109]],["title/8-1",[29,32.961,32,38.501,193,42.355,194,49.793,261,58.708]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[121,64.625,973,69.725]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8",[193,53.82,194,63.271]],["name/8",[196,0.213]],["text/8",[6,4.471,10,0.793,12,0.718,26,1.275,29,3.302,31,0.781,32,4.681,33,0.781,36,2.736,37,1.594,38,0.895,41,0.872,42,0.579,46,1.043,49,0.872,58,0.724,59,0.75,60,0.76,61,0.724,62,1.298,63,0.807,64,0.806,65,0.793,66,0.732,67,0.793,68,0.806,69,1.368,70,0.806,73,0.556,74,0.174,76,1.1,78,0.272,80,0.695,83,1.298,89,0.709,103,0.806,108,0.853,130,0.836,132,2.34,145,0.793,159,1.401,162,1.338,163,2.578,173,0.732,174,0.77,186,1.324,190,0.806,192,0.952,193,2.674,194,3.143,196,3.899,197,0.921,208,1.459,210,0.175,211,1.275,213,0.793,215,0.806,216,0.724,219,0.806,229,0.895,254,0.793,257,0.117,259,0.853,263,0.76,270,0.806,276,0.741,284,1.532,287,0.853,297,0.682,298,2.024,305,0.836,314,0.895,318,0.635,359,0.921,362,0.853,381,0.996,384,0.781,385,0.702,386,1.069,394,0.82,398,0.77,422,0.781,425,0.853,438,0.77,454,1.439,455,1.482,461,1.72,467,0.75,474,0.82,499,3.142,504,0.65,507,0.77,517,0.836,552,0.75,554,0.921,586,0.895,599,0.695,611,1.671,628,0.921,635,1.384,639,0.872,685,0.77,704,0.853,726,1.353,740,0.645,741,1.163,751,0.76,758,0.793,764,0.781,768,0.836,778,0.991,800,0.702,811,0.836,882,0.853,890,0.77,903,0.921,908,2.707,911,0.872,926,1.863,933,1.594,943,0.952,950,2.661,954,1.949,961,2.352,962,3.271,973,5.701,975,1.043,977,1.949,983,1.043,989,2.759,1013,2.502,1028,0.82,1057,0.853,1080,0.921,1114,0.836,1115,1.482,1116,1.123,1117,1.63,1118,1.043,1119,0.952,1120,7.581,1121,1.123,1122,1.123,1123,1.123,1124,2.951,1125,0.836,1126,2.097,1127,1.043,1128,0.836,1129,2.951,1130,1.123,1131,1.123,1132,2.097,1133,2.097,1134,1.123,1135,1.851,1136,3.443,1137,1.123,1138,1.123,1139,0.991,1140,1.043,1141,2.742,1142,0.991,1143,1.63,1144,0.991,1145,1.123,1146,0.793,1147,1.949,1148,0.991,1149,0.991,1150,0.872,1151,1.043,1152,0.853,1153,1.123,1154,0.365]],["component/8",[29,0.109]],["title/9-1",[244,65.973,252,52.064,364,60.951,1155,78.881]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[1156,93.114,1157,82.179]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[364,79.084]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[751,62.197,1158,85.409,1159,32.304]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[131,49.793,451,52.682,804,58.708,1115,55.713,1157,64.674]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9",[193,53.82,1050,79.862]],["name/9",[1160,0.266]],["text/9",[3,0.586,6,1.371,14,1.243,21,1.266,23,0.546,29,0.711,30,0.608,31,0.625,32,2.515,34,0.567,42,0.878,48,0.593,53,0.798,60,2.08,62,0.556,63,0.994,74,1.028,76,2.464,103,0.645,105,0.593,131,0.567,133,0.762,153,0.6,159,2.053,171,1.598,173,1.109,181,0.616,193,2.258,194,0.567,205,0.992,210,0.987,211,1.868,223,0.625,228,0.793,240,0.645,252,0.551,257,0.381,262,0.698,264,0.657,270,0.645,271,0.586,273,0.657,283,1.868,297,0.546,298,2.108,304,0.635,319,0.593,352,3.399,355,0.762,362,0.683,375,0.737,378,0.793,379,1.266,385,1.063,386,0.22,397,0.657,423,0.669,440,0.793,451,0.6,460,0.625,464,1.639,476,1.356,511,2.171,549,0.698,560,1.221,597,1.322,599,1.053,612,0.635,614,0.608,625,0.793,629,1.293,635,1.123,652,0.762,672,1.442,673,4.229,701,0.593,704,0.683,711,0.698,715,1.322,726,1.097,727,0.645,740,1.765,741,3.686,751,2.48,764,0.625,766,4.261,800,0.562,801,1.25,804,4.701,805,1.501,846,0.635,893,0.683,902,2.08,903,1.395,908,0.657,961,1.356,984,2.449,992,0.6,1017,0.657,1019,0.762,1028,2.677,1035,2.713,1040,1.243,1050,2.449,1103,0.737,1115,0.635,1117,2.388,1118,0.835,1157,5.453,1159,0.316,1161,0.835,1162,0.899,1163,0.737,1164,0.899,1165,0.899,1166,0.835,1167,0.698,1168,0.835,1169,0.835,1170,0.716,1171,4.232,1172,1.395,1173,0.698,1174,3.906,1175,0.899,1176,1.581,1177,0.899,1178,0.899,1179,0.835,1180,0.899,1181,2.251,1182,0.669,1183,1.322,1184,0.899,1185,1.442,1186,1.581,1187,0.899,1188,0.835,1189,0.899,1190,0.716,1191,0.835,1192,0.835,1193,0.899,1194,0.793,1195,2.207,1196,0.698,1197,1.322,1198,0.683,1199,0.899,1200,0.899,1201,0.899,1202,0.899,1203,1.701,1204,1.167,1205,2.251,1206,2.422,1207,3.107,1208,0.793,1209,0.793,1210,1.701,1211,1.701,1212,0.899,1213,0.899,1214,0.899,1215,1.581,1216,3.664,1217,1.293,1218,1.701,1219,1.701,1220,1.701,1221,0.899]],["component/9",[29,0.109]],["title/10-1",[29,32.961,32,38.501,193,42.355,261,58.708,613,52.682]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10",[193,53.82,613,66.942]],["name/10",[1222,0.224]],["text/10",[0,0.89,4,0.76,5,0.799,6,2.673,10,0.876,12,0.787,26,0.753,29,1.974,31,2.238,32,3.131,33,0.862,36,0.775,42,0.639,53,0.581,61,0.799,62,1.424,63,0.761,64,0.89,65,0.876,66,0.808,67,0.876,68,0.89,69,0.808,70,0.89,73,0.614,74,0.192,76,0.65,78,0.301,80,0.767,88,0.839,89,0.783,121,1.483,131,0.783,132,1.452,134,0.799,137,0.942,168,1.016,169,1.051,172,0.808,173,2.62,178,1.5,185,0.862,186,2.537,192,1.051,193,4.114,194,2.537,210,0.503,215,0.89,216,0.799,223,0.862,226,1.016,243,1.094,276,0.818,283,1.398,297,1.955,298,0.85,300,0.89,305,1.712,309,0.923,323,0.818,327,1.556,360,1.536,381,0.589,386,0.303,398,0.85,424,1.051,438,0.85,446,1.483,454,0.85,455,0.876,465,2.238,468,0.923,488,0.923,500,1.094,504,0.717,528,0.862,581,0.923,595,1.016,599,1.991,613,3.948,614,0.839,615,0.876,629,0.942,639,0.963,654,0.923,658,0.963,666,0.696,673,0.696,685,3.24,692,0.988,701,0.818,707,0.839,736,0.52,741,1.275,764,0.862,768,0.923,800,0.775,811,0.923,855,0.905,857,1.016,862,0.53,890,0.85,892,0.783,903,1.016,911,1.787,920,1.094,924,1.593,927,0.876,939,1.094,941,1.152,942,5.438,943,2.727,944,1.747,945,1.152,946,3.733,947,1.051,948,0.988,950,0.89,953,2.137,967,2.137,969,0.923,970,1.787,971,4.847,972,1.094,973,0.862,974,1.152,980,2.989,998,2.563,1000,1.016,1001,1.152,1002,0.85,1003,1.152,1004,1.152,1005,1.152,1006,1.152,1007,1.152,1008,1.094,1009,2.989,1010,1.152,1011,1.152,1012,2.137,1013,1.051,1014,1.051,1015,2.137,1016,1.556,1017,0.905,1018,1.094,1019,1.051,1020,1.152,1021,0.988,1022,0.89,1023,1.152,1024,1.094,1025,1.016,1054,0.89,1088,0.534,1095,0.963,1146,0.876,1150,0.963,1222,1.712,1223,1.239,1224,1.239,1225,1.051,1226,1.239,1227,0.988,1228,1.094,1229,1.239,1230,0.963,1231,1.239,1232,1.051,1233,2.299,1234,1.239,1235,2.727,1236,1.152,1237,2.299,1238,1.239,1239,3.589,1240,1.934,1241,2.03,1242,1.051,1243,0.988,1244,1.239,1245,2.299,1246,0.799,1247,0.862,1248,1.239,1249,3.216,1250,1.239,1251,1.239]],["component/10",[29,0.109]],["title/11-1",[12,27.001,84,40.691,193,42.355,323,52.04,609,64.674]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[576,63.931,717,73.211]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[318,56.712,1252,82.179]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11",[193,53.82,609,82.179]],["name/11",[744,0.28]],["text/11",[12,3.763,14,1.002,23,1.186,26,2.113,28,5.019,29,2.735,32,0.953,34,1.232,42,1.794,59,1.304,61,1.259,62,1.208,63,0.782,64,1.401,65,1.379,66,1.273,67,1.379,68,1.401,69,1.273,70,1.401,74,0.302,76,2.993,78,0.474,80,3.532,83,2.91,84,1.794,93,2.218,117,1.259,171,1.288,193,1.867,210,0.305,216,2.242,217,1.401,220,1.358,283,1.186,297,1.186,318,2.661,323,1.288,341,1.321,361,1.426,367,3.572,369,1.453,376,1.245,381,0.927,385,1.22,391,1.453,393,2.095,408,1.273,451,1.304,511,1.379,571,1.426,575,4.91,576,5.915,578,2.771,582,1.601,592,1.401,599,2.91,602,1.483,608,1.556,609,2.851,610,1.655,615,1.379,624,2.496,657,0.597,658,1.517,701,2.294,707,2.353,709,2.456,714,4.838,715,1.517,717,4.782,720,1.814,721,1.814,722,1.814,723,3.231,724,1.655,725,1.517,743,3.97,801,1.007,805,1.723,865,1.426,959,1.601,970,1.517,1252,2.851,1253,1.814,1254,1.601,1255,1.655,1256,1.952,1257,1.655,1258,4.701,1259,1.655,1260,1.814,1261,1.814,1262,1.952,1263,3.231,1264,1.814,1265,2.496,1266,1.426]],["component/11",[29,0.109]],["title/12-1",[726,71.034]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[80,62.037,859,79.862]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[252,67.554]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12",[29,41.883,707,67.809]],["name/12",[29,0.064,707,0.103]],["text/12",[3,0.891,6,4.359,7,3.119,9,1.089,26,2.125,29,3.887,41,1.062,42,0.705,61,2.801,63,0.656,64,0.981,65,0.965,66,0.891,67,0.965,68,0.981,69,2.281,70,0.981,74,0.211,76,4.041,78,0.332,80,2.689,89,0.862,96,0.965,97,0.823,101,1.12,105,0.901,111,0.981,125,1.66,131,2.743,134,2.801,135,0.95,138,1.681,148,1.062,163,1.75,171,0.901,178,1.641,180,1.038,183,0.803,185,0.95,186,0.862,195,1.206,196,0.965,199,0.341,203,0.478,206,1.12,214,2.433,218,1.038,219,0.981,229,1.089,244,1.062,251,1.017,252,3.117,257,0.142,269,4.267,271,2.281,273,0.998,276,0.901,283,0.83,285,2.063,295,1.158,297,1.529,299,1.062,309,1.017,311,0.924,331,1.838,358,0.901,360,2.336,369,1.017,374,1.158,377,1.12,391,1.017,399,1.12,429,0.965,445,1.062,448,1.206,467,2.902,469,1.269,481,2.833,493,1.038,544,1.806,552,0.912,566,1.062,597,1.062,605,1.873,617,3.439,639,1.062,654,1.017,663,1.038,675,0.854,685,0.937,686,0.937,690,0.981,693,1.017,700,1.12,707,1.702,726,4.967,727,0.981,737,2.125,800,0.854,814,2.366,822,0.998,828,1.12,829,0.965,833,1.206,844,1.062,846,0.965,847,1.269,858,0.965,859,2.005,864,1.269,865,1.838,878,1.12,892,1.588,894,1.038,902,0.924,919,1.158,970,1.062,1000,1.12,1062,1.911,1065,1.206,1079,1.038,1088,0.589,1115,0.965,1125,1.017,1143,1.062,1169,1.269,1182,1.017,1217,1.038,1230,1.062,1247,0.95,1252,1.12,1266,0.998,1267,1.206,1268,1.12,1269,2.515,1270,2.787,1271,1.366,1272,1.366,1273,1.366,1274,2.515,1275,1.158,1276,1.366,1277,1.366,1278,1.366,1279,2.515,1280,1.366,1281,1.158,1282,1.366,1283,1.366,1284,1.366,1285,1.366,1286,1.366,1287,1.206,1288,1.366,1289,1.366,1290,1.366,1291,1.269,1292,3.086,1293,1.206,1294,1.206,1295,1.206,1296,1.269,1297,1.062,1298,1.038,1299,1.206,1300,1.366,1301,1.089]],["component/12",[29,0.109]],["title/13-1",[76,48.221,144,63.955,300,65.995]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13",[664,81.128,1302,81.128,1303,91.907]],["name/13",[1304,0.28]],["text/13",[4,2.292,12,1.28,28,2.384,29,5.127,62,2.314,63,0.619,73,1.851,74,1.855,80,4.721,104,2.73,126,3.298,127,2.84,132,2.36,133,3.168,142,2.007,143,2.782,144,5.306,178,2.437,237,2.978,252,2.292,261,2.782,271,2.437,318,2.115,327,4.095,352,2.466,356,2.529,376,2.384,417,2.904,425,2.84,436,2.6,449,2.904,464,4.095,481,2.437,686,2.563,700,4.963,822,2.73,837,3.472,871,3.168,1076,3.168,1305,2.978,1306,2.978,1307,3.472,1308,3.737,1309,3.737,1310,3.737,1311,3.737,1312,3.065,1313,3.737,1314,3.737,1315,2.904,1316,3.298,1317,3.737,1318,3.472]],["component/13",[29,0.109]],["title/14-1",[1319,102.349]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[570,75.551]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[63,7.46,1320,75.378,1321,91.907]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[63,7.46,1322,71.433,1323,77.931]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[63,7.46,1324,77.931,1325,77.931]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[1326,102.349]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[624,79.084]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14-8",[32,53.773]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["title/14-9",[1322,85.601]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["title/14-10",[380,80.471]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["title/14-11",[34,63.271,1327,82.179]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["title/14-12",[34,63.271,132,63.271]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["title/14-13",[33,69.725,1328,82.179]],["name/14-13",[]],["text/14-13",[]],["component/14-13",[]],["title/14-14",[34,63.271,393,60.371]],["name/14-14",[]],["text/14-14",[]],["component/14-14",[]],["title/14-15",[3,59.947,30,62.197,1329,65.995]],["name/14-15",[]],["text/14-15",[]],["component/14-15",[]],["title/14-16",[1330,110.136]],["name/14-16",[]],["text/14-16",[]],["component/14-16",[]],["title/14-17",[32,53.773]],["name/14-17",[]],["text/14-17",[]],["component/14-17",[]],["title/14-18",[1322,85.601]],["name/14-18",[]],["text/14-18",[]],["component/14-18",[]],["title/14-19",[1331,110.136]],["name/14-19",[]],["text/14-19",[]],["component/14-19",[]],["title/14",[30,57.444,84,43.801,323,56.018,1016,57.444]],["name/14",[30,0.204]],["text/14",[0,0.155,2,1.021,3,1.143,4,0.261,5,0.406,6,3.089,7,0.155,8,1.113,9,0.172,10,0.152,12,0.284,13,0.411,14,1.073,15,1.086,17,0.292,19,0.15,23,0.504,26,2.823,28,0.138,29,1.848,30,1.632,32,2.373,33,3.798,34,3.731,36,0.394,37,0.324,39,0.349,41,0.168,42,0.325,47,1.198,48,0.142,50,0.376,53,0.569,59,0.284,60,0.693,61,1.017,62,0.513,63,0.782,64,0.735,65,0.723,66,0.667,67,0.723,68,0.735,69,1.254,70,0.735,73,0.692,74,0.444,76,2.864,78,0.623,79,0.177,80,0.751,83,0.264,84,1.078,85,1.618,88,0.426,89,0.882,93,0.402,94,0.201,95,0.177,96,0.152,100,0.164,103,0.306,105,0.281,111,0.306,113,0.324,116,0.469,117,1.556,121,0.535,123,0.19,130,0.161,131,0.136,132,0.995,134,0.139,135,0.15,138,0.421,143,0.161,145,0.301,146,0.502,149,0.645,150,0.177,153,0.554,159,0.554,162,1.006,163,0.15,167,0.177,169,0.183,171,0.281,173,0.411,174,0.148,175,1.293,180,0.164,181,0.292,183,0.127,185,0.15,186,0.398,190,0.155,193,1.033,194,0.646,196,1.814,197,0.517,199,0.157,200,0.116,206,0.517,208,0.15,210,0.536,211,0.849,216,0.406,217,0.155,218,0.324,219,0.306,220,0.712,222,0.349,223,0.296,227,0.183,234,0.376,244,0.331,245,0.301,247,0.155,248,0.172,251,0.317,252,0.261,253,0.172,254,0.152,256,0.172,257,0.164,259,0.164,263,0.146,264,0.748,266,0.164,270,0.306,271,0.411,273,0.311,274,0.301,275,0.161,282,0.168,283,0.504,284,0.311,291,0.201,293,0.164,297,0.383,298,1.202,299,0.168,300,0.155,301,0.339,303,0.324,304,0.152,305,0.161,306,1.114,310,0.155,311,0.288,312,0.661,315,0.161,316,0.534,317,0.201,318,0.357,319,0.281,321,0.479,323,0.675,327,0.288,328,0.152,329,0.502,330,0.311,331,0.158,334,0.161,338,1.796,341,0.146,343,0.168,345,0.324,347,0.994,349,0.703,352,0.8,356,0.146,358,0.416,360,0.284,361,0.158,362,0.164,367,0.324,372,0.292,375,0.177,376,0.138,380,2.202,382,0.453,384,0.439,385,0.518,386,0.385,390,0.68,391,0.161,393,1.728,394,0.46,398,0.702,399,0.177,400,0.183,402,0.065,407,0.349,408,0.141,411,0.339,413,0.349,414,0.301,415,0.479,417,0.168,420,0.361,422,0.296,424,0.183,427,0.168,428,0.172,429,0.301,430,0.534,434,0.556,443,0.183,444,0.547,446,0.275,447,0.617,451,0.144,452,0.349,454,0.432,455,0.301,456,0.161,460,0.712,461,0.349,462,0.725,464,0.288,465,0.296,466,0.183,467,0.284,474,0.158,476,0.172,481,0.411,482,0.556,488,0.161,489,0.183,490,0.324,493,0.164,504,0.125,505,0.183,507,0.148,509,0.617,516,0.148,517,0.469,523,0.81,525,0.324,527,0.396,538,0.158,541,0.161,542,0.177,544,0.155,547,0.155,549,0.49,552,0.144,560,0.306,561,0.183,565,0.168,566,0.49,570,1.202,573,0.11,576,1.735,593,0.296,596,0.517,600,0.161,608,0.172,613,0.144,615,0.152,624,0.453,626,0.161,635,1.487,640,0.172,654,0.161,657,0.193,658,1.494,666,0.354,675,0.135,682,0.645,683,0.144,691,0.144,692,0.172,693,0.161,701,0.142,704,0.324,706,0.416,709,0.987,710,0.125,711,0.168,712,0.569,713,0.732,716,0.453,726,2.924,736,0.09,737,0.504,739,1.052,740,0.905,741,2.809,751,0.945,758,0.152,759,0.63,764,0.15,766,0.127,771,1.085,785,0.361,788,0.19,789,0.172,791,0.264,792,2.18,799,0.317,800,0.266,807,0.168,811,0.161,814,0.426,821,0.661,822,0.311,829,0.301,850,0.183,858,0.152,862,0.27,863,0.172,871,0.183,878,0.349,880,0.19,886,0.439,892,0.136,902,0.146,913,0.172,924,0.411,926,0.524,928,0.292,929,0.177,931,0.177,932,0.164,933,0.324,947,0.183,948,0.172,950,0.306,959,0.994,973,0.15,986,0.183,992,0.144,1002,0.292,1014,0.183,1016,0.82,1022,0.306,1028,0.158,1050,0.172,1054,0.155,1057,0.324,1067,0.201,1079,0.479,1080,0.177,1083,0.183,1088,0.522,1089,0.324,1091,0.168,1103,0.177,1105,0.146,1106,0.416,1110,0.586,1115,0.152,1117,0.168,1119,0.534,1125,0.161,1142,0.19,1143,0.168,1146,0.152,1150,0.331,1154,0.07,1156,0.201,1158,0.396,1166,0.201,1181,0.201,1182,0.161,1185,0.183,1196,0.168,1197,0.168,1198,0.479,1204,0.292,1215,0.586,1217,1.061,1225,0.183,1227,0.172,1230,0.331,1246,0.275,1247,0.15,1252,0.177,1266,0.46,1268,0.349,1275,0.183,1297,0.168,1298,0.164,1301,0.172,1320,1.978,1322,4.789,1323,0.183,1324,2.177,1325,0.183,1326,0.951,1327,0.177,1328,0.68,1329,1.381,1332,0.426,1333,0.183,1334,0.216,1335,0.829,1336,0.201,1337,0.177,1338,0.216,1339,0.903,1340,0.216,1341,0.216,1342,1.397,1343,0.586,1344,0.361,1345,0.19,1346,0.201,1347,0.396,1348,0.172,1349,0.201,1350,0.201,1351,0.164,1352,0.732,1353,0.19,1354,0.172,1355,0.216,1356,0.296,1357,1.127,1358,0.732,1359,0.183,1360,0.201,1361,0.216,1362,0.183,1363,1.086,1364,0.216,1365,0.396,1366,0.172,1367,0.187,1368,0.216,1369,0.426,1370,0.183,1371,0.216,1372,0.534,1373,0.19,1374,0.172,1375,0.201,1376,0.201,1377,0.216,1378,0.19,1379,0.216,1380,0.168,1381,0.324,1382,0.703,1383,0.216,1384,0.216,1385,0.216,1386,0.201,1387,0.216,1388,0.201,1389,0.201,1390,0.183,1391,1.989,1392,0.586,1393,0.586,1394,0.586,1395,0.556,1396,0.63,1397,0.903,1398,0.201,1399,0.63,1400,0.426,1401,0.216,1402,0.534,1403,0.19,1404,1.405,1405,1.127,1406,0.68,1407,0.349,1408,0.201,1409,1.233,1410,0.816,1411,0.349,1412,0.216,1413,0.396,1414,1.233,1415,0.339,1416,0.63,1417,0.201,1418,0.216,1419,0.158,1420,0.903,1421,0.306,1422,0.396,1423,0.201,1424,0.839,1425,0.168,1426,0.216,1427,0.816,1428,0.172,1429,0.19,1430,0.216,1431,0.426,1432,0.426,1433,0.168,1434,0.19,1435,0.396,1436,0.201,1437,0.396,1438,0.396,1439,0.396,1440,0.396,1441,0.426,1442,0.164,1443,0.216,1444,0.829,1445,0.829,1446,0.829,1447,0.349,1448,0.724,1449,0.19,1450,0.216,1451,0.168,1452,0.063,1453,0.216,1454,0.172,1455,1.17,1456,0.315,1457,0.216,1458,0.172,1459,0.216,1460,0.172,1461,0.216,1462,0.177,1463,0.216,1464,0.201,1465,0.158,1466,0.376,1467,0.201,1468,0.158,1469,0.216,1470,0.534,1471,0.349,1472,0.216,1473,0.331,1474,0.216,1475,0.216,1476,0.19,1477,0.201,1478,0.183,1479,0.361,1480,0.201,1481,0.19,1482,0.177,1483,0.903,1484,0.216,1485,0.426,1486,0.426,1487,0.829,1488,0.216,1489,0.183,1490,0.19,1491,0.216,1492,0.183,1493,0.201,1494,0.19,1495,0.183,1496,0.201,1497,0.201,1498,0.216,1499,0.216,1500,0.201,1501,0.183,1502,0.216,1503,0.183,1504,0.201,1505,0.19,1506,0.172,1507,0.183,1508,0.201,1509,0.216,1510,0.216,1511,0.201,1512,0.183,1513,0.317,1514,0.63,1515,0.201,1516,0.216,1517,0.216,1518,0.216,1519,0.216,1520,0.177,1521,0.201,1522,0.349,1523,0.216,1524,0.216,1525,0.216,1526,0.216,1527,0.339,1528,0.361,1529,0.161,1530,0.216,1531,0.19]],["component/14",[29,0.109]],["title/15-1",[581,81.997]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[717,80.471]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[888,79.862,1532,84.962]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[1533,84.962,1534,93.114]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[190,79.084]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[252,67.554]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[186,63.271,1054,71.949]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15",[29,46.037]],["name/15",[1367,0.133]],["text/15",[2,0.628,3,0.771,4,0.725,5,0.763,6,4.009,26,1.338,27,1.099,28,3.3,29,3.837,32,0.577,37,0.899,42,0.61,47,2.939,48,1.453,49,0.919,51,1.755,61,1.42,62,1.912,63,0.505,64,0.849,65,0.836,66,0.771,67,0.836,68,0.849,69,2.015,70,0.849,73,0.586,76,0.621,83,0.732,84,0.61,88,1.49,93,0.755,121,0.763,125,0.781,131,0.747,132,1.39,134,0.763,137,0.899,141,3.006,149,0.919,159,1.471,160,0.849,162,0.755,163,0.823,164,0.943,168,0.97,173,0.771,174,0.811,175,0.97,183,0.695,186,1.95,196,1.556,203,0.414,221,1.003,222,0.97,223,2.691,248,0.943,249,0.881,251,0.881,252,3.172,253,0.943,266,2.347,277,0.864,282,2.401,283,1.338,299,0.919,304,0.836,305,0.881,319,0.781,323,0.781,328,0.836,358,1.453,360,0.79,362,0.899,394,0.864,404,1.003,408,1.436,428,0.943,429,0.836,442,0.811,452,0.97,454,0.811,456,0.881,460,1.532,481,1.436,488,0.881,509,2.879,518,0.919,525,0.899,552,1.471,564,0.97,569,1.711,570,1.51,573,0.604,581,0.881,585,0.755,587,0.943,593,0.823,596,2.533,599,1.363,600,1.639,615,0.836,617,2.09,618,0.943,635,0.781,646,1.099,664,1.044,673,0.665,675,0.739,685,0.811,690,0.849,701,4.106,706,1.453,712,0.811,717,3.779,727,0.849,737,1.877,758,0.836,793,0.943,799,1.639,808,0.864,811,1.639,814,1.49,815,1.755,816,1.044,822,0.864,823,1.044,826,1.003,827,0.919,835,0.881,869,1.044,882,0.899,886,0.823,888,0.943,890,0.811,892,0.747,903,0.97,917,0.943,919,1.003,927,0.836,933,0.899,1054,1.581,1078,0.881,1090,0.943,1119,1.003,1139,1.044,1197,0.919,1222,3.393,1225,1.003,1227,0.943,1232,1.867,1298,0.899,1301,0.943,1305,0.943,1319,1.099,1374,0.943,1528,1.003,1533,1.003,1534,1.099,1535,1.183,1536,1.183,1537,1.003,1538,1.183,1539,1.099,1540,1.099,1541,1.099,1542,3.089,1543,3.594,1544,1.183,1545,1.003,1546,0.943,1547,2.202,1548,1.183,1549,1.099,1550,1.183,1551,1.183,1552,1.183,1553,1.183,1554,1.003,1555,2.202,1556,1.183,1557,1.183,1558,1.183,1559,1.183,1560,1.183,1561,2.202,1562,1.183,1563,1.183,1564,1.183,1565,1.183,1566,1.183,1567,1.183,1568,0.97,1569,0.919,1570,1.183,1571,1.044,1572,1.099,1573,2.202,1574,1.099,1575,1.099,1576,1.003,1577,1.044,1578,1.183,1579,1.183,1580,1.673,1581,1.183,1582,1.183,1583,1.183,1584,1.183,1585,1.183,1586,1.183,1587,1.183,1588,0.97,1589,1.183,1590,1.183,1591,1.044]],["component/15",[29,0.109]],["title/16-1",[29,32.961,32,38.501,382,56.623,1592,78.855,1593,78.855]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[32,44.873,159,61.402,853,75.378]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[599,68.19]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16",[32,53.773]],["name/16",[32,0.147]],["text/16",[0,2.816,6,0.885,12,0.536,14,0.803,23,1.731,28,3.581,29,3.897,32,5.322,33,3.362,38,1.247,42,0.807,44,2.336,51,2.27,52,1.247,59,1.045,63,0.231,74,0.242,80,2.428,83,0.969,89,0.988,99,1.089,103,1.123,111,1.123,121,1.009,132,0.988,134,1.009,137,1.189,139,1.165,141,2.214,156,1.381,159,1.903,172,1.02,173,1.858,179,1.189,185,1.089,186,1.799,193,3.98,194,2.476,223,1.089,227,1.326,237,1.247,247,1.123,251,2.121,273,1.143,284,1.143,303,1.189,306,1.105,311,1.059,323,1.032,338,1.247,340,0.71,376,0.998,379,1.165,381,1.863,397,1.143,414,2.77,430,1.326,438,1.954,446,1.009,450,1.326,456,1.165,468,1.165,488,1.165,509,1.165,548,1.189,592,1.123,593,1.089,596,1.283,599,2.991,604,1.381,609,1.283,611,1.247,613,1.903,614,1.059,639,2.214,673,1.601,680,1.247,686,1.073,692,1.247,701,1.032,708,2.647,751,1.059,764,2.729,766,0.919,789,1.247,806,1.283,892,0.988,907,1.381,908,1.143,911,6.122,913,1.247,917,1.247,919,1.326,920,1.381,926,3.544,927,3.965,943,2.415,944,1.189,970,1.216,989,2.121,992,1.045,1000,2.336,1041,1.247,1054,1.123,1069,1.454,1114,1.165,1117,1.216,1125,1.165,1151,1.454,1152,1.189,1190,1.247,1227,2.27,1228,1.381,1253,1.454,1287,1.381,1506,1.247,1594,1.564,1595,1.564,1596,1.564,1597,2.848,1598,1.283,1599,1.564,1600,1.564,1601,3.125,1602,1.454,1603,1.564,1604,1.454,1605,1.564,1606,1.454,1607,1.381,1608,3.921,1609,1.381,1610,2.848,1611,1.247,1612,1.564,1613,1.564,1614,1.564,1615,1.564,1616,1.564,1617,1.564,1618,1.564,1619,1.564,1620,1.564,1621,1.564,1622,1.564,1623,1.564]],["component/16",[29,0.109]],["title/17-1",[581,81.997]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[717,80.471]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[190,79.084]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[121,64.625,405,82.179]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[172,65.355,467,66.942]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[706,66.126,1624,82.179]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17",[6,56.712,358,66.126]],["name/17",[358,0.199]],["text/17",[6,3.872,23,1.269,26,1.786,28,0.713,29,3.998,42,0.576,61,2.812,62,0.692,63,0.844,73,1.827,76,3.786,78,0.713,80,2.699,83,3.07,84,0.576,88,0.756,92,1.586,93,5.214,114,0.947,116,1.554,117,1.346,125,0.737,127,0.849,134,1.346,138,0.746,153,0.746,162,0.713,171,0.737,172,1.361,173,1.361,178,1.916,179,0.849,184,1.499,185,0.777,193,0.6,216,0.72,226,0.916,252,0.685,257,0.217,271,0.728,277,0.816,283,0.679,284,0.816,296,0.816,321,0.849,323,0.737,328,0.789,347,2.409,349,3.129,358,5.741,360,0.746,372,0.766,385,0.698,394,0.816,408,2.407,414,0.789,422,0.777,441,0.868,445,0.868,446,0.72,465,0.777,467,3.313,490,0.849,504,0.646,509,0.832,531,1.038,569,0.868,570,1.432,617,0.756,691,2.912,706,4.246,707,1.412,710,0.327,716,1.499,717,0.816,737,1.269,770,0.355,800,0.698,815,2.941,818,1.038,821,1.663,823,1.842,827,1.622,835,0.832,839,0.947,846,0.789,873,3.245,874,2.593,876,0.986,886,0.777,888,0.89,902,1.412,928,0.766,1014,0.947,1016,1.412,1079,1.586,1083,0.947,1107,0.916,1152,0.849,1173,0.868,1194,1.842,1222,2.187,1268,0.916,1270,2.342,1299,0.986,1351,1.586,1374,1.663,1390,0.947,1482,0.916,1532,1.77,1541,4.051,1549,1.038,1554,0.947,1624,3.575,1625,4.608,1626,1.117,1627,1.117,1628,1.117,1629,1.117,1630,0.986,1631,1.117,1632,3.429,1633,1.038,1634,2.087,1635,1.117,1636,5.989,1637,0.986,1638,2.087,1639,2.087,1640,1.117,1641,1.117,1642,1.117,1643,1.117,1644,1.117,1645,1.117,1646,1.117,1647,1.117,1648,1.117,1649,1.117,1650,1.117,1651,1.117,1652,1.117,1653,1.117,1654,1.117,1655,0.916,1656,1.117,1657,0.986,1658,1.117,1659,1.038,1660,0.849,1661,1.117,1662,1.117,1663,0.986,1664,1.117,1665,1.117,1666,0.986,1667,1.038,1668,1.038,1669,1.117,1670,0.89]],["component/17",[29,0.109]],["title/18-1",[1671,102.349]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[178,59.947,573,46.922,1016,62.197]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[141,71.433,573,46.922,1672,81.128]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[573,46.922,622,75.378,1673,81.128]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[623,90.329]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18-6",[1674,67.152,1675,77.931,1676,58.641]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["title/18-7",[1677,97.219]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["title/18-8",[1569,85.601]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["title/18-9",[277,80.471]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["title/18-10",[799,68.425,1675,77.931,1678,81.128]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["title/18-11",[6,56.712,1679,84.962]],["name/18-11",[]],["text/18-11",[]],["component/18-11",[]],["title/18-12",[1680,110.136]],["name/18-12",[]],["text/18-12",[]],["component/18-12",[]],["title/18-13",[1681,90.329]],["name/18-13",[]],["text/18-13",[]],["component/18-13",[]],["title/18-14",[706,66.126,1682,55.191]],["name/18-14",[]],["text/18-14",[]],["component/18-14",[]],["title/18-15",[1021,87.782]],["name/18-15",[]],["text/18-15",[]],["component/18-15",[]],["title/18-16",[1683,87.782]],["name/18-16",[]],["text/18-16",[]],["component/18-16",[]],["title/18",[675,68.853]],["name/18",[675,0.188]],["text/18",[4,0.298,5,0.159,6,4.22,10,0.344,12,0.471,14,0.914,17,0.334,23,1.429,26,0.836,29,1.712,30,0.167,32,0.351,36,0.154,41,0.192,42,1.118,44,0.203,48,0.163,53,0.116,56,0.203,58,0.159,59,0.777,60,0.329,61,0.463,62,1.103,63,0.934,64,0.349,65,0.344,66,0.469,67,0.344,68,0.349,69,1.651,70,0.349,72,0.452,73,0.122,74,0.471,76,3.551,78,0.571,80,1.224,82,0.752,84,0.709,85,0.349,88,0.486,89,0.868,97,0.149,99,0.172,103,0.177,105,0.474,108,0.188,110,0.188,116,0.184,117,1.02,122,0.18,125,0.474,127,0.37,131,0.998,132,0.307,133,0.209,134,0.159,138,0.165,140,0.412,141,0.558,142,0.313,144,0.172,145,0.344,146,0.197,149,0.192,153,0.325,155,0.388,159,0.63,160,0.349,161,0.174,162,0.158,163,0.172,167,0.203,169,0.209,171,0.474,172,0.758,173,0.317,174,0.334,178,0.616,181,0.334,186,0.454,187,0.229,190,0.177,193,1.263,194,0.307,199,1.36,200,0.624,210,0.526,214,0.172,216,0.463,217,0.349,218,0.188,219,0.349,245,0.344,249,0.703,251,0.184,252,0.298,253,0.388,257,0.35,262,0.192,263,0.329,264,0.18,266,0.37,271,0.758,276,0.163,277,1.155,281,0.203,283,0.961,284,0.18,296,0.18,298,0.169,304,0.174,306,0.508,310,0.177,311,0.167,313,0.203,314,0.573,318,1.119,319,1.176,321,0.188,323,0.163,327,0.486,328,0.508,330,0.18,332,0.634,337,0.209,338,0.197,340,0.326,341,0.93,342,0.79,343,0.733,347,0.203,349,0.412,352,0.321,356,0.329,359,0.203,364,0.177,372,0.169,376,0.742,379,0.184,381,0.117,384,0.809,385,0.988,386,1.098,391,0.184,398,0.169,402,0.417,408,0.469,418,0.362,422,0.172,425,0.188,438,0.334,442,0.169,444,0.163,446,1.02,449,0.378,451,0.165,452,0.203,454,0.797,455,0.508,458,0.203,462,0.102,463,0.419,465,0.338,466,0.412,467,0.165,471,0.399,477,0.65,479,0.229,480,0.209,481,0.161,482,0.218,484,0.461,490,0.188,497,0.218,504,0.281,507,0.169,509,0.184,511,0.344,516,0.169,517,1.024,525,0.37,541,0.184,545,0.634,548,0.188,552,0.165,558,0.508,560,0.177,570,0.169,571,0.18,573,1.872,577,0.538,582,0.203,586,0.197,587,0.197,590,0.573,591,0.953,595,0.399,597,0.378,599,0.72,600,0.184,602,0.188,608,0.197,612,0.344,613,0.777,614,0.167,617,1.831,620,0.218,621,0.609,622,1.297,623,1.461,624,0.678,627,0.218,628,0.399,629,1.045,635,0.321,637,0.634,638,1.166,639,0.192,645,0.229,647,0.229,650,0.733,651,0.733,654,0.362,657,0.663,658,1.385,659,0.338,660,0.349,661,0.399,665,0.953,666,1.001,669,0.573,675,0.59,682,0.192,685,0.169,687,0.229,690,0.516,701,0.767,704,0.188,706,2.32,712,0.493,715,0.192,716,0.349,726,0.159,727,0.678,736,0.663,739,0.266,740,0.542,741,2.493,743,0.172,758,0.174,759,0.188,769,0.412,770,0.154,771,0.153,787,0.229,791,0.301,795,0.209,799,0.865,800,0.154,808,0.18,811,0.184,835,0.362,842,0.229,846,0.174,855,0.18,861,0.209,862,1.505,872,0.209,873,0.362,886,0.5,890,0.169,892,0.156,902,0.639,908,0.18,913,0.197,917,0.197,932,0.188,936,0.192,942,0.209,944,0.188,969,0.362,970,0.192,971,0.399,993,0.218,998,0.197,1013,0.412,1016,1.466,1018,0.429,1021,0.752,1022,0.177,1024,0.429,1029,0.203,1030,0.209,1057,0.37,1062,0.188,1078,0.535,1079,0.37,1091,0.192,1125,0.362,1136,0.229,1143,0.378,1150,0.192,1154,0.158,1190,0.197,1205,0.229,1217,1.354,1222,0.535,1232,0.209,1239,0.37,1240,0.346,1267,0.429,1275,0.209,1294,0.218,1302,0.429,1305,0.197,1306,0.197,1318,0.229,1328,0.399,1345,0.429,1348,0.197,1351,0.37,1363,0.558,1366,0.197,1372,0.209,1376,0.229,1381,0.546,1395,0.218,1415,0.752,1425,0.192,1442,0.188,1452,0.636,1468,0.69,1471,0.203,1479,0.412,1506,0.197,1512,0.412,1520,0.399,1531,0.218,1537,0.209,1545,0.209,1554,0.209,1568,0.203,1569,0.903,1572,0.452,1577,0.218,1580,0.37,1609,0.218,1611,0.197,1624,0.203,1632,0.229,1666,0.218,1672,0.429,1673,0.218,1674,1.004,1675,1.676,1676,0.31,1678,2.388,1679,1.341,1681,2.628,1682,0.981,1683,0.926,1684,0.247,1685,0.218,1686,0.247,1687,0.247,1688,0.247,1689,0.247,1690,0.177,1691,0.727,1692,0.833,1693,1.24,1694,0.229,1695,1.166,1696,0.229,1697,0.229,1698,0.412,1699,0.218,1700,0.944,1701,0.229,1702,0.247,1703,0.247,1704,0.247,1705,0.247,1706,0.247,1707,0.247,1708,0.192,1709,0.247,1710,0.247,1711,0.247,1712,0.247,1713,0.877,1714,0.486,1715,0.247,1716,0.209,1717,0.209,1718,0.247,1719,0.247,1720,0.247,1721,0.247,1722,0.218,1723,0.247,1724,0.229,1725,0.229,1726,0.247,1727,0.486,1728,0.247,1729,0.247,1730,0.247,1731,0.229,1732,0.229,1733,0.247,1734,0.229,1735,0.229,1736,0.399,1737,0.229,1738,0.247,1739,0.247,1740,0.247,1741,0.247,1742,0.378,1743,0.247,1744,0.247,1745,0.247,1746,0.203,1747,0.229,1748,0.229,1749,0.546,1750,0.821,1751,0.218,1752,0.247,1753,0.412,1754,0.218,1755,0.209,1756,1.026,1757,0.833,1758,0.247,1759,0.429,1760,0.149,1761,0.218,1762,0.229,1763,0.247,1764,0.833,1765,0.229,1766,0.247,1767,0.247,1768,0.486,1769,0.247,1770,0.247,1771,0.247,1772,0.247,1773,0.197,1774,0.188,1775,0.247,1776,0.378,1777,0.203,1778,0.634,1779,0.61,1780,0.247,1781,0.574,1782,0.247,1783,0.247,1784,0.247,1785,0.8,1786,0.247,1787,0.247,1788,0.247,1789,0.247,1790,0.247,1791,0.247,1792,0.247,1793,0.247,1794,0.247,1795,0.247,1796,0.247,1797,0.247,1798,0.218,1799,0.247,1800,0.188,1801,0.197,1802,0.378,1803,0.218,1804,0.573,1805,0.218,1806,0.229,1807,0.399,1808,0.209,1809,1.004,1810,0.634,1811,0.865,1812,0.197,1813,0.752,1814,0.486,1815,0.944,1816,0.944,1817,0.486,1818,0.486,1819,0.486,1820,0.486,1821,0.229,1822,0.718,1823,0.229,1824,0.668,1825,0.247,1826,0.229,1827,0.247,1828,0.209,1829,0.218,1830,0.247,1831,0.718,1832,0.718,1833,0.388,1834,0.388,1835,0.247,1836,0.486,1837,0.209,1838,0.203,1839,0.218,1840,0.668,1841,0.218,1842,0.486,1843,0.247,1844,0.229,1845,0.133,1846,0.452,1847,0.229,1848,0.133,1849,0.229,1850,0.135,1851,0.229,1852,0.229,1853,0.229,1854,0.229,1855,0.668,1856,0.209,1857,0.412,1858,0.429,1859,0.668,1860,0.218,1861,0.229,1862,0.452,1863,0.229,1864,0.378,1865,0.229,1866,0.229,1867,0.247,1868,0.229,1869,0.229,1870,0.247,1871,0.452,1872,0.192,1873,0.247,1874,0.192,1875,0.486,1876,0.429,1877,0.229,1878,0.247,1879,0.247,1880,0.229,1881,0.247,1882,0.229,1883,0.452,1884,0.247,1885,0.229,1886,0.229,1887,0.944,1888,0.247,1889,0.188,1890,0.486,1891,0.486,1892,0.247,1893,0.247,1894,0.247,1895,0.218,1896,0.203,1897,0.247,1898,0.247,1899,0.229,1900,0.634,1901,0.718,1902,0.247,1903,0.247,1904,0.247,1905,0.486]],["component/18",[29,0.109]],["title/19",[29,41.883,1301,79.862]],["name/19",[1301,0.24]],["text/19",[6,3.417,28,3.852,29,5.222,61,3.894,63,0.71,111,4.335,167,4.951,186,3.812,217,4.335,223,4.201,248,4.812,372,4.141,376,3.852,509,4.495,581,4.495,626,4.495,701,3.984,707,4.086,710,1.767,712,4.141,821,4.812,827,4.692,894,4.588,1054,4.335,1143,4.692,1532,5.119,1533,5.119,1580,4.588,1906,6.037,1907,6.037,1908,6.037]],["component/19",[29,0.109]],["title/20-1",[1105,74.534]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[1,79.084]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[82,79.862,183,58.884]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[73,42.041,74,13.13,75,65.973,257,8.837]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[53,39.814,63,6.89,74,13.13,78,20.604]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20-6",[257,10.432,1909,84.962]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["title/20-7",[78,24.322,90,82.179]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["title/20-8",[74,13.13,78,20.604,87,67.654,1910,63.195]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["title/20-9",[74,13.13,257,8.837,1910,63.195,1911,69.617]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["title/20-10",[74,14.273,1088,28.017,1367,40.635,1910,48.399,1912,55.122,1913,53.317]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["title/20-11",[12,29.065,74,13.13,203,29.691,1914,71.975]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["title/20-12",[53,39.814,74,13.13,203,29.691,1915,71.975]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["title/20-13",[115,102.349]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["title/20-14",[63,6.89,74,13.13,78,20.604,1916,78.881]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["title/20-15",[74,13.13,78,20.604,87,67.654,1910,63.195]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["title/20-16",[74,13.13,257,8.837,1910,63.195,1911,69.617]],["name/20-16",[]],["text/20-16",[]],["component/20-16",[]],["title/20-17",[78,24.322,120,88.448]],["name/20-17",[]],["text/20-17",[]],["component/20-17",[]],["title/20-18",[74,14.273,1088,28.017,1367,40.635,1910,48.399,1913,53.317,1917,60.411]],["name/20-18",[]],["text/20-18",[]],["component/20-18",[]],["title/20-19",[1918,97.219]],["name/20-19",[]],["text/20-19",[]],["component/20-19",[]],["title/20-20",[2,34.504,12,22.26,63,5.276,74,10.055,142,21.562,199,16.246,212,50.526,1452,19.1]],["name/20-20",[]],["text/20-20",[]],["component/20-20",[]],["title/20-21",[2,39.079,63,5.976,142,24.42,199,25.15,1919,58.684]],["name/20-21",[]],["text/20-21",[]],["component/20-21",[]],["title/20-22",[2,39.079,12,25.211,74,11.389,142,24.42,199,18.4,268,55.95]],["name/20-22",[]],["text/20-22",[]],["component/20-22",[]],["title/20-23",[2,39.079,12,25.211,74,11.389,142,24.42,199,18.4,269,54.816]],["name/20-23",[]],["text/20-23",[]],["component/20-23",[]],["title/20-24",[2,39.079,74,11.389,142,24.42,199,18.4,568,55.95,1920,58.684]],["name/20-24",[]],["text/20-24",[]],["component/20-24",[]],["title/20-25",[2,29.35,199,24.447,1088,23.832,1367,43.079,1921,46.888,1922,48.812,1923,48.812]],["name/20-25",[]],["text/20-25",[]],["component/20-25",[]],["title/20-26",[2,29.35,12,18.935,74,12.691,199,13.819,689,31.994,1088,23.832,1367,43.079,1924,46.888]],["name/20-26",[]],["text/20-26",[]],["component/20-26",[]],["title/20-27",[2,29.35,12,18.935,74,12.691,199,13.819,689,31.994,1088,23.832,1367,43.079,1925,46.888]],["name/20-27",[]],["text/20-27",[]],["component/20-27",[]],["title/20-28",[12,25.211,74,11.389,199,18.4,203,25.754,1926,64.992,1927,64.992]],["name/20-28",[]],["text/20-28",[]],["component/20-28",[]],["title/20-29",[203,35.049,1928,88.448]],["name/20-29",[]],["text/20-29",[]],["component/20-29",[]],["title/20-30",[7,79.084]],["name/20-30",[]],["text/20-30",[]],["component/20-30",[]],["title/20-31",[2,45.052,182,74.927,183,49.882,199,21.213]],["name/20-31",[]],["text/20-31",[]],["component/20-31",[]],["title/20-32",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/20-32",[]],["text/20-32",[]],["component/20-32",[]],["title/20-33",[2,34.504,12,22.26,63,5.276,74,10.055,78,15.78,199,16.246,212,50.526,1452,19.1]],["name/20-33",[]],["text/20-33",[]],["component/20-33",[]],["title/20-34",[2,45.052,199,21.213,257,8.837,1930,71.975]],["name/20-34",[]],["text/20-34",[]],["component/20-34",[]],["title/20-35",[2,39.079,12,25.211,74,11.389,199,18.4,257,7.666,1930,62.431]],["name/20-35",[]],["text/20-35",[]],["component/20-35",[]],["title/20-36",[2,39.079,63,5.976,78,17.872,199,25.15,1919,58.684]],["name/20-36",[]],["text/20-36",[]],["component/20-36",[]],["title/20-37",[2,39.079,12,25.211,74,11.389,78,17.872,199,18.4,268,55.95]],["name/20-37",[]],["text/20-37",[]],["component/20-37",[]],["title/20-38",[2,39.079,12,25.211,74,11.389,78,17.872,199,18.4,269,54.816]],["name/20-38",[]],["text/20-38",[]],["component/20-38",[]],["title/20-39",[2,39.079,74,11.389,78,17.872,199,18.4,568,55.95,1920,58.684]],["name/20-39",[]],["text/20-39",[]],["component/20-39",[]],["title/20-40",[2,39.079,199,25.15,257,7.666,288,58.684,1931,62.431]],["name/20-40",[]],["text/20-40",[]],["component/20-40",[]],["title/20-41",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,209,50.526,257,6.768,1452,19.1]],["name/20-41",[]],["text/20-41",[]],["component/20-41",[]],["title/20-42",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,257,6.768,1452,19.1,1932,51.813]],["name/20-42",[]],["text/20-42",[]],["component/20-42",[]],["title/20-43",[63,6.89,78,20.604,199,21.213,285,69.617]],["name/20-43",[]],["text/20-43",[]],["component/20-43",[]],["title/20-44",[297,66.944]],["name/20-44",[]],["text/20-44",[]],["component/20-44",[]],["title/20-45",[1933,110.136]],["name/20-45",[]],["text/20-45",[]],["component/20-45",[]],["title/20-46",[2,34.504,63,5.276,74,10.055,142,21.562,199,16.246,210,10.163,346,53.317,1367,28.628]],["name/20-46",[]],["text/20-46",[]],["component/20-46",[]],["title/20-47",[2,39.079,63,5.976,142,24.42,199,18.4,210,11.51,344,62.431]],["name/20-47",[]],["text/20-47",[]],["component/20-47",[]],["title/20-48",[1934,102.349]],["name/20-48",[]],["text/20-48",[]],["component/20-48",[]],["title/20-49",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/20-49",[]],["text/20-49",[]],["component/20-49",[]],["title/20-50",[2,34.504,63,5.276,74,10.055,78,15.78,199,16.246,210,10.163,346,53.317,1367,28.628]],["name/20-50",[]],["text/20-50",[]],["component/20-50",[]],["title/20-51",[2,39.079,63,5.976,78,17.872,199,18.4,210,11.51,344,62.431]],["name/20-51",[]],["text/20-51",[]],["component/20-51",[]],["title/20-52",[2,39.079,63,5.976,74,11.389,78,17.872,199,18.4,346,60.386]],["name/20-52",[]],["text/20-52",[]],["component/20-52",[]],["title/20-53",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,209,50.526,257,6.768,1452,19.1]],["name/20-53",[]],["text/20-53",[]],["component/20-53",[]],["title/20-54",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,257,6.768,1452,19.1,1932,51.813]],["name/20-54",[]],["text/20-54",[]],["component/20-54",[]],["title/20-55",[1935,102.349]],["name/20-55",[]],["text/20-55",[]],["component/20-55",[]],["title/20-56",[63,6.89,74,13.13,142,28.153,1936,71.975]],["name/20-56",[]],["text/20-56",[]],["component/20-56",[]],["title/20-57",[63,5.604,74,10.681,142,22.902,1456,34.538,1937,60.952,1938,51.408,1939,60.952]],["name/20-57",[]],["text/20-57",[]],["component/20-57",[]],["title/20-58",[63,6.89,142,28.153,1456,42.457,1940,74.927]],["name/20-58",[]],["text/20-58",[]],["component/20-58",[]],["title/20-59",[63,5.604,142,22.902,1456,48.155,1941,60.952,1942,46.131,1943,60.952]],["name/20-59",[]],["text/20-59",[]],["component/20-59",[]],["title/20-60",[74,13.13,142,28.153,1938,63.195,1944,74.927]],["name/20-60",[]],["text/20-60",[]],["component/20-60",[]],["title/20-61",[142,33.234,1945,88.448]],["name/20-61",[]],["text/20-61",[]],["component/20-61",[]],["title/20-62",[142,33.234,1946,88.448]],["name/20-62",[]],["text/20-62",[]],["component/20-62",[]],["title/20-63",[142,28.153,1456,42.457,1942,56.709,1947,74.927]],["name/20-63",[]],["text/20-63",[]],["component/20-63",[]],["title/20-64",[142,33.234,1948,88.448]],["name/20-64",[]],["text/20-64",[]],["component/20-64",[]],["title/20-65",[63,6.89,142,28.153,1456,42.457,1949,74.927]],["name/20-65",[]],["text/20-65",[]],["component/20-65",[]],["title/20-66",[74,10.681,1088,29.759,1367,30.407,1456,34.538,1938,51.408,1939,60.952,1950,64.167]],["name/20-66",[]],["text/20-66",[]],["component/20-66",[]],["title/20-67",[1088,43.184,1951,93.114]],["name/20-67",[]],["text/20-67",[]],["component/20-67",[]],["title/20-68",[1088,31.732,1456,50.337,1942,49.19,1943,64.992,1952,68.422]],["name/20-68",[]],["text/20-68",[]],["component/20-68",[]],["title/20-69",[1088,43.184,1953,93.114]],["name/20-69",[]],["text/20-69",[]],["component/20-69",[]],["title/20-70",[74,13.13,203,29.691,1936,71.975,1954,78.881]],["name/20-70",[]],["text/20-70",[]],["component/20-70",[]],["title/20-71",[203,35.049,1955,93.114]],["name/20-71",[]],["text/20-71",[]],["component/20-71",[]],["title/20-72",[203,29.691,436,59.067,1456,42.457,1956,78.881]],["name/20-72",[]],["text/20-72",[]],["component/20-72",[]],["title/20-73",[295,93.388]],["name/20-73",[]],["text/20-73",[]],["component/20-73",[]],["title/20-74",[73,36.467,74,11.389,257,7.666,1456,36.827,1957,68.422,1958,68.422]],["name/20-74",[]],["text/20-74",[]],["component/20-74",[]],["title/20-75",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/20-75",[]],["text/20-75",[]],["component/20-75",[]],["title/20-76",[53,39.814,63,6.89,74,13.13,78,20.604]],["name/20-76",[]],["text/20-76",[]],["component/20-76",[]],["title/20-77",[2,39.079,12,25.211,74,11.389,78,17.872,199,18.4,268,55.95]],["name/20-77",[]],["text/20-77",[]],["component/20-77",[]],["title/20-78",[2,39.079,12,25.211,74,11.389,78,17.872,199,18.4,269,54.816]],["name/20-78",[]],["text/20-78",[]],["component/20-78",[]],["title/20-79",[2,39.079,12,25.211,74,11.389,78,17.872,199,18.4,568,55.95]],["name/20-79",[]],["text/20-79",[]],["component/20-79",[]],["title/20-80",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,209,50.526,257,6.768,1452,19.1]],["name/20-80",[]],["text/20-80",[]],["component/20-80",[]],["title/20-81",[2,34.504,12,22.26,63,5.276,74,10.055,199,16.246,257,6.768,1452,19.1,1932,51.813]],["name/20-81",[]],["text/20-81",[]],["component/20-81",[]],["title/20-82",[2,39.079,199,25.15,257,7.666,288,58.684,1931,62.431]],["name/20-82",[]],["text/20-82",[]],["component/20-82",[]],["title/20-83",[63,6.89,74,13.13,78,20.604,1936,71.975]],["name/20-83",[]],["text/20-83",[]],["component/20-83",[]],["title/20-84",[63,5.604,74,10.681,78,16.761,436,48.049,1456,34.538,1937,60.952,1938,51.408]],["name/20-84",[]],["text/20-84",[]],["component/20-84",[]],["title/20-85",[63,6.89,78,20.604,1456,42.457,1940,74.927]],["name/20-85",[]],["text/20-85",[]],["component/20-85",[]],["title/20-86",[63,5.604,78,16.761,436,48.049,1456,48.155,1941,60.952,1942,46.131]],["name/20-86",[]],["text/20-86",[]],["component/20-86",[]],["title/20-87",[63,6.89,78,20.604,1456,42.457,1949,74.927]],["name/20-87",[]],["text/20-87",[]],["component/20-87",[]],["title/20-88",[74,13.13,78,20.604,1938,63.195,1944,74.927]],["name/20-88",[]],["text/20-88",[]],["component/20-88",[]],["title/20-89",[74,13.13,257,8.837,1938,63.195,1959,78.881]],["name/20-89",[]],["text/20-89",[]],["component/20-89",[]],["title/20-90",[78,24.322,1945,88.448]],["name/20-90",[]],["text/20-90",[]],["component/20-90",[]],["title/20-91",[257,10.432,1960,93.114]],["name/20-91",[]],["text/20-91",[]],["component/20-91",[]],["title/20-92",[78,24.322,1946,88.448]],["name/20-92",[]],["text/20-92",[]],["component/20-92",[]],["title/20-93",[257,10.432,1961,93.114]],["name/20-93",[]],["text/20-93",[]],["component/20-93",[]],["title/20-94",[78,20.604,1456,42.457,1942,56.709,1947,74.927]],["name/20-94",[]],["text/20-94",[]],["component/20-94",[]],["title/20-95",[257,8.837,1456,42.457,1942,56.709,1962,78.881]],["name/20-95",[]],["text/20-95",[]],["component/20-95",[]],["title/20-96",[78,24.322,1948,88.448]],["name/20-96",[]],["text/20-96",[]],["component/20-96",[]],["title/20-97",[257,10.432,1963,93.114]],["name/20-97",[]],["text/20-97",[]],["component/20-97",[]],["title/20-98",[63,5.976,257,7.666,1456,50.337,1942,49.19,1964,68.422]],["name/20-98",[]],["text/20-98",[]],["component/20-98",[]],["title/20-99",[18,83.693]],["name/20-99",[]],["text/20-99",[]],["component/20-99",[]],["title/20-100",[1965,102.349]],["name/20-100",[]],["text/20-100",[]],["component/20-100",[]],["title/20-101",[23,33.612,63,4.488,74,12.691,142,18.341,205,32.241,462,22.889,463,32.241,477,22.742,1452,16.247,1966,46.888]],["name/20-101",[]],["text/20-101",[]],["component/20-101",[]],["title/20-102",[1967,93.388]],["name/20-102",[]],["text/20-102",[]],["component/20-102",[]],["title/20-103",[13,32.801,23,30.567,63,4.082,74,11.818,142,16.68,205,29.321,462,20.816,463,29.321,477,20.683,1452,14.775,1966,42.642,1968,24.001]],["name/20-103",[]],["text/20-103",[]],["component/20-103",[]],["title/20-104",[63,6.89,142,28.153,395,65.973,1968,40.511]],["name/20-104",[]],["text/20-104",[]],["component/20-104",[]],["title/20-105",[63,6.89,142,28.153,1968,40.511,1969,74.927]],["name/20-105",[]],["text/20-105",[]],["component/20-105",[]],["title/20-106",[63,5.976,74,11.389,142,24.42,462,30.476,1452,21.632,1970,64.992]],["name/20-106",[]],["text/20-106",[]],["component/20-106",[]],["title/20-107",[63,5.276,74,10.055,142,21.562,462,26.908,463,37.903,477,26.736,484,31.74,1971,57.384]],["name/20-107",[]],["text/20-107",[]],["component/20-107",[]],["title/20-108",[63,5.976,74,11.389,142,24.42,462,30.476,1968,35.139,1972,64.992]],["name/20-108",[]],["text/20-108",[]],["component/20-108",[]],["title/20-109",[63,5.976,142,24.42,484,49.135,1919,58.684,1973,39.547]],["name/20-109",[]],["text/20-109",[]],["component/20-109",[]],["title/20-110",[63,5.976,142,24.42,484,49.135,1973,39.547,1974,64.992]],["name/20-110",[]],["text/20-110",[]],["component/20-110",[]],["title/20-111",[63,5.976,142,24.42,484,35.948,1968,35.139,1973,39.547,1975,64.992]],["name/20-111",[]],["text/20-111",[]],["component/20-111",[]],["title/20-112",[12,16.474,63,3.905,74,7.442,104,35.152,142,15.957,484,23.49,1456,36.945,1968,35.251,1973,25.841,1976,42.468,1977,44.709,1978,44.709]],["name/20-112",[]],["text/20-112",[]],["component/20-112",[]],["title/20-113",[12,18.935,63,4.488,74,8.553,142,18.341,212,42.978,484,26.999,1452,16.247,1968,26.391,1973,29.702,1979,51.387,1980,44.074]],["name/20-113",[]],["text/20-113",[]],["component/20-113",[]],["title/20-114",[142,24.42,484,35.948,513,60.386,514,62.431,736,30.878,1973,39.547]],["name/20-114",[]],["text/20-114",[]],["component/20-114",[]],["title/20-115",[12,22.26,74,10.055,142,21.562,268,49.4,484,31.74,1968,31.025,1973,34.917,1980,51.813]],["name/20-115",[]],["text/20-115",[]],["component/20-115",[]],["title/20-116",[12,25.211,74,11.389,142,24.42,269,54.816,484,35.948,1973,39.547]],["name/20-116",[]],["text/20-116",[]],["component/20-116",[]],["title/20-117",[74,11.389,142,24.42,484,35.948,568,55.95,1920,58.684,1973,39.547]],["name/20-117",[]],["text/20-117",[]],["component/20-117",[]],["title/20-118",[19,51.235,142,24.42,484,49.135,550,62.431,1973,39.547]],["name/20-118",[]],["text/20-118",[]],["component/20-118",[]],["title/20-119",[20,55.95,142,24.42,484,49.135,551,62.431,1973,39.547]],["name/20-119",[]],["text/20-119",[]],["component/20-119",[]],["title/20-120",[142,24.42,484,35.948,503,62.431,1942,49.19,1968,35.139,1973,39.547]],["name/20-120",[]],["text/20-120",[]],["component/20-120",[]],["title/20-121",[74,10.055,142,21.562,462,26.908,463,37.903,477,26.736,484,31.74,559,55.122,1973,34.917]],["name/20-121",[]],["text/20-121",[]],["component/20-121",[]],["title/20-122",[74,11.389,142,24.42,462,30.476,555,62.431,1942,49.19,1968,35.139]],["name/20-122",[]],["text/20-122",[]],["component/20-122",[]],["title/20-123",[74,11.389,142,24.42,462,30.476,524,55.95,557,62.431,1452,21.632]],["name/20-123",[]],["text/20-123",[]],["component/20-123",[]],["title/20-124",[63,5.976,142,24.42,199,18.4,924,36.467,1456,36.827,1981,64.992]],["name/20-124",[]],["text/20-124",[]],["component/20-124",[]],["title/20-125",[63,5.976,142,24.42,199,18.4,924,36.467,1968,35.139,1982,58.684]],["name/20-125",[]],["text/20-125",[]],["component/20-125",[]],["title/20-126",[63,4.275,74,8.148,142,17.471,199,13.164,436,36.654,462,21.803,657,16.125,771,32.613,862,22.544,1456,26.347,1968,25.139,1983,36.654]],["name/20-126",[]],["text/20-126",[]],["component/20-126",[]],["title/20-127",[63,5.276,74,10.055,142,21.562,393,39.168,462,26.908,657,19.901,862,27.823,1968,31.025]],["name/20-127",[]],["text/20-127",[]],["component/20-127",[]],["title/20-128",[63,4.723,74,13.178,142,19.302,205,33.931,462,24.088,547,41.787,657,17.815,862,24.907,1968,27.774]],["name/20-128",[]],["text/20-128",[]],["component/20-128",[]],["title/20-129",[74,11.389,142,24.42,205,42.929,657,22.54,862,31.512,1984,64.992]],["name/20-129",[]],["text/20-129",[]],["component/20-129",[]],["title/20-130",[63,4.723,74,13.178,142,19.302,199,14.543,205,33.931,462,24.088,657,17.815,862,24.907,1985,47.729]],["name/20-130",[]],["text/20-130",[]],["component/20-130",[]],["title/20-131",[74,15.566,142,24.42,462,30.476,556,62.431,1986,60.386]],["name/20-131",[]],["text/20-131",[]],["component/20-131",[]],["title/20-132",[74,10.713,199,11.065,205,25.814,436,30.809,462,18.326,657,13.554,771,27.412,862,18.949,1088,19.082,1367,30.499,1456,22.146,1968,21.13,1983,30.809,1987,41.144]],["name/20-132",[]],["text/20-132",[]],["component/20-132",[]],["title/20-133",[199,16.246,771,40.249,1088,28.017,1367,40.635,1968,31.025,1983,45.237,1988,60.411]],["name/20-133",[]],["text/20-133",[]],["component/20-133",[]],["title/20-134",[199,16.246,771,40.249,1088,28.017,1367,40.635,1968,31.025,1983,45.237,1989,60.411]],["name/20-134",[]],["text/20-134",[]],["component/20-134",[]],["title/20-135",[484,33.713,513,56.632,736,28.958,1088,29.759,1367,30.407,1973,37.088,1990,64.167]],["name/20-135",[]],["text/20-135",[]],["component/20-135",[]],["title/20-136",[12,17.22,13,32.801,74,7.779,484,24.553,1088,21.674,1367,33.646,1452,14.775,1456,25.154,1924,42.642,1968,24.001,1973,27.012,1991,46.733]],["name/20-136",[]],["text/20-136",[]],["component/20-136",[]],["title/20-137",[12,22.26,74,10.055,484,31.74,1088,28.017,1367,40.635,1925,55.122,1973,34.917]],["name/20-137",[]],["text/20-137",[]],["component/20-137",[]],["title/20-138",[19,45.237,484,45.053,1088,28.017,1367,40.635,1921,55.122,1973,34.917]],["name/20-138",[]],["text/20-138",[]],["component/20-138",[]],["title/20-139",[20,49.4,484,45.053,1088,28.017,1367,40.635,1973,34.917,1992,60.411]],["name/20-139",[]],["text/20-139",[]],["component/20-139",[]],["title/20-140",[13,42.402,484,31.74,1088,28.017,1367,28.628,1456,32.516,1968,31.025,1973,34.917,1993,60.411]],["name/20-140",[]],["text/20-140",[]],["component/20-140",[]],["title/20-141",[74,10.681,462,28.581,524,52.471,1088,29.759,1367,30.407,1452,20.287,1994,64.167]],["name/20-141",[]],["text/20-141",[]],["component/20-141",[]],["title/20-142",[74,9.002,462,24.088,463,33.931,477,23.934,484,28.413,1088,25.081,1367,37.518,1973,31.258,1995,54.08]],["name/20-142",[]],["text/20-142",[]],["component/20-142",[]],["title/20-143",[13,42.402,74,10.055,462,26.908,1088,28.017,1367,28.628,1456,32.516,1968,31.025,1996,60.411]],["name/20-143",[]],["text/20-143",[]],["component/20-143",[]],["title/20-144",[199,21.213,203,29.691,1983,59.067,1997,78.881]],["name/20-144",[]],["text/20-144",[]],["component/20-144",[]],["title/20-145",[199,21.213,203,29.691,1983,59.067,1998,78.881]],["name/20-145",[]],["text/20-145",[]],["component/20-145",[]],["title/20-146",[199,21.213,203,29.691,1983,59.067,1999,78.881]],["name/20-146",[]],["text/20-146",[]],["component/20-146",[]],["title/20-147",[199,21.213,203,29.691,1983,59.067,2000,78.881]],["name/20-147",[]],["text/20-147",[]],["component/20-147",[]],["title/20-148",[203,29.691,484,41.443,1973,45.593,2001,78.881]],["name/20-148",[]],["text/20-148",[]],["component/20-148",[]],["title/20-149",[203,35.049,2002,93.114]],["name/20-149",[]],["text/20-149",[]],["component/20-149",[]],["title/20-150",[74,11.389,203,25.754,484,35.948,1973,39.547,2003,68.422,2004,64.992]],["name/20-150",[]],["text/20-150",[]],["component/20-150",[]],["title/20-151",[74,14.273,203,22.739,205,37.903,462,26.908,463,37.903,477,26.736,2005,60.411]],["name/20-151",[]],["text/20-151",[]],["component/20-151",[]],["title/20-152",[74,13.13,203,29.691,462,35.135,2006,78.881]],["name/20-152",[]],["text/20-152",[]],["component/20-152",[]],["title/20-153",[74,15.589,203,20.356,205,33.931,462,24.088,463,33.931,477,23.934,2004,51.37,2007,54.08]],["name/20-153",[]],["text/20-153",[]],["component/20-153",[]],["title/20-154",[74,13.13,203,29.691,502,71.975,2008,78.881]],["name/20-154",[]],["text/20-154",[]],["component/20-154",[]],["title/20-155",[18,83.693]],["name/20-155",[]],["text/20-155",[]],["component/20-155",[]],["title/20-156",[183,58.884,2009,93.114]],["name/20-156",[]],["text/20-156",[]],["component/20-156",[]],["title/20-157",[73,42.041,74,13.13,78,20.604,502,71.975]],["name/20-157",[]],["text/20-157",[]],["component/20-157",[]],["title/20-158",[13,32.801,63,4.082,74,11.818,78,12.207,205,29.321,462,20.816,463,29.321,477,20.683,493,38.215,1452,14.775,1966,42.642,1968,24.001]],["name/20-158",[]],["text/20-158",[]],["component/20-158",[]],["title/20-159",[63,6.89,78,20.604,395,65.973,1968,40.511]],["name/20-159",[]],["text/20-159",[]],["component/20-159",[]],["title/20-160",[63,6.89,78,20.604,1968,40.511,1969,74.927]],["name/20-160",[]],["text/20-160",[]],["component/20-160",[]],["title/20-161",[63,5.976,74,11.389,78,17.872,462,30.476,1452,21.632,1970,64.992]],["name/20-161",[]],["text/20-161",[]],["component/20-161",[]],["title/20-162",[63,5.276,74,10.055,78,15.78,462,26.908,463,37.903,477,26.736,484,31.74,1971,57.384]],["name/20-162",[]],["text/20-162",[]],["component/20-162",[]],["title/20-163",[63,5.976,74,11.389,78,17.872,462,30.476,1968,35.139,1972,64.992]],["name/20-163",[]],["text/20-163",[]],["component/20-163",[]],["title/20-164",[63,5.976,78,17.872,484,49.135,1919,58.684,1973,39.547]],["name/20-164",[]],["text/20-164",[]],["component/20-164",[]],["title/20-165",[63,5.976,78,17.872,484,49.135,1973,39.547,1974,64.992]],["name/20-165",[]],["text/20-165",[]],["component/20-165",[]],["title/20-166",[63,5.976,78,17.872,484,35.948,1968,35.139,1973,39.547,1975,64.992]],["name/20-166",[]],["text/20-166",[]],["component/20-166",[]],["title/20-167",[12,16.474,63,3.905,74,7.442,78,11.678,104,35.152,484,23.49,1456,36.945,1968,35.251,1973,25.841,1976,42.468,1977,44.709,1978,44.709]],["name/20-167",[]],["text/20-167",[]],["component/20-167",[]],["title/20-168",[12,18.935,63,4.488,74,8.553,78,13.423,212,42.978,484,26.999,1452,16.247,1968,26.391,1973,29.702,1979,51.387,1980,44.074]],["name/20-168",[]],["text/20-168",[]],["component/20-168",[]],["title/20-169",[78,17.872,484,35.948,513,60.386,514,62.431,736,30.878,1973,39.547]],["name/20-169",[]],["text/20-169",[]],["component/20-169",[]],["title/20-170",[12,22.26,74,10.055,78,15.78,268,49.4,484,31.74,1968,31.025,1973,34.917,1980,51.813]],["name/20-170",[]],["text/20-170",[]],["component/20-170",[]],["title/20-171",[12,25.211,74,11.389,78,17.872,269,54.816,484,35.948,1973,39.547]],["name/20-171",[]],["text/20-171",[]],["component/20-171",[]],["title/20-172",[74,11.389,78,17.872,484,35.948,568,55.95,1920,58.684,1973,39.547]],["name/20-172",[]],["text/20-172",[]],["component/20-172",[]],["title/20-173",[19,51.235,78,17.872,484,49.135,550,62.431,1973,39.547]],["name/20-173",[]],["text/20-173",[]],["component/20-173",[]],["title/20-174",[20,55.95,78,17.872,484,49.135,551,62.431,1973,39.547]],["name/20-174",[]],["text/20-174",[]],["component/20-174",[]],["title/20-175",[78,17.872,484,35.948,503,62.431,1942,49.19,1968,35.139,1973,39.547]],["name/20-175",[]],["text/20-175",[]],["component/20-175",[]],["title/20-176",[12,18.037,63,4.275,74,8.148,209,40.94,257,5.484,484,25.718,1452,15.476,1968,37.763,1973,28.293,1980,41.983,2010,48.95]],["name/20-176",[]],["text/20-176",[]],["component/20-176",[]],["title/20-177",[12,22.26,63,5.276,74,10.055,257,6.768,484,31.74,1452,19.1,1932,51.813,1973,34.917]],["name/20-177",[]],["text/20-177",[]],["component/20-177",[]],["title/20-178",[19,51.235,257,7.666,288,58.684,484,49.135,1973,39.547]],["name/20-178",[]],["text/20-178",[]],["component/20-178",[]],["title/20-179",[20,55.95,257,7.666,484,49.135,1973,39.547,2011,68.422]],["name/20-179",[]],["text/20-179",[]],["component/20-179",[]],["title/20-180",[257,7.666,484,35.948,1942,49.19,1968,35.139,1973,39.547,2012,68.422]],["name/20-180",[]],["text/20-180",[]],["component/20-180",[]],["title/20-181",[74,10.055,78,15.78,462,26.908,463,37.903,477,26.736,484,31.74,559,55.122,1973,34.917]],["name/20-181",[]],["text/20-181",[]],["component/20-181",[]],["title/20-182",[74,10.055,257,6.768,462,26.908,463,37.903,477,26.736,484,31.74,1973,34.917,2013,60.411]],["name/20-182",[]],["text/20-182",[]],["component/20-182",[]],["title/20-183",[74,11.389,78,17.872,462,30.476,555,62.431,1942,49.19,1968,35.139]],["name/20-183",[]],["text/20-183",[]],["component/20-183",[]],["title/20-184",[74,11.389,257,7.666,462,30.476,1942,49.19,1968,35.139,2014,68.422]],["name/20-184",[]],["text/20-184",[]],["component/20-184",[]],["title/20-185",[74,11.389,78,17.872,462,30.476,524,55.95,557,62.431,1452,21.632]],["name/20-185",[]],["text/20-185",[]],["component/20-185",[]],["title/20-186",[74,11.389,257,7.666,462,30.476,524,55.95,1452,21.632,2015,68.422]],["name/20-186",[]],["text/20-186",[]],["component/20-186",[]],["title/20-187",[63,5.976,78,17.872,199,18.4,924,36.467,1456,36.827,1981,64.992]],["name/20-187",[]],["text/20-187",[]],["component/20-187",[]],["title/20-188",[63,5.976,78,17.872,199,18.4,924,36.467,1968,35.139,1982,58.684]],["name/20-188",[]],["text/20-188",[]],["component/20-188",[]],["title/20-189",[63,4.275,74,8.148,78,12.786,199,13.164,436,36.654,462,21.803,657,16.125,771,32.613,862,22.544,1456,26.347,1968,25.139,1983,36.654]],["name/20-189",[]],["text/20-189",[]],["component/20-189",[]],["title/20-190",[63,5.276,74,10.055,78,15.78,393,39.168,462,26.908,657,19.901,862,27.823,1968,31.025]],["name/20-190",[]],["text/20-190",[]],["component/20-190",[]],["title/20-191",[63,4.723,74,13.178,78,14.126,205,33.931,462,24.088,547,41.787,657,17.815,862,24.907,1968,27.774]],["name/20-191",[]],["text/20-191",[]],["component/20-191",[]],["title/20-192",[74,11.389,78,17.872,205,42.929,657,22.54,862,31.512,1984,64.992]],["name/20-192",[]],["text/20-192",[]],["component/20-192",[]],["title/20-193",[63,5.976,199,18.4,257,7.666,1968,35.139,1983,51.235,2016,68.422]],["name/20-193",[]],["text/20-193",[]],["component/20-193",[]],["title/20-194",[63,4.723,74,13.178,78,14.126,199,14.543,205,33.931,462,24.088,657,17.815,862,24.907,1985,47.729]],["name/20-194",[]],["text/20-194",[]],["component/20-194",[]],["title/20-195",[74,15.566,78,17.872,462,30.476,556,62.431,1986,60.386]],["name/20-195",[]],["text/20-195",[]],["component/20-195",[]],["title/20-196",[63,6.89,78,20.604,387,74.927,484,41.443]],["name/20-196",[]],["text/20-196",[]],["component/20-196",[]],["title/20-197",[63,6.89,78,20.604,484,41.443,2017,78.881]],["name/20-197",[]],["text/20-197",[]],["component/20-197",[]],["title/20-198",[1967,93.388]],["name/20-198",[]],["text/20-198",[]],["component/20-198",[]],["title/20-199",[63,6.89,74,13.13,142,28.153,161,59.971]],["name/20-199",[]],["text/20-199",[]],["component/20-199",[]],["title/20-200",[74,14.216,142,30.483,2018,81.128]],["name/20-200",[]],["text/20-200",[]],["component/20-200",[]],["title/20-201",[63,6.89,142,28.153,477,34.91,2019,74.927]],["name/20-201",[]],["text/20-201",[]],["component/20-201",[]],["title/20-202",[74,13.13,161,59.971,1088,36.583,2020,78.881]],["name/20-202",[]],["text/20-202",[]],["component/20-202",[]],["title/20-203",[74,13.13,203,29.691,205,49.491,2021,78.881]],["name/20-203",[]],["text/20-203",[]],["component/20-203",[]],["title/20-204",[13,48.024,74,11.389,203,25.754,205,42.929,1968,35.139,2022,68.422]],["name/20-204",[]],["text/20-204",[]],["component/20-204",[]],["title/20-205",[74,13.13,161,59.971,203,29.691,2023,78.881]],["name/20-205",[]],["text/20-205",[]],["component/20-205",[]],["title/20-206",[18,83.693]],["name/20-206",[]],["text/20-206",[]],["component/20-206",[]],["title/20-207",[183,58.884,300,71.949]],["name/20-207",[]],["text/20-207",[]],["component/20-207",[]],["title/20-208",[73,42.041,74,13.13,257,8.837,470,74.927]],["name/20-208",[]],["text/20-208",[]],["component/20-208",[]],["title/20-209",[63,6.89,74,13.13,78,20.604,161,59.971]],["name/20-209",[]],["text/20-209",[]],["component/20-209",[]],["title/20-210",[74,13.13,78,20.604,1986,69.617,2018,74.927]],["name/20-210",[]],["text/20-210",[]],["component/20-210",[]],["title/20-211",[63,6.89,78,20.604,477,34.91,2019,74.927]],["name/20-211",[]],["text/20-211",[]],["component/20-211",[]],["title/20-212",[74,13.13,257,8.837,1986,69.617,2024,78.881]],["name/20-212",[]],["text/20-212",[]],["component/20-212",[]],["title/20-213",[74,11.389,205,42.929,257,7.666,657,22.54,862,31.512,2025,68.422]],["name/20-213",[]],["text/20-213",[]],["component/20-213",[]],["title/20-214",[2026,110.136]],["name/20-214",[]],["text/20-214",[]],["component/20-214",[]],["title/20-215",[13,30.077,63,3.743,74,13.541,161,32.58,205,26.886,257,4.801,462,19.087,463,26.886,477,18.965,493,35.041,1452,13.548,1968,22.008,2027,42.853]],["name/20-215",[]],["text/20-215",[]],["component/20-215",[]],["title/20",[4,61.459,5,64.625]],["name/20",[4,0.185]],["text/20",[0,0.54,1,0.597,2,4.848,3,0.113,4,1.798,5,1.198,6,1.789,7,0.482,8,2.608,9,1.371,10,0.183,11,0.219,12,2.428,13,4.406,14,2.177,16,0.138,17,1.18,18,0.979,19,3.327,20,1.091,21,0.677,23,0.873,26,0.693,28,0.111,29,1.888,34,0.322,36,1.608,39,0.142,40,0.072,42,0.347,47,0.387,48,0.058,49,0.068,50,0.077,52,0.206,53,0.966,54,0.074,58,0.112,59,0.116,60,0.509,62,0.658,63,0.274,66,0.983,69,0.113,71,0.081,73,0.252,74,0.211,75,0.068,76,3.184,78,0.124,79,0.142,80,3.116,82,0.206,83,0.212,84,1.482,85,0.246,87,0.273,88,1.439,89,0.719,90,0.142,93,0.53,95,0.072,96,0.242,97,0.156,99,0.633,104,2.056,105,0.39,106,0.212,107,0.074,108,0.261,109,0.074,111,0.125,116,0.065,117,2.612,119,1.014,120,0.228,121,0.167,122,0.312,123,0.153,125,0.226,129,0.077,131,0.11,132,0.163,134,0.221,135,0.121,137,0.066,138,0.229,142,0.196,145,0.183,146,0.471,147,0.077,149,0.068,153,0.502,157,0.081,160,0.246,161,1.502,162,0.111,163,0.121,164,1.85,171,0.39,172,0.169,173,0.385,174,0.624,175,0.072,178,0.332,180,0.51,181,0.516,182,0.228,183,0.714,185,0.411,186,0.373,190,0.186,193,0.139,195,0.077,199,0.065,200,0.093,202,0.069,203,0.527,205,2.634,206,0.072,208,0.121,209,0.267,211,0.157,212,0.646,213,0.183,214,0.633,216,0.586,217,0.306,220,0.411,221,0.147,225,0.074,226,0.072,229,0.069,230,0.161,232,0.135,242,0.153,244,0.068,245,0.697,246,0.153,249,0.065,252,0.21,254,0.123,257,0.186,259,0.324,260,0.127,262,0.135,263,0.72,264,0.942,265,0.074,266,0.066,267,0.473,268,0.979,269,1.123,270,0.125,271,0.593,274,0.475,276,0.6,282,0.068,283,0.553,284,0.312,285,1.798,286,0.57,287,0.066,288,0.406,289,0.077,293,0.197,294,0.074,295,0.291,296,0.064,297,0.259,298,0.177,299,0.068,300,2.147,301,0.34,303,0.387,304,0.697,306,0.697,309,0.065,310,0.125,311,0.059,312,0.406,315,0.129,318,0.146,319,0.6,322,0.473,326,0.069,328,0.062,329,0.138,330,0.064,331,0.127,333,0.138,334,0.5,335,0.212,343,0.459,344,0.432,346,0.485,351,0.57,352,1.271,356,0.175,359,0.418,360,1.919,361,0.127,364,0.125,372,0.177,373,0.281,376,0.111,377,0.072,379,0.129,381,0.041,382,0.125,383,0.161,385,0.712,386,0.42,387,0.228,392,0.074,393,2.44,395,0.767,397,0.372,398,0.177,399,0.281,400,0.637,401,0.175,408,0.792,409,0.291,414,0.36,415,0.691,417,0.068,418,0.379,422,0.18,423,0.065,429,1.408,430,0.362,434,0.153,436,4.27,438,0.235,440,0.077,441,0.068,442,0.06,444,0.282,446,0.112,450,0.074,451,0.229,454,0.177,455,0.123,456,0.619,458,0.072,460,0.18,462,1.889,463,1.201,464,1.823,467,0.229,470,0.077,471,0.072,472,0.081,474,0.064,477,0.036,478,0.081,481,0.057,484,0.043,489,0.074,490,0.197,491,0.522,493,1.091,494,0.473,499,0.291,502,0.219,503,0.432,507,0.349,511,0.062,513,0.551,514,0.219,516,1.504,517,0.193,519,0.153,523,0.058,524,0.979,525,0.066,528,0.239,538,0.721,539,0.212,540,0.212,541,0.379,545,0.077,546,0.135,547,1.527,548,0.132,550,0.291,551,0.291,552,0.555,555,0.291,556,0.219,557,0.219,558,0.123,559,0.291,560,0.306,562,0.306,566,0.068,568,0.631,569,0.267,570,0.349,575,0.232,576,0.325,587,0.138,593,0.121,599,0.16,600,0.065,605,0.193,612,0.242,615,0.062,618,0.069,624,0.063,626,0.848,635,0.336,642,0.161,652,0.074,654,0.065,657,0.105,658,0.135,663,0.132,666,0.24,672,0.147,685,0.177,689,0.788,690,0.246,691,0.173,701,0.058,705,0.077,706,0.058,707,0.059,709,0.062,712,0.06,716,1.667,726,0.275,727,0.063,737,0.408,739,0.188,740,0.1,741,2.299,743,0.18,758,0.417,759,0.132,764,0.061,771,0.752,792,0.197,800,1.608,801,0.134,804,0.065,808,0.064,811,0.065,820,0.219,829,0.301,835,0.619,846,0.123,851,0.303,858,0.242,862,0.706,865,0.721,870,0.485,886,0.297,890,0.06,892,0.163,894,0.066,901,0.746,902,0.175,917,0.069,924,0.333,925,0.324,927,0.301,928,0.119,932,0.197,933,0.066,936,0.068,944,0.197,959,0.072,992,0.861,1002,0.06,1016,0.117,1022,0.125,1025,0.072,1029,0.072,1041,0.138,1057,0.324,1059,0.077,1077,0.077,1078,0.193,1088,2.079,1089,0.691,1093,1.144,1111,0.074,1115,0.123,1144,0.153,1173,0.135,1182,0.193,1185,0.074,1192,0.081,1197,0.135,1198,0.449,1243,0.206,1247,3.144,1260,0.081,1266,0.127,1270,0.069,1298,0.066,1304,0.081,1306,0.138,1307,0.081,1312,0.142,1315,0.068,1329,0.818,1333,0.147,1348,0.138,1351,0.261,1353,0.153,1354,0.138,1367,0.151,1372,0.147,1374,0.069,1375,0.081,1381,0.132,1411,0.281,1415,0.138,1419,0.549,1465,0.127,1471,0.072,1473,0.201,1477,0.081,1480,0.161,1489,0.147,1494,0.153,1495,0.147,1515,0.319,1520,0.212,1528,0.147,1546,0.138,1574,0.161,1591,0.077,1598,0.142,1601,0.069,1602,0.081,1606,0.319,1660,0.066,1670,0.138,1683,0.138,1692,0.077,1708,0.522,1742,0.135,1753,0.147,1757,0.228,1759,0.077,1760,0.156,1776,0.201,1801,0.206,1807,0.072,1812,0.406,1828,0.147,1856,0.219,1889,0.261,1896,0.142,1900,0.077,1909,0.147,1910,0.619,1911,0.142,1912,0.147,1913,0.212,1914,0.147,1915,0.147,1916,0.081,1917,0.081,1918,0.871,1919,0.848,1920,0.725,1921,0.902,1922,0.522,1923,0.522,1924,1.03,1925,1.339,1926,0.733,1927,0.449,1928,0.449,1929,0.15,1930,0.432,1931,0.291,1932,0.273,1934,0.161,1935,0.161,1936,2.075,1937,0.733,1938,0.848,1939,0.522,1940,1.58,1941,0.664,1942,1.149,1943,0.377,1944,1.138,1945,0.228,1946,0.449,1947,0.593,1948,0.228,1949,0.377,1950,0.161,1951,0.319,1952,0.319,1953,0.473,1954,0.161,1955,0.161,1956,0.161,1957,0.081,1958,0.081,1959,0.081,1960,0.081,1961,0.081,1962,0.081,1963,0.081,1964,0.081,1965,0.624,1966,0.432,1967,0.291,1968,0.083,1969,0.153,1970,0.153,1971,0.153,1972,0.228,1973,2.176,1974,0.153,1975,0.153,1976,0.303,1980,0.206,1981,0.153,1982,0.138,1983,1.099,1984,0.228,1985,0.142,1986,0.281,1987,0.319,1988,0.624,1989,0.319,1990,0.319,1991,0.24,1992,0.396,1993,0.549,1994,0.396,1995,0.396,1996,0.396,1997,0.161,1998,0.161,1999,0.161,2000,0.161,2001,0.161,2002,0.161,2003,0.161,2004,0.303,2005,0.161,2006,0.161,2007,0.161,2008,0.161,2009,0.081,2010,0.081,2011,0.081,2012,0.081,2013,0.081,2014,0.081,2015,0.081,2016,0.081,2017,0.624,2018,0.153,2019,0.153,2020,0.161,2021,0.161,2022,0.161,2023,0.161,2024,0.081,2025,0.161,2027,0.081,2028,0.087,2029,0.173,2030,0.072,2031,0.087,2032,0.303,2033,0.173,2034,0.087,2035,0.074,2036,0.077,2037,0.081,2038,0.087,2039,0.173,2040,0.509,2041,0.161,2042,0.173,2043,0.087,2044,0.074,2045,0.259,2046,0.228,2047,0.081,2048,0.081,2049,0.087,2050,0.074,2051,0.259,2052,0.087,2053,0.077,2054,0.206,2055,0.072,2056,0.087,2057,0.153,2058,0.129,2059,0.161,2060,0.087,2061,0.077,2062,0.074,2063,0.081,2064,0.077,2065,0.081,2066,0.081,2067,0.147,2068,0.591,2069,0.173,2070,0.087,2071,0.319,2072,0.173,2073,0.173,2074,1.129,2075,0.343,2076,0.173,2077,0.173,2078,0.324,2079,0.273,2080,0.138,2081,0.343,2082,0.343,2083,0.173,2084,0.173,2085,0.173,2086,0.161,2087,0.077,2088,0.087,2089,0.087,2090,0.087,2091,0.087,2092,0.087,2093,0.173,2094,0.087,2095,0.077,2096,0.087,2097,0.087,2098,0.087,2099,0.087,2100,0.173,2101,0.142,2102,0.173,2103,0.161,2104,0.153,2105,0.343,2106,0.332,2107,0.173,2108,0.259,2109,0.201,2110,0.173,2111,0.173,2112,0.173,2113,0.161,2114,0.161,2115,0.173,2116,0.161,2117,0.161,2118,0.105,2119,0.142,2120,0.147,2121,0.173,2122,0.161,2123,0.153,2124,0.087,2125,0.087,2126,0.24,2127,0.087,2128,0.077,2129,0.173,2130,0.087,2131,0.087,2132,0.087,2133,0.074,2134,0.087,2135,0.087,2136,0.081,2137,0.087,2138,0.161,2139,0.087,2140,0.087,2141,0.087,2142,0.077,2143,0.161,2144,0.087,2145,0.077,2146,0.087,2147,0.087,2148,0.081,2149,0.081,2150,0.087,2151,0.087,2152,0.219,2153,0.051,2154,0.081,2155,0.087,2156,0.087,2157,0.087]],["component/20",[29,0.109]],["title/21-1",[1105,74.534]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[610,93.388]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[183,58.884,2158,93.114]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[183,58.884,2159,93.114]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[29,32.961,63,6.4,78,19.141,583,64.674,2160,78.855]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[63,6.89,78,20.604,210,13.27,1982,67.654]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[63,5.976,78,17.872,210,11.51,342,32.665,1982,58.684,2161,64.992]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21-8",[63,4.488,78,13.423,199,13.819,210,12.827,688,46.888,731,35.282,749,40.403,750,41.169,770,17.565,2162,48.812]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["title/21-9",[78,17.872,199,18.4,731,46.978,749,53.796,756,64.992,770,23.388]],["name/21-9",[]],["text/21-9",[]],["component/21-9",[]],["title/21-10",[63,4.985,199,15.348,210,9.601,257,6.394,619,47.732,731,39.184,749,44.872,750,45.722,770,19.508]],["name/21-10",[]],["text/21-10",[]],["component/21-10",[]],["title/21-11",[210,13.27,257,8.837,2162,74.927,2163,78.881]],["name/21-11",[]],["text/21-11",[]],["component/21-11",[]],["title/21-12",[257,10.432,2164,93.114]],["name/21-12",[]],["text/21-12",[]],["component/21-12",[]],["title/21-13",[257,10.432,2165,93.114]],["name/21-13",[]],["text/21-13",[]],["component/21-13",[]],["title/21-14",[142,33.234,801,51.705]],["name/21-14",[]],["text/21-14",[]],["component/21-14",[]],["title/21-15",[203,35.049,2166,93.114]],["name/21-15",[]],["text/21-15",[]],["component/21-15",[]],["title/21-16",[714,93.388]],["name/21-16",[]],["text/21-16",[]],["component/21-16",[]],["title/21-17",[63,5.276,78,15.78,199,16.246,477,26.736,573,33.189,657,19.901,666,36.537,738,50.526]],["name/21-17",[]],["text/21-17",[]],["component/21-17",[]],["title/21-18",[63,4.275,74,8.148,199,13.164,210,8.235,257,5.484,577,30.028,619,40.94,731,33.609,749,38.487,750,39.216,770,16.732,797,43.201]],["name/21-18",[]],["text/21-18",[]],["component/21-18",[]],["title/21-19",[63,6.89,78,20.604,736,35.598,2167,78.881]],["name/21-19",[]],["text/21-19",[]],["component/21-19",[]],["title/21-20",[63,5.976,78,17.872,199,18.4,1452,21.632,2168,68.422,2169,64.992]],["name/21-20",[]],["text/21-20",[]],["component/21-20",[]],["title/21-21",[63,5.976,78,17.872,210,11.51,1265,52.869,1452,21.632,2170,68.422]],["name/21-21",[]],["text/21-21",[]],["component/21-21",[]],["title/21-22",[78,17.872,199,18.4,393,44.361,523,49.19,657,22.54,2171,50.507]],["name/21-22",[]],["text/21-22",[]],["component/21-22",[]],["title/21-23",[63,5.276,78,15.78,199,16.246,523,43.431,657,28.248,2171,44.594,2172,60.411]],["name/21-23",[]],["text/21-23",[]],["component/21-23",[]],["title/21-24",[63,5.976,199,18.4,257,7.666,1452,21.632,2169,64.992,2173,68.422]],["name/21-24",[]],["text/21-24",[]],["component/21-24",[]],["title/21-25",[63,4.985,257,6.394,523,59.189,657,27.121,2171,42.128,2174,47.732,2175,47.732]],["name/21-25",[]],["text/21-25",[]],["component/21-25",[]],["title/21-26",[74,10.055,78,15.78,210,10.163,576,41.478,657,19.901,802,55.122,1265,46.68,2176,60.411]],["name/21-26",[]],["text/21-26",[]],["component/21-26",[]],["title/21-27",[74,10.055,78,15.78,210,10.163,576,41.478,657,19.901,1265,46.68,2177,60.411,2178,57.384]],["name/21-27",[]],["text/21-27",[]],["component/21-27",[]],["title/21-28",[142,33.234,743,69.725]],["name/21-28",[]],["text/21-28",[]],["component/21-28",[]],["title/21-29",[631,97.219]],["name/21-29",[]],["text/21-29",[]],["component/21-29",[]],["title/21-30",[73,42.041,74,13.13,257,8.837,2179,74.927]],["name/21-30",[]],["text/21-30",[]],["component/21-30",[]],["title/21-31",[63,6.89,74,13.13,78,20.604,577,48.388]],["name/21-31",[]],["text/21-31",[]],["component/21-31",[]],["title/21-32",[63,4.985,199,15.348,210,9.601,257,6.394,619,47.732,731,39.184,749,44.872,750,45.722,770,19.508]],["name/21-32",[]],["text/21-32",[]],["component/21-32",[]],["title/21-33",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,752,50.526,1452,19.1]],["name/21-33",[]],["text/21-33",[]],["component/21-33",[]],["title/21-34",[2180,110.136]],["name/21-34",[]],["text/21-34",[]],["component/21-34",[]],["title/21-35",[73,36.467,78,17.872,504,42.6,736,42.205,737,44.753]],["name/21-35",[]],["text/21-35",[]],["component/21-35",[]],["title/21-36",[636,102.349]],["name/21-36",[]],["text/21-36",[]],["component/21-36",[]],["title/21-37",[73,36.467,199,25.15,257,7.666,650,57.225,651,57.225]],["name/21-37",[]],["text/21-37",[]],["component/21-37",[]],["title/21-38",[63,5.604,78,16.761,199,24.06,577,39.363,650,53.667,651,53.667]],["name/21-38",[]],["text/21-38",[]],["component/21-38",[]],["title/21-39",[63,4.985,199,15.348,210,9.601,257,6.394,619,47.732,731,39.184,749,44.872,750,45.722,770,19.508]],["name/21-39",[]],["text/21-39",[]],["component/21-39",[]],["title/21-40",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,752,50.526,1452,19.1]],["name/21-40",[]],["text/21-40",[]],["component/21-40",[]],["title/21-41",[653,102.349]],["name/21-41",[]],["text/21-41",[]],["component/21-41",[]],["title/21-42",[73,36.467,257,7.666,657,30.808,659,51.235,660,52.869]],["name/21-42",[]],["text/21-42",[]],["component/21-42",[]],["title/21-43",[63,5.604,78,16.761,577,39.363,657,29.473,659,48.049,660,49.582]],["name/21-43",[]],["text/21-43",[]],["component/21-43",[]],["title/21-44",[63,4.985,199,15.348,210,9.601,257,6.394,619,47.732,731,39.184,749,44.872,750,45.722,770,19.508]],["name/21-44",[]],["text/21-44",[]],["component/21-44",[]],["title/21-45",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,752,50.526,1452,19.1]],["name/21-45",[]],["text/21-45",[]],["component/21-45",[]],["title/21-46",[297,66.944]],["name/21-46",[]],["text/21-46",[]],["component/21-46",[]],["title/21-47",[1261,102.349]],["name/21-47",[]],["text/21-47",[]],["component/21-47",[]],["title/21-48",[183,58.884,2181,93.114]],["name/21-48",[]],["text/21-48",[]],["component/21-48",[]],["title/21-49",[63,4.723,74,9.002,210,9.098,257,6.059,576,37.131,657,17.815,862,24.907,1265,41.787,1452,17.098,2182,54.08]],["name/21-49",[]],["text/21-49",[]],["component/21-49",[]],["title/21-50",[63,5.276,257,6.768,523,61.648,657,28.248,2171,44.594,2174,50.526]],["name/21-50",[]],["text/21-50",[]],["component/21-50",[]],["title/21-51",[74,10.055,210,10.163,257,6.768,576,41.478,657,19.901,724,55.122,802,55.122,1265,46.68]],["name/21-51",[]],["text/21-51",[]],["component/21-51",[]],["title/21-52",[74,10.055,210,10.163,257,6.768,576,41.478,657,19.901,1265,46.68,2178,57.384,2183,60.411]],["name/21-52",[]],["text/21-52",[]],["component/21-52",[]],["title/21-53",[63,5.976,210,11.51,257,7.666,1265,52.869,1452,21.632,2184,68.422]],["name/21-53",[]],["text/21-53",[]],["component/21-53",[]],["title/21-54",[63,5.976,74,11.389,257,7.666,576,46.978,1452,21.632,2185,68.422]],["name/21-54",[]],["text/21-54",[]],["component/21-54",[]],["title/21-55",[257,10.432,2186,82.179]],["name/21-55",[]],["text/21-55",[]],["component/21-55",[]],["title/21-56",[576,70.272]],["name/21-56",[]],["text/21-56",[]],["component/21-56",[]],["title/21-57",[575,74.534]],["name/21-57",[]],["text/21-57",[]],["component/21-57",[]],["title/21-58",[2187,110.136]],["name/21-58",[]],["text/21-58",[]],["component/21-58",[]],["title/21-59",[12,25.211,63,5.976,74,15.566,78,17.872,577,41.972]],["name/21-59",[]],["text/21-59",[]],["component/21-59",[]],["title/21-60",[78,20.604,657,25.985,862,36.329,2188,67.654]],["name/21-60",[]],["text/21-60",[]],["component/21-60",[]],["title/21-61",[78,20.604,657,25.985,862,36.329,2189,67.654]],["name/21-61",[]],["text/21-61",[]],["component/21-61",[]],["title/21-62",[12,25.211,74,15.566,257,7.666,2179,64.992,2190,62.431]],["name/21-62",[]],["text/21-62",[]],["component/21-62",[]],["title/21-63",[12,29.065,74,13.13,257,8.837,2191,71.975]],["name/21-63",[]],["text/21-63",[]],["component/21-63",[]],["title/21-64",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,689,33.671,1452,17.098,2192,46.383,2193,45.231]],["name/21-64",[]],["text/21-64",[]],["component/21-64",[]],["title/21-65",[12,22.26,74,14.273,577,37.059,1088,28.017,1367,40.635,2194,60.411]],["name/21-65",[]],["text/21-65",[]],["component/21-65",[]],["title/21-66",[12,27.001,74,12.197,1088,33.985,1367,34.726,2195,73.28]],["name/21-66",[]],["text/21-66",[]],["component/21-66",[]],["title/21-67",[2196,110.136]],["name/21-67",[]],["text/21-67",[]],["component/21-67",[]],["title/21-68",[12,23.644,63,5.604,74,10.681,78,16.761,199,24.06,577,39.363]],["name/21-68",[]],["text/21-68",[]],["component/21-68",[]],["title/21-69",[78,20.604,657,25.985,862,36.329,2188,67.654]],["name/21-69",[]],["text/21-69",[]],["component/21-69",[]],["title/21-70",[78,20.604,657,25.985,862,36.329,2189,67.654]],["name/21-70",[]],["text/21-70",[]],["component/21-70",[]],["title/21-71",[12,22.26,74,10.055,199,23.06,257,6.768,650,50.526,651,50.526,2190,55.122]],["name/21-71",[]],["text/21-71",[]],["component/21-71",[]],["title/21-72",[12,29.065,74,13.13,257,8.837,2191,71.975]],["name/21-72",[]],["text/21-72",[]],["component/21-72",[]],["title/21-73",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,689,33.671,1452,17.098,2192,46.383,2193,45.231]],["name/21-73",[]],["text/21-73",[]],["component/21-73",[]],["title/21-74",[12,21.029,74,9.499,199,22.14,650,47.732,651,47.732,1088,26.468,1367,27.044,2197,57.071]],["name/21-74",[]],["text/21-74",[]],["component/21-74",[]],["title/21-75",[12,27.001,74,12.197,1088,33.985,1367,34.726,2198,73.28]],["name/21-75",[]],["text/21-75",[]],["component/21-75",[]],["title/21-76",[2199,110.136]],["name/21-76",[]],["text/21-76",[]],["component/21-76",[]],["title/21-77",[12,21.029,63,4.985,74,9.499,78,14.907,577,35.009,657,27.121,659,42.735,660,44.098]],["name/21-77",[]],["text/21-77",[]],["component/21-77",[]],["title/21-78",[78,20.604,657,25.985,862,36.329,2188,67.654]],["name/21-78",[]],["text/21-78",[]],["component/21-78",[]],["title/21-79",[78,20.604,657,25.985,862,36.329,2189,67.654]],["name/21-79",[]],["text/21-79",[]],["component/21-79",[]],["title/21-80",[12,22.26,74,10.055,257,6.768,657,28.248,659,45.237,660,46.68,2190,55.122]],["name/21-80",[]],["text/21-80",[]],["component/21-80",[]],["title/21-81",[12,29.065,74,13.13,257,8.837,2191,71.975]],["name/21-81",[]],["text/21-81",[]],["component/21-81",[]],["title/21-82",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,689,33.671,1452,17.098,2192,46.383,2193,45.231]],["name/21-82",[]],["text/21-82",[]],["component/21-82",[]],["title/21-83",[12,21.029,74,9.499,657,27.121,659,42.735,660,44.098,1088,26.468,1367,27.044,2200,57.071]],["name/21-83",[]],["text/21-83",[]],["component/21-83",[]],["title/21-84",[12,27.001,74,12.197,1088,33.985,1367,34.726,2201,73.28]],["name/21-84",[]],["text/21-84",[]],["component/21-84",[]],["title/21-85",[2202,110.136]],["name/21-85",[]],["text/21-85",[]],["component/21-85",[]],["title/21-86",[12,25.211,63,5.976,74,11.389,78,17.872,210,11.51,1433,57.225]],["name/21-86",[]],["text/21-86",[]],["component/21-86",[]],["title/21-87",[12,22.26,63,5.276,74,14.273,78,15.78,577,37.059,1452,19.1,2203,60.411]],["name/21-87",[]],["text/21-87",[]],["component/21-87",[]],["title/21-88",[74,13.13,78,20.604,577,48.388,2204,78.881]],["name/21-88",[]],["text/21-88",[]],["component/21-88",[]],["title/21-89",[74,13.13,78,20.604,577,48.388,2205,78.881]],["name/21-89",[]],["text/21-89",[]],["component/21-89",[]],["title/21-90",[78,20.604,210,13.27,2206,78.881,2207,74.927]],["name/21-90",[]],["text/21-90",[]],["component/21-90",[]],["title/21-91",[78,20.604,657,25.985,862,36.329,2188,67.654]],["name/21-91",[]],["text/21-91",[]],["component/21-91",[]],["title/21-92",[78,20.604,657,25.985,862,36.329,2189,67.654]],["name/21-92",[]],["text/21-92",[]],["component/21-92",[]],["title/21-93",[12,25.211,74,15.566,257,7.666,577,41.972,2208,68.422]],["name/21-93",[]],["text/21-93",[]],["component/21-93",[]],["title/21-94",[12,25.211,74,15.566,257,7.666,577,41.972,2209,68.422]],["name/21-94",[]],["text/21-94",[]],["component/21-94",[]],["title/21-95",[12,25.211,74,11.389,210,11.51,257,7.666,2207,64.992,2210,68.422]],["name/21-95",[]],["text/21-95",[]],["component/21-95",[]],["title/21-96",[12,29.065,74,13.13,257,8.837,2211,78.881]],["name/21-96",[]],["text/21-96",[]],["component/21-96",[]],["title/21-97",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,689,33.671,1452,17.098,2192,46.383,2193,45.231]],["name/21-97",[]],["text/21-97",[]],["component/21-97",[]],["title/21-98",[63,4.985,74,9.499,257,6.394,573,45.231,577,35.009,657,27.121,2212,57.071]],["name/21-98",[]],["text/21-98",[]],["component/21-98",[]],["title/21-99",[12,22.26,74,14.273,577,37.059,1088,28.017,1367,40.635,2213,60.411]],["name/21-99",[]],["text/21-99",[]],["component/21-99",[]],["title/21-100",[12,22.26,74,14.273,577,37.059,1088,28.017,1367,40.635,2214,60.411]],["name/21-100",[]],["text/21-100",[]],["component/21-100",[]],["title/21-101",[12,23.644,74,10.681,210,10.795,1088,29.759,1367,30.407,1433,53.667,2215,64.167]],["name/21-101",[]],["text/21-101",[]],["component/21-101",[]],["title/21-102",[12,25.211,74,15.566,203,25.754,577,41.972,2216,68.422]],["name/21-102",[]],["text/21-102",[]],["component/21-102",[]],["title/21-103",[12,25.211,74,15.566,203,25.754,577,41.972,2217,68.422]],["name/21-103",[]],["text/21-103",[]],["component/21-103",[]],["title/21-104",[12,22.26,74,10.055,203,22.739,210,14.426,577,37.059,1433,50.526,2218,60.411]],["name/21-104",[]],["text/21-104",[]],["component/21-104",[]],["title/21-105",[12,25.211,74,11.389,203,25.754,210,11.51,693,54.816,2219,68.422]],["name/21-105",[]],["text/21-105",[]],["component/21-105",[]],["title/21-106",[2220,102.349]],["name/21-106",[]],["text/21-106",[]],["component/21-106",[]],["title/21-107",[63,5.976,78,17.872,210,11.51,1265,52.869,1452,21.632,2221,64.992]],["name/21-107",[]],["text/21-107",[]],["component/21-107",[]],["title/21-108",[63,4.985,78,14.907,199,15.348,210,9.601,688,52.074,731,39.184,749,44.872,750,45.722,770,19.508]],["name/21-108",[]],["text/21-108",[]],["component/21-108",[]],["title/21-109",[63,4.723,74,9.002,78,14.126,199,14.543,477,23.934,573,29.711,657,17.815,666,32.708,689,33.671,2222,54.08]],["name/21-109",[]],["text/21-109",[]],["component/21-109",[]],["title/21-110",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,666,32.708,689,33.671,1452,17.098,2192,46.383]],["name/21-110",[]],["text/21-110",[]],["component/21-110",[]],["title/21-111",[63,3.743,74,7.133,199,21.877,257,4.801,573,23.542,657,21.884,689,26.68,2193,35.84,2223,42.853,2224,46.113,2225,42.853,2226,42.853]],["name/21-111",[]],["text/21-111",[]],["component/21-111",[]],["title/21-112",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,657,17.815,689,33.671,1452,17.098,2193,45.231,2227,54.08]],["name/21-112",[]],["text/21-112",[]],["component/21-112",[]],["title/21-113",[367,83.693]],["name/21-113",[]],["text/21-113",[]],["component/21-113",[]],["title/21-114",[2228,110.136]],["name/21-114",[]],["text/21-114",[]],["component/21-114",[]],["title/21-115",[63,5.976,78,17.872,210,11.51,1265,52.869,1452,21.632,2221,64.992]],["name/21-115",[]],["text/21-115",[]],["component/21-115",[]],["title/21-116",[78,22.309,657,28.136,2188,73.253]],["name/21-116",[]],["text/21-116",[]],["component/21-116",[]],["title/21-117",[78,22.309,657,28.136,2189,73.253]],["name/21-117",[]],["text/21-117",[]],["component/21-117",[]],["title/21-118",[12,19.927,74,9.002,78,14.126,393,35.063,523,56.918,573,29.711,657,26.081,683,38.879]],["name/21-118",[]],["text/21-118",[]],["component/21-118",[]],["title/21-119",[12,19.927,74,9.002,257,6.059,523,56.918,573,29.711,657,26.081,683,38.879,2229,54.08]],["name/21-119",[]],["text/21-119",[]],["component/21-119",[]],["title/21-120",[12,19.927,74,9.002,257,6.059,523,56.918,573,29.711,657,26.081,683,38.879,2230,54.08]],["name/21-120",[]],["text/21-120",[]],["component/21-120",[]],["title/21-121",[12,19.927,74,9.002,257,6.059,523,56.918,573,29.711,657,26.081,683,38.879,2231,44.222]],["name/21-121",[]],["text/21-121",[]],["component/21-121",[]],["title/21-122",[12,18.037,63,4.275,74,8.148,199,13.164,257,5.484,573,26.892,657,24.223,1452,15.476,2232,48.95,2233,48.95,2234,40.94]],["name/21-122",[]],["text/21-122",[]],["component/21-122",[]],["title/21-123",[12,18.037,63,4.275,74,12.239,199,13.164,210,8.235,257,5.484,386,12.868,462,21.803,657,16.125,862,22.544,2235,48.95]],["name/21-123",[]],["text/21-123",[]],["component/21-123",[]],["title/21-124",[12,18.037,63,4.275,74,12.239,199,13.164,210,8.235,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,2236,48.95]],["name/21-124",[]],["text/21-124",[]],["component/21-124",[]],["title/21-125",[12,19.927,63,4.723,74,13.178,199,14.543,257,6.059,462,24.088,657,17.815,862,24.907,2237,54.08]],["name/21-125",[]],["text/21-125",[]],["component/21-125",[]],["title/21-126",[12,27.001,74,12.197,1088,33.985,1367,34.726,2238,73.28]],["name/21-126",[]],["text/21-126",[]],["component/21-126",[]],["title/21-127",[12,27.001,74,12.197,1088,33.985,1367,34.726,2239,73.28]],["name/21-127",[]],["text/21-127",[]],["component/21-127",[]],["title/21-128",[12,22.26,74,14.273,203,22.739,689,37.613,2240,60.411,2241,70.119]],["name/21-128",[]],["text/21-128",[]],["component/21-128",[]],["title/21-129",[200,45.593,257,8.837,657,25.985,2242,78.881]],["name/21-129",[]],["text/21-129",[]],["component/21-129",[]],["title/21-130",[200,45.593,257,8.837,657,25.985,2243,78.881]],["name/21-130",[]],["text/21-130",[]],["component/21-130",[]],["title/21-131",[200,45.593,257,8.837,657,25.985,2244,78.881]],["name/21-131",[]],["text/21-131",[]],["component/21-131",[]],["title/21-132",[199,21.213,200,45.593,257,8.837,2245,78.881]],["name/21-132",[]],["text/21-132",[]],["component/21-132",[]],["title/21-133",[199,21.213,200,45.593,257,8.837,2246,78.881]],["name/21-133",[]],["text/21-133",[]],["component/21-133",[]],["title/21-134",[199,21.213,200,45.593,257,8.837,2247,78.881]],["name/21-134",[]],["text/21-134",[]],["component/21-134",[]],["title/21-135",[675,68.853]],["name/21-135",[]],["text/21-135",[]],["component/21-135",[]],["title/21-136",[730,102.349]],["name/21-136",[]],["text/21-136",[]],["component/21-136",[]],["title/21-137",[63,4.488,74,8.553,210,8.645,257,5.757,797,45.352,1163,45.352,1456,41.039,2248,51.387,2249,46.888,2250,46.888]],["name/21-137",[]],["text/21-137",[]],["component/21-137",[]],["title/21-138",[63,4.723,74,9.002,210,9.098,257,6.059,1163,47.729,1456,42.614,2249,49.345,2250,49.345,2251,51.37]],["name/21-138",[]],["text/21-138",[]],["component/21-138",[]],["title/21-139",[63,4.723,210,9.098,257,6.059,1452,17.098,1456,42.614,2249,49.345,2250,49.345,2251,51.37,2252,54.08]],["name/21-139",[]],["text/21-139",[]],["component/21-139",[]],["title/21-140",[63,5.276,210,16.77,257,6.768,2253,60.411,2254,60.411,2255,60.411]],["name/21-140",[]],["text/21-140",[]],["component/21-140",[]],["title/21-141",[63,4.985,74,9.499,210,9.601,257,6.394,797,50.368,1163,50.368,1452,18.044,2256,57.071,2257,61.413]],["name/21-141",[]],["text/21-141",[]],["component/21-141",[]],["title/21-142",[63,5.604,199,17.256,257,7.189,402,20.929,666,38.809,731,44.057,770,21.933]],["name/21-142",[]],["text/21-142",[]],["component/21-142",[]],["title/21-143",[63,4.488,74,8.553,199,13.819,210,8.645,257,5.757,402,16.76,583,45.352,662,42.02,666,31.079,731,35.282,770,17.565]],["name/21-143",[]],["text/21-143",[]],["component/21-143",[]],["title/21-144",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2258,64.167]],["name/21-144",[]],["text/21-144",[]],["component/21-144",[]],["title/21-145",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2259,64.167]],["name/21-145",[]],["text/21-145",[]],["component/21-145",[]],["title/21-146",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2260,64.167]],["name/21-146",[]],["text/21-146",[]],["component/21-146",[]],["title/21-147",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,782,60.952]],["name/21-147",[]],["text/21-147",[]],["component/21-147",[]],["title/21-148",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2261,60.952]],["name/21-148",[]],["text/21-148",[]],["component/21-148",[]],["title/21-149",[63,5.604,74,10.681,257,7.189,402,20.929,579,56.632,731,44.057,770,21.933]],["name/21-149",[]],["text/21-149",[]],["component/21-149",[]],["title/21-150",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2262,64.167]],["name/21-150",[]],["text/21-150",[]],["component/21-150",[]],["title/21-151",[63,5.604,210,10.795,257,7.189,402,20.929,731,44.057,770,21.933,2263,64.167]],["name/21-151",[]],["text/21-151",[]],["component/21-151",[]],["title/21-152",[257,6.768,402,19.704,731,41.478,770,29.311,1298,49.4,1838,53.317,2264,57.384]],["name/21-152",[]],["text/21-152",[]],["component/21-152",[]],["title/21-153",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2264,60.952,2265,64.167]],["name/21-153",[]],["text/21-153",[]],["component/21-153",[]],["title/21-154",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2261,60.952,2264,60.952]],["name/21-154",[]],["text/21-154",[]],["component/21-154",[]],["title/21-155",[200,45.593,210,13.27,257,8.837,2266,78.881]],["name/21-155",[]],["text/21-155",[]],["component/21-155",[]],["title/21-156",[200,45.593,210,13.27,257,8.837,2267,78.881]],["name/21-156",[]],["text/21-156",[]],["component/21-156",[]],["title/21-157",[2268,110.136]],["name/21-157",[]],["text/21-157",[]],["component/21-157",[]],["title/21-158",[63,4.985,257,6.394,657,27.121,2171,42.128,2175,47.732,2269,57.071,2270,65.959]],["name/21-158",[]],["text/21-158",[]],["component/21-158",[]],["title/21-159",[63,4.985,257,6.394,657,27.121,2171,42.128,2175,47.732,2270,65.959,2271,57.071]],["name/21-159",[]],["text/21-159",[]],["component/21-159",[]],["title/21-160",[63,4.985,257,6.394,657,27.121,2171,42.128,2175,47.732,2270,65.959,2272,57.071]],["name/21-160",[]],["text/21-160",[]],["component/21-160",[]],["title/21-161",[63,4.082,257,5.236,463,29.321,523,51.045,2241,58.059,2270,56.883,2273,46.733,2274,46.733,2275,46.733,2276,36.744]],["name/21-161",[]],["text/21-161",[]],["component/21-161",[]],["title/21-162",[63,4.082,257,5.236,463,29.321,523,51.045,2241,58.059,2270,56.883,2274,46.733,2275,46.733,2276,36.744,2277,46.733]],["name/21-162",[]],["text/21-162",[]],["component/21-162",[]],["title/21-163",[63,4.488,74,8.553,210,8.645,257,5.757,386,13.509,462,22.889,657,25.118,739,30.262,2171,37.932,2278,51.387]],["name/21-163",[]],["text/21-163",[]],["component/21-163",[]],["title/21-164",[63,4.488,74,8.553,210,8.645,257,5.757,386,13.509,462,22.889,657,25.118,739,30.262,2171,37.932,2279,51.387]],["name/21-164",[]],["text/21-164",[]],["component/21-164",[]],["title/21-165",[63,4.985,74,9.499,257,6.394,462,25.42,657,27.121,739,33.609,2171,42.128,2280,57.071]],["name/21-165",[]],["text/21-165",[]],["component/21-165",[]],["title/21-166",[63,4.985,74,9.499,257,6.394,462,25.42,657,27.121,739,33.609,2171,42.128,2281,57.071]],["name/21-166",[]],["text/21-166",[]],["component/21-166",[]],["title/21-167",[63,5.276,257,6.768,393,39.168,657,19.901,770,20.65,2171,44.594,2282,60.411,2283,57.384]],["name/21-167",[]],["text/21-167",[]],["component/21-167",[]],["title/21-168",[63,5.276,257,6.768,393,39.168,657,19.901,770,20.65,2171,44.594,2283,57.384,2284,60.411]],["name/21-168",[]],["text/21-168",[]],["component/21-168",[]],["title/21-169",[210,11.51,657,22.54,710,21.55,1088,31.732,2285,68.422,2286,68.422]],["name/21-169",[]],["text/21-169",[]],["component/21-169",[]],["title/21-170",[203,29.691,2241,84.094,2287,78.881]],["name/21-170",[]],["text/21-170",[]],["component/21-170",[]],["title/21-171",[203,29.691,2270,82.39,2288,78.881]],["name/21-171",[]],["text/21-171",[]],["component/21-171",[]],["title/21-172",[200,45.593,257,8.837,2241,64.502,2289,78.881]],["name/21-172",[]],["text/21-172",[]],["component/21-172",[]],["title/21-173",[200,45.593,257,8.837,2241,64.502,2290,78.881]],["name/21-173",[]],["text/21-173",[]],["component/21-173",[]],["title/21-174",[200,45.593,257,8.837,2241,64.502,2291,78.881]],["name/21-174",[]],["text/21-174",[]],["component/21-174",[]],["title/21-175",[200,45.593,257,8.837,2270,63.195,2292,78.881]],["name/21-175",[]],["text/21-175",[]],["component/21-175",[]],["title/21-176",[200,45.593,257,8.837,2270,63.195,2293,78.881]],["name/21-176",[]],["text/21-176",[]],["component/21-176",[]],["title/21",[12,37.713]],["name/21",[12,0.103]],["text/21",[4,0.219,6,0.758,12,3.155,14,0.526,26,2.828,28,2.334,29,0.149,32,0.174,42,0.529,48,0.236,62,0.433,63,0.156,73,0.663,76,3.266,80,1.987,83,0.635,89,0.648,178,0.456,183,0.411,193,0.375,199,0.256,200,1.965,203,1.039,210,0.109,220,0.714,252,0.629,256,0.285,257,0.107,260,2.171,283,0.217,318,0.396,327,0.473,333,1.536,341,0.906,342,1.096,367,0.271,374,0.87,376,0.654,386,0.4,393,1.161,402,1.109,442,0.245,462,0.678,463,1.285,504,0.207,516,0.245,523,2.296,558,0.252,572,1.22,573,4.801,575,1.844,576,4.921,577,2.652,579,0.293,580,0.303,582,0.293,583,2.025,587,1.536,591,0.841,610,2.915,617,0.694,619,1.713,621,1.634,622,0.841,623,0.841,631,0.315,632,0.332,648,0.332,650,0.797,651,0.797,655,0.332,657,0.314,659,0.714,660,0.737,662,0.271,666,3.92,674,1.135,683,0.894,688,2.915,689,2.995,693,0.266,699,0.315,710,0.105,714,0.303,717,1.408,724,0.593,732,0.332,733,0.332,737,0.217,738,1.498,739,0.561,740,0.205,741,1.068,743,0.486,749,4.345,750,3.598,752,1.041,756,1.945,771,0.433,782,0.315,797,0.573,799,0.266,800,0.223,801,1.274,802,1.135,862,1.657,873,0.764,892,0.226,894,0.271,924,0.177,1043,1.869,1048,1.713,1049,1.713,1088,1.481,1152,0.271,1163,0.293,1257,0.593,1265,4.838,1298,0.271,1433,0.797,1471,0.841,1478,0.593,1545,0.87,1571,0.905,1685,0.905,1716,0.303,1760,1.328,1801,0.557,1838,0.293,1929,1.275,1982,3.085,2030,0.841,2158,0.332,2159,0.332,2162,3.417,2163,2.048,2164,2.048,2165,2.048,2166,2.048,2167,0.649,2168,0.649,2169,1.182,2170,0.649,2171,2.358,2172,0.649,2173,0.649,2174,0.543,2176,0.649,2177,0.649,2178,1.182,2179,0.617,2181,0.332,2182,0.649,2183,0.649,2184,0.649,2185,0.332,2186,0.293,2188,1.536,2189,1.536,2190,0.87,2191,0.87,2192,1.306,2193,2.118,2194,0.332,2195,0.332,2197,0.332,2198,0.332,2200,0.332,2201,0.332,2203,0.332,2204,0.332,2205,0.332,2206,0.332,2207,0.617,2208,0.332,2209,0.332,2210,0.332,2211,0.332,2212,0.332,2213,0.332,2214,0.332,2215,0.332,2216,0.332,2217,0.332,2218,0.332,2219,0.332,2220,1.244,2221,1.701,2222,1.523,2223,1.523,2227,1.523,2229,0.332,2230,0.332,2231,0.271,2232,0.332,2233,0.332,2234,0.278,2235,0.332,2236,0.332,2237,0.332,2238,0.332,2239,0.332,2240,0.332,2241,1.464,2242,0.332,2243,0.332,2244,0.332,2245,0.332,2246,0.332,2247,0.332,2248,0.332,2249,0.593,2250,0.593,2251,0.617,2252,0.332,2253,0.332,2254,0.332,2255,0.332,2256,0.332,2258,0.332,2259,0.332,2260,0.332,2261,0.617,2262,0.332,2263,0.332,2265,0.332,2266,0.332,2267,0.332,2269,0.332,2270,1.641,2271,0.332,2272,0.332,2273,0.332,2276,0.261,2277,0.332,2278,0.332,2279,0.332,2280,0.332,2281,0.332,2282,0.332,2283,0.315,2284,0.332,2285,0.332,2286,0.332,2287,0.332,2288,0.332,2289,0.332,2290,0.332,2291,0.332,2292,0.332,2293,0.332,2294,0.357,2295,1.869,2296,1.713,2297,0.357,2298,0.699,2299,0.699,2300,0.699,2301,1.026,2302,0.699,2303,0.699,2304,0.699,2305,0.699,2306,0.699,2307,0.699,2308,0.357,2309,0.357,2310,0.357,2311,0.357,2312,0.357,2313,1.927,2314,1.182,2315,1.182,2316,1.182,2317,1.182,2318,1.182,2319,1.274,2320,1.274,2321,1.245,2322,1.22,2323,1.274,2324,1.274,2325,1.245,2326,1.245,2327,0.357,2328,0.357,2329,0.357,2330,0.357,2331,0.357,2332,0.357,2333,0.357,2334,0.357,2335,0.303,2336,0.357,2337,0.357]],["component/21",[29,0.109]],["title/22-1",[29,46.037]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[2338,97.219]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[73,32.197,74,10.055,78,15.78,484,45.053,2339,57.384,2340,60.411,2341,60.411]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[142,33.234,801,51.705]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[63,6.89,78,20.604,210,13.27,626,63.195]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22-6",[63,6.89,78,20.604,210,13.27,407,69.617]],["name/22-6",[]],["text/22-6",[]],["component/22-6",[]],["title/22-7",[63,6.89,78,20.604,210,13.27,686,58.227]],["name/22-7",[]],["text/22-7",[]],["component/22-7",[]],["title/22-8",[63,6.89,78,20.604,210,13.27,814,57.444]],["name/22-8",[]],["text/22-8",[]],["component/22-8",[]],["title/22-9",[32,35.948,63,5.976,74,11.389,78,17.872,210,11.51,814,49.827]],["name/22-9",[]],["text/22-9",[]],["component/22-9",[]],["title/22-10",[63,6.89,78,20.604,210,13.27,814,57.444]],["name/22-10",[]],["text/22-10",[]],["component/22-10",[]],["title/22-11",[32,35.948,63,5.976,74,11.389,78,17.872,210,11.51,814,49.827]],["name/22-11",[]],["text/22-11",[]],["component/22-11",[]],["title/22-12",[78,24.322,814,67.809]],["name/22-12",[]],["text/22-12",[]],["component/22-12",[]],["title/22-13",[32,41.443,74,13.13,78,20.604,814,57.444]],["name/22-13",[]],["text/22-13",[]],["component/22-13",[]],["title/22-14",[63,5.976,78,17.872,210,11.51,484,35.948,1329,52.869,2342,64.992]],["name/22-14",[]],["text/22-14",[]],["component/22-14",[]],["title/22-15",[32,31.74,63,5.276,74,10.055,78,15.78,210,10.163,484,31.74,1329,46.68,2342,57.384]],["name/22-15",[]],["text/22-15",[]],["component/22-15",[]],["title/22-16",[63,5.276,210,14.426,257,6.768,484,31.74,1329,46.68,2343,60.411,2344,60.411]],["name/22-16",[]],["text/22-16",[]],["component/22-16",[]],["title/22-17",[210,13.27,211,51.594,1088,36.583,2345,78.881]],["name/22-17",[]],["text/22-17",[]],["component/22-17",[]],["title/22-18",[32,33.713,74,10.681,210,10.795,211,41.971,1088,29.759,1367,30.407,2346,64.167]],["name/22-18",[]],["text/22-18",[]],["component/22-18",[]],["title/22",[2347,93.388]],["name/22",[2347,0.255]],["text/22",[0,0.987,1,3.666,6,0.778,12,0.866,21,1.023,26,0.835,28,0.877,29,3.389,30,0.93,32,5.163,36,1.582,42,1.814,47,1.044,53,2.395,63,0.205,73,0.681,74,0.391,76,1.327,83,0.851,84,1.305,87,1.095,89,0.868,90,1.127,93,0.877,130,1.023,144,0.956,145,0.971,172,0.896,193,1.888,194,1.597,203,0.481,208,0.956,211,4.928,216,0.886,217,0.987,245,0.971,263,1.712,283,0.835,306,1.787,313,1.127,330,1.004,352,0.907,356,0.93,369,1.023,376,0.877,380,1.004,407,3.58,408,1.65,415,1.044,418,1.023,425,3.317,436,3.037,442,0.943,474,1.004,476,2.016,493,1.044,516,2.994,554,2.075,560,4.548,561,1.165,590,2.016,611,1.095,612,0.971,614,0.93,626,3.25,635,0.907,638,2.145,673,2.453,686,1.735,689,0.795,740,0.789,741,0.762,751,0.93,760,1.023,801,1.814,814,6.311,828,1.127,850,1.165,890,0.943,892,0.868,894,1.044,901,1.127,926,0.868,1088,1.515,1146,0.971,1152,2.671,1194,2.233,1204,0.943,1247,1.76,1329,4.134,1351,1.044,1366,1.095,1388,1.277,1408,1.277,1470,2.98,1473,1.068,1501,1.165,1655,1.127,1716,1.165,1909,1.165,1910,2.617,1911,1.127,1912,1.165,1913,1.127,1914,1.165,1915,1.165,2078,1.044,2149,1.277,2338,1.213,2339,5.591,2340,1.277,2341,1.277,2342,2.233,2343,1.277,2344,1.277,2345,2.351,2346,2.351,2348,1.374,2349,1.374,2350,9.492,2351,1.374,2352,1.374,2353,1.374,2354,1.374,2355,1.374,2356,1.277,2357,1.374,2358,1.165,2359,1.277,2360,1.374,2361,4.329,2362,1.374]],["component/22",[29,0.109]],["title/23-1",[1322,85.601]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[1105,74.534]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[1434,97.219]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[63,6.89,142,28.153,504,49.112,736,35.598]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[63,6.89,142,28.153,736,35.598,737,51.594]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[63,6.89,142,28.153,736,35.598,2363,71.975]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23-7",[63,4.275,74,8.148,142,17.471,199,13.164,210,12.37,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,2364,46.497]],["name/23-7",[]],["text/23-7",[]],["component/23-7",[]],["title/23-8",[63,5.604,142,22.902,210,10.795,691,46.131,1448,31.724,2365,43.602,2366,55.035]],["name/23-8",[]],["text/23-8",[]],["component/23-8",[]],["title/23-9",[63,6.89,142,28.153,210,13.27,1447,69.617]],["name/23-9",[]],["text/23-9",[]],["component/23-9",[]],["title/23-10",[63,5.976,142,24.42,210,15.733,1448,33.827,2367,64.992]],["name/23-10",[]],["text/23-10",[]],["component/23-10",[]],["title/23-11",[63,5.976,142,24.42,210,15.733,1448,33.827,2368,62.431]],["name/23-11",[]],["text/23-11",[]],["component/23-11",[]],["title/23-12",[63,5.976,74,11.389,142,24.42,210,11.51,1448,33.827,2369,64.992]],["name/23-12",[]],["text/23-12",[]],["component/23-12",[]],["title/23-13",[63,5.976,142,24.42,210,15.733,1448,33.827,2370,64.992]],["name/23-13",[]],["text/23-13",[]],["component/23-13",[]],["title/23-14",[63,5.976,142,24.42,210,11.51,1448,33.827,1451,57.225,1452,21.632]],["name/23-14",[]],["text/23-14",[]],["component/23-14",[]],["title/23-15",[63,6.89,142,28.153,210,13.27,1424,69.617]],["name/23-15",[]],["text/23-15",[]],["component/23-15",[]],["title/23-16",[63,6.89,142,28.153,210,13.27,1427,67.654]],["name/23-16",[]],["text/23-16",[]],["component/23-16",[]],["title/23-17",[63,5.976,142,24.42,210,15.733,1406,60.386,2106,48.024]],["name/23-17",[]],["text/23-17",[]],["component/23-17",[]],["title/23-18",[12,22.26,63,5.276,74,10.055,142,21.562,210,14.426,2106,42.402,2371,50.526]],["name/23-18",[]],["text/23-18",[]],["component/23-18",[]],["title/23-19",[12,19.927,63,4.723,74,9.002,142,19.302,210,13.319,657,17.815,2106,37.958,2372,51.37,2373,40.496]],["name/23-19",[]],["text/23-19",[]],["component/23-19",[]],["title/23-20",[12,22.26,63,5.276,74,10.055,142,21.562,210,10.163,1448,29.867,1452,19.1,2374,55.122]],["name/23-20",[]],["text/23-20",[]],["component/23-20",[]],["title/23-21",[34,31.755,63,4.082,74,7.779,142,16.68,210,11.945,386,12.286,462,20.816,657,15.395,736,21.09,739,27.521,1002,34.497,1448,23.105]],["name/23-21",[]],["text/23-21",[]],["component/23-21",[]],["title/23-22",[63,4.082,74,7.779,142,16.68,199,12.568,210,11.945,386,12.286,462,20.816,657,15.395,739,27.521,1363,39.086,1448,23.105,1455,33.598]],["name/23-22",[]],["text/23-22",[]],["component/23-22",[]],["title/23-23",[63,4.082,74,7.779,142,16.68,199,12.568,210,11.945,386,12.286,393,30.3,462,20.816,657,15.395,739,27.521,1448,23.105,1455,33.598]],["name/23-23",[]],["text/23-23",[]],["component/23-23",[]],["title/23-24",[63,4.082,74,7.779,142,16.68,199,12.568,210,11.945,386,12.286,462,20.816,547,36.111,657,15.395,739,27.521,1448,23.105,1455,33.598]],["name/23-24",[]],["text/23-24",[]],["component/23-24",[]],["title/23-25",[63,4.985,142,20.369,210,13.85,318,34.759,926,38.779,1154,19.971,1448,28.215,1492,52.074]],["name/23-25",[]],["text/23-25",[]],["component/23-25",[]],["title/23-26",[58,35.665,63,4.488,142,18.341,210,12.827,318,31.298,736,23.191,926,34.917,1154,17.982,1448,25.405,2375,48.812]],["name/23-26",[]],["text/23-26",[]],["component/23-26",[]],["title/23-27",[58,32.435,63,4.082,142,16.68,210,11.945,318,28.463,657,15.395,736,21.09,926,31.755,1154,16.353,1448,23.105,2373,34.995,2376,44.391]],["name/23-27",[]],["text/23-27",[]],["component/23-27",[]],["title/23-28",[63,4.082,74,7.779,142,16.68,210,11.945,318,28.463,573,25.675,657,15.395,926,31.755,1154,16.353,1421,36.111,1448,23.105,2377,44.391]],["name/23-28",[]],["text/23-28",[]],["component/23-28",[]],["title/23-29",[58,27.461,63,3.456,74,6.586,142,14.122,210,10.5,318,24.098,573,21.737,657,20.561,736,17.856,926,26.885,1154,13.846,1421,30.573,1448,19.561,2373,29.628,2378,37.584]],["name/23-29",[]],["text/23-29",[]],["component/23-29",[]],["title/23-30",[34,24.112,74,9.525,210,13.877,386,9.329,462,15.806,573,19.495,657,11.69,736,25.824,739,20.897,1002,26.194,1088,16.457,1448,17.544,2379,35.485,2380,35.485,2381,35.485]],["name/23-30",[]],["text/23-30",[]],["component/23-30",[]],["title/23-31",[210,15.733,1088,31.732,1448,33.827,2382,68.422,2383,68.422]],["name/23-31",[]],["text/23-31",[]],["component/23-31",[]],["title/23-32",[210,13.27,1088,36.583,1448,38.998,2384,78.881]],["name/23-32",[]],["text/23-32",[]],["component/23-32",[]],["title/23-33",[210,13.27,1088,36.583,1448,38.998,2385,78.881]],["name/23-33",[]],["text/23-33",[]],["component/23-33",[]],["title/23-34",[58,32.435,74,7.779,210,11.945,318,28.463,736,21.09,1088,21.674,1154,16.353,1367,22.146,1421,36.111,1448,23.105,2386,46.733,2387,44.391]],["name/23-34",[]],["text/23-34",[]],["component/23-34",[]],["title/23-35",[58,29.741,74,7.133,210,11.176,318,26.1,657,14.117,736,19.339,1088,19.874,1154,14.995,1367,20.307,1421,33.112,1448,21.186,2373,32.088,2387,40.705,2388,42.853]],["name/23-35",[]],["text/23-35",[]],["component/23-35",[]],["title/23-36",[203,22.739,210,16.77,386,15.881,462,26.908,739,35.576,2389,60.411]],["name/23-36",[]],["text/23-36",[]],["component/23-36",[]],["title/23-37",[74,13.13,203,29.691,1421,60.951,2390,78.881]],["name/23-37",[]],["text/23-37",[]],["component/23-37",[]],["title/23-38",[203,35.049,2391,93.114]],["name/23-38",[]],["text/23-38",[]],["component/23-38",[]],["title/23-39",[12,29.065,74,13.13,203,29.691,2392,78.881]],["name/23-39",[]],["text/23-39",[]],["component/23-39",[]],["title/23-40",[12,29.065,74,13.13,203,29.691,2393,78.881]],["name/23-40",[]],["text/23-40",[]],["component/23-40",[]],["title/23-41",[203,29.691,210,13.27,1448,38.998,2394,78.881]],["name/23-41",[]],["text/23-41",[]],["component/23-41",[]],["title/23-42",[199,15.348,203,21.482,210,9.601,464,41.561,1448,28.215,2365,38.779,2366,48.948,2395,57.071,2396,54.21]],["name/23-42",[]],["text/23-42",[]],["component/23-42",[]],["title/23-43",[203,29.691,210,13.27,1427,67.654,2397,78.881]],["name/23-43",[]],["text/23-43",[]],["component/23-43",[]],["title/23-44",[33,45.237,34,41.049,74,10.055,203,22.739,210,14.426,1433,50.526,2398,60.411]],["name/23-44",[]],["text/23-44",[]],["component/23-44",[]],["title/23-45",[34,53.599,74,13.13,203,29.691,2399,78.881]],["name/23-45",[]],["text/23-45",[]],["component/23-45",[]],["title/23-46",[203,35.049,2400,93.114]],["name/23-46",[]],["text/23-46",[]],["component/23-46",[]],["title/23-47",[203,35.049,2401,93.114]],["name/23-47",[]],["text/23-47",[]],["component/23-47",[]],["title/23-48",[203,35.049,2402,93.114]],["name/23-48",[]],["text/23-48",[]],["component/23-48",[]],["title/23-49",[203,29.691,210,13.27,1448,38.998,2403,78.881]],["name/23-49",[]],["text/23-49",[]],["component/23-49",[]],["title/23-50",[203,29.691,210,13.27,1448,38.998,2404,78.881]],["name/23-50",[]],["text/23-50",[]],["component/23-50",[]],["title/23-51",[74,13.13,203,29.691,1421,60.951,2405,78.881]],["name/23-51",[]],["text/23-51",[]],["component/23-51",[]],["title/23-52",[1322,85.601]],["name/23-52",[]],["text/23-52",[]],["component/23-52",[]],["title/23-53",[183,58.884,2406,93.114]],["name/23-53",[]],["text/23-53",[]],["component/23-53",[]],["title/23-54",[73,42.041,257,8.837,736,35.598,2407,67.654]],["name/23-54",[]],["text/23-54",[]],["component/23-54",[]],["title/23-55",[142,33.234,801,51.705]],["name/23-55",[]],["text/23-55",[]],["component/23-55",[]],["title/23-56",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/23-56",[]],["text/23-56",[]],["component/23-56",[]],["title/23-57",[63,6.89,78,20.604,504,49.112,736,35.598]],["name/23-57",[]],["text/23-57",[]],["component/23-57",[]],["title/23-58",[63,6.89,78,20.604,736,35.598,737,51.594]],["name/23-58",[]],["text/23-58",[]],["component/23-58",[]],["title/23-59",[63,4.275,74,8.148,78,12.786,199,13.164,210,12.37,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,2364,46.497]],["name/23-59",[]],["text/23-59",[]],["component/23-59",[]],["title/23-60",[63,5.604,78,16.761,210,10.795,691,46.131,1448,31.724,2365,43.602,2366,55.035]],["name/23-60",[]],["text/23-60",[]],["component/23-60",[]],["title/23-61",[63,6.89,78,20.604,210,13.27,1447,69.617]],["name/23-61",[]],["text/23-61",[]],["component/23-61",[]],["title/23-62",[63,5.976,78,17.872,210,15.733,1448,33.827,2367,64.992]],["name/23-62",[]],["text/23-62",[]],["component/23-62",[]],["title/23-63",[63,5.976,78,17.872,210,15.733,1448,33.827,2368,62.431]],["name/23-63",[]],["text/23-63",[]],["component/23-63",[]],["title/23-64",[63,5.976,74,11.389,78,17.872,210,11.51,1448,33.827,2369,64.992]],["name/23-64",[]],["text/23-64",[]],["component/23-64",[]],["title/23-65",[63,5.976,78,17.872,210,15.733,1448,33.827,2370,64.992]],["name/23-65",[]],["text/23-65",[]],["component/23-65",[]],["title/23-66",[63,6.4,78,19.141,210,12.328,1451,61.288,1452,23.168]],["name/23-66",[]],["text/23-66",[]],["component/23-66",[]],["title/23-67",[257,10.432,2408,93.114]],["name/23-67",[]],["text/23-67",[]],["component/23-67",[]],["title/23-68",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2409,62.431]],["name/23-68",[]],["text/23-68",[]],["component/23-68",[]],["title/23-69",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2410,62.431]],["name/23-69",[]],["text/23-69",[]],["component/23-69",[]],["title/23-70",[12,19.927,63,4.723,74,9.002,210,13.319,257,6.059,657,17.815,2106,37.958,2373,40.496,2411,51.37]],["name/23-70",[]],["text/23-70",[]],["component/23-70",[]],["title/23-71",[12,16.474,63,3.905,74,7.442,210,14.055,257,5.009,318,27.23,657,14.728,1154,15.645,1448,22.104,2373,33.479,2412,40.795,2413,40.795]],["name/23-71",[]],["text/23-71",[]],["component/23-71",[]],["title/23-72",[63,6.89,257,8.837,657,25.985,2414,78.881]],["name/23-72",[]],["text/23-72",[]],["component/23-72",[]],["title/23-73",[34,33.261,63,4.275,74,8.148,78,12.786,210,12.37,386,12.868,462,21.803,657,16.125,736,22.091,739,28.827,1002,36.133]],["name/23-73",[]],["text/23-73",[]],["component/23-73",[]],["title/23-74",[34,29.118,63,3.743,74,11.057,210,11.176,257,4.801,386,11.265,462,19.087,657,14.117,736,19.339,739,25.236,1002,31.632,1448,21.186,2415,40.705]],["name/23-74",[]],["text/23-74",[]],["component/23-74",[]],["title/23-75",[63,4.275,74,8.148,78,12.786,199,13.164,210,12.37,386,12.868,462,21.803,657,16.125,739,28.827,1363,40.94,1455,35.191]],["name/23-75",[]],["text/23-75",[]],["component/23-75",[]],["title/23-76",[63,4.985,74,9.499,199,15.348,210,13.85,257,6.394,657,18.8,1454,48.948,1456,30.718]],["name/23-76",[]],["text/23-76",[]],["component/23-76",[]],["title/23-77",[63,4.275,74,8.148,78,12.786,199,13.164,210,12.37,386,12.868,393,31.737,462,21.803,657,16.125,739,28.827,1455,35.191]],["name/23-77",[]],["text/23-77",[]],["component/23-77",[]],["title/23-78",[74,9.002,199,14.543,210,13.319,257,6.059,386,14.217,462,24.088,657,17.815,739,31.848,1458,46.383]],["name/23-78",[]],["text/23-78",[]],["component/23-78",[]],["title/23-79",[63,4.275,74,8.148,78,12.786,199,13.164,210,12.37,386,12.868,462,21.803,547,37.823,657,16.125,739,28.827,1455,35.191]],["name/23-79",[]],["text/23-79",[]],["component/23-79",[]],["title/23-80",[63,4.275,74,8.148,199,13.164,210,12.37,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,1460,41.983]],["name/23-80",[]],["text/23-80",[]],["component/23-80",[]],["title/23-81",[12,22.26,63,5.276,74,10.055,78,15.78,210,14.426,2106,42.402,2371,50.526]],["name/23-81",[]],["text/23-81",[]],["component/23-81",[]],["title/23-82",[12,19.927,63,4.723,74,9.002,78,14.126,210,13.319,657,17.815,2106,37.958,2372,51.37,2373,40.496]],["name/23-82",[]],["text/23-82",[]],["component/23-82",[]],["title/23-83",[63,5.276,78,15.78,210,14.426,318,36.794,1154,21.14,1448,29.867,1492,55.122]],["name/23-83",[]],["text/23-83",[]],["component/23-83",[]],["title/23-84",[58,37.534,63,4.723,78,14.126,210,13.319,318,32.938,736,24.406,1154,18.924,1448,26.737,2375,51.37]],["name/23-84",[]],["text/23-84",[]],["component/23-84",[]],["title/23-85",[58,33.973,63,4.275,78,12.786,210,12.37,318,29.813,657,16.125,736,22.091,1154,17.129,1448,24.2,2373,36.654,2376,46.497]],["name/23-85",[]],["text/23-85",[]],["component/23-85",[]],["title/23-86",[63,4.275,74,8.148,78,12.786,210,12.37,318,29.813,573,26.892,657,16.125,1154,17.129,1421,37.823,1448,24.2,2377,46.497]],["name/23-86",[]],["text/23-86",[]],["component/23-86",[]],["title/23-87",[58,28.556,63,3.594,74,6.848,78,10.747,210,10.827,318,25.059,573,22.604,657,21.202,736,18.568,1154,14.398,1421,31.792,1448,20.341,2373,30.809,2378,39.082]],["name/23-87",[]],["text/23-87",[]],["component/23-87",[]],["title/23-88",[12,18.037,58,33.973,63,4.275,74,8.148,210,12.37,257,5.484,318,29.813,736,22.091,1154,17.129,1448,24.2,2416,44.664]],["name/23-88",[]],["text/23-88",[]],["component/23-88",[]],["title/23-89",[12,16.474,58,31.03,63,3.905,74,7.442,210,11.547,257,5.009,318,27.23,657,14.728,736,20.177,1154,15.645,1448,22.104,2373,33.479,2416,40.795]],["name/23-89",[]],["text/23-89",[]],["component/23-89",[]],["title/23-90",[74,10.055,142,21.562,210,10.163,386,15.881,462,26.908,657,19.901,862,27.823,2417,55.122]],["name/23-90",[]],["text/23-90",[]],["component/23-90",[]],["title/23-91",[63,6.89,74,13.13,257,8.837,1462,69.617]],["name/23-91",[]],["text/23-91",[]],["component/23-91",[]],["title/23-92",[63,5.276,74,14.273,78,15.78,210,10.163,477,26.736,657,19.901,2296,50.526]],["name/23-92",[]],["text/23-92",[]],["component/23-92",[]],["title/23-93",[63,4.985,74,13.704,78,14.907,210,13.85,477,25.258,657,18.8,1048,47.732]],["name/23-93",[]],["text/23-93",[]],["component/23-93",[]],["title/23-94",[63,4.985,74,13.704,78,14.907,210,13.85,477,25.258,657,18.8,1049,47.732]],["name/23-94",[]],["text/23-94",[]],["component/23-94",[]],["title/23-95",[63,5.604,199,17.256,257,7.189,1449,60.952,2365,43.602,2366,55.035,2418,60.952]],["name/23-95",[]],["text/23-95",[]],["component/23-95",[]],["title/23-96",[34,41.049,63,5.276,74,10.055,257,6.768,736,27.263,1002,44.594,1452,19.1,2419,60.411]],["name/23-96",[]],["text/23-96",[]],["component/23-96",[]],["title/23-97",[63,6.89,78,20.604,1404,62.02,1456,42.457]],["name/23-97",[]],["text/23-97",[]],["component/23-97",[]],["title/23-98",[63,6.89,78,20.604,736,35.598,1513,63.195]],["name/23-98",[]],["text/23-98",[]],["component/23-98",[]],["title/23-99",[63,6.89,78,20.604,210,13.27,1424,69.617]],["name/23-99",[]],["text/23-99",[]],["component/23-99",[]],["title/23-100",[63,6.89,78,20.604,210,13.27,1427,67.654]],["name/23-100",[]],["text/23-100",[]],["component/23-100",[]],["title/23-101",[63,5.976,78,17.872,210,15.733,1406,60.386,2106,48.024]],["name/23-101",[]],["text/23-101",[]],["component/23-101",[]],["title/23-102",[63,6.89,78,20.604,199,21.213,2420,78.881]],["name/23-102",[]],["text/23-102",[]],["component/23-102",[]],["title/23-103",[63,6.89,78,20.604,199,21.213,2421,78.881]],["name/23-103",[]],["text/23-103",[]],["component/23-103",[]],["title/23-104",[576,70.272]],["name/23-104",[]],["text/23-104",[]],["component/23-104",[]],["title/23-105",[1420,97.219]],["name/23-105",[]],["text/23-105",[]],["component/23-105",[]],["title/23-106",[63,6.89,78,20.604,736,35.598,2363,71.975]],["name/23-106",[]],["text/23-106",[]],["component/23-106",[]],["title/23-107",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,1448,29.867,1452,19.1,2374,55.122]],["name/23-107",[]],["text/23-107",[]],["component/23-107",[]],["title/23-108",[63,4.488,78,13.423,210,16.92,1448,25.405,2422,48.812,2423,48.812,2424,48.812,2425,48.812]],["name/23-108",[]],["text/23-108",[]],["component/23-108",[]],["title/23-109",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2409,62.431]],["name/23-109",[]],["text/23-109",[]],["component/23-109",[]],["title/23-110",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2410,62.431]],["name/23-110",[]],["text/23-110",[]],["component/23-110",[]],["title/23-111",[12,17.22,63,4.082,74,7.779,210,14.445,257,5.236,318,28.463,657,15.395,1154,16.353,1448,23.105,2412,42.642,2413,42.642]],["name/23-111",[]],["text/23-111",[]],["component/23-111",[]],["title/23-112",[2426,102.349]],["name/23-112",[]],["text/23-112",[]],["component/23-112",[]],["title/23-113",[63,6.89,78,20.604,736,35.598,2363,71.975]],["name/23-113",[]],["text/23-113",[]],["component/23-113",[]],["title/23-114",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,1448,29.867,1452,19.1,2374,55.122]],["name/23-114",[]],["text/23-114",[]],["component/23-114",[]],["title/23-115",[12,22.26,63,5.276,74,10.055,78,15.78,210,14.426,1448,29.867,2427,57.384]],["name/23-115",[]],["text/23-115",[]],["component/23-115",[]],["title/23-116",[63,4.488,78,13.423,210,16.92,1448,25.405,2422,48.812,2423,48.812,2424,48.812,2425,48.812]],["name/23-116",[]],["text/23-116",[]],["component/23-116",[]],["title/23-117",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2409,62.431]],["name/23-117",[]],["text/23-117",[]],["component/23-117",[]],["title/23-118",[63,5.976,210,11.51,257,7.666,1448,33.827,1452,21.632,2410,62.431]],["name/23-118",[]],["text/23-118",[]],["component/23-118",[]],["title/23-119",[12,16.474,63,3.905,74,7.442,210,14.055,257,5.009,318,27.23,657,14.728,1154,15.645,1448,22.104,2373,33.479,2412,40.795,2413,40.795]],["name/23-119",[]],["text/23-119",[]],["component/23-119",[]],["title/23-120",[74,10.055,203,22.739,210,14.426,1421,46.68,2427,57.384,2428,60.411,2429,60.411]],["name/23-120",[]],["text/23-120",[]],["component/23-120",[]],["title/23-121",[200,45.593,257,8.837,1154,27.603,2430,78.881]],["name/23-121",[]],["text/23-121",[]],["component/23-121",[]],["title/23-122",[1409,97.219]],["name/23-122",[]],["text/23-122",[]],["component/23-122",[]],["title/23-123",[29,32.961,73,39.056,257,8.21,1410,62.85,1483,69.607]],["name/23-123",[]],["text/23-123",[]],["component/23-123",[]],["title/23-124",[29,32.961,32,38.501,63,6.4,78,19.141,2431,69.607]],["name/23-124",[]],["text/23-124",[]],["component/23-124",[]],["title/23-125",[63,6.89,78,20.604,1404,62.02,1456,42.457]],["name/23-125",[]],["text/23-125",[]],["component/23-125",[]],["title/23-126",[63,6.89,78,20.604,736,35.598,1513,63.195]],["name/23-126",[]],["text/23-126",[]],["component/23-126",[]],["title/23-127",[12,21.029,63,4.985,74,9.499,210,13.85,257,6.394,657,18.8,2106,40.057,2411,54.21]],["name/23-127",[]],["text/23-127",[]],["component/23-127",[]],["title/23-128",[1414,97.219]],["name/23-128",[]],["text/23-128",[]],["component/23-128",[]],["title/23-129",[73,42.041,210,13.27,257,8.837,2432,78.881]],["name/23-129",[]],["text/23-129",[]],["component/23-129",[]],["title/23-130",[63,6.89,78,20.604,210,13.27,2433,71.975]],["name/23-130",[]],["text/23-130",[]],["component/23-130",[]],["title/23-131",[63,5.976,78,17.872,210,15.733,2106,48.024,2433,62.431]],["name/23-131",[]],["text/23-131",[]],["component/23-131",[]],["title/23-132",[63,6.89,78,20.604,210,13.27,2434,74.927]],["name/23-132",[]],["text/23-132",[]],["component/23-132",[]],["title/23-133",[63,5.976,78,17.872,210,15.733,1406,60.386,2106,48.024]],["name/23-133",[]],["text/23-133",[]],["component/23-133",[]],["title/23-134",[142,28.153,210,13.27,2435,78.881,2436,71.975]],["name/23-134",[]],["text/23-134",[]],["component/23-134",[]],["title/23-135",[210,13.27,257,8.837,2436,71.975,2437,78.881]],["name/23-135",[]],["text/23-135",[]],["component/23-135",[]],["title/23-136",[210,15.733,1088,31.732,2436,62.431,2438,68.422,2439,68.422]],["name/23-136",[]],["text/23-136",[]],["component/23-136",[]],["title/23-137",[203,25.754,210,15.733,2433,62.431,2434,64.992,2440,68.422]],["name/23-137",[]],["text/23-137",[]],["component/23-137",[]],["title/23-138",[297,66.944]],["name/23-138",[]],["text/23-138",[]],["component/23-138",[]],["title/23-139",[2441,102.349]],["name/23-139",[]],["text/23-139",[]],["component/23-139",[]],["title/23-140",[252,61.459,1170,79.862]],["name/23-140",[]],["text/23-140",[]],["component/23-140",[]],["title/23-141",[17,50.507,73,36.467,74,11.389,257,7.666,1968,35.139,2442,68.422]],["name/23-141",[]],["text/23-141",[]],["component/23-141",[]],["title/23-142",[18,59.922,29,32.961,63,6.4,78,19.141,1967,66.864]],["name/23-142",[]],["text/23-142",[]],["component/23-142",[]],["title/23-143",[63,6.89,78,20.604,1968,40.511,2443,78.881]],["name/23-143",[]],["text/23-143",[]],["component/23-143",[]],["title/23-144",[78,20.604,1968,40.511,2444,78.881,2445,74.927]],["name/23-144",[]],["text/23-144",[]],["component/23-144",[]],["title/23-145",[257,8.837,1968,40.511,2445,74.927,2446,78.881]],["name/23-145",[]],["text/23-145",[]],["component/23-145",[]],["title/23-146",[63,5.276,74,10.055,78,15.78,462,26.908,463,37.903,477,26.736,1452,19.1,2447,60.411]],["name/23-146",[]],["text/23-146",[]],["component/23-146",[]],["title/23-147",[74,10.055,78,15.78,462,26.908,463,37.903,477,26.736,1452,19.1,1889,49.4,2448,60.411]],["name/23-147",[]],["text/23-147",[]],["component/23-147",[]],["title/23-148",[74,10.055,257,6.768,462,26.908,463,37.903,477,26.736,1452,19.1,1889,49.4,2449,60.411]],["name/23-148",[]],["text/23-148",[]],["component/23-148",[]],["title/23-149",[13,36.068,63,4.488,78,13.423,210,8.645,1448,25.405,1452,24.106,1968,26.391,2103,51.387,2450,51.387,2451,55.297]],["name/23-149",[]],["text/23-149",[]],["component/23-149",[]],["title/23-150",[63,5.976,78,17.872,210,11.51,1448,33.827,1451,57.225,1452,21.632]],["name/23-150",[]],["text/23-150",[]],["component/23-150",[]],["title/23-151",[34,33.261,63,4.275,74,8.148,78,12.786,210,12.37,386,12.868,462,21.803,657,16.125,736,22.091,739,28.827,1002,36.133]],["name/23-151",[]],["text/23-151",[]],["component/23-151",[]],["title/23-152",[63,4.275,74,8.148,199,13.164,210,12.37,257,5.484,462,21.803,657,16.125,739,28.827,1448,24.2,1454,41.983,1456,26.347]],["name/23-152",[]],["text/23-152",[]],["component/23-152",[]],["title/23-153",[74,8.553,199,13.819,210,12.827,257,5.757,386,13.509,462,22.889,657,16.928,739,30.262,1448,25.405,1458,44.074]],["name/23-153",[]],["text/23-153",[]],["component/23-153",[]],["title/23-154",[63,4.275,74,8.148,199,13.164,210,12.37,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,1460,41.983]],["name/23-154",[]],["text/23-154",[]],["component/23-154",[]],["title/23-155",[1088,31.732,1968,48.029,2452,68.422,2453,68.422,2454,68.422]],["name/23-155",[]],["text/23-155",[]],["component/23-155",[]],["title/23-156",[74,10.055,462,26.908,463,37.903,477,26.736,1088,28.017,1452,19.1,1889,49.4,2455,60.411]],["name/23-156",[]],["text/23-156",[]],["component/23-156",[]],["title/23-157",[203,25.754,210,15.733,1448,33.827,2456,68.422,2457,68.422]],["name/23-157",[]],["text/23-157",[]],["component/23-157",[]],["title/23-158",[203,22.739,210,16.77,1448,29.867,2458,60.411,2459,60.411,2460,60.411]],["name/23-158",[]],["text/23-158",[]],["component/23-158",[]],["title/23-159",[203,35.049,2461,93.114]],["name/23-159",[]],["text/23-159",[]],["component/23-159",[]],["title/23-160",[1324,93.388]],["name/23-160",[]],["text/23-160",[]],["component/23-160",[]],["title/23-161",[15,61.288,29,32.961,73,39.056,257,8.21,2462,69.607]],["name/23-161",[]],["text/23-161",[]],["component/23-161",[]],["title/23-162",[63,5.604,78,16.761,210,10.795,691,46.131,1448,31.724,2365,43.602,2366,55.035]],["name/23-162",[]],["text/23-162",[]],["component/23-162",[]],["title/23-163",[63,6.89,74,13.13,78,20.604,380,62.02]],["name/23-163",[]],["text/23-163",[]],["component/23-163",[]],["title/23-164",[63,6.4,78,19.141,210,12.328,1451,61.288,1452,23.168]],["name/23-164",[]],["text/23-164",[]],["component/23-164",[]],["title/23-165",[63,3.905,74,7.442,199,12.023,210,11.547,257,5.009,386,11.753,462,19.914,657,14.728,739,26.329,1448,22.104,1454,38.346,1455,32.142,1456,24.064]],["name/23-165",[]],["text/23-165",[]],["component/23-165",[]],["title/23-166",[74,8.148,199,13.164,210,12.37,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,1448,24.2,1455,35.191,1458,41.983]],["name/23-166",[]],["text/23-166",[]],["component/23-166",[]],["title/23-167",[63,4.275,74,8.148,199,13.164,210,12.37,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,1460,41.983]],["name/23-167",[]],["text/23-167",[]],["component/23-167",[]],["title/23-168",[63,6.89,74,13.13,257,8.837,1462,69.617]],["name/23-168",[]],["text/23-168",[]],["component/23-168",[]],["title/23-169",[15,61.288,29,32.961,142,26.154,2463,69.607,2464,64.674]],["name/23-169",[]],["text/23-169",[]],["component/23-169",[]],["title/23-170",[74,15.566,1088,31.732,2464,60.386,2465,64.992,2466,64.992]],["name/23-170",[]],["text/23-170",[]],["component/23-170",[]],["title/23-171",[1325,93.388]],["name/23-171",[]],["text/23-171",[]],["component/23-171",[]],["title/23-172",[29,32.961,73,39.056,257,8.21,2462,69.607,2467,73.28]],["name/23-172",[]],["text/23-172",[]],["component/23-172",[]],["title/23-173",[63,5.604,78,16.761,210,10.795,691,46.131,1448,31.724,2365,43.602,2366,55.035]],["name/23-173",[]],["text/23-173",[]],["component/23-173",[]],["title/23-174",[63,6.89,74,13.13,78,20.604,380,62.02]],["name/23-174",[]],["text/23-174",[]],["component/23-174",[]],["title/23-175",[63,6.4,78,19.141,210,12.328,1451,61.288,1452,23.168]],["name/23-175",[]],["text/23-175",[]],["component/23-175",[]],["title/23-176",[63,4.082,74,7.779,199,12.568,210,11.945,257,5.236,386,12.286,462,20.816,657,15.395,739,27.521,1448,23.105,1454,40.082,1456,25.154]],["name/23-176",[]],["text/23-176",[]],["component/23-176",[]],["title/23-177",[74,8.553,199,13.819,210,12.827,257,5.757,386,13.509,462,22.889,657,16.928,739,30.262,1448,25.405,1458,44.074]],["name/23-177",[]],["text/23-177",[]],["component/23-177",[]],["title/23-178",[63,4.275,74,8.148,199,13.164,210,12.37,257,5.484,386,12.868,462,21.803,657,16.125,739,28.827,1455,35.191,1460,41.983]],["name/23-178",[]],["text/23-178",[]],["component/23-178",[]],["title/23-179",[63,6.89,74,13.13,257,8.837,1462,69.617]],["name/23-179",[]],["text/23-179",[]],["component/23-179",[]],["title/23-180",[78,24.322,2468,93.114]],["name/23-180",[]],["text/23-180",[]],["component/23-180",[]],["title/23-181",[29,32.961,142,26.154,2463,69.607,2464,64.674,2467,73.28]],["name/23-181",[]],["text/23-181",[]],["component/23-181",[]],["title/23-182",[74,15.566,1088,31.732,2464,60.386,2465,64.992,2466,64.992]],["name/23-182",[]],["text/23-182",[]],["component/23-182",[]],["title/23-183",[2469,102.349]],["name/23-183",[]],["text/23-183",[]],["component/23-183",[]],["title/23-184",[73,32.197,210,10.163,257,6.768,1456,32.516,1968,31.025,2470,60.411,2471,60.411,2472,60.411]],["name/23-184",[]],["text/23-184",[]],["component/23-184",[]],["title/23-185",[63,6.89,78,20.604,210,13.27,1424,69.617]],["name/23-185",[]],["text/23-185",[]],["component/23-185",[]],["title/23-186",[63,6.89,78,20.604,210,13.27,1427,67.654]],["name/23-186",[]],["text/23-186",[]],["component/23-186",[]],["title/23-187",[63,6.89,78,20.604,210,13.27,1447,69.617]],["name/23-187",[]],["text/23-187",[]],["component/23-187",[]],["title/23-188",[78,20.604,1456,42.457,2473,78.881,2474,71.975]],["name/23-188",[]],["text/23-188",[]],["component/23-188",[]],["title/23-189",[78,20.604,1968,40.511,2475,78.881,2476,71.975]],["name/23-189",[]],["text/23-189",[]],["component/23-189",[]],["title/23-190",[78,20.604,210,13.27,2477,78.881,2478,71.975]],["name/23-190",[]],["text/23-190",[]],["component/23-190",[]],["title/23-191",[257,8.837,1456,42.457,2474,71.975,2479,78.881]],["name/23-191",[]],["text/23-191",[]],["component/23-191",[]],["title/23-192",[257,8.837,1968,40.511,2476,71.975,2480,78.881]],["name/23-192",[]],["text/23-192",[]],["component/23-192",[]],["title/23-193",[210,13.27,257,8.837,2478,71.975,2481,78.881]],["name/23-193",[]],["text/23-193",[]],["component/23-193",[]],["title/23-194",[210,15.733,1088,31.732,2474,62.431,2482,68.422,2483,68.422]],["name/23-194",[]],["text/23-194",[]],["component/23-194",[]],["title/23-195",[210,15.733,1088,31.732,2476,62.431,2484,68.422,2485,68.422]],["name/23-195",[]],["text/23-195",[]],["component/23-195",[]],["title/23-196",[210,15.733,1088,31.732,2478,62.431,2486,68.422,2487,68.422]],["name/23-196",[]],["text/23-196",[]],["component/23-196",[]],["title/23-197",[2488,102.349]],["name/23-197",[]],["text/23-197",[]],["component/23-197",[]],["title/23-198",[73,42.041,257,8.837,1456,42.457,2489,78.881]],["name/23-198",[]],["text/23-198",[]],["component/23-198",[]],["title/23-199",[63,5.976,78,17.872,210,15.733,1448,33.827,2368,62.431]],["name/23-199",[]],["text/23-199",[]],["component/23-199",[]],["title/23-200",[12,16.474,58,31.03,63,3.905,74,7.442,210,11.547,257,5.009,318,27.23,657,14.728,736,20.177,1154,15.645,1448,22.104,2373,33.479,2416,40.795]],["name/23-200",[]],["text/23-200",[]],["component/23-200",[]],["title/23-201",[63,6.89,78,20.604,1456,42.457,2490,78.881]],["name/23-201",[]],["text/23-201",[]],["component/23-201",[]],["title/23-202",[78,20.604,1456,42.457,2491,78.881,2492,71.975]],["name/23-202",[]],["text/23-202",[]],["component/23-202",[]],["title/23-203",[257,8.837,1456,42.457,2492,71.975,2493,78.881]],["name/23-203",[]],["text/23-203",[]],["component/23-203",[]],["title/23-204",[210,10.795,484,33.713,1088,29.759,1367,30.407,1448,31.724,2494,64.167,2495,64.167]],["name/23-204",[]],["text/23-204",[]],["component/23-204",[]],["title/23-205",[484,49.135,1088,31.732,2492,62.431,2496,68.422,2497,68.422]],["name/23-205",[]],["text/23-205",[]],["component/23-205",[]],["title/23-206",[1323,93.388]],["name/23-206",[]],["text/23-206",[]],["component/23-206",[]],["title/23-207",[34,30.38,63,3.905,74,11.425,210,11.547,257,5.009,386,11.753,462,19.914,657,14.728,736,20.177,739,26.329,1002,33.003,2415,42.468]],["name/23-207",[]],["text/23-207",[]],["component/23-207",[]],["title/23-208",[78,20.604,210,13.27,1363,65.973,1448,38.998]],["name/23-208",[]],["text/23-208",[]],["component/23-208",[]],["title/23-209",[78,20.604,210,13.27,393,51.142,1448,38.998]],["name/23-209",[]],["text/23-209",[]],["component/23-209",[]],["title/23-210",[78,20.604,210,13.27,547,60.951,1448,38.998]],["name/23-210",[]],["text/23-210",[]],["component/23-210",[]],["title/23-211",[63,6.89,78,20.604,210,13.27,2498,78.881]],["name/23-211",[]],["text/23-211",[]],["component/23-211",[]],["title/23-212",[63,4.985,74,9.499,78,14.907,199,15.348,210,13.85,657,18.8,1448,28.215,2499,57.071]],["name/23-212",[]],["text/23-212",[]],["component/23-212",[]],["title/23-213",[63,4.723,74,9.002,78,14.126,199,14.543,210,15.756,657,17.815,1367,25.627,2500,54.08]],["name/23-213",[]],["text/23-213",[]],["component/23-213",[]],["title/23-214",[675,68.853]],["name/23-214",[]],["text/23-214",[]],["component/23-214",[]],["title/23-215",[33,76.64]],["name/23-215",[]],["text/23-215",[]],["component/23-215",[]],["title/23-216",[63,6.89,78,20.604,1404,62.02,1456,42.457]],["name/23-216",[]],["text/23-216",[]],["component/23-216",[]],["title/23-217",[63,6.89,78,20.604,736,35.598,1513,63.195]],["name/23-217",[]],["text/23-217",[]],["component/23-217",[]],["title/23-218",[12,25.211,63,5.976,74,11.389,78,17.872,210,11.51,2371,57.225]],["name/23-218",[]],["text/23-218",[]],["component/23-218",[]],["title/23-219",[12,22.26,63,5.276,74,10.055,78,15.78,210,14.426,2106,42.402,2501,53.317]],["name/23-219",[]],["text/23-219",[]],["component/23-219",[]],["title/23-220",[63,5.976,78,17.872,210,15.733,2106,48.024,2502,60.386]],["name/23-220",[]],["text/23-220",[]],["component/23-220",[]],["title/23-221",[63,6.89,210,13.27,257,8.837,2503,71.975]],["name/23-221",[]],["text/23-221",[]],["component/23-221",[]],["title/23-222",[12,25.211,63,5.976,74,15.566,78,17.872,709,52.019]],["name/23-222",[]],["text/23-222",[]],["component/23-222",[]],["title/23-223",[74,13.13,78,20.604,709,59.971,2504,65.973]],["name/23-223",[]],["text/23-223",[]],["component/23-223",[]],["title/23-224",[74,7.442,78,11.678,199,18.459,210,11.547,771,29.787,1154,15.645,1690,34.546,1691,30.077,1693,33.479,2504,37.393,2505,39.458,2506,39.458]],["name/23-224",[]],["text/23-224",[]],["component/23-224",[]],["title/23-225",[12,25.211,74,15.566,257,7.666,2231,55.95,2504,57.225]],["name/23-225",[]],["text/23-225",[]],["component/23-225",[]],["title/23-226",[74,15.566,210,11.51,211,44.753,257,7.666,2507,62.431]],["name/23-226",[]],["text/23-226",[]],["component/23-226",[]],["title/23-227",[74,15.566,210,11.51,211,44.753,257,7.666,2508,62.431]],["name/23-227",[]],["text/23-227",[]],["component/23-227",[]],["title/23-228",[12,25.211,63,5.976,74,11.389,257,7.666,1968,35.139,2509,62.431]],["name/23-228",[]],["text/23-228",[]],["component/23-228",[]],["title/23-229",[12,21.029,63,4.985,74,9.499,257,6.394,770,19.508,1968,29.31,2510,52.074,2511,41.029,2512,54.21]],["name/23-229",[]],["text/23-229",[]],["component/23-229",[]],["title/23-230",[63,6.4,74,12.197,210,12.328,257,8.21,2513,62.85]],["name/23-230",[]],["text/23-230",[]],["component/23-230",[]],["title/23-231",[203,35.049,2514,84.962]],["name/23-231",[]],["text/23-231",[]],["component/23-231",[]],["title/23-232",[203,25.754,210,11.51,1404,53.796,1456,36.827,2106,48.024,2515,62.431]],["name/23-232",[]],["text/23-232",[]],["component/23-232",[]],["title/23-233",[380,80.471]],["name/23-233",[]],["text/23-233",[]],["component/23-233",[]],["title/23-234",[15,85.601]],["name/23-234",[]],["text/23-234",[]],["component/23-234",[]],["title/23-235",[2,45.052,183,49.882,199,21.213,2516,78.881]],["name/23-235",[]],["text/23-235",[]],["component/23-235",[]],["title/23-236",[19,40.496,34,36.747,73,28.823,74,15.589,78,14.126,210,9.098,367,44.222,2517,51.37]],["name/23-236",[]],["text/23-236",[]],["component/23-236",[]],["title/23-237",[142,33.234,801,51.705]],["name/23-237",[]],["text/23-237",[]],["component/23-237",[]],["title/23-238",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/23-238",[]],["text/23-238",[]],["component/23-238",[]],["title/23-239",[63,5.976,78,17.872,199,18.4,924,36.467,1452,21.632,2518,68.422]],["name/23-239",[]],["text/23-239",[]],["component/23-239",[]],["title/23-240",[63,5.976,78,17.872,199,18.4,924,36.467,1452,21.632,2519,68.422]],["name/23-240",[]],["text/23-240",[]],["component/23-240",[]],["title/23-241",[63,5.976,78,17.872,199,18.4,924,36.467,1452,21.632,2520,68.422]],["name/23-241",[]],["text/23-241",[]],["component/23-241",[]],["title/23-242",[63,5.976,78,17.872,199,18.4,924,36.467,1452,21.632,2521,68.422]],["name/23-242",[]],["text/23-242",[]],["component/23-242",[]],["title/23-243",[63,5.976,78,17.872,199,18.4,210,11.51,924,36.467,2522,68.422]],["name/23-243",[]],["text/23-243",[]],["component/23-243",[]],["title/23-244",[63,5.604,78,16.761,199,17.256,924,34.199,2365,43.602,2523,64.167,2524,64.167]],["name/23-244",[]],["text/23-244",[]],["component/23-244",[]],["title/23-245",[63,6.89,78,20.604,210,13.27,437,74.927]],["name/23-245",[]],["text/23-245",[]],["component/23-245",[]],["title/23-246",[63,3.905,74,7.442,78,11.678,199,22.468,210,7.521,386,11.753,462,19.914,657,14.728,862,20.591,1985,39.458,2118,29.243,2525,36.559]],["name/23-246",[]],["text/23-246",[]],["component/23-246",[]],["title/23-247",[63,3.905,74,7.442,78,11.678,199,22.468,210,7.521,386,11.753,462,19.914,657,14.728,2118,29.243,2276,35.152,2525,36.559,2526,44.709]],["name/23-247",[]],["text/23-247",[]],["component/23-247",[]],["title/23-248",[13,31.38,74,7.442,78,11.678,199,18.459,210,11.547,386,11.753,436,33.479,462,19.914,657,14.728,862,20.591,2118,29.243,2525,36.559]],["name/23-248",[]],["text/23-248",[]],["component/23-248",[]],["title/23-249",[13,31.38,74,7.442,78,11.678,199,18.459,210,11.547,386,11.753,462,19.914,657,14.728,2118,29.243,2276,35.152,2525,36.559,2527,44.709]],["name/23-249",[]],["text/23-249",[]],["component/23-249",[]],["title/23-250",[78,20.604,199,21.213,547,60.951,924,42.041]],["name/23-250",[]],["text/23-250",[]],["component/23-250",[]],["title/23-251",[74,8.148,78,12.786,199,19.774,210,8.235,386,12.868,393,31.737,462,21.803,657,16.125,2118,32.017,2276,38.487,2525,40.027]],["name/23-251",[]],["text/23-251",[]],["component/23-251",[]],["title/23-252",[74,8.148,78,12.786,199,19.774,210,8.235,386,12.868,462,21.803,657,16.125,2118,32.017,2276,38.487,2525,40.027,2528,44.664]],["name/23-252",[]],["text/23-252",[]],["component/23-252",[]],["title/23-253",[74,10.055,210,10.163,257,6.768,386,15.881,462,26.908,657,19.901,862,27.823,2174,50.526]],["name/23-253",[]],["text/23-253",[]],["component/23-253",[]],["title/23-254",[142,28.153,210,13.27,439,74.927,1942,56.709]],["name/23-254",[]],["text/23-254",[]],["component/23-254",[]],["title/23-255",[63,5.604,199,17.256,257,7.189,2365,43.602,2418,60.952,2524,64.167,2529,64.167]],["name/23-255",[]],["text/23-255",[]],["component/23-255",[]],["title/23-256",[63,6.89,78,20.604,199,21.213,388,74.927]],["name/23-256",[]],["text/23-256",[]],["component/23-256",[]],["title/23-257",[63,6.89,78,20.604,199,21.213,389,74.927]],["name/23-257",[]],["text/23-257",[]],["component/23-257",[]],["title/23-258",[63,6.89,78,20.604,199,21.213,2530,78.881]],["name/23-258",[]],["text/23-258",[]],["component/23-258",[]],["title/23-259",[13,26.746,74,6.343,199,16.292,210,12.686,386,10.017,462,16.973,657,12.553,862,17.55,924,20.309,1088,17.673,1367,35.734,2525,31.16,2531,38.106]],["name/23-259",[]],["text/23-259",[]],["component/23-259",[]],["title/23-260",[74,7.442,199,12.023,210,11.547,386,11.753,462,19.914,657,14.728,862,20.591,924,23.828,1088,20.735,1367,39.591,2532,44.709]],["name/23-260",[]],["text/23-260",[]],["component/23-260",[]],["title/23-261",[199,24.06,924,34.199,1088,29.759,1367,30.407,2118,41.971,2533,64.167]],["name/23-261",[]],["text/23-261",[]],["component/23-261",[]],["title/23-262",[199,19.706,547,56.623,924,39.056,1088,33.985,1367,34.726]],["name/23-262",[]],["text/23-262",[]],["component/23-262",[]],["title/23-263",[210,15.733,1088,31.732,2534,68.422,2535,68.422,2536,68.422]],["name/23-263",[]],["text/23-263",[]],["component/23-263",[]],["title/23-264",[203,22.739,210,16.77,386,15.881,462,26.908,2276,47.498,2537,60.411]],["name/23-264",[]],["text/23-264",[]],["component/23-264",[]],["title/23-265",[13,48.024,203,25.754,210,15.733,2517,64.992,2538,68.422]],["name/23-265",[]],["text/23-265",[]],["component/23-265",[]],["title/23-266",[199,25.15,203,25.754,1983,51.235,2396,64.992,2539,68.422]],["name/23-266",[]],["text/23-266",[]],["component/23-266",[]],["title/23-267",[199,21.213,203,29.691,2540,78.881,2541,78.881]],["name/23-267",[]],["text/23-267",[]],["component/23-267",[]],["title/23-268",[74,13.13,203,29.691,205,49.491,2542,78.881]],["name/23-268",[]],["text/23-268",[]],["component/23-268",[]],["title/23-269",[200,45.593,210,13.27,257,8.837,2543,78.881]],["name/23-269",[]],["text/23-269",[]],["component/23-269",[]],["title/23-270",[2544,110.136]],["name/23-270",[]],["text/23-270",[]],["component/23-270",[]],["title/23-271",[14,51.428,277,73.211]],["name/23-271",[]],["text/23-271",[]],["component/23-271",[]],["title/23-272",[14,51.428,1327,82.179]],["name/23-272",[]],["text/23-272",[]],["component/23-272",[]],["title/23-273",[2,58.456]],["name/23-273",[]],["text/23-273",[]],["component/23-273",[]],["title/23-274",[19,76.64]],["name/23-274",[]],["text/23-274",[]],["component/23-274",[]],["title/23-275",[34,69.546]],["name/23-275",[]],["text/23-275",[]],["component/23-275",[]],["title/23-276",[367,83.693]],["name/23-276",[]],["text/23-276",[]],["component/23-276",[]],["title/23",[30,74.534]],["name/23",[30,0.204]],["text/23",[0,0.042,1,0.042,2,1.219,3,0.367,4,0.378,5,0.328,6,1.901,7,0.083,8,0.405,10,0.041,12,1.99,13,1.607,14,2.3,15,0.479,16,0.492,17,0.349,18,0.748,19,0.613,20,0.132,21,0.255,23,0.472,26,0.472,28,0.219,29,0.977,30,1.286,31,0.12,32,0.652,33,4.516,34,4.711,36,0.144,37,0.044,38,0.046,39,0.048,40,0.048,42,0.455,47,0.303,48,0.038,53,0.913,54,0.147,55,0.051,58,2.459,59,0.266,60,0.232,62,0.212,63,0.248,66,0.223,73,0.252,74,0.16,76,1.626,78,0.11,79,0.048,80,0.857,82,0.046,83,0.177,84,0.689,85,0.744,88,0.194,89,0.589,93,0.324,96,0.202,97,0.035,99,0.277,100,0.175,101,0.048,102,0.049,103,0.124,104,0.042,105,0.226,107,0.098,108,0.26,110,0.044,113,0.044,117,1.137,119,0.129,121,0.398,122,0.25,125,0.65,129,0.203,130,0.419,131,0.181,132,0.251,134,0.185,135,0.613,138,0.039,139,0.086,142,0.057,144,0.16,145,0.122,146,0.361,147,0.203,148,0.09,153,0.191,155,0.138,159,0.154,161,0.122,162,0.254,163,0.081,164,0.228,172,0.472,173,0.296,174,0.46,175,0.327,178,0.402,179,0.044,180,0.26,181,1.146,183,0.394,184,0.165,185,0.04,186,0.181,189,0.049,193,0.445,199,0.113,200,0.062,202,0.046,203,0.272,205,0.264,208,0.467,209,0.045,210,0.054,211,0.174,212,0.045,213,0.041,214,0.199,216,0.257,217,0.042,219,0.042,220,0.504,222,0.189,223,0.081,229,0.046,240,0.124,243,0.153,245,0.436,247,0.042,249,0.043,252,0.141,254,0.082,256,0.092,257,0.103,259,0.132,260,0.126,262,0.045,263,0.381,264,0.25,268,0.044,269,0.043,270,0.404,271,0.331,273,0.085,274,0.586,275,0.129,276,0.478,283,0.504,285,0.048,286,0.049,287,0.088,288,0.046,290,0.051,294,0.098,296,0.085,297,0.504,298,0.849,299,0.045,300,0.596,301,0.092,303,0.55,306,0.436,309,0.086,310,0.124,311,0.194,312,0.046,315,0.043,316,0.098,318,3.01,319,0.547,323,0.152,327,0.597,328,0.041,329,0.092,330,0.126,331,0.126,333,0.046,334,0.255,335,0.095,338,0.492,341,0.232,342,0.077,343,0.09,345,0.175,347,0.048,352,0.299,356,0.039,358,0.038,360,0.624,361,0.126,364,0.083,367,1.162,369,0.171,371,0.266,372,0.235,373,0.095,375,0.048,376,0.324,379,0.043,380,2.292,381,0.136,384,0.12,385,0.249,386,1.513,388,0.102,389,0.102,393,2.358,394,0.209,395,0.395,397,0.042,398,0.78,400,0.195,401,0.078,402,0.035,403,0.054,405,0.189,407,0.506,408,0.367,409,0.147,411,0.092,412,0.054,413,0.417,414,0.162,415,0.26,416,0.054,418,0.043,422,0.081,423,0.129,427,0.045,429,0.511,436,0.895,437,0.051,438,0.079,439,0.102,441,0.179,442,0.04,443,0.098,444,0.407,446,0.221,447,0.171,451,0.229,455,0.162,456,0.086,460,0.04,462,2.405,463,0.167,464,0.871,465,0.04,468,0.043,474,0.126,480,0.049,488,0.043,489,0.049,491,0.203,492,0.054,504,0.48,505,0.049,506,0.395,507,0.158,509,0.043,511,0.122,512,0.054,516,0.273,518,0.045,523,0.154,524,0.088,525,0.044,528,0.392,538,0.085,541,0.129,542,0.095,544,0.083,546,0.135,547,1.493,549,0.09,552,0.077,554,0.048,558,0.32,560,0.596,562,0.165,564,0.095,565,0.045,568,0.044,571,0.126,572,0.499,573,1.084,575,0.307,576,1.006,577,0.033,585,0.394,586,0.046,592,0.365,599,0.072,600,0.255,602,0.218,605,0.043,608,0.092,612,0.122,615,0.082,618,0.138,626,0.578,629,0.044,635,0.152,654,0.171,662,0.044,663,0.469,666,0.161,671,0.054,673,0.224,680,0.092,681,0.098,685,0.04,686,0.423,689,0.1,690,0.042,691,1.022,693,0.213,704,0.044,706,0.114,707,0.232,709,1.114,710,0.051,711,0.045,712,0.079,716,0.443,726,0.075,727,0.365,736,0.073,737,0.812,739,2.721,740,0.033,741,1.079,742,0.048,743,0.04,751,0.039,758,0.202,759,0.132,760,0.043,761,0.051,764,0.16,771,1.5,775,0.165,785,0.049,786,0.161,791,0.177,792,0.787,799,0.129,800,1.938,801,0.455,806,0.048,807,0.09,808,0.085,821,0.046,829,0.202,833,0.051,835,0.043,838,0.054,844,0.645,845,0.049,846,0.202,854,0.051,855,0.042,858,0.202,859,0.092,862,0.487,863,0.046,865,0.042,871,0.049,873,0.086,878,0.048,886,0.199,890,0.119,892,0.073,893,0.132,894,0.044,901,0.55,924,0.588,925,0.26,926,0.073,927,0.041,928,0.079,929,0.142,931,0.095,932,0.044,933,0.044,936,0.045,944,0.088,949,0.054,950,0.365,958,0.054,961,0.092,973,0.081,984,0.092,989,0.043,992,0.266,1002,1.776,1016,0.232,1017,0.25,1022,0.52,1025,0.048,1029,0.189,1039,0.049,1040,0.042,1043,0.049,1048,0.521,1049,0.521,1054,0.042,1062,0.044,1071,0.051,1073,0.122,1078,0.213,1088,1.008,1089,0.26,1091,0.179,1095,0.045,1104,0.138,1105,0.194,1111,0.098,1114,0.129,1115,0.082,1135,0.051,1139,0.051,1146,0.162,1152,0.088,1154,0.038,1167,0.135,1170,0.092,1171,0.088,1173,0.923,1186,0.108,1190,0.092,1196,0.09,1197,0.045,1198,0.044,1230,0.09,1243,0.138,1246,0.328,1247,1.627,1252,0.048,1254,0.095,1255,0.098,1266,0.042,1275,0.049,1291,0.054,1295,0.051,1297,0.437,1298,0.088,1301,0.046,1306,0.046,1320,0.281,1322,2.467,1323,0.049,1324,0.098,1325,0.098,1327,0.095,1328,1.37,1329,0.246,1333,0.147,1337,0.048,1339,0.203,1343,0.054,1344,0.049,1351,0.132,1352,0.203,1356,0.04,1357,0.266,1358,0.253,1359,0.049,1362,0.098,1363,1.038,1365,0.161,1366,0.138,1367,0.126,1370,0.049,1372,0.049,1373,0.102,1374,0.092,1380,0.045,1381,0.59,1382,0.049,1389,0.161,1390,0.049,1402,0.147,1404,1.421,1406,1.883,1407,0.766,1409,0.153,1410,0.092,1411,0.048,1413,0.673,1414,0.051,1417,0.108,1419,0.085,1420,0.153,1421,2.665,1422,0.573,1423,0.054,1424,0.68,1425,0.179,1427,1.104,1428,0.661,1429,0.153,1433,0.685,1434,1.475,1435,0.054,1436,0.054,1437,0.054,1438,0.054,1439,0.054,1440,0.054,1442,0.044,1447,0.55,1448,4.043,1449,0.686,1451,0.521,1454,0.492,1455,1.968,1456,0.115,1458,0.492,1460,0.534,1462,0.55,1464,0.054,1465,0.25,1466,0.051,1468,0.042,1470,0.098,1473,0.09,1478,0.049,1481,0.102,1482,0.048,1483,0.051,1489,0.569,1490,0.102,1492,0.659,1494,0.102,1495,0.569,1497,0.963,1500,0.054,1501,0.049,1503,0.098,1504,0.054,1505,0.102,1507,0.29,1511,0.054,1512,0.049,1513,0.578,1520,0.048,1521,0.054,1522,0.189,1528,0.049,1529,0.171,1531,0.051,1537,0.098,1576,0.049,1577,0.051,1580,0.044,1598,0.095,1601,0.046,1611,0.046,1637,0.051,1655,0.281,1657,0.051,1659,0.054,1660,0.044,1670,0.046,1676,0.037,1681,0.048,1690,0.042,1691,0.036,1693,0.081,1695,0.195,1708,0.179,1742,0.09,1746,0.235,1751,0.051,1753,0.049,1760,0.436,1776,0.135,1800,0.088,1802,0.309,1808,0.098,1811,0.043,1812,0.046,1841,0.153,1857,0.049,1883,0.054,1889,0.303,1895,0.153,1918,0.102,1919,0.046,1920,0.046,1921,0.049,1922,0.051,1923,0.051,1924,0.049,1925,0.049,1926,0.051,1927,0.051,1928,0.051,1929,0.419,1930,0.098,1931,0.049,1932,0.046,1942,0.039,1968,0.11,1983,0.04,1985,0.048,2030,0.048,2035,0.049,2036,0.051,2054,0.092,2058,0.043,2061,0.051,2062,0.195,2067,0.098,2078,0.175,2080,0.046,2087,0.102,2101,0.048,2106,2.071,2109,0.135,2116,0.054,2118,0.375,2119,0.095,2120,0.049,2126,0.214,2128,0.051,2133,0.049,2136,0.214,2138,0.108,2142,0.051,2153,0.168,2174,0.09,2231,0.044,2276,0.209,2295,0.049,2296,0.521,2319,0.521,2320,0.521,2321,0.51,2322,0.499,2323,0.521,2324,0.521,2325,0.51,2326,0.51,2335,0.098,2347,0.049,2363,0.569,2364,0.592,2365,0.216,2367,0.639,2368,0.614,2369,0.592,2370,0.592,2371,0.563,2372,0.592,2373,2.815,2374,0.569,2375,0.592,2376,0.592,2377,0.592,2378,0.592,2379,0.722,2380,0.623,2381,0.623,2382,0.722,2383,0.623,2384,0.722,2385,0.673,2386,0.867,2387,1.874,2388,0.722,2389,0.623,2390,0.623,2391,0.623,2392,0.623,2393,0.623,2394,0.623,2395,0.623,2396,0.778,2397,0.623,2398,0.623,2399,0.623,2400,0.623,2401,0.623,2402,0.623,2403,0.623,2404,0.623,2405,0.623,2406,0.108,2407,0.046,2408,0.573,2409,0.569,2410,0.569,2411,0.592,2412,0.659,2413,0.523,2414,0.623,2415,0.544,2416,1.007,2417,0.614,2418,0.639,2419,0.623,2420,0.573,2421,0.573,2422,0.102,2423,0.153,2424,0.153,2425,0.051,2426,0.054,2427,0.102,2428,0.054,2429,0.054,2430,0.054,2432,0.054,2433,0.147,2434,0.253,2435,0.054,2436,0.147,2437,0.054,2438,0.161,2439,0.054,2440,0.054,2441,0.054,2442,0.054,2443,0.161,2444,0.108,2445,0.102,2446,0.054,2447,0.054,2448,0.214,2449,0.054,2450,0.054,2452,0.054,2453,0.054,2454,0.054,2455,0.054,2456,0.054,2457,0.054,2458,0.054,2459,0.054,2460,0.054,2461,0.054,2462,0.102,2463,0.102,2464,0.189,2465,0.102,2466,0.102,2468,0.054,2469,0.108,2470,0.054,2471,0.054,2472,0.054,2473,0.054,2474,0.147,2475,0.054,2476,0.147,2477,0.054,2478,0.147,2479,0.054,2480,0.054,2481,0.054,2482,0.161,2483,0.054,2484,0.161,2485,0.054,2486,0.161,2487,0.054,2488,0.054,2489,0.054,2490,0.214,2491,0.108,2492,0.147,2493,0.054,2494,0.108,2495,0.054,2496,0.161,2497,0.054,2498,0.054,2499,0.054,2500,0.054,2501,0.048,2502,0.048,2503,0.049,2504,0.266,2505,0.048,2506,0.095,2507,0.098,2508,0.049,2509,0.049,2510,0.049,2511,0.077,2513,0.092,2514,0.049,2515,0.049,2516,0.054,2517,0.153,2518,0.054,2519,0.108,2520,0.108,2521,0.108,2522,0.108,2523,0.054,2525,0.51,2526,0.054,2527,0.108,2528,0.098,2529,0.214,2530,0.054,2531,0.161,2532,0.161,2533,0.161,2534,0.108,2535,0.054,2536,0.054,2537,0.054,2538,0.054,2539,0.054,2540,0.054,2541,0.054,2542,0.054,2543,0.054,2545,0.058,2546,0.058,2547,0.173,2548,0.058,2549,0.116,2550,0.915,2551,0.058,2552,0.108,2553,0.4,2554,0.173,2555,0.173,2556,0.058,2557,0.098,2558,0.253,2559,0.058,2560,0.058,2561,0.058,2562,0.058,2563,0.058,2564,0.058,2565,0.058,2566,0.048,2567,0.102,2568,0.058,2569,0.054,2570,0.054,2571,0.116,2572,0.058,2573,0.116,2574,0.116,2575,0.098,2576,0.116,2577,0.054,2578,0.116,2579,0.116,2580,0.102,2581,0.266,2582,0.057,2583,0.351,2584,0.058,2585,0.058,2586,0.054,2587,0.049,2588,0.058,2589,0.534,2590,0.534,2591,0.534,2592,0.534,2593,0.23,2594,0.058,2595,0.058,2596,0.058,2597,0.058,2598,0.058,2599,0.049,2600,0.058,2601,0.058,2602,0.058,2603,0.058,2604,0.058,2605,0.058,2606,0.23,2607,0.051,2608,0.049,2609,0.116,2610,0.054,2611,0.058,2612,0.058,2613,0.116,2614,0.116,2615,0.116,2616,0.058,2617,0.173,2618,0.058,2619,0.058,2620,0.058,2621,0.058,2622,0.058,2623,0.058,2624,0.116,2625,0.116,2626,0.054,2627,0.054,2628,0.054,2629,0.058,2630,0.051,2631,0.058,2632,0.116,2633,0.116,2634,0.116,2635,0.116,2636,0.054,2637,0.116,2638,0.116,2639,0.058,2640,0.058,2641,0.116,2642,0.058,2643,0.179,2644,0.058,2645,0.173,2646,0.058,2647,0.054,2648,0.058,2649,0.058,2650,0.058,2651,0.058,2652,0.058,2653,0.214,2654,0.054,2655,0.286,2656,0.23,2657,0.042,2658,0.058,2659,0.058,2660,0.161,2661,0.054,2662,0.058,2663,0.054,2664,0.054,2665,0.051,2666,0.054,2667,0.092,2668,0.116,2669,0.296,2670,0.058,2671,0.116,2672,0.058,2673,0.049,2674,0.116,2675,0.116,2676,0.058,2677,0.173,2678,0.058,2679,0.054,2680,0.051,2681,0.058,2682,0.058,2683,0.058,2684,0.058,2685,0.116,2686,0.116,2687,0.108,2688,0.116,2689,0.058,2690,0.036,2691,0.116,2692,0.173,2693,0.116,2694,0.116,2695,0.058,2696,0.058,2697,0.058,2698,0.058,2699,0.058,2700,0.058,2701,0.058,2702,0.058,2703,0.058,2704,0.058,2705,0.116,2706,0.058,2707,0.058,2708,0.058,2709,0.058,2710,0.058,2711,0.054,2712,0.051,2713,0.051,2714,0.058,2715,0.054,2716,0.049,2717,0.049,2718,0.049,2719,0.049,2720,0.049,2721,0.049,2722,0.049,2723,0.116,2724,0.054,2725,0.051,2726,0.058,2727,0.051,2728,0.051,2729,0.054,2730,0.116,2731,0.058,2732,0.058,2733,0.058,2734,0.054,2735,0.058,2736,0.116,2737,0.116,2738,0.058,2739,0.058,2740,0.342,2741,0.051,2742,0.051,2743,0.058,2744,0.058,2745,0.058,2746,0.058,2747,0.058,2748,0.058,2749,0.058,2750,0.058,2751,0.058,2752,0.058,2753,0.058,2754,0.058,2755,0.058]],["component/23",[29,0.109]],["title/24-1",[321,69.84,385,57.456,599,56.903]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[758,70.793,2119,82.179]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[2756,97.219]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[74,10.055,162,41.478,203,22.739,210,14.426,689,37.613,926,41.049,2757,57.384]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[74,13.13,203,29.691,689,49.112,2758,74.927]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[74,13.13,203,29.691,801,43.801,2759,74.927]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24-7",[23,39.514,74,10.055,162,41.478,203,22.739,210,14.426,2760,57.384,2761,36.794]],["name/24-7",[]],["text/24-7",[]],["component/24-7",[]],["title/24-8",[74,13.13,203,29.691,2690,53.065,2762,74.927]],["name/24-8",[]],["text/24-8",[]],["component/24-8",[]],["title/24-9",[74,13.13,203,29.691,2761,48.043,2763,74.927]],["name/24-9",[]],["text/24-9",[]],["component/24-9",[]],["title/24-10",[2764,97.219]],["name/24-10",[]],["text/24-10",[]],["component/24-10",[]],["title/24-11",[53,39.814,74,13.13,203,29.691,2765,74.927]],["name/24-11",[]],["text/24-11",[]],["component/24-11",[]],["title/24-12",[203,29.691,210,13.27,1240,40.875,2766,74.927]],["name/24-12",[]],["text/24-12",[]],["component/24-12",[]],["title/24-13",[53,30.492,74,14.273,203,22.739,210,10.163,689,37.613,1240,31.304,2767,57.384]],["name/24-13",[]],["text/24-13",[]],["component/24-13",[]],["title/24-14",[74,13.13,203,29.691,689,49.112,2768,74.927]],["name/24-14",[]],["text/24-14",[]],["component/24-14",[]],["title/24-15",[74,13.13,203,29.691,801,43.801,2769,74.927]],["name/24-15",[]],["text/24-15",[]],["component/24-15",[]],["title/24-16",[14,37.79,74,11.389,203,25.754,210,11.51,1240,35.455,2770,64.992]],["name/24-16",[]],["text/24-16",[]],["component/24-16",[]],["title/24-17",[74,13.13,203,29.691,2690,53.065,2771,74.927]],["name/24-17",[]],["text/24-17",[]],["component/24-17",[]],["title/24-18",[14,43.566,74,13.13,203,29.691,2772,74.927]],["name/24-18",[]],["text/24-18",[]],["component/24-18",[]],["title/24-19",[2773,97.219]],["name/24-19",[]],["text/24-19",[]],["component/24-19",[]],["title/24-20",[74,9.002,162,37.131,203,20.356,210,15.756,689,33.671,926,36.747,1240,28.024,2774,51.37]],["name/24-20",[]],["text/24-20",[]],["component/24-20",[]],["title/24-21",[74,13.13,203,29.691,689,49.112,2775,74.927]],["name/24-21",[]],["text/24-21",[]],["component/24-21",[]],["title/24-22",[74,13.13,203,29.691,801,43.801,1027,71.975]],["name/24-22",[]],["text/24-22",[]],["component/24-22",[]],["title/24-23",[14,37.79,53,34.535,74,15.566,203,25.754,2776,64.992]],["name/24-23",[]],["text/24-23",[]],["component/24-23",[]],["title/24-24",[74,13.13,203,29.691,2690,53.065,2777,74.927]],["name/24-24",[]],["text/24-24",[]],["component/24-24",[]],["title/24-25",[14,43.566,74,13.13,203,29.691,2778,74.927]],["name/24-25",[]],["text/24-25",[]],["component/24-25",[]],["title/24-26",[203,25.754,210,15.733,2779,64.992,2780,64.992,2781,64.992]],["name/24-26",[]],["text/24-26",[]],["component/24-26",[]],["title/24-27",[676,97.219]],["name/24-27",[]],["text/24-27",[]],["component/24-27",[]],["title/24-28",[63,4.985,142,20.369,199,15.348,477,25.258,573,31.354,657,18.8,666,34.516,738,47.732,2782,61.413]],["name/24-28",[]],["text/24-28",[]],["component/24-28",[]],["title/24-29",[2783,90.329]],["name/24-29",[]],["text/24-29",[]],["component/24-29",[]],["title/24-30",[63,5.604,74,10.681,142,22.902,210,10.795,386,16.869,1452,20.287,2784,55.035]],["name/24-30",[]],["text/24-30",[]],["component/24-30",[]],["title/24-31",[63,4.985,74,9.499,142,20.369,210,9.601,386,15.003,657,18.8,862,26.284,1452,18.044,2784,48.948]],["name/24-31",[]],["text/24-31",[]],["component/24-31",[]],["title/24-32",[63,5.276,74,14.273,142,21.562,210,10.163,386,15.881,1452,19.1,2785,51.813]],["name/24-32",[]],["text/24-32",[]],["component/24-32",[]],["title/24-33",[63,4.723,74,13.178,142,19.302,210,9.098,386,14.217,657,17.815,862,24.907,1452,17.098,2785,46.383]],["name/24-33",[]],["text/24-33",[]],["component/24-33",[]],["title/24-34",[63,5.276,74,10.055,142,21.562,210,10.163,386,15.881,1452,19.1,2761,36.794,2786,51.813]],["name/24-34",[]],["text/24-34",[]],["component/24-34",[]],["title/24-35",[63,4.723,74,9.002,142,19.302,210,9.098,386,14.217,657,17.815,862,24.907,1452,17.098,2761,32.938,2786,46.383]],["name/24-35",[]],["text/24-35",[]],["component/24-35",[]],["title/24-36",[2787,97.219]],["name/24-36",[]],["text/24-36",[]],["component/24-36",[]],["title/24-37",[14,28.381,63,4.488,74,12.691,142,18.341,210,8.645,386,13.509,477,22.742,657,16.928,862,23.667,2788,51.387]],["name/24-37",[]],["text/24-37",[]],["component/24-37",[]],["title/24-38",[2789,97.219]],["name/24-38",[]],["text/24-38",[]],["component/24-38",[]],["title/24-39",[53,27.296,63,4.723,74,9.002,142,19.302,210,9.098,386,14.217,477,23.934,657,17.815,862,24.907,2790,54.08]],["name/24-39",[]],["text/24-39",[]],["component/24-39",[]],["title/24-40",[2791,102.349]],["name/24-40",[]],["text/24-40",[]],["component/24-40",[]],["title/24-41",[12,22.26,63,5.276,74,10.055,142,21.562,199,23.06,2792,60.411,2793,55.122]],["name/24-41",[]],["text/24-41",[]],["component/24-41",[]],["title/24-42",[2794,102.349]],["name/24-42",[]],["text/24-42",[]],["component/24-42",[]],["title/24-43",[12,25.211,74,15.566,142,24.42,2795,68.422,2796,64.992]],["name/24-43",[]],["text/24-43",[]],["component/24-43",[]],["title/24-44",[12,25.211,63,5.976,74,15.566,142,24.42,2797,68.422]],["name/24-44",[]],["text/24-44",[]],["component/24-44",[]],["title/24-45",[12,22.26,42,33.545,74,14.273,142,21.562,199,16.246,2798,60.411,2799,57.384]],["name/24-45",[]],["text/24-45",[]],["component/24-45",[]],["title/24-46",[12,22.26,63,5.276,74,14.273,142,21.562,199,16.246,2799,57.384,2800,60.411]],["name/24-46",[]],["text/24-46",[]],["component/24-46",[]],["title/24-47",[63,5.976,142,24.42,199,18.4,736,30.878,2793,62.431,2801,68.422]],["name/24-47",[]],["text/24-47",[]],["component/24-47",[]],["title/24-48",[12,25.211,74,11.389,142,24.42,477,30.281,1929,42.6,2802,68.422]],["name/24-48",[]],["text/24-48",[]],["component/24-48",[]],["title/24-49",[12,22.26,63,5.276,74,10.055,142,21.562,477,26.736,1452,19.1,1929,37.613,2803,60.411]],["name/24-49",[]],["text/24-49",[]],["component/24-49",[]],["title/24-50",[12,22.26,63,5.276,74,10.055,142,21.562,477,26.736,1452,19.1,1929,37.613,2804,60.411]],["name/24-50",[]],["text/24-50",[]],["component/24-50",[]],["title/24-51",[12,18.935,42,28.535,74,12.691,199,13.819,1088,23.832,1367,43.079,2793,46.888,2805,51.387]],["name/24-51",[]],["text/24-51",[]],["component/24-51",[]],["title/24-52",[12,22.26,74,14.273,1088,28.017,1367,40.635,2796,57.384,2806,60.411]],["name/24-52",[]],["text/24-52",[]],["component/24-52",[]],["title/24-53",[2807,102.349]],["name/24-53",[]],["text/24-53",[]],["component/24-53",[]],["title/24-54",[63,6.89,142,28.153,199,21.213,2808,71.975]],["name/24-54",[]],["text/24-54",[]],["component/24-54",[]],["title/24-55",[2809,102.349]],["name/24-55",[]],["text/24-55",[]],["component/24-55",[]],["title/24-56",[2810,102.349]],["name/24-56",[]],["text/24-56",[]],["component/24-56",[]],["title/24-57",[63,4.488,74,8.553,142,18.341,210,15.293,801,28.535,1240,26.628,2811,45.352,2812,45.352,2813,55.297]],["name/24-57",[]],["text/24-57",[]],["component/24-57",[]],["title/24-58",[2814,102.349]],["name/24-58",[]],["text/24-58",[]],["component/24-58",[]],["title/24-59",[32,35.948,63,5.976,74,11.389,142,24.42,210,11.51,2815,62.431]],["name/24-59",[]],["text/24-59",[]],["component/24-59",[]],["title/24-60",[32,31.74,63,5.276,74,10.055,142,21.562,210,14.426,211,39.514,2816,55.122]],["name/24-60",[]],["text/24-60",[]],["component/24-60",[]],["title/24-61",[29,21.021,32,24.553,63,4.082,74,7.779,142,16.68,210,7.862,211,30.567,657,15.395,801,25.95,862,21.523,1452,14.775,2817,42.642,2818,41.245]],["name/24-61",[]],["text/24-61",[]],["component/24-61",[]],["title/24-62",[2818,90.329]],["name/24-62",[]],["text/24-62",[]],["component/24-62",[]],["title/24-63",[32,23.49,63,3.905,74,11.425,93,30.697,142,15.957,199,12.023,210,11.547,211,29.243,657,14.728,804,35.819,862,20.591,2819,44.709]],["name/24-63",[]],["text/24-63",[]],["component/24-63",[]],["title/24-64",[1207,93.388]],["name/24-64",[]],["text/24-64",[]],["component/24-64",[]],["title/24-65",[63,6.4,74,12.197,142,26.154,673,44.32,2820,78.855]],["name/24-65",[]],["text/24-65",[]],["component/24-65",[]],["title/24-66",[63,6.4,142,26.154,210,12.328,2821,66.864,2822,78.855]],["name/24-66",[]],["text/24-66",[]],["component/24-66",[]],["title/24-67",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2823,58.55]],["name/24-67",[]],["text/24-67",[]],["component/24-67",[]],["title/24-68",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2824,58.55]],["name/24-68",[]],["text/24-68",[]],["component/24-68",[]],["title/24-69",[63,5.604,74,10.681,142,22.902,210,10.795,801,35.631,2825,58.55,2826,64.167]],["name/24-69",[]],["text/24-69",[]],["component/24-69",[]],["title/24-70",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2827,58.55]],["name/24-70",[]],["text/24-70",[]],["component/24-70",[]],["title/24-71",[63,4.985,74,9.499,142,20.369,210,13.85,673,34.516,766,36.09,801,31.69,1171,46.668]],["name/24-71",[]],["text/24-71",[]],["component/24-71",[]],["title/24-72",[63,5.604,74,10.681,142,22.902,210,10.795,801,35.631,2828,58.55,2829,64.167]],["name/24-72",[]],["text/24-72",[]],["component/24-72",[]],["title/24-73",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2830,58.55]],["name/24-73",[]],["text/24-73",[]],["component/24-73",[]],["title/24-74",[31,42.735,63,4.985,74,9.499,142,20.369,210,13.85,673,34.516,766,36.09,801,31.69]],["name/24-74",[]],["text/24-74",[]],["component/24-74",[]],["title/24-75",[53,32.388,63,5.604,74,10.681,142,22.902,210,10.795,2826,64.167,2831,58.55]],["name/24-75",[]],["text/24-75",[]],["component/24-75",[]],["title/24-76",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2832,58.55]],["name/24-76",[]],["text/24-76",[]],["component/24-76",[]],["title/24-77",[53,25.937,63,4.488,74,12.691,142,18.341,210,12.827,673,31.079,766,32.496,801,28.535,1183,42.978]],["name/24-77",[]],["text/24-77",[]],["component/24-77",[]],["title/24-78",[53,32.388,63,5.604,74,10.681,142,22.902,210,10.795,2829,64.167,2833,58.55]],["name/24-78",[]],["text/24-78",[]],["component/24-78",[]],["title/24-79",[63,5.604,142,22.902,210,15.051,673,38.809,766,40.578,2834,58.55]],["name/24-79",[]],["text/24-79",[]],["component/24-79",[]],["title/24-80",[53,25.937,63,4.488,74,12.691,142,18.341,210,12.827,673,31.079,766,32.496,801,28.535,1172,45.352]],["name/24-80",[]],["text/24-80",[]],["component/24-80",[]],["title/24-81",[53,24.707,74,12.239,210,12.37,673,29.605,689,30.477,766,30.955,1088,22.702,1171,40.027,1367,34.845]],["name/24-81",[]],["text/24-81",[]],["component/24-81",[]],["title/24-82",[53,21.629,74,13.541,210,11.176,673,25.917,689,26.68,766,27.099,801,23.795,1088,19.874,1183,35.84,1367,38.551]],["name/24-82",[]],["text/24-82",[]],["component/24-82",[]],["title/24-83",[2835,102.349]],["name/24-83",[]],["text/24-83",[]],["component/24-83",[]],["title/24-84",[53,39.814,63,6.89,74,13.13,142,28.153]],["name/24-84",[]],["text/24-84",[]],["component/24-84",[]],["title/24-85",[2325,83.693]],["name/24-85",[]],["text/24-85",[]],["component/24-85",[]],["title/24-86",[63,3.456,74,6.586,142,14.122,199,10.64,210,10.5,297,25.88,504,24.635,662,32.354,736,28.167,737,25.88,768,31.699,2118,25.88,2322,31.699,2836,25.224,2837,36.103]],["name/24-86",[]],["text/24-86",[]],["component/24-86",[]],["title/24-87",[1088,43.184,2326,76.142]],["name/24-87",[]],["text/24-87",[]],["component/24-87",[]],["title/24-88",[2431,97.219]],["name/24-88",[]],["text/24-88",[]],["component/24-88",[]],["title/24-89",[1382,93.388]],["name/24-89",[]],["text/24-89",[]],["component/24-89",[]],["title/24-90",[63,6.89,142,28.153,1404,62.02,1456,42.457]],["name/24-90",[]],["text/24-90",[]],["component/24-90",[]],["title/24-91",[63,6.89,142,28.153,736,35.598,1513,63.195]],["name/24-91",[]],["text/24-91",[]],["component/24-91",[]],["title/24-92",[2838,102.349]],["name/24-92",[]],["text/24-92",[]],["component/24-92",[]],["title/24-93",[63,4.985,74,9.499,142,20.369,210,9.601,386,15.003,1246,39.609,1452,18.044,2761,34.759,2839,52.074]],["name/24-93",[]],["text/24-93",[]],["component/24-93",[]],["title/24",[385,68.853]],["name/24",[385,0.188]],["text/24",[0,0.312,3,0.283,5,0.28,6,2.605,10,0.737,12,2.05,14,0.916,17,1.102,23,1.774,26,2.12,29,1.876,30,0.149,31,2.133,32,3.203,33,0.153,36,2.427,40,0.181,42,2.195,53,2.411,59,0.29,60,1.769,62,0.524,63,0.225,66,0.144,74,0.428,76,1.97,80,2.159,84,0.735,89,0.139,93,0.41,96,0.454,97,0.133,99,0.86,104,0.618,105,0.145,110,0.167,111,0.158,117,0.918,119,0.92,121,0.142,125,0.145,130,0.164,131,0.406,132,0.139,135,0.589,138,0.29,139,0.324,142,0.073,143,0.777,144,0.153,145,0.307,153,0.147,162,0.41,171,1.178,172,0.144,173,0.283,174,0.848,181,0.977,184,0.462,186,0.659,193,2.868,194,0.781,202,0.346,203,0.859,205,0.721,210,0.068,211,2.728,214,2.133,218,0.167,220,0.86,232,0.338,240,0.462,247,2.405,260,0.618,263,0.149,264,0.161,270,0.158,271,1.705,274,0.307,276,0.287,283,0.134,284,0.161,286,0.717,287,0.167,293,0.167,297,0.264,303,0.793,311,0.837,316,0.187,318,1.205,319,0.145,327,1.44,328,0.598,331,0.161,341,0.573,345,0.167,352,0.287,358,0.558,360,0.147,366,0.726,373,0.856,376,0.789,379,0.164,380,0.47,385,2.584,386,1.375,393,0.629,397,0.161,413,0.694,423,0.164,438,0.58,442,0.151,443,0.717,446,0.142,463,0.253,464,1.662,465,0.153,476,0.346,477,0.179,481,0.419,488,0.63,504,0.127,507,0.977,516,0.716,524,0.643,538,0.161,552,0.43,558,0.156,566,0.171,573,0.432,575,0.294,592,0.158,593,0.153,599,1.318,602,0.167,611,0.176,612,1.135,613,0.29,614,0.294,615,0.156,635,0.287,657,0.133,666,0.244,672,0.717,673,2.771,676,0.194,680,0.176,681,0.187,683,0.29,685,0.151,686,0.298,689,1.421,691,0.147,706,0.145,709,0.873,711,0.171,728,0.205,738,0.171,740,0.127,741,3.12,766,3.196,768,0.164,771,0.269,775,0.158,789,0.176,791,0.136,792,0.643,800,0.89,801,2.069,804,1.828,813,0.717,822,0.161,827,0.171,829,0.307,839,0.368,840,0.205,841,1.828,844,0.171,855,0.618,858,0.156,862,0.688,869,0.194,882,0.489,886,0.302,888,0.176,892,0.274,893,0.643,908,0.318,911,0.171,921,0.607,924,0.318,926,0.899,927,0.156,928,0.58,935,0.181,968,0.187,973,0.153,981,0.205,984,0.176,989,0.324,992,0.951,998,0.176,1002,0.151,1016,1.769,1017,2.132,1027,0.187,1028,0.161,1029,0.527,1030,0.717,1050,0.346,1054,0.158,1073,0.454,1080,0.694,1088,0.989,1093,0.176,1095,0.338,1107,0.181,1117,1.249,1128,0.164,1146,0.156,1150,1.249,1157,3.586,1161,0.205,1168,0.404,1171,3.411,1172,1.464,1173,0.338,1183,3.212,1204,0.977,1207,0.187,1240,0.595,1242,0.187,1243,0.985,1247,0.991,1254,0.181,1255,0.187,1266,1.174,1297,0.5,1298,0.167,1315,0.171,1329,0.158,1344,0.187,1378,0.194,1382,0.368,1404,0.618,1410,0.513,1419,2.647,1428,0.346,1442,0.939,1465,0.161,1482,0.356,1495,0.717,1506,0.176,1513,0.324,1529,0.164,1588,0.181,1601,0.176,1625,0.205,1682,0.121,1690,0.312,1691,0.272,1693,0.302,1760,0.262,1765,0.205,1773,0.176,1774,0.643,1777,0.694,1802,0.338,1812,0.176,1929,0.604,2044,0.187,2057,1.257,2078,0.167,2080,0.985,2087,0.747,2104,0.194,2106,0.283,2109,0.171,2119,0.181,2142,0.384,2145,2.443,2153,0.129,2322,0.164,2325,0.167,2326,0.167,2335,0.368,2358,0.368,2371,0.171,2431,0.194,2501,0.181,2502,0.181,2504,0.338,2505,0.181,2506,0.356,2557,0.368,2558,0.194,2566,0.527,2569,0.404,2580,0.194,2669,0.324,2680,0.384,2690,3.338,2712,0.384,2713,0.568,2716,0.187,2717,0.187,2718,0.187,2719,0.187,2720,0.187,2721,0.187,2722,0.187,2756,0.194,2757,0.194,2758,0.194,2759,0.194,2760,0.194,2761,2.125,2762,0.194,2763,0.194,2764,0.194,2765,0.194,2766,0.194,2767,0.194,2768,0.194,2769,0.194,2770,0.194,2771,0.194,2772,0.194,2773,0.194,2774,0.194,2775,0.194,2776,0.194,2777,0.194,2778,0.194,2779,0.194,2780,0.194,2781,0.194,2783,0.181,2784,0.674,2785,0.674,2786,0.674,2787,0.194,2788,0.404,2789,0.194,2790,0.404,2791,0.404,2792,0.205,2793,1.513,2794,0.404,2795,0.404,2796,0.747,2797,0.205,2798,0.205,2799,0.384,2800,0.205,2801,0.404,2802,0.205,2803,0.205,2804,0.205,2805,0.404,2806,0.404,2807,0.205,2808,0.187,2809,0.205,2810,0.205,2811,0.181,2812,0.181,2814,0.205,2815,0.187,2816,0.187,2817,0.187,2818,0.181,2819,0.205,2821,0.187,2823,0.545,2824,0.545,2825,0.368,2827,0.545,2828,0.368,2830,0.545,2831,0.368,2832,0.545,2833,0.368,2834,0.545,2835,0.205,2838,0.205,2839,0.187,2840,0.22,2841,0.384,2842,0.194,2843,0.194,2844,0.22,2845,0.22,2846,0.22,2847,0.194,2848,0.194,2849,0.205,2850,1.044,2851,0.643,2852,0.643,2853,0.205,2854,0.435,2855,0.22,2856,1.149,2857,1.091,2858,0.786,2859,0.404,2860,0.22,2861,0.22,2862,0.22,2863,0.194,2864,0.22,2865,0.22,2866,0.435,2867,0.22,2868,0.22,2869,0.22,2870,0.643,2871,0.205,2872,0.22,2873,0.205,2874,0.435,2875,0.404,2876,0.22,2877,0.22,2878,0.205,2879,0.435,2880,0.194,2881,0.598,2882,0.205,2883,0.22,2884,0.205,2885,0.187,2886,0.181,2887,0.22,2888,1.418,2889,0.384,2890,0.194,2891,0.205,2892,0.194,2893,1.879,2894,0.205,2895,0.194,2896,0.205,2897,0.22,2898,0.786,2899,0.22,2900,0.22,2901,0.22,2902,0.22,2903,0.22,2904,0.22,2905,0.404,2906,0.435,2907,1.091,2908,1.82,2909,0.384,2910,0.786,2911,0.846,2912,0.846,2913,0.846,2914,0.846,2915,0.846,2916,0.846,2917,0.643,2918,0.22,2919,0.435,2920,0.22,2921,0.22,2922,0.22,2923,0.22,2924,0.22,2925,0.22,2926,0.205,2927,0.181]],["component/24",[29,0.109]],["title/25-1",[1105,74.534]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[2928,97.219]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[73,42.041,74,13.13,257,8.837,2929,78.881]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[63,6.89,74,13.13,78,20.604,2930,78.881]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[63,5.976,74,11.389,78,17.872,1452,21.632,2931,64.992,2932,58.684]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25-6",[63,6.89,74,13.13,257,8.837,2055,69.617]],["name/25-6",[]],["text/25-6",[]],["component/25-6",[]],["title/25-7",[63,6.89,257,8.837,657,25.985,2933,71.975]],["name/25-7",[]],["text/25-7",[]],["component/25-7",[]],["title/25-8",[63,6.89,210,13.27,257,8.837,2934,71.975]],["name/25-8",[]],["text/25-8",[]],["component/25-8",[]],["title/25-9",[675,68.853]],["name/25-9",[]],["text/25-9",[]],["component/25-9",[]],["title/25-10",[2935,102.349]],["name/25-10",[]],["text/25-10",[]],["component/25-10",[]],["title/25-11",[252,61.459,1170,79.862]],["name/25-11",[]],["text/25-11",[]],["component/25-11",[]],["title/25-12",[73,42.041,78,20.604,504,49.112,736,35.598]],["name/25-12",[]],["text/25-12",[]],["component/25-12",[]],["title/25-13",[63,5.604,78,16.761,683,46.131,770,21.933,1452,20.287,1674,50.451,2936,55.035]],["name/25-13",[]],["text/25-13",[]],["component/25-13",[]],["title/25-14",[78,19.141,393,47.511,683,52.682,770,25.048,2936,62.85]],["name/25-14",[]],["text/25-14",[]],["component/25-14",[]],["title/25-15",[74,10.055,78,15.78,683,43.431,770,20.65,2528,55.122,2936,51.813,2937,55.122,2938,60.411]],["name/25-15",[]],["text/25-15",[]],["component/25-15",[]],["title/25-16",[63,3.905,74,7.442,257,5.009,577,27.426,683,32.142,770,15.282,1411,39.458,1452,26.415,2931,42.468,2936,38.346,2939,44.709,2940,48.111]],["name/25-16",[]],["text/25-16",[]],["component/25-16",[]],["title/25-17",[63,5.276,74,10.055,257,6.768,683,43.431,770,20.65,1452,19.1,2936,51.813,2941,60.411]],["name/25-17",[]],["text/25-17",[]],["component/25-17",[]],["title/25-18",[63,4.723,257,6.059,683,38.879,770,18.485,1246,37.534,1452,25.031,2174,45.231,2936,46.383,2942,54.08]],["name/25-18",[]],["text/25-18",[]],["component/25-18",[]],["title/25-19",[74,9.499,210,9.601,577,35.009,771,38.023,1088,26.468,1246,39.609,1367,27.044,1452,18.044,2943,57.071]],["name/25-19",[]],["text/25-19",[]],["component/25-19",[]],["title/25-20",[74,16.305,203,27.583,577,44.953,2944,73.28]],["name/25-20",[]],["text/25-20",[]],["component/25-20",[]],["title/25-21",[203,25.754,210,15.733,2945,68.422,2946,68.422,2947,68.422]],["name/25-21",[]],["text/25-21",[]],["component/25-21",[]],["title/25-22",[203,29.691,1456,42.457,1529,63.195,2948,78.881]],["name/25-22",[]],["text/25-22",[]],["component/25-22",[]],["title/25-23",[74,15.566,203,25.754,462,30.476,2932,58.684,2949,68.422]],["name/25-23",[]],["text/25-23",[]],["component/25-23",[]],["title/25-24",[199,21.213,200,45.593,257,8.837,2950,78.881]],["name/25-24",[]],["text/25-24",[]],["component/25-24",[]],["title/25",[327,67.809,2927,82.179]],["name/25",[2951,0.301]],["text/25",[4,0.354,6,2.085,12,0.382,14,1.294,26,0.677,29,1.948,32,0.282,36,0.361,42,0.298,53,0.758,59,0.386,60,0.391,61,0.372,62,2.28,63,0.299,66,0.377,73,0.552,74,0.721,76,1.933,80,3.979,84,0.298,85,0.8,89,0.704,92,0.439,107,0.49,112,0.537,116,0.43,117,1.626,122,0.814,125,0.736,131,0.365,138,0.386,139,0.43,144,0.402,148,1.255,149,0.449,153,0.386,160,1.496,167,0.474,172,0.377,174,1.108,178,0.377,179,0.439,190,0.415,193,2.163,194,1.315,199,0.144,200,0.31,203,0.39,205,0.337,208,1.124,211,1.266,213,1.141,214,2.802,229,0.46,247,1.16,257,0.116,263,0.754,274,0.408,275,0.43,276,0.381,283,1.266,293,0.439,296,0.422,298,0.396,315,2.742,318,0.327,319,1.375,323,0.381,327,1.984,331,0.422,352,1.066,356,0.391,364,0.415,366,0.402,372,0.396,376,1.871,382,0.415,385,0.361,386,0.811,392,0.945,393,3.46,395,1.255,398,0.765,401,0.391,408,0.377,411,0.46,417,0.449,442,0.396,447,0.43,451,0.745,458,0.474,462,0.862,463,0.337,464,0.754,465,1.754,474,0.814,481,0.377,504,0.334,507,0.396,516,0.396,528,1.449,538,0.814,539,0.474,540,0.474,544,0.415,549,0.449,558,0.408,560,0.415,562,1.496,570,0.396,571,0.422,572,0.83,573,1.063,575,3.153,577,2.1,585,0.368,586,0.46,590,0.46,592,2.106,593,3.028,600,0.43,601,0.537,605,1.877,607,0.51,612,0.408,613,0.386,614,0.391,657,0.638,661,0.474,663,0.439,665,1.325,666,0.325,669,0.46,683,6.89,686,0.396,689,0.334,690,0.8,697,0.51,710,0.326,716,0.8,725,0.866,726,1.042,737,0.677,739,1.605,740,0.332,741,1.398,743,0.402,760,0.83,768,0.43,769,0.49,771,2.055,775,0.415,792,0.847,793,1.287,794,2.225,800,1.576,801,1.075,808,0.422,822,0.422,829,0.408,835,1.203,846,0.408,853,0.474,855,0.422,858,0.408,862,0.477,872,0.49,873,0.43,886,0.402,892,0.365,894,0.439,908,0.422,936,0.866,944,0.439,984,0.46,992,0.745,1016,0.754,1022,0.415,1039,0.49,1040,0.422,1057,0.439,1062,0.439,1080,0.474,1088,0.48,1089,0.439,1095,0.866,1104,0.46,1114,1.203,1115,0.408,1125,0.43,1146,0.408,1182,1.203,1196,0.449,1246,0.719,1247,0.776,1257,1.766,1259,0.945,1266,0.422,1315,0.449,1329,1.16,1348,0.888,1362,0.49,1419,1.18,1465,0.422,1468,1.18,1489,0.49,1527,2.337,1529,1.877,1539,0.537,1598,0.474,1633,0.537,1674,1.842,1708,0.449,1736,0.914,1751,0.51,1801,0.46,1838,0.474,1895,1.426,2055,0.914,2071,0.537,2114,0.537,2120,0.945,2153,1.482,2174,0.449,2319,0.449,2320,0.449,2321,0.439,2322,0.43,2323,0.449,2324,0.449,2325,0.439,2326,0.439,2358,0.49,2417,3.951,2528,0.945,2553,1.426,2587,0.49,2589,0.46,2590,0.46,2591,0.46,2592,0.46,2607,2.225,2653,0.537,2660,0.537,2667,1.287,2741,0.51,2905,0.537,2927,0.474,2928,1.426,2929,0.537,2930,0.537,2931,0.51,2932,6.018,2933,0.49,2934,0.49,2935,0.537,2938,2.343,2939,0.537,2941,0.537,2942,1.036,2943,1.036,2944,0.537,2945,0.537,2946,1.036,2947,1.036,2948,0.537,2949,0.537,2950,0.537,2952,0.578,2953,3.319,2954,0.578,2955,0.578,2956,0.578,2957,1.115,2958,0.578,2959,0.578,2960,0.578,2961,2.343,2962,0.51,2963,0.578,2964,0.537,2965,0.537,2966,0.578,2967,1.115,2968,1.115,2969,0.578,2970,0.578,2971,0.51,2972,0.578,2973,0.578,2974,0.984,2975,0.578,2976,0.537,2977,0.578,2978,0.578,2979,0.537,2980,0.51,2981,0.578,2982,0.537]],["component/25",[29,0.109]],["title/26-1",[366,59.067,2880,74.927,2983,74.927,2984,69.617]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[1105,74.534]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[366,76.64]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[42,43.801,74,13.13,257,8.837,2231,64.502]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26-5",[63,6.89,74,13.13,257,8.837,2985,71.975]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["title/26-6",[257,10.432,2186,82.179]],["name/26-6",[]],["text/26-6",[]],["component/26-6",[]],["title/26-7",[142,33.234,743,69.725]],["name/26-7",[]],["text/26-7",[]],["component/26-7",[]],["title/26-8",[193,53.82,2986,88.448]],["name/26-8",[]],["text/26-8",[]],["component/26-8",[]],["title/26-9",[2987,102.349]],["name/26-9",[]],["text/26-9",[]],["component/26-9",[]],["title/26-10",[42,37.993,73,36.467,74,11.389,78,17.872,657,22.54,2988,64.992]],["name/26-10",[]],["text/26-10",[]],["component/26-10",[]],["title/26-11",[63,6.89,74,13.13,257,8.837,2985,71.975]],["name/26-11",[]],["text/26-11",[]],["component/26-11",[]],["title/26-12",[2989,102.349]],["name/26-12",[]],["text/26-12",[]],["component/26-12",[]],["title/26-13",[63,6.89,74,13.13,257,8.837,2990,78.881]],["name/26-13",[]],["text/26-13",[]],["component/26-13",[]],["title/26-14",[74,11.389,257,7.666,657,22.54,862,31.512,1864,57.225,2991,64.992]],["name/26-14",[]],["text/26-14",[]],["component/26-14",[]],["title/26-15",[63,6.89,74,13.13,257,8.837,2992,78.881]],["name/26-15",[]],["text/26-15",[]],["component/26-15",[]],["title/26-16",[74,13.13,257,8.837,1938,63.195,2993,78.881]],["name/26-16",[]],["text/26-16",[]],["component/26-16",[]],["title/26-17",[63,6.89,74,13.13,257,8.837,2994,78.881]],["name/26-17",[]],["text/26-17",[]],["component/26-17",[]],["title/26-18",[74,11.389,257,7.666,657,22.54,862,31.512,2995,68.422,2996,68.422]],["name/26-18",[]],["text/26-18",[]],["component/26-18",[]],["title/26-19",[42,43.801,74,13.13,203,29.691,2997,78.881]],["name/26-19",[]],["text/26-19",[]],["component/26-19",[]],["title/26-20",[19,59.067,74,13.13,203,29.691,2998,78.881]],["name/26-20",[]],["text/26-20",[]],["component/26-20",[]],["title/26-21",[74,13.13,203,29.691,2999,78.881,3000,71.975]],["name/26-21",[]],["text/26-21",[]],["component/26-21",[]],["title/26-22",[203,35.049,3001,93.114]],["name/26-22",[]],["text/26-22",[]],["component/26-22",[]],["title/26-23",[199,21.213,200,45.593,257,8.837,3002,78.881]],["name/26-23",[]],["text/26-23",[]],["component/26-23",[]],["title/26-24",[199,21.213,200,45.593,257,8.837,3003,78.881]],["name/26-24",[]],["text/26-24",[]],["component/26-24",[]],["title/26-25",[199,21.213,200,45.593,257,8.837,3004,78.881]],["name/26-25",[]],["text/26-25",[]],["component/26-25",[]],["title/26-26",[366,69.725,2983,88.448]],["name/26-26",[]],["text/26-26",[]],["component/26-26",[]],["title/26-27",[3005,102.349]],["name/26-27",[]],["text/26-27",[]],["component/26-27",[]],["title/26-28",[73,32.197,74,14.273,75,50.526,78,15.78,657,19.901,2988,57.384,3006,60.411]],["name/26-28",[]],["text/26-28",[]],["component/26-28",[]],["title/26-29",[63,6.89,74,13.13,257,8.837,3007,78.881]],["name/26-29",[]],["text/26-29",[]],["component/26-29",[]],["title/26-30",[257,10.432,2186,82.179]],["name/26-30",[]],["text/26-30",[]],["component/26-30",[]],["title/26-31",[203,35.049,3008,93.114]],["name/26-31",[]],["text/26-31",[]],["component/26-31",[]],["title/26-32",[3009,102.349]],["name/26-32",[]],["text/26-32",[]],["component/26-32",[]],["title/26-33",[73,42.041,74,13.13,75,65.973,78,20.604]],["name/26-33",[]],["text/26-33",[]],["component/26-33",[]],["title/26-34",[29,25.67,42,31.69,74,9.499,78,14.907,366,42.735,657,18.8,862,26.284,3010,57.071,3011,57.071]],["name/26-34",[]],["text/26-34",[]],["component/26-34",[]],["title/26-35",[63,6.89,78,20.604,736,35.598,3012,74.927]],["name/26-35",[]],["text/26-35",[]],["component/26-35",[]],["title/26-36",[3000,93.388]],["name/26-36",[]],["text/26-36",[]],["component/26-36",[]],["title/26-37",[3013,102.349]],["name/26-37",[]],["text/26-37",[]],["component/26-37",[]],["title/26-38",[73,36.467,74,11.389,78,17.872,657,22.54,862,31.512,3000,62.431]],["name/26-38",[]],["text/26-38",[]],["component/26-38",[]],["title/26-39",[63,6.89,74,13.13,257,8.837,2985,71.975]],["name/26-39",[]],["text/26-39",[]],["component/26-39",[]],["title/26-40",[63,6.89,74,13.13,257,8.837,3014,78.881]],["name/26-40",[]],["text/26-40",[]],["component/26-40",[]],["title/26-41",[3015,102.349]],["name/26-41",[]],["text/26-41",[]],["component/26-41",[]],["title/26-42",[42,43.801,63,6.89,74,13.13,142,28.153]],["name/26-42",[]],["text/26-42",[]],["component/26-42",[]],["title/26-43",[3016,102.349]],["name/26-43",[]],["text/26-43",[]],["component/26-43",[]],["title/26-44",[73,36.467,74,15.566,75,57.225,78,17.872,3017,68.422]],["name/26-44",[]],["text/26-44",[]],["component/26-44",[]],["title/26-45",[42,43.801,63,6.89,74,13.13,78,20.604]],["name/26-45",[]],["text/26-45",[]],["component/26-45",[]],["title/26-46",[74,13.13,78,20.604,1864,65.973,3018,78.881]],["name/26-46",[]],["text/26-46",[]],["component/26-46",[]],["title/26-47",[42,40.691,74,12.197,358,52.04,1088,33.985,1367,34.726]],["name/26-47",[]],["text/26-47",[]],["component/26-47",[]],["title/26-48",[42,43.801,74,13.13,203,29.691,3019,78.881]],["name/26-48",[]],["text/26-48",[]],["component/26-48",[]],["title/26-49",[711,77.877,3020,82.179]],["name/26-49",[]],["text/26-49",[]],["component/26-49",[]],["title/26-50",[3020,90.329]],["name/26-50",[]],["text/26-50",[]],["component/26-50",[]],["title/26-51",[42,35.631,63,5.604,74,14.892,257,7.189,444,45.569,3020,56.632]],["name/26-51",[]],["text/26-51",[]],["component/26-51",[]],["title/26-52",[42,31.69,63,4.985,74,13.704,210,9.601,257,6.394,386,15.003,444,40.529,3020,50.368]],["name/26-52",[]],["text/26-52",[]],["component/26-52",[]],["title/26-53",[42,31.69,63,4.985,74,13.704,199,15.348,257,6.394,444,40.529,2118,37.329,3021,54.21]],["name/26-53",[]],["text/26-53",[]],["component/26-53",[]],["title/26-54",[42,28.535,63,4.488,74,12.691,199,13.819,210,8.645,257,5.757,386,13.509,444,36.493,2118,33.612,3021,48.812]],["name/26-54",[]],["text/26-54",[]],["component/26-54",[]],["title/26-55",[42,28.535,63,4.488,74,15.131,83,34.237,199,13.819,257,5.757,2118,33.612,3022,48.812,3023,45.352]],["name/26-55",[]],["text/26-55",[]],["component/26-55",[]],["title/26-56",[42,31.69,63,4.985,74,13.704,199,15.348,257,6.394,2118,37.329,3022,54.21,3023,50.368]],["name/26-56",[]],["text/26-56",[]],["component/26-56",[]],["title/26-57",[42,31.69,63,4.985,74,13.704,257,6.394,444,40.529,657,18.8,3024,54.21,3025,47.732]],["name/26-57",[]],["text/26-57",[]],["component/26-57",[]],["title/26-58",[42,28.535,63,4.488,74,12.691,210,8.645,257,5.757,386,13.509,444,36.493,657,16.928,3024,48.812,3025,42.978]],["name/26-58",[]],["text/26-58",[]],["component/26-58",[]],["title/26-59",[42,28.535,63,4.488,74,12.691,199,13.819,257,5.757,444,36.493,657,16.928,2118,33.612,3025,42.978,3026,48.812]],["name/26-59",[]],["text/26-59",[]],["component/26-59",[]],["title/26-60",[42,25.95,63,4.082,74,11.818,199,12.568,210,7.862,257,5.236,386,12.286,444,33.188,657,15.395,2118,30.567,3025,39.086,3026,44.391]],["name/26-60",[]],["text/26-60",[]],["component/26-60",[]],["title/26-61",[42,25.95,63,4.082,74,14.292,83,31.136,199,12.568,257,5.236,657,15.395,2118,30.567,3023,41.245,3025,39.086,3027,44.391]],["name/26-61",[]],["text/26-61",[]],["component/26-61",[]],["title/26-62",[42,28.535,63,4.488,74,12.691,199,13.819,257,5.757,657,16.928,2118,33.612,3023,45.352,3025,42.978,3027,48.812]],["name/26-62",[]],["text/26-62",[]],["component/26-62",[]],["title/26-63",[63,5.976,74,11.389,257,7.666,444,48.59,657,22.54,3028,68.422]],["name/26-63",[]],["text/26-63",[]],["component/26-63",[]],["title/26-64",[203,35.049,3029,93.114]],["name/26-64",[]],["text/26-64",[]],["component/26-64",[]],["title/26-65",[675,68.853]],["name/26-65",[]],["text/26-65",[]],["component/26-65",[]],["title/26-66",[1263,102.349]],["name/26-66",[]],["text/26-66",[]],["component/26-66",[]],["title/26-67",[93,63.931,183,58.884]],["name/26-67",[]],["text/26-67",[]],["component/26-67",[]],["title/26-68",[183,49.882,484,41.443,737,51.594,3030,78.881]],["name/26-68",[]],["text/26-68",[]],["component/26-68",[]],["title/26-69",[183,58.884,3031,93.114]],["name/26-69",[]],["text/26-69",[]],["component/26-69",[]],["title/26-70",[257,10.432,3032,93.114]],["name/26-70",[]],["text/26-70",[]],["component/26-70",[]],["title/26-71",[257,10.432,3033,93.114]],["name/26-71",[]],["text/26-71",[]],["component/26-71",[]],["title/26-72",[63,6.89,257,8.837,484,41.443,3034,78.881]],["name/26-72",[]],["text/26-72",[]],["component/26-72",[]],["title/26-73",[63,6.89,257,8.837,1452,24.939,3035,78.881]],["name/26-73",[]],["text/26-73",[]],["component/26-73",[]],["title/26-74",[93,54.159,484,41.443,737,51.594,1088,36.583]],["name/26-74",[]],["text/26-74",[]],["component/26-74",[]],["title/26-75",[203,35.049,3036,93.114]],["name/26-75",[]],["text/26-75",[]],["component/26-75",[]],["title/26-76",[203,35.049,3037,93.114]],["name/26-76",[]],["text/26-76",[]],["component/26-76",[]],["title/26-77",[3038,102.349]],["name/26-77",[]],["text/26-77",[]],["component/26-77",[]],["title/26-78",[183,58.884,3039,93.114]],["name/26-78",[]],["text/26-78",[]],["component/26-78",[]],["title/26-79",[183,58.884,3040,93.114]],["name/26-79",[]],["text/26-79",[]],["component/26-79",[]],["title/26-80",[63,6.89,142,28.153,199,21.213,2808,71.975]],["name/26-80",[]],["text/26-80",[]],["component/26-80",[]],["title/26-81",[74,11.389,78,17.872,657,22.54,862,31.512,1864,57.225,2991,64.992]],["name/26-81",[]],["text/26-81",[]],["component/26-81",[]],["title/26-82",[257,10.432,3041,93.114]],["name/26-82",[]],["text/26-82",[]],["component/26-82",[]],["title/26-83",[257,10.432,3042,93.114]],["name/26-83",[]],["text/26-83",[]],["component/26-83",[]],["title/26-84",[74,13.13,257,8.837,1864,65.973,3043,78.881]],["name/26-84",[]],["text/26-84",[]],["component/26-84",[]],["title/26-85",[63,6.89,78,20.604,736,35.598,3012,74.927]],["name/26-85",[]],["text/26-85",[]],["component/26-85",[]],["title/26-86",[203,35.049,3044,93.114]],["name/26-86",[]],["text/26-86",[]],["component/26-86",[]],["title/26-87",[199,21.213,203,29.691,1682,46.754,3045,78.881]],["name/26-87",[]],["text/26-87",[]],["component/26-87",[]],["title/26",[366,76.64]],["name/26",[366,0.21]],["text/26",[0,0.126,1,0.716,2,0.093,3,0.226,4,0.611,5,0.438,6,3.975,12,0.287,14,0.264,17,0.12,19,2.335,21,0.13,23,0.791,26,1.055,29,3.271,36,0.11,37,0.133,38,0.14,40,0.144,42,4.499,48,0.116,53,0.61,54,0.149,55,0.155,58,0.113,59,0.117,61,0.224,62,0.712,63,0.245,69,0.443,73,1.192,74,0.809,75,0.527,76,4.267,78,0.084,80,3.567,82,0.14,83,2.705,84,0.672,85,0.487,87,0.276,88,1.452,89,0.428,90,0.284,92,1.319,93,3.388,96,0.124,97,0.209,99,0.241,100,0.516,102,0.149,104,0.253,105,0.339,108,0.263,110,0.133,113,0.133,117,1.028,121,0.438,122,0.376,125,0.116,131,0.428,132,0.53,134,0.332,135,0.358,138,0.344,142,0.278,145,0.124,148,0.136,152,0.163,153,0.453,155,0.276,159,0.666,160,0.249,161,0.124,162,0.112,163,0.241,171,0.759,172,0.443,173,0.226,174,1.191,178,0.849,179,0.133,181,1.38,183,1.02,184,0.126,186,0.219,193,1.556,199,0.129,200,0.276,203,0.507,205,0.489,206,0.556,208,0.801,213,0.245,214,1.208,216,0.438,218,0.133,220,0.241,227,0.149,228,0.155,245,0.479,249,0.383,252,0.706,254,0.245,256,0.14,257,0.104,259,0.133,260,0.613,261,0.258,263,0.235,264,0.128,271,1.132,273,0.128,274,0.593,275,0.13,276,1.588,283,1.055,287,0.133,293,0.263,296,0.496,298,0.353,300,0.126,301,0.41,303,0.263,305,0.13,306,0.479,310,0.126,311,0.119,314,0.14,315,0.258,319,0.339,323,0.229,326,0.14,327,0.459,328,0.479,329,0.14,330,0.128,334,0.13,335,0.556,345,0.133,352,0.116,355,0.149,356,0.981,357,0.155,358,4.671,360,1.16,361,0.613,364,0.249,366,5.63,369,0.383,372,0.238,376,0.535,377,0.144,379,0.13,381,0.083,382,0.249,384,0.801,385,0.997,386,0.649,390,0.144,391,0.383,393,1.13,394,0.613,397,0.728,398,0.12,401,0.348,402,0.105,408,0.226,411,0.14,414,0.245,415,0.133,418,0.505,420,0.294,422,0.122,427,0.136,429,0.245,438,0.576,441,0.136,442,0.12,444,1.238,445,0.136,446,0.438,449,0.136,451,0.232,458,0.144,460,0.358,462,0.213,463,0.396,464,1.362,465,0.241,467,0.453,481,0.114,504,0.101,507,0.465,511,0.593,517,0.625,528,0.122,538,0.128,540,0.284,541,0.13,544,0.249,546,0.136,548,0.133,552,0.232,560,0.126,562,0.249,564,0.144,565,0.136,566,0.269,570,0.12,571,0.376,575,0.119,576,0.221,578,0.669,581,0.13,585,0.221,590,0.541,593,0.122,599,0.215,600,0.13,605,0.742,611,0.541,617,0.459,624,0.603,628,0.284,635,0.759,640,0.541,657,0.398,666,0.289,675,0.11,679,0.155,686,0.12,690,0.249,691,0.453,701,0.116,706,2.214,707,0.119,709,1.7,711,0.527,712,0.12,715,0.527,716,0.603,726,0.224,727,0.126,736,0.285,737,1.223,740,0.101,741,2.263,743,1.109,751,0.235,759,0.516,760,0.13,766,0.103,775,0.935,791,0.215,800,0.814,801,0.35,807,0.527,815,0.14,820,0.294,821,0.541,824,0.163,827,0.269,829,0.245,835,1.079,844,0.269,845,0.149,846,0.124,850,0.149,851,0.155,853,0.144,855,0.253,857,0.144,858,1.421,862,1.03,865,0.376,870,0.422,873,0.505,874,0.155,890,0.12,892,0.325,893,0.133,902,0.119,908,0.613,913,0.14,925,1.101,926,0.428,927,0.813,929,0.422,970,0.4,988,0.284,989,0.13,992,0.769,1016,0.119,1022,0.487,1025,0.284,1031,0.149,1040,0.253,1041,0.14,1062,0.263,1078,0.625,1079,0.133,1083,0.294,1088,0.808,1089,0.391,1091,0.136,1102,0.149,1104,0.669,1105,0.119,1113,0.741,1115,0.479,1125,0.13,1127,0.163,1146,0.124,1167,0.136,1182,0.258,1196,0.136,1197,0.136,1225,0.149,1246,0.113,1247,1.109,1254,0.284,1259,0.575,1264,0.163,1266,0.496,1270,0.41,1299,0.155,1305,0.14,1312,0.284,1315,0.269,1336,0.163,1337,0.144,1345,0.155,1351,0.263,1354,0.276,1358,0.88,1359,0.149,1395,0.155,1419,0.128,1465,0.253,1467,0.163,1473,0.4,1493,0.163,1508,0.163,1520,0.144,1527,0.541,1532,0.149,1533,0.149,1540,0.322,1580,0.516,1588,0.144,1607,0.454,1655,0.144,1657,0.454,1660,0.133,1663,0.155,1667,0.163,1668,0.322,1670,0.14,1674,0.128,1682,1.724,1708,0.136,1717,0.149,1742,0.652,1828,0.149,1856,0.149,1860,0.155,1864,0.775,1896,0.284,1909,0.294,1910,0.742,1911,0.284,1912,0.294,1913,0.284,1914,0.294,1915,0.294,1938,0.13,2030,0.284,2046,0.306,2048,0.163,2053,0.306,2064,0.155,2078,0.133,2095,0.155,2101,0.144,2109,0.136,2118,1.223,2119,0.144,2123,0.155,2154,0.163,2186,0.944,2231,0.638,2361,0.712,2552,0.631,2567,0.155,2577,0.163,2587,0.149,2599,0.294,2647,0.163,2666,0.163,2667,0.41,2673,0.294,2687,0.163,2734,0.163,2808,0.294,2871,0.163,2878,0.631,2880,1.533,2881,0.322,2882,0.163,2909,0.454,2927,0.422,2932,0.276,2937,0.845,2961,0.926,2971,0.306,2980,0.306,2983,1.149,2984,0.144,2985,0.976,2986,1.894,2987,0.631,2988,0.741,2989,0.163,2990,0.163,2991,1.279,2992,0.163,2993,0.163,2994,0.163,2995,0.163,2996,0.163,2997,0.163,2998,0.163,2999,0.163,3000,3.625,3001,0.163,3002,0.163,3003,0.163,3004,0.163,3005,0.78,3006,0.322,3007,0.163,3008,0.163,3009,0.78,3010,0.631,3011,0.322,3012,0.306,3013,0.78,3014,0.163,3015,0.163,3016,0.631,3017,0.163,3018,0.478,3019,0.163,3020,3.016,3021,0.599,3022,0.306,3023,0.144,3024,0.599,3025,1.239,3026,0.599,3027,0.306,3028,0.478,3029,0.163,3030,1.87,3031,0.78,3032,0.163,3033,0.478,3034,0.163,3035,0.163,3036,0.163,3037,0.163,3038,0.631,3039,0.163,3040,0.478,3041,0.163,3042,0.163,3043,0.78,3044,0.163,3045,0.163,3046,0.175,3047,0.322,3048,0.679,3049,1.149,3050,0.175,3051,0.175,3052,0.175,3053,0.175,3054,0.175,3055,0.175,3056,0.347,3057,0.175,3058,0.347,3059,0.163,3060,0.175,3061,0.163,3062,0.175,3063,0.175,3064,0.347,3065,0.175,3066,0.679,3067,0.347,3068,0.347,3069,0.347,3070,0.322,3071,0.175,3072,0.175,3073,0.175,3074,0.175,3075,0.175,3076,0.175,3077,0.163,3078,0.514,3079,0.175,3080,0.175,3081,0.175,3082,0.175,3083,0.175,3084,0.175,3085,0.175,3086,0.175,3087,0.175,3088,0.175,3089,0.175,3090,0.175,3091,0.347,3092,0.175,3093,0.175,3094,0.163,3095,0.175,3096,0.347,3097,0.175,3098,0.175,3099,0.175,3100,0.347,3101,0.175,3102,0.163,3103,0.175,3104,0.175,3105,0.175,3106,0.155,3107,0.175,3108,0.347,3109,0.175,3110,0.454,3111,0.679,3112,0.631,3113,0.514,3114,0.631,3115,0.347,3116,0.347,3117,0.163,3118,0.175,3119,0.175,3120,0.175,3121,0.175,3122,0.175,3123,0.175,3124,0.514,3125,0.175,3126,0.175,3127,0.175,3128,0.163,3129,0.155,3130,0.175,3131,0.175,3132,0.163,3133,0.175,3134,0.175,3135,0.175,3136,0.175,3137,0.163,3138,0.175]],["component/26",[29,0.109]],["title/27-1",[1569,85.601]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[1569,85.601]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[63,4.723,210,15.756,257,6.059,710,17.033,1246,37.534,1452,17.098,1781,35.373,3139,54.08]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[63,4.723,210,15.756,257,6.059,710,17.033,1246,37.534,1452,17.098,1781,35.373,3140,54.08]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[63,4.723,210,15.756,257,6.059,710,17.033,1246,37.534,1452,17.098,1781,35.373,3141,54.08]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[63,4.723,210,15.756,257,6.059,710,17.033,1246,37.534,1452,17.098,1781,35.373,3142,54.08]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[63,4.723,210,15.756,257,6.059,710,17.033,1246,37.534,1452,17.098,1781,35.373,3143,54.08]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27-8",[63,4.985,210,16.247,257,6.394,841,48.948,1452,18.044,1781,37.329,3144,54.21]],["name/27-8",[]],["text/27-8",[]],["component/27-8",[]],["title/27-9",[63,5.604,210,17.328,257,7.189,1781,41.971,2657,50.451]],["name/27-9",[]],["text/27-9",[]],["component/27-9",[]],["title/27-10",[63,5.604,210,17.328,257,7.189,1781,41.971,3145,60.952]],["name/27-10",[]],["text/27-10",[]],["component/27-10",[]],["title/27-11",[63,5.604,210,17.328,257,7.189,1777,56.632,1781,41.971]],["name/27-11",[]],["text/27-11",[]],["component/27-11",[]],["title/27-12",[63,5.604,210,17.328,257,7.189,1781,41.971,3146,64.167]],["name/27-12",[]],["text/27-12",[]],["component/27-12",[]],["title/27-13",[63,4.488,210,16.92,257,5.757,710,16.185,1785,46.888,2669,41.169,3147,48.812,3148,48.812]],["name/27-13",[]],["text/27-13",[]],["component/27-13",[]],["title/27-14",[63,4.082,210,16.134,257,5.236,1195,36.111,1785,42.642,2365,31.755,2669,37.441,3147,44.391,3148,44.391,3149,38.215]],["name/27-14",[]],["text/27-14",[]],["component/27-14",[]],["title/27-15",[63,5.604,210,17.328,257,7.189,660,49.582,3150,64.167]],["name/27-15",[]],["text/27-15",[]],["component/27-15",[]],["title/27-16",[63,5.604,210,17.328,257,7.189,3151,64.167,3152,64.167]],["name/27-16",[]],["text/27-16",[]],["component/27-16",[]],["title/27-17",[63,4.723,210,17.342,257,6.059,659,40.496,1781,35.373,3153,51.37,3154,47.729]],["name/27-17",[]],["text/27-17",[]],["component/27-17",[]],["title/27-18",[63,4.082,210,16.134,257,5.236,659,34.995,710,14.719,1246,32.435,1452,14.775,1781,30.567,3154,41.245,3155,44.391]],["name/27-18",[]],["text/27-18",[]],["component/27-18",[]],["title/27-19",[63,4.723,257,6.059,657,33.959,659,40.496,1781,35.373,3153,51.37,3154,47.729]],["name/27-19",[]],["text/27-19",[]],["component/27-19",[]],["title/27-20",[63,4.082,257,5.236,657,31.593,659,34.995,710,14.719,1246,32.435,1452,14.775,1781,30.567,3154,41.245,3155,44.391]],["name/27-20",[]],["text/27-20",[]],["component/27-20",[]],["title/27-21",[63,6.4,210,16.48,257,8.21,3156,69.607]],["name/27-21",[]],["text/27-21",[]],["component/27-21",[]],["title/27-22",[63,5.276,210,14.426,257,6.768,1195,46.68,2365,41.049,3149,49.4,3156,57.384]],["name/27-22",[]],["text/27-22",[]],["component/27-22",[]],["title/27-23",[63,5.976,210,15.733,257,7.666,386,17.987,3157,64.992]],["name/27-23",[]],["text/27-23",[]],["component/27-23",[]],["title/27-24",[63,4.985,210,13.85,257,6.394,386,15.003,1195,44.098,2365,38.779,3149,46.668,3157,54.21]],["name/27-24",[]],["text/27-24",[]],["component/27-24",[]],["title/27-25",[63,5.976,210,15.733,257,7.666,386,17.987,3158,64.992]],["name/27-25",[]],["text/27-25",[]],["component/27-25",[]],["title/27-26",[63,4.985,210,13.85,257,6.394,386,15.003,1195,44.098,2365,38.779,3149,46.668,3158,54.21]],["name/27-26",[]],["text/27-26",[]],["component/27-26",[]],["title/27-27",[63,5.976,210,15.733,257,7.666,386,17.987,3159,64.992]],["name/27-27",[]],["text/27-27",[]],["component/27-27",[]],["title/27-28",[63,4.985,210,13.85,257,6.394,386,15.003,1195,44.098,2365,38.779,3149,46.668,3159,54.21]],["name/27-28",[]],["text/27-28",[]],["component/27-28",[]],["title/27-29",[63,5.604,257,7.189,1195,49.582,1452,20.287,2365,43.602,3149,52.471,3160,64.167]],["name/27-29",[]],["text/27-29",[]],["component/27-29",[]],["title/27-30",[1778,97.219]],["name/27-30",[]],["text/27-30",[]],["component/27-30",[]],["title/27-31",[63,4.985,257,6.394,841,48.948,1452,18.044,1779,54.528,1781,37.329,3144,54.21]],["name/27-31",[]],["text/27-31",[]],["component/27-31",[]],["title/27-32",[63,5.604,257,7.189,1779,58.156,1781,41.971,2657,50.451]],["name/27-32",[]],["text/27-32",[]],["component/27-32",[]],["title/27-33",[63,5.604,257,7.189,1779,58.156,1781,41.971,3145,60.952]],["name/27-33",[]],["text/27-33",[]],["component/27-33",[]],["title/27-34",[63,5.604,257,7.189,1777,56.632,1779,58.156,1781,41.971]],["name/27-34",[]],["text/27-34",[]],["component/27-34",[]],["title/27-35",[63,5.976,210,11.51,257,7.666,660,52.869,1779,38.631,3161,68.422]],["name/27-35",[]],["text/27-35",[]],["component/27-35",[]],["title/27-36",[1798,97.219]],["name/27-36",[]],["text/27-36",[]],["component/27-36",[]],["title/27-37",[63,5.976,210,11.51,257,7.666,386,17.987,3162,68.422,3163,68.422]],["name/27-37",[]],["text/27-37",[]],["component/27-37",[]],["title/27-38",[63,5.976,210,11.51,257,7.666,386,17.987,3164,68.422,3165,68.422]],["name/27-38",[]],["text/27-38",[]],["component/27-38",[]],["title/27-39",[63,5.976,210,11.51,257,7.666,386,17.987,3166,68.422,3167,68.422]],["name/27-39",[]],["text/27-39",[]],["component/27-39",[]],["title/27-40",[63,5.976,210,11.51,257,7.666,386,17.987,3168,68.422,3169,55.95]],["name/27-40",[]],["text/27-40",[]],["component/27-40",[]],["title/27-41",[63,5.976,210,11.51,257,7.666,386,17.987,3170,68.422,3171,68.422]],["name/27-41",[]],["text/27-41",[]],["component/27-41",[]],["title/27-42",[63,5.976,210,11.51,257,7.666,386,17.987,3172,68.422,3173,49.19]],["name/27-42",[]],["text/27-42",[]],["component/27-42",[]],["title/27-43",[63,5.976,210,11.51,257,7.666,386,17.987,3174,68.422,3175,68.422]],["name/27-43",[]],["text/27-43",[]],["component/27-43",[]],["title/27-44",[63,5.976,210,11.51,257,7.666,386,17.987,2161,64.992,3176,68.422]],["name/27-44",[]],["text/27-44",[]],["component/27-44",[]],["title/27-45",[63,5.976,210,11.51,257,7.666,386,17.987,3177,68.422,3178,68.422]],["name/27-45",[]],["text/27-45",[]],["component/27-45",[]],["title/27-46",[63,5.976,210,11.51,257,7.666,386,17.987,3179,68.422,3180,68.422]],["name/27-46",[]],["text/27-46",[]],["component/27-46",[]],["title/27-47",[63,5.976,210,11.51,257,7.666,386,17.987,3181,68.422,3182,68.422]],["name/27-47",[]],["text/27-47",[]],["component/27-47",[]],["title/27-48",[63,5.976,210,11.51,257,7.666,386,17.987,3183,68.422,3184,55.95]],["name/27-48",[]],["text/27-48",[]],["component/27-48",[]],["title/27-49",[63,5.976,210,11.51,257,7.666,386,17.987,3185,68.422,3186,68.422]],["name/27-49",[]],["text/27-49",[]],["component/27-49",[]],["title/27-50",[63,5.976,210,11.51,257,7.666,386,17.987,3187,68.422,3188,68.422]],["name/27-50",[]],["text/27-50",[]],["component/27-50",[]],["title/27-51",[63,5.976,210,11.51,257,7.666,386,17.987,3189,68.422,3190,68.422]],["name/27-51",[]],["text/27-51",[]],["component/27-51",[]],["title/27-52",[63,5.976,210,11.51,257,7.666,386,17.987,2643,57.225,3191,68.422]],["name/27-52",[]],["text/27-52",[]],["component/27-52",[]],["title/27-53",[63,5.976,210,11.51,257,7.666,386,17.987,3192,68.422,3193,68.422]],["name/27-53",[]],["text/27-53",[]],["component/27-53",[]],["title/27-54",[63,5.976,210,11.51,257,7.666,386,17.987,3194,68.422,3195,68.422]],["name/27-54",[]],["text/27-54",[]],["component/27-54",[]],["title/27-55",[63,5.976,210,11.51,257,7.666,386,17.987,3196,68.422,3197,68.422]],["name/27-55",[]],["text/27-55",[]],["component/27-55",[]],["title/27-56",[63,5.976,210,11.51,257,7.666,386,17.987,3198,68.422,3199,51.235]],["name/27-56",[]],["text/27-56",[]],["component/27-56",[]],["title/27-57",[63,5.976,210,11.51,257,7.666,386,17.987,3200,68.422,3201,68.422]],["name/27-57",[]],["text/27-57",[]],["component/27-57",[]],["title/27-58",[63,5.976,210,11.51,257,7.666,386,17.987,3202,68.422,3203,68.422]],["name/27-58",[]],["text/27-58",[]],["component/27-58",[]],["title/27-59",[63,5.976,210,11.51,257,7.666,386,17.987,3204,68.422,3205,68.422]],["name/27-59",[]],["text/27-59",[]],["component/27-59",[]],["title/27-60",[63,5.976,210,11.51,257,7.666,386,17.987,484,35.948,3206,68.422]],["name/27-60",[]],["text/27-60",[]],["component/27-60",[]],["title/27-61",[63,5.976,210,11.51,257,7.666,386,17.987,3207,68.422,3208,68.422]],["name/27-61",[]],["text/27-61",[]],["component/27-61",[]],["title/27-62",[63,5.976,210,11.51,257,7.666,386,17.987,1456,36.827,3209,68.422]],["name/27-62",[]],["text/27-62",[]],["component/27-62",[]],["title/27-63",[63,5.976,210,11.51,257,7.666,386,17.987,3210,68.422,3211,68.422]],["name/27-63",[]],["text/27-63",[]],["component/27-63",[]],["title/27-64",[63,5.976,210,11.51,257,7.666,386,17.987,1968,35.139,3212,68.422]],["name/27-64",[]],["text/27-64",[]],["component/27-64",[]],["title/27-65",[63,5.976,210,11.51,257,7.666,386,17.987,3213,68.422,3214,64.992]],["name/27-65",[]],["text/27-65",[]],["component/27-65",[]],["title/27-66",[63,5.976,210,11.51,257,7.666,386,17.987,3215,68.422,3216,68.422]],["name/27-66",[]],["text/27-66",[]],["component/27-66",[]],["title/27-67",[63,5.976,210,11.51,257,7.666,386,17.987,1154,23.943,3217,68.422]],["name/27-67",[]],["text/27-67",[]],["component/27-67",[]],["title/27-68",[63,5.976,210,11.51,257,7.666,386,17.987,1779,38.631,3218,68.422]],["name/27-68",[]],["text/27-68",[]],["component/27-68",[]],["title/27-69",[63,5.604,257,7.189,386,16.869,1779,36.229,3219,64.167,3220,64.167,3221,39.652]],["name/27-69",[]],["text/27-69",[]],["component/27-69",[]],["title/27-70",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3222,64.167,3223,64.167]],["name/27-70",[]],["text/27-70",[]],["component/27-70",[]],["title/27-71",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3224,64.167,3225,64.167]],["name/27-71",[]],["text/27-71",[]],["component/27-71",[]],["title/27-72",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3226,64.167,3227,64.167]],["name/27-72",[]],["text/27-72",[]],["component/27-72",[]],["title/27-73",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3228,64.167,3229,64.167]],["name/27-73",[]],["text/27-73",[]],["component/27-73",[]],["title/27-74",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3230,64.167,3231,64.167]],["name/27-74",[]],["text/27-74",[]],["component/27-74",[]],["title/27-75",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3232,64.167,3233,64.167]],["name/27-75",[]],["text/27-75",[]],["component/27-75",[]],["title/27-76",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3234,64.167,3235,64.167]],["name/27-76",[]],["text/27-76",[]],["component/27-76",[]],["title/27-77",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3236,64.167,3237,64.167]],["name/27-77",[]],["text/27-77",[]],["component/27-77",[]],["title/27-78",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3238,64.167,3239,64.167]],["name/27-78",[]],["text/27-78",[]],["component/27-78",[]],["title/27-79",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3240,64.167,3241,64.167]],["name/27-79",[]],["text/27-79",[]],["component/27-79",[]],["title/27-80",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3242,64.167,3243,64.167]],["name/27-80",[]],["text/27-80",[]],["component/27-80",[]],["title/27-81",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3244,64.167,3245,64.167]],["name/27-81",[]],["text/27-81",[]],["component/27-81",[]],["title/27-82",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3246,64.167,3247,64.167]],["name/27-82",[]],["text/27-82",[]],["component/27-82",[]],["title/27-83",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3248,64.167,3249,64.167]],["name/27-83",[]],["text/27-83",[]],["component/27-83",[]],["title/27-84",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3250,64.167,3251,64.167]],["name/27-84",[]],["text/27-84",[]],["component/27-84",[]],["title/27-85",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3252,64.167,3253,64.167]],["name/27-85",[]],["text/27-85",[]],["component/27-85",[]],["title/27-86",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3254,64.167,3255,64.167]],["name/27-86",[]],["text/27-86",[]],["component/27-86",[]],["title/27-87",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3256,64.167,3257,64.167]],["name/27-87",[]],["text/27-87",[]],["component/27-87",[]],["title/27-88",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3258,64.167,3259,64.167]],["name/27-88",[]],["text/27-88",[]],["component/27-88",[]],["title/27-89",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3260,64.167,3261,64.167]],["name/27-89",[]],["text/27-89",[]],["component/27-89",[]],["title/27-90",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3262,64.167,3263,64.167]],["name/27-90",[]],["text/27-90",[]],["component/27-90",[]],["title/27-91",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3264,64.167,3265,64.167]],["name/27-91",[]],["text/27-91",[]],["component/27-91",[]],["title/27-92",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3266,64.167,3267,64.167]],["name/27-92",[]],["text/27-92",[]],["component/27-92",[]],["title/27-93",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3268,64.167,3269,64.167]],["name/27-93",[]],["text/27-93",[]],["component/27-93",[]],["title/27-94",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3270,64.167,3271,64.167]],["name/27-94",[]],["text/27-94",[]],["component/27-94",[]],["title/27-95",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3272,64.167,3273,64.167]],["name/27-95",[]],["text/27-95",[]],["component/27-95",[]],["title/27-96",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3274,64.167,3275,64.167]],["name/27-96",[]],["text/27-96",[]],["component/27-96",[]],["title/27-97",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3276,64.167,3277,64.167]],["name/27-97",[]],["text/27-97",[]],["component/27-97",[]],["title/27-98",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3278,64.167,3279,64.167]],["name/27-98",[]],["text/27-98",[]],["component/27-98",[]],["title/27-99",[63,5.604,257,7.189,386,16.869,1779,36.229,3221,39.652,3280,64.167,3281,64.167]],["name/27-99",[]],["text/27-99",[]],["component/27-99",[]],["title/27-100",[63,5.976,210,11.51,257,7.666,386,17.987,1779,38.631,3282,68.422]],["name/27-100",[]],["text/27-100",[]],["component/27-100",[]],["title/27-101",[63,5.604,210,10.795,257,7.189,1452,20.287,1781,41.971,3283,64.167,3284,69.05]],["name/27-101",[]],["text/27-101",[]],["component/27-101",[]],["title/27-102",[203,25.754,210,11.51,386,17.987,1154,23.943,1746,60.386,3285,68.422]],["name/27-102",[]],["text/27-102",[]],["component/27-102",[]],["title/27-103",[203,29.691,386,20.737,1779,44.536,3286,78.881]],["name/27-103",[]],["text/27-103",[]],["component/27-103",[]],["title/27-104",[203,25.754,386,17.987,1154,23.943,1746,60.386,1779,38.631,3287,68.422]],["name/27-104",[]],["text/27-104",[]],["component/27-104",[]],["title/27-105",[203,29.691,210,13.27,386,20.737,3288,78.881]],["name/27-105",[]],["text/27-105",[]],["component/27-105",[]],["title/27-106",[1671,102.349]],["name/27-106",[]],["text/27-106",[]],["component/27-106",[]],["title/27-107",[591,90.329]],["name/27-107",[]],["text/27-107",[]],["component/27-107",[]],["title/27-108",[63,4.488,74,8.553,199,20.504,257,5.757,573,28.231,657,16.928,666,31.079,2365,34.917,3289,46.888,3290,48.812]],["name/27-108",[]],["text/27-108",[]],["component/27-108",[]],["title/27-109",[63,5.276,74,10.055,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,1468,47.498]],["name/27-109",[]],["text/27-109",[]],["component/27-109",[]],["title/27-110",[63,4.082,74,7.779,199,25.79,257,5.236,666,28.264,1691,31.439,2365,31.755,2984,41.245,3289,42.642,3290,44.391]],["name/27-110",[]],["text/27-110",[]],["component/27-110",[]],["title/27-111",[63,4.723,74,9.002,199,25.186,257,6.059,666,32.708,1468,42.52,1691,36.381,2984,47.729]],["name/27-111",[]],["text/27-111",[]],["component/27-111",[]],["title/27-112",[63,3.743,74,7.133,199,24.645,257,4.801,666,25.917,1154,14.995,1690,33.112,1691,28.828,1693,32.088,2365,29.118,3289,39.101,3290,40.705]],["name/27-112",[]],["text/27-112",[]],["component/27-112",[]],["title/27-113",[63,4.275,74,8.148,199,23.749,257,5.484,666,29.605,1154,17.129,1468,38.487,1690,37.823,1691,32.93,1693,36.654]],["name/27-113",[]],["text/27-113",[]],["component/27-113",[]],["title/27-114",[203,35.049,3291,88.448]],["name/27-114",[]],["text/27-114",[]],["component/27-114",[]],["title/27-115",[203,29.691,210,13.27,2153,49.882,3292,78.881]],["name/27-115",[]],["text/27-115",[]],["component/27-115",[]],["title/27-116",[199,21.213,203,29.691,1693,59.067,3291,74.927]],["name/27-116",[]],["text/27-116",[]],["component/27-116",[]],["title/27-117",[572,81.997]],["name/27-117",[]],["text/27-117",[]],["component/27-117",[]],["title/27-118",[73,36.467,257,7.666,504,42.6,736,42.205,737,44.753]],["name/27-118",[]],["text/27-118",[]],["component/27-118",[]],["title/27-119",[63,6.89,199,21.213,257,8.837,2319,65.973]],["name/27-119",[]],["text/27-119",[]],["component/27-119",[]],["title/27-120",[63,5.976,199,25.15,257,7.666,2320,57.225,2321,55.95]],["name/27-120",[]],["text/27-120",[]],["component/27-120",[]],["title/27-121",[63,3.456,74,6.586,78,10.335,199,10.64,210,10.5,297,25.88,504,24.635,662,32.354,736,28.167,737,25.88,768,31.699,2118,25.88,2322,31.699,2836,25.224,2837,36.103]],["name/27-121",[]],["text/27-121",[]],["component/27-121",[]],["title/27-122",[63,6.89,257,8.837,736,35.598,2323,65.973]],["name/27-122",[]],["text/27-122",[]],["component/27-122",[]],["title/27-123",[63,6.89,257,8.837,736,35.598,2324,65.973]],["name/27-123",[]],["text/27-123",[]],["component/27-123",[]],["title/27-124",[3293,102.349]],["name/27-124",[]],["text/27-124",[]],["component/27-124",[]],["title/27-125",[63,4.082,199,19.094,257,5.236,573,25.675,657,28.286,1380,39.086,2225,46.733,2226,46.733,2234,39.086,3294,46.733]],["name/27-125",[]],["text/27-125",[]],["component/27-125",[]],["title/27-126",[63,4.275,184,37.823,199,19.774,257,5.484,573,26.892,657,29.093,1380,40.94,2234,40.94,3295,48.95]],["name/27-126",[]],["text/27-126",[]],["component/27-126",[]],["title/27-127",[63,5.276,184,46.68,199,26.808,257,6.768,1380,50.526,3296,60.411]],["name/27-127",[]],["text/27-127",[]],["component/27-127",[]],["title/27-128",[63,4.985,184,44.098,199,25.972,257,6.394,710,17.975,3297,57.071,3298,57.071]],["name/27-128",[]],["text/27-128",[]],["component/27-128",[]],["title/27-129",[63,4.985,257,6.394,575,41.561,657,27.121,1452,18.044,2234,47.732,3299,57.071,3300,57.071]],["name/27-129",[]],["text/27-129",[]],["component/27-129",[]],["title/27-130",[63,2.996,74,5.71,199,18.898,210,9.367,257,3.843,297,22.439,504,21.359,657,11.301,662,28.053,710,10.805,736,25.127,737,22.439,1380,28.692,2118,22.439,2234,28.692,2837,31.302,3301,34.306]],["name/27-130",[]],["text/27-130",[]],["component/27-130",[]],["title/27-131",[203,35.049,3302,93.114]],["name/27-131",[]],["text/27-131",[]],["component/27-131",[]],["title/27-132",[199,21.213,200,45.593,257,8.837,3303,78.881]],["name/27-132",[]],["text/27-132",[]],["component/27-132",[]],["title/27-133",[674,93.388]],["name/27-133",[]],["text/27-133",[]],["component/27-133",[]],["title/27-134",[63,4.985,78,14.907,199,15.348,477,25.258,573,31.354,657,18.8,666,34.516,710,17.975,738,47.732]],["name/27-134",[]],["text/27-134",[]],["component/27-134",[]],["title/27-135",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,1452,19.1,2314,57.384]],["name/27-135",[]],["text/27-135",[]],["component/27-135",[]],["title/27-136",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,1452,19.1,2315,57.384]],["name/27-136",[]],["text/27-136",[]],["component/27-136",[]],["title/27-137",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,1452,19.1,2316,57.384]],["name/27-137",[]],["text/27-137",[]],["component/27-137",[]],["title/27-138",[63,4.985,199,15.348,257,6.394,573,31.354,657,27.121,710,17.975,2317,54.21,3304,61.413]],["name/27-138",[]],["text/27-138",[]],["component/27-138",[]],["title/27-139",[63,5.976,199,25.15,257,7.666,666,41.381,2318,64.992]],["name/27-139",[]],["text/27-139",[]],["component/27-139",[]],["title/27-140",[63,5.276,199,16.246,257,6.768,573,33.189,657,19.901,666,36.537,752,50.526,1452,19.1]],["name/27-140",[]],["text/27-140",[]],["component/27-140",[]],["title/27-141",[1699,97.219]],["name/27-141",[]],["text/27-141",[]],["component/27-141",[]],["title/27-142",[63,5.604,199,24.06,257,7.189,1698,58.55,2050,58.55,3305,64.167]],["name/27-142",[]],["text/27-142",[]],["component/27-142",[]],["title/27-143",[63,5.976,199,18.4,257,7.666,657,22.54,669,58.684,1698,62.431]],["name/27-143",[]],["text/27-143",[]],["component/27-143",[]],["title/27-144",[63,5.276,74,10.055,199,16.246,257,6.768,575,43.994,657,19.901,862,27.823,3306,60.411]],["name/27-144",[]],["text/27-144",[]],["component/27-144",[]],["title/27-145",[63,4.985,199,25.972,257,6.394,2050,52.074,2321,46.668,3307,57.071,3308,57.071]],["name/27-145",[]],["text/27-145",[]],["component/27-145",[]],["title/27-146",[3309,102.349]],["name/27-146",[]],["text/27-146",[]],["component/27-146",[]],["title/27-147",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,577,33.175,657,17.815,666,32.708,1452,17.098,3310,54.08]],["name/27-147",[]],["text/27-147",[]],["component/27-147",[]],["title/27-148",[63,4.723,74,9.002,199,14.543,257,6.059,573,29.711,577,33.175,657,17.815,666,32.708,1452,17.098,3311,54.08]],["name/27-148",[]],["text/27-148",[]],["component/27-148",[]],["title/27-149",[666,61.901]],["name/27-149",[]],["text/27-149",[]],["component/27-149",[]],["title/27-150",[63,5.604,199,27.7,257,7.189,1781,41.971,3312,64.167]],["name/27-150",[]],["text/27-150",[]],["component/27-150",[]],["title/27-151",[1754,97.219]],["name/27-151",[]],["text/27-151",[]],["component/27-151",[]],["title/27-152",[63,4.723,199,25.186,257,6.059,1452,17.098,1674,42.52,1676,37.131,1750,41.116,1809,42.52]],["name/27-152",[]],["text/27-152",[]],["component/27-152",[]],["title/27-153",[63,5.276,199,26.808,257,6.768,1676,41.478,1750,45.929,3313,57.384]],["name/27-153",[]],["text/27-153",[]],["component/27-153",[]],["title/27-154",[63,3.456,76,22.339,199,27.29,257,4.433,740,24.45,741,23.607,1452,12.51,1674,31.109,1676,27.166,1750,30.082,1809,31.109,3314,31.699]],["name/27-154",[]],["text/27-154",[]],["component/27-154",[]],["title/27-155",[63,3.743,76,24.194,199,28.214,257,4.801,740,26.481,741,25.567,1676,29.422,1750,32.58,3313,40.705,3314,34.331]],["name/27-155",[]],["text/27-155",[]],["component/27-155",[]],["title/27-156",[63,4.723,199,25.186,257,6.059,1452,17.098,1676,37.131,1750,41.116,1809,42.52,3315,51.37]],["name/27-156",[]],["text/27-156",[]],["component/27-156",[]],["title/27-157",[63,5.276,199,26.808,257,6.768,1676,41.478,1750,45.929,3316,57.384]],["name/27-157",[]],["text/27-157",[]],["component/27-157",[]],["title/27-158",[63,3.456,76,22.339,199,27.29,257,4.433,740,24.45,741,23.607,1452,12.51,1676,27.166,1750,30.082,1809,31.109,3314,31.699,3315,37.584]],["name/27-158",[]],["text/27-158",[]],["component/27-158",[]],["title/27-159",[63,3.743,76,24.194,199,28.214,257,4.801,740,26.481,741,25.567,1676,29.422,1750,32.58,3314,34.331,3316,40.705]],["name/27-159",[]],["text/27-159",[]],["component/27-159",[]],["title/27-160",[63,4.275,199,23.749,257,5.484,401,35.647,1452,23.248,1676,33.609,1755,44.664,1809,38.487,3317,39.216]],["name/27-160",[]],["text/27-160",[]],["component/27-160",[]],["title/27-161",[63,4.488,199,24.447,257,5.757,401,37.422,1452,16.247,1676,35.282,3317,41.169,3318,48.812,3319,46.888]],["name/27-161",[]],["text/27-161",[]],["component/27-161",[]],["title/27-162",[63,3.21,76,20.748,199,26.424,257,4.117,401,26.762,740,22.709,741,21.926,1452,18.608,1676,25.231,1755,33.532,1809,28.894,3314,29.441,3317,29.441]],["name/27-162",[]],["text/27-162",[]],["component/27-162",[]],["title/27-163",[63,3.328,76,21.514,199,26.85,257,4.269,401,27.75,740,23.548,741,22.735,1452,12.048,1676,26.163,3314,30.529,3317,30.529,3318,36.196,3319,34.77]],["name/27-163",[]],["text/27-163",[]],["component/27-163",[]],["title/27-164",[63,4.275,199,23.749,257,5.484,401,35.647,1452,23.248,1676,33.609,1809,38.487,3317,39.216,3320,46.497]],["name/27-164",[]],["text/27-164",[]],["component/27-164",[]],["title/27-165",[63,4.488,199,24.447,257,5.757,401,37.422,1452,16.247,1676,35.282,3317,41.169,3319,46.888,3321,48.812]],["name/27-165",[]],["text/27-165",[]],["component/27-165",[]],["title/27-166",[63,3.21,76,20.748,199,26.424,257,4.117,401,26.762,740,22.709,741,21.926,1452,18.608,1676,25.231,1809,28.894,3314,29.441,3317,29.441,3320,34.907]],["name/27-166",[]],["text/27-166",[]],["component/27-166",[]],["title/27-167",[63,3.328,76,21.514,199,26.85,257,4.269,401,27.75,740,23.548,741,22.735,1452,12.048,1676,26.163,3314,30.529,3317,30.529,3319,34.77,3321,36.196]],["name/27-167",[]],["text/27-167",[]],["component/27-167",[]],["title/27-168",[203,35.049,3322,93.114]],["name/27-168",[]],["text/27-168",[]],["component/27-168",[]],["title/27-169",[252,67.554]],["name/27-169",[]],["text/27-169",[]],["component/27-169",[]],["title/27-170",[3323,102.349]],["name/27-170",[]],["text/27-170",[]],["component/27-170",[]],["title/27-171",[183,58.884,3324,88.448]],["name/27-171",[]],["text/27-171",[]],["component/27-171",[]],["title/27-172",[73,49.627,257,10.432]],["name/27-172",[]],["text/27-172",[]],["component/27-172",[]],["title/27-173",[63,6.89,257,8.837,1452,24.939,3325,74.927]],["name/27-173",[]],["text/27-173",[]],["component/27-173",[]],["title/27-174",[203,35.049,3326,88.448]],["name/27-174",[]],["text/27-174",[]],["component/27-174",[]],["title/27-175",[3327,102.349]],["name/27-175",[]],["text/27-175",[]],["component/27-175",[]],["title/27-176",[183,58.884,3324,88.448]],["name/27-176",[]],["text/27-176",[]],["component/27-176",[]],["title/27-177",[63,6.89,257,8.837,1452,24.939,3325,74.927]],["name/27-177",[]],["text/27-177",[]],["component/27-177",[]],["title/27-178",[203,35.049,3326,88.448]],["name/27-178",[]],["text/27-178",[]],["component/27-178",[]],["title/27-179",[3328,90.329]],["name/27-179",[]],["text/27-179",[]],["component/27-179",[]],["title/27-180",[183,58.884,3329,93.114]],["name/27-180",[]],["text/27-180",[]],["component/27-180",[]],["title/27-181",[183,58.884,3330,93.114]],["name/27-181",[]],["text/27-181",[]],["component/27-181",[]],["title/27-182",[73,49.627,257,10.432]],["name/27-182",[]],["text/27-182",[]],["component/27-182",[]],["title/27-183",[63,6.89,78,20.604,1452,24.939,3331,67.654]],["name/27-183",[]],["text/27-183",[]],["component/27-183",[]],["title/27-184",[257,10.432,3332,82.179]],["name/27-184",[]],["text/27-184",[]],["component/27-184",[]],["title/27-185",[257,10.432,3333,82.179]],["name/27-185",[]],["text/27-185",[]],["component/27-185",[]],["title/27-186",[257,10.432,3334,82.179]],["name/27-186",[]],["text/27-186",[]],["component/27-186",[]],["title/27-187",[257,10.432,3335,82.179]],["name/27-187",[]],["text/27-187",[]],["component/27-187",[]],["title/27-188",[12,29.065,74,13.13,1088,36.583,3331,67.654]],["name/27-188",[]],["text/27-188",[]],["component/27-188",[]],["title/27-189",[12,29.065,74,13.13,1088,36.583,3336,69.617]],["name/27-189",[]],["text/27-189",[]],["component/27-189",[]],["title/27-190",[203,35.049,3337,82.179]],["name/27-190",[]],["text/27-190",[]],["component/27-190",[]],["title/27-191",[203,35.049,3338,82.179]],["name/27-191",[]],["text/27-191",[]],["component/27-191",[]],["title/27-192",[771,68.19]],["name/27-192",[]],["text/27-192",[]],["component/27-192",[]],["title/27-193",[53,34.535,63,5.976,74,11.389,78,17.872,210,11.51,771,45.586]],["name/27-193",[]],["text/27-193",[]],["component/27-193",[]],["title/27-194",[53,34.535,63,5.976,74,11.389,210,11.51,257,7.666,2589,58.684]],["name/27-194",[]],["text/27-194",[]],["component/27-194",[]],["title/27-195",[53,34.535,74,11.389,210,11.51,257,7.666,771,45.586,2590,58.684]],["name/27-195",[]],["text/27-195",[]],["component/27-195",[]],["title/27-196",[12,25.211,74,11.389,203,25.754,210,11.51,2591,58.684,2592,58.684]],["name/27-196",[]],["text/27-196",[]],["component/27-196",[]],["title/27-197",[1677,97.219]],["name/27-197",[]],["text/27-197",[]],["component/27-197",[]],["title/27-198",[1442,83.693]],["name/27-198",[]],["text/27-198",[]],["component/27-198",[]],["title/27-199",[63,5.976,142,24.42,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/27-199",[]],["text/27-199",[]],["component/27-199",[]],["title/27-200",[1761,97.219]],["name/27-200",[]],["text/27-200",[]],["component/27-200",[]],["title/27-201",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/27-201",[]],["text/27-201",[]],["component/27-201",[]],["title/27-202",[1764,97.219]],["name/27-202",[]],["text/27-202",[]],["component/27-202",[]],["title/27-203",[12,25.211,63,5.976,74,11.389,257,7.666,1452,21.632,3339,68.422]],["name/27-203",[]],["text/27-203",[]],["component/27-203",[]],["title/27-204",[12,22.26,63,5.276,74,10.055,257,6.768,477,26.736,1452,19.1,1760,39.168,1929,37.613]],["name/27-204",[]],["text/27-204",[]],["component/27-204",[]],["title/27-205",[12,22.26,63,5.276,74,10.055,257,6.768,477,26.736,1452,19.1,1929,37.613,3340,60.411]],["name/27-205",[]],["text/27-205",[]],["component/27-205",[]],["title/27-206",[12,22.26,63,5.276,74,10.055,257,6.768,477,26.736,1452,19.1,1929,37.613,3341,60.411]],["name/27-206",[]],["text/27-206",[]],["component/27-206",[]],["title/27-207",[12,22.26,63,5.276,74,10.055,257,6.768,477,26.736,1452,19.1,1929,37.613,3342,60.411]],["name/27-207",[]],["text/27-207",[]],["component/27-207",[]],["title/27-208",[277,73.211,862,42.884]],["name/27-208",[]],["text/27-208",[]],["component/27-208",[]],["title/27-209",[1800,83.693]],["name/27-209",[]],["text/27-209",[]],["component/27-209",[]],["title/27-210",[63,5.276,210,10.163,257,6.768,770,20.65,1367,28.628,1452,19.1,1800,49.4,3343,55.122]],["name/27-210",[]],["text/27-210",[]],["component/27-210",[]],["title/27-211",[210,9.601,257,6.394,386,15.003,770,19.508,1367,27.044,1452,18.044,1800,46.668,3343,52.074,3344,57.071]],["name/27-211",[]],["text/27-211",[]],["component/27-211",[]],["title/27-212",[84,35.631,210,10.795,257,7.189,770,21.933,1367,30.407,1800,52.471,3343,58.55]],["name/27-212",[]],["text/27-212",[]],["component/27-212",[]],["title/27-213",[210,10.795,257,7.189,770,21.933,1367,30.407,1800,52.471,2583,60.952,3343,58.55]],["name/27-213",[]],["text/27-213",[]],["component/27-213",[]],["title/27-214",[1805,97.219]],["name/27-214",[]],["text/27-214",[]],["component/27-214",[]],["title/27-215",[63,4.488,84,28.535,199,20.504,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3345,42.02]],["name/27-215",[]],["text/27-215",[]],["component/27-215",[]],["title/27-216",[63,4.985,97,37.002,199,15.348,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3345,46.668]],["name/27-216",[]],["text/27-216",[]],["component/27-216",[]],["title/27-217",[63,4.985,199,15.348,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3345,46.668]],["name/27-217",[]],["text/27-217",[]],["component/27-217",[]],["title/27-218",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3345,52.471]],["name/27-218",[]],["text/27-218",[]],["component/27-218",[]],["title/27-219",[63,4.985,199,22.14,210,9.601,257,6.394,340,27.88,770,19.508,1367,27.044,3345,46.668]],["name/27-219",[]],["text/27-219",[]],["component/27-219",[]],["title/27-220",[63,4.723,199,21.291,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3345,44.222,3346,42.52]],["name/27-220",[]],["text/27-220",[]],["component/27-220",[]],["title/27-221",[63,5.276,199,23.06,257,6.768,340,29.511,342,28.841,770,20.65,3345,49.4]],["name/27-221",[]],["text/27-221",[]],["component/27-221",[]],["title/27-222",[63,5.604,199,17.256,257,7.189,340,31.346,342,30.634,770,21.933,3345,52.471]],["name/27-222",[]],["text/27-222",[]],["component/27-222",[]],["title/27-223",[63,4.488,84,28.535,210,12.827,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3347,42.02]],["name/27-223",[]],["text/27-223",[]],["component/27-223",[]],["title/27-224",[63,4.985,97,37.002,210,9.601,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3347,46.668]],["name/27-224",[]],["text/27-224",[]],["component/27-224",[]],["title/27-225",[63,4.985,210,9.601,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3347,46.668]],["name/27-225",[]],["text/27-225",[]],["component/27-225",[]],["title/27-226",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3347,52.471]],["name/27-226",[]],["text/27-226",[]],["component/27-226",[]],["title/27-227",[63,4.985,210,16.247,257,6.394,340,27.88,770,19.508,1367,27.044,3347,46.668]],["name/27-227",[]],["text/27-227",[]],["component/27-227",[]],["title/27-228",[63,4.723,210,13.319,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3347,44.222]],["name/27-228",[]],["text/27-228",[]],["component/27-228",[]],["title/27-229",[63,5.276,210,14.426,257,6.768,340,29.511,342,28.841,770,20.65,3347,49.4]],["name/27-229",[]],["text/27-229",[]],["component/27-229",[]],["title/27-230",[63,5.604,210,10.795,257,7.189,340,31.346,342,30.634,770,21.933,3347,52.471]],["name/27-230",[]],["text/27-230",[]],["component/27-230",[]],["title/27-231",[63,4.488,74,8.553,84,28.535,210,8.645,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3348,41.169]],["name/27-231",[]],["text/27-231",[]],["component/27-231",[]],["title/27-232",[63,4.985,97,37.002,210,9.601,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3348,45.722]],["name/27-232",[]],["text/27-232",[]],["component/27-232",[]],["title/27-233",[63,4.985,210,9.601,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3348,45.722]],["name/27-233",[]],["text/27-233",[]],["component/27-233",[]],["title/27-234",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3348,51.408]],["name/27-234",[]],["text/27-234",[]],["component/27-234",[]],["title/27-235",[63,4.985,74,9.499,210,13.85,257,6.394,340,27.88,770,19.508,1367,27.044,3348,45.722]],["name/27-235",[]],["text/27-235",[]],["component/27-235",[]],["title/27-236",[63,4.723,74,9.002,210,9.098,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3348,43.326]],["name/27-236",[]],["text/27-236",[]],["component/27-236",[]],["title/27-237",[63,5.276,74,10.055,210,10.163,257,6.768,340,29.511,342,28.841,770,20.65,3348,48.399]],["name/27-237",[]],["text/27-237",[]],["component/27-237",[]],["title/27-238",[63,5.604,210,10.795,257,7.189,340,31.346,342,30.634,770,21.933,3348,51.408]],["name/27-238",[]],["text/27-238",[]],["component/27-238",[]],["title/27-239",[63,4.488,84,28.535,199,13.819,210,8.645,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3349,42.02]],["name/27-239",[]],["text/27-239",[]],["component/27-239",[]],["title/27-240",[63,4.985,97,37.002,210,9.601,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3349,46.668]],["name/27-240",[]],["text/27-240",[]],["component/27-240",[]],["title/27-241",[63,4.985,210,9.601,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3349,46.668]],["name/27-241",[]],["text/27-241",[]],["component/27-241",[]],["title/27-242",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3349,52.471]],["name/27-242",[]],["text/27-242",[]],["component/27-242",[]],["title/27-243",[63,4.985,199,15.348,210,13.85,257,6.394,340,27.88,770,19.508,1367,27.044,3349,46.668]],["name/27-243",[]],["text/27-243",[]],["component/27-243",[]],["title/27-244",[63,4.723,199,14.543,210,9.098,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3349,44.222]],["name/27-244",[]],["text/27-244",[]],["component/27-244",[]],["title/27-245",[63,5.276,199,16.246,210,10.163,257,6.768,340,29.511,342,28.841,770,20.65,3349,49.4]],["name/27-245",[]],["text/27-245",[]],["component/27-245",[]],["title/27-246",[63,5.604,210,10.795,257,7.189,340,31.346,342,30.634,770,21.933,3349,52.471]],["name/27-246",[]],["text/27-246",[]],["component/27-246",[]],["title/27-247",[63,4.488,74,8.553,84,28.535,210,8.645,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3350,42.02]],["name/27-247",[]],["text/27-247",[]],["component/27-247",[]],["title/27-248",[63,4.985,74,9.499,97,37.002,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3350,46.668]],["name/27-248",[]],["text/27-248",[]],["component/27-248",[]],["title/27-249",[63,4.985,74,9.499,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3350,46.668]],["name/27-249",[]],["text/27-249",[]],["component/27-249",[]],["title/27-250",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3350,52.471]],["name/27-250",[]],["text/27-250",[]],["component/27-250",[]],["title/27-251",[63,4.985,74,9.499,210,13.85,257,6.394,340,27.88,770,19.508,1367,27.044,3350,46.668]],["name/27-251",[]],["text/27-251",[]],["component/27-251",[]],["title/27-252",[63,4.723,74,9.002,210,9.098,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3350,44.222]],["name/27-252",[]],["text/27-252",[]],["component/27-252",[]],["title/27-253",[63,5.276,74,10.055,210,10.163,257,6.768,340,29.511,342,28.841,770,20.65,3350,49.4]],["name/27-253",[]],["text/27-253",[]],["component/27-253",[]],["title/27-254",[63,5.604,74,10.681,257,7.189,340,31.346,342,30.634,770,21.933,3350,52.471]],["name/27-254",[]],["text/27-254",[]],["component/27-254",[]],["title/27-255",[63,4.488,74,12.691,84,28.535,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3351,42.02]],["name/27-255",[]],["text/27-255",[]],["component/27-255",[]],["title/27-256",[63,4.985,74,9.499,97,37.002,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3351,46.668]],["name/27-256",[]],["text/27-256",[]],["component/27-256",[]],["title/27-257",[63,4.985,74,9.499,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3351,46.668]],["name/27-257",[]],["text/27-257",[]],["component/27-257",[]],["title/27-258",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3351,52.471]],["name/27-258",[]],["text/27-258",[]],["component/27-258",[]],["title/27-259",[63,4.985,74,13.704,210,9.601,257,6.394,340,27.88,770,19.508,1367,27.044,3351,46.668]],["name/27-259",[]],["text/27-259",[]],["component/27-259",[]],["title/27-260",[63,4.723,74,13.178,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3351,44.222]],["name/27-260",[]],["text/27-260",[]],["component/27-260",[]],["title/27-261",[63,5.276,74,14.273,257,6.768,340,29.511,342,28.841,770,20.65,3351,49.4]],["name/27-261",[]],["text/27-261",[]],["component/27-261",[]],["title/27-262",[63,5.604,74,10.681,257,7.189,340,31.346,342,30.634,770,21.933,3351,52.471]],["name/27-262",[]],["text/27-262",[]],["component/27-262",[]],["title/27-263",[63,4.488,74,8.553,84,28.535,199,13.819,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3352,42.02]],["name/27-263",[]],["text/27-263",[]],["component/27-263",[]],["title/27-264",[63,4.985,74,9.499,97,37.002,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3352,46.668]],["name/27-264",[]],["text/27-264",[]],["component/27-264",[]],["title/27-265",[63,4.985,74,9.499,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3352,46.668]],["name/27-265",[]],["text/27-265",[]],["component/27-265",[]],["title/27-266",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3352,52.471]],["name/27-266",[]],["text/27-266",[]],["component/27-266",[]],["title/27-267",[63,4.985,74,9.499,199,15.348,210,9.601,257,6.394,340,27.88,770,19.508,1367,27.044,3352,46.668]],["name/27-267",[]],["text/27-267",[]],["component/27-267",[]],["title/27-268",[63,4.723,74,9.002,199,14.543,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3352,44.222]],["name/27-268",[]],["text/27-268",[]],["component/27-268",[]],["title/27-269",[63,5.276,74,10.055,199,16.246,257,6.768,340,29.511,342,28.841,770,20.65,3352,49.4]],["name/27-269",[]],["text/27-269",[]],["component/27-269",[]],["title/27-270",[63,5.604,74,10.681,257,7.189,340,31.346,342,30.634,770,21.933,3352,52.471]],["name/27-270",[]],["text/27-270",[]],["component/27-270",[]],["title/27-271",[63,4.488,84,28.535,199,13.819,210,8.645,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3353,42.02]],["name/27-271",[]],["text/27-271",[]],["component/27-271",[]],["title/27-272",[63,4.985,97,37.002,199,15.348,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3353,46.668]],["name/27-272",[]],["text/27-272",[]],["component/27-272",[]],["title/27-273",[63,4.985,199,15.348,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3353,46.668]],["name/27-273",[]],["text/27-273",[]],["component/27-273",[]],["title/27-274",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3353,52.471]],["name/27-274",[]],["text/27-274",[]],["component/27-274",[]],["title/27-275",[63,4.985,199,15.348,210,13.85,257,6.394,340,27.88,770,19.508,1367,27.044,3353,46.668]],["name/27-275",[]],["text/27-275",[]],["component/27-275",[]],["title/27-276",[63,4.723,199,14.543,210,9.098,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3353,44.222]],["name/27-276",[]],["text/27-276",[]],["component/27-276",[]],["title/27-277",[63,5.276,199,16.246,210,10.163,257,6.768,340,29.511,342,28.841,770,20.65,3353,49.4]],["name/27-277",[]],["text/27-277",[]],["component/27-277",[]],["title/27-278",[63,5.604,199,17.256,257,7.189,340,31.346,342,30.634,770,21.933,3353,52.471]],["name/27-278",[]],["text/27-278",[]],["component/27-278",[]],["title/27-279",[63,4.488,74,8.553,84,28.535,199,13.819,257,5.757,340,25.103,342,24.532,386,13.509,770,17.565,1452,16.247,3354,42.02]],["name/27-279",[]],["text/27-279",[]],["component/27-279",[]],["title/27-280",[63,4.985,97,37.002,199,15.348,257,6.394,340,27.88,342,27.246,770,19.508,1452,18.044,3354,46.668]],["name/27-280",[]],["text/27-280",[]],["component/27-280",[]],["title/27-281",[63,4.985,199,15.348,257,6.394,340,27.88,342,27.246,585,39.184,770,19.508,1452,18.044,3354,46.668]],["name/27-281",[]],["text/27-281",[]],["component/27-281",[]],["title/27-282",[63,5.604,210,10.795,257,7.189,340,31.346,770,21.933,2153,40.578,3354,52.471]],["name/27-282",[]],["text/27-282",[]],["component/27-282",[]],["title/27-283",[63,4.985,74,9.499,199,15.348,210,9.601,257,6.394,340,27.88,770,19.508,1367,27.044,3354,46.668]],["name/27-283",[]],["text/27-283",[]],["component/27-283",[]],["title/27-284",[63,4.723,74,9.002,199,14.543,257,6.059,340,26.419,342,25.818,770,18.485,1452,17.098,3346,42.52,3354,44.222]],["name/27-284",[]],["text/27-284",[]],["component/27-284",[]],["title/27-285",[63,5.276,74,10.055,199,16.246,257,6.768,340,29.511,342,28.841,770,20.65,3354,49.4]],["name/27-285",[]],["text/27-285",[]],["component/27-285",[]],["title/27-286",[63,5.604,199,17.256,257,7.189,340,31.346,342,30.634,770,21.933,3354,52.471]],["name/27-286",[]],["text/27-286",[]],["component/27-286",[]],["title/27-287",[199,21.213,203,29.691,342,37.658,3355,78.881]],["name/27-287",[]],["text/27-287",[]],["component/27-287",[]],["title/27-288",[337,93.388]],["name/27-288",[]],["text/27-288",[]],["component/27-288",[]],["title/27-289",[63,4.985,84,31.69,134,39.609,199,15.348,257,6.394,386,15.003,770,19.508,1452,18.044,3356,48.948]],["name/27-289",[]],["text/27-289",[]],["component/27-289",[]],["title/27-290",[63,4.985,84,31.69,97,37.002,199,15.348,257,6.394,386,15.003,770,19.508,1452,18.044,3356,48.948]],["name/27-290",[]],["text/27-290",[]],["component/27-290",[]],["title/27-291",[63,4.985,84,31.69,199,15.348,257,6.394,386,15.003,585,39.184,770,19.508,1452,18.044,3356,48.948]],["name/27-291",[]],["text/27-291",[]],["component/27-291",[]],["title/27-292",[63,5.604,84,35.631,210,10.795,257,7.189,770,21.933,2153,40.578,3356,55.035]],["name/27-292",[]],["text/27-292",[]],["component/27-292",[]],["title/27-293",[63,5.276,84,33.545,199,16.246,210,10.163,257,6.768,770,20.65,1367,28.628,3356,51.813]],["name/27-293",[]],["text/27-293",[]],["component/27-293",[]],["title/27-294",[63,5.604,84,35.631,199,17.256,257,7.189,386,16.869,770,21.933,3356,55.035]],["name/27-294",[]],["text/27-294",[]],["component/27-294",[]],["title/27-295",[63,4.985,74,9.499,84,31.69,134,39.609,257,6.394,386,15.003,770,19.508,1452,18.044,3357,47.732]],["name/27-295",[]],["text/27-295",[]],["component/27-295",[]],["title/27-296",[63,4.985,74,9.499,84,31.69,97,37.002,257,6.394,386,15.003,770,19.508,1452,18.044,3357,47.732]],["name/27-296",[]],["text/27-296",[]],["component/27-296",[]],["title/27-297",[63,4.985,74,9.499,84,31.69,257,6.394,386,15.003,585,39.184,770,19.508,1452,18.044,3357,47.732]],["name/27-297",[]],["text/27-297",[]],["component/27-297",[]],["title/27-298",[63,5.604,84,35.631,210,10.795,257,7.189,770,21.933,2153,40.578,3357,53.667]],["name/27-298",[]],["text/27-298",[]],["component/27-298",[]],["title/27-299",[63,5.276,74,10.055,84,33.545,210,10.163,257,6.768,770,20.65,1367,28.628,3357,50.526]],["name/27-299",[]],["text/27-299",[]],["component/27-299",[]],["title/27-300",[63,5.604,74,10.681,84,35.631,257,7.189,386,16.869,770,21.933,3357,53.667]],["name/27-300",[]],["text/27-300",[]],["component/27-300",[]],["title/27-301",[63,4.985,84,31.69,134,39.609,210,9.601,257,6.394,386,15.003,770,19.508,1452,18.044,3358,48.948]],["name/27-301",[]],["text/27-301",[]],["component/27-301",[]],["title/27-302",[63,4.985,84,31.69,97,37.002,210,9.601,257,6.394,386,15.003,770,19.508,1452,18.044,3358,48.948]],["name/27-302",[]],["text/27-302",[]],["component/27-302",[]],["title/27-303",[63,4.985,84,31.69,210,9.601,257,6.394,386,15.003,585,39.184,770,19.508,1452,18.044,3358,48.948]],["name/27-303",[]],["text/27-303",[]],["component/27-303",[]],["title/27-304",[63,5.604,84,35.631,210,10.795,257,7.189,770,21.933,2153,40.578,3358,55.035]],["name/27-304",[]],["text/27-304",[]],["component/27-304",[]],["title/27-305",[63,5.276,84,33.545,210,14.426,257,6.768,770,20.65,1367,28.628,3358,51.813]],["name/27-305",[]],["text/27-305",[]],["component/27-305",[]],["title/27-306",[63,5.604,84,35.631,210,10.795,257,7.189,386,16.869,770,21.933,3358,55.035]],["name/27-306",[]],["text/27-306",[]],["component/27-306",[]],["title/27-307",[1803,97.219]],["name/27-307",[]],["text/27-307",[]],["component/27-307",[]],["title/27-308",[199,17.256,257,7.189,386,16.869,770,21.933,3359,64.167,3360,49.582,3361,49.582]],["name/27-308",[]],["text/27-308",[]],["component/27-308",[]],["title/27-309",[63,5.276,199,16.246,257,6.768,386,15.881,770,20.65,3360,46.68,3361,46.68,3362,60.411]],["name/27-309",[]],["text/27-309",[]],["component/27-309",[]],["title/27-310",[199,17.256,257,7.189,386,16.869,770,21.933,3360,49.582,3361,49.582,3363,64.167]],["name/27-310",[]],["text/27-310",[]],["component/27-310",[]],["title/27-311",[63,5.276,199,16.246,257,6.768,386,15.881,770,20.65,3360,46.68,3361,46.68,3364,60.411]],["name/27-311",[]],["text/27-311",[]],["component/27-311",[]],["title/27-312",[63,5.276,199,16.246,257,6.768,324,57.384,386,15.881,770,20.65,3360,46.68,3361,46.68]],["name/27-312",[]],["text/27-312",[]],["component/27-312",[]],["title/27-313",[63,5.276,199,16.246,257,6.768,386,15.881,770,20.65,1040,47.498,3360,46.68,3361,46.68]],["name/27-313",[]],["text/27-313",[]],["component/27-313",[]],["title/27-314",[63,4.985,199,15.348,210,9.601,257,6.394,386,15.003,770,19.508,1367,27.044,3360,44.098,3361,44.098]],["name/27-314",[]],["text/27-314",[]],["component/27-314",[]],["title/27-315",[224,59.922,257,8.21,770,25.048,3360,56.623,3361,56.623]],["name/27-315",[]],["text/27-315",[]],["component/27-315",[]],["title/27-316",[63,5.604,210,10.795,257,7.189,770,21.933,2153,40.578,3360,49.582,3361,49.582]],["name/27-316",[]],["text/27-316",[]],["component/27-316",[]],["title/27-317",[63,5.604,257,7.189,770,21.933,775,49.582,1452,20.287,3360,49.582,3361,49.582]],["name/27-317",[]],["text/27-317",[]],["component/27-317",[]],["title/27-318",[3365,102.349]],["name/27-318",[]],["text/27-318",[]],["component/27-318",[]],["title/27-319",[210,10.795,257,7.189,402,20.929,624,49.582,770,21.933,1736,56.632,3366,52.471]],["name/27-319",[]],["text/27-319",[]],["component/27-319",[]],["title/27-320",[224,59.922,257,8.21,402,23.901,770,25.048,3366,59.922]],["name/27-320",[]],["text/27-320",[]],["component/27-320",[]],["title/27-321",[199,17.256,257,7.189,386,16.869,402,20.929,770,21.933,1811,51.408,3366,52.471]],["name/27-321",[]],["text/27-321",[]],["component/27-321",[]],["title/27-322",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,1407,56.632,3366,52.471]],["name/27-322",[]],["text/27-322",[]],["component/27-322",[]],["title/27-323",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2153,40.578,3366,52.471]],["name/27-323",[]],["text/27-323",[]],["component/27-323",[]],["title/27-324",[63,5.276,199,16.246,210,10.163,257,6.768,402,19.704,770,20.65,2575,55.122,3366,49.4]],["name/27-324",[]],["text/27-324",[]],["component/27-324",[]],["title/27-325",[63,4.985,199,15.348,257,6.394,283,37.329,386,15.003,402,18.614,770,19.508,1452,18.044,3366,46.668]],["name/27-325",[]],["text/27-325",[]],["component/27-325",[]],["title/27-326",[1802,85.601]],["name/27-326",[]],["text/27-326",[]],["component/27-326",[]],["title/27-327",[63,4.275,257,5.484,342,23.369,386,12.868,402,15.965,770,16.732,1811,39.216,1968,25.139,3169,72.216,3367,40.027]],["name/27-327",[]],["text/27-327",[]],["component/27-327",[]],["title/27-328",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1968,29.31,3169,46.668,3367,46.668,3368,52.074]],["name/27-328",[]],["text/27-328",[]],["component/27-328",[]],["title/27-329",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1968,29.31,3169,46.668,3367,46.668,3369,52.074]],["name/27-329",[]],["text/27-329",[]],["component/27-329",[]],["title/27-330",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1968,29.31,3169,46.668,3367,46.668,3370,52.074]],["name/27-330",[]],["text/27-330",[]],["component/27-330",[]],["title/27-331",[63,5.604,257,7.189,402,20.929,770,21.933,1546,55.035,3169,52.471,3367,52.471]],["name/27-331",[]],["text/27-331",[]],["component/27-331",[]],["title/27-332",[63,4.275,257,5.484,402,15.965,770,16.732,928,36.133,1452,15.476,1968,25.139,3169,40.027,3367,40.027,3371,44.664,3372,46.497,3373,46.497]],["name/27-332",[]],["text/27-332",[]],["component/27-332",[]],["title/27-333",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2153,40.578,3367,52.471]],["name/27-333",[]],["text/27-333",[]],["component/27-333",[]],["title/27-334",[63,4.985,257,6.394,402,18.614,770,28.142,1968,29.31,2511,41.029,3367,46.668,3374,61.413]],["name/27-334",[]],["text/27-334",[]],["component/27-334",[]],["title/27-335",[63,4.275,257,5.484,342,23.369,386,12.868,402,15.965,770,16.732,1456,26.347,1811,39.216,3173,63.491,3375,40.027]],["name/27-335",[]],["text/27-335",[]],["component/27-335",[]],["title/27-336",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1456,30.718,3173,41.029,3368,52.074,3375,46.668]],["name/27-336",[]],["text/27-336",[]],["component/27-336",[]],["title/27-337",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1456,30.718,3173,41.029,3369,52.074,3375,46.668]],["name/27-337",[]],["text/27-337",[]],["component/27-337",[]],["title/27-338",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,1456,30.718,3173,41.029,3370,52.074,3375,46.668]],["name/27-338",[]],["text/27-338",[]],["component/27-338",[]],["title/27-339",[63,5.604,257,7.189,402,20.929,770,21.933,1546,55.035,3173,46.131,3375,52.471]],["name/27-339",[]],["text/27-339",[]],["component/27-339",[]],["title/27-340",[63,4.275,257,5.484,402,15.965,770,16.732,928,36.133,1452,15.476,1456,26.347,3173,35.191,3371,44.664,3372,46.497,3373,46.497,3375,40.027]],["name/27-340",[]],["text/27-340",[]],["component/27-340",[]],["title/27-341",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2153,40.578,3375,52.471]],["name/27-341",[]],["text/27-341",[]],["component/27-341",[]],["title/27-342",[63,4.985,257,6.394,402,18.614,770,28.142,1968,29.31,2511,41.029,2512,54.21,3375,46.668]],["name/27-342",[]],["text/27-342",[]],["component/27-342",[]],["title/27-343",[63,4.275,257,5.484,342,23.369,386,12.868,402,15.965,770,16.732,1811,39.216,3184,72.216,3199,36.654,3376,40.027]],["name/27-343",[]],["text/27-343",[]],["component/27-343",[]],["title/27-344",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,3184,46.668,3199,42.735,3368,52.074,3376,46.668]],["name/27-344",[]],["text/27-344",[]],["component/27-344",[]],["title/27-345",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,3184,46.668,3199,42.735,3369,52.074,3376,46.668]],["name/27-345",[]],["text/27-345",[]],["component/27-345",[]],["title/27-346",[63,4.985,257,6.394,342,27.246,402,18.614,770,19.508,3184,46.668,3199,42.735,3370,52.074,3376,46.668]],["name/27-346",[]],["text/27-346",[]],["component/27-346",[]],["title/27-347",[63,5.604,257,7.189,402,20.929,770,21.933,1546,55.035,3184,52.471,3376,52.471]],["name/27-347",[]],["text/27-347",[]],["component/27-347",[]],["title/27-348",[63,4.275,257,5.484,402,15.965,770,16.732,928,36.133,1452,15.476,3184,40.027,3199,36.654,3371,44.664,3372,46.497,3373,46.497,3376,40.027]],["name/27-348",[]],["text/27-348",[]],["component/27-348",[]],["title/27-349",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,2153,40.578,3376,52.471]],["name/27-349",[]],["text/27-349",[]],["component/27-349",[]],["title/27-350",[63,4.985,257,6.394,402,18.614,770,28.142,1968,29.31,2511,41.029,3376,46.668,3377,61.413]],["name/27-350",[]],["text/27-350",[]],["component/27-350",[]],["title/27-351",[203,35.049,3378,93.114]],["name/27-351",[]],["text/27-351",[]],["component/27-351",[]],["title/27-352",[1679,93.388]],["name/27-352",[]],["text/27-352",[]],["component/27-352",[]],["title/27-353",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,3379,60.952,3380,51.408]],["name/27-353",[]],["text/27-353",[]],["component/27-353",[]],["title/27-354",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,1804,55.035,3380,51.408]],["name/27-354",[]],["text/27-354",[]],["component/27-354",[]],["title/27-355",[63,3.905,76,25.242,210,14.055,257,5.009,402,14.582,740,27.628,741,26.675,770,15.282,1356,33.479,1452,14.135,1804,38.346,3380,35.819]],["name/27-355",[]],["text/27-355",[]],["component/27-355",[]],["title/27-356",[210,10.795,257,7.189,386,16.869,402,20.929,770,21.933,1833,55.035,3380,51.408]],["name/27-356",[]],["text/27-356",[]],["component/27-356",[]],["title/27-357",[76,25.242,210,14.055,257,5.009,386,11.753,402,14.582,740,27.628,741,26.675,770,15.282,1356,33.479,1452,14.135,1833,38.346,3380,35.819]],["name/27-357",[]],["text/27-357",[]],["component/27-357",[]],["title/27-358",[63,4.985,210,13.85,257,6.394,402,18.614,770,19.508,902,41.561,1834,48.948,3380,45.722]],["name/27-358",[]],["text/27-358",[]],["component/27-358",[]],["title/27-359",[63,3.594,76,23.23,210,15.082,257,4.61,402,13.419,740,25.425,741,24.548,770,14.064,902,29.963,1356,30.809,1452,13.008,1834,35.288,3380,32.963]],["name/27-359",[]],["text/27-359",[]],["component/27-359",[]],["title/27-360",[63,5.604,257,7.189,402,20.929,484,33.713,770,21.933,2153,40.578,3380,51.408]],["name/27-360",[]],["text/27-360",[]],["component/27-360",[]],["title/27-361",[224,59.922,257,8.21,402,23.901,770,25.048,3380,58.708]],["name/27-361",[]],["text/27-361",[]],["component/27-361",[]],["title/27-362",[63,5.604,257,7.189,402,20.929,770,21.933,3173,46.131,3379,60.952,3381,51.408]],["name/27-362",[]],["text/27-362",[]],["component/27-362",[]],["title/27-363",[63,5.604,257,7.189,402,20.929,770,21.933,1804,55.035,3173,46.131,3381,51.408]],["name/27-363",[]],["text/27-363",[]],["component/27-363",[]],["title/27-364",[63,3.905,76,25.242,210,11.547,257,5.009,402,14.582,740,27.628,741,26.675,770,15.282,1356,33.479,1452,14.135,1804,38.346,3173,32.142,3381,35.819]],["name/27-364",[]],["text/27-364",[]],["component/27-364",[]],["title/27-365",[257,7.189,386,16.869,402,20.929,770,21.933,1833,55.035,3173,46.131,3381,51.408]],["name/27-365",[]],["text/27-365",[]],["component/27-365",[]],["title/27-366",[76,25.242,210,11.547,257,5.009,386,11.753,402,14.582,740,27.628,741,26.675,770,15.282,1356,33.479,1452,14.135,1833,38.346,3173,32.142,3381,35.819]],["name/27-366",[]],["text/27-366",[]],["component/27-366",[]],["title/27-367",[63,4.985,257,6.394,402,18.614,770,19.508,902,41.561,1834,48.948,3173,59.189,3381,45.722]],["name/27-367",[]],["text/27-367",[]],["component/27-367",[]],["title/27-368",[63,3.594,76,23.23,210,10.827,257,4.61,402,13.419,740,25.425,741,24.548,770,14.064,902,29.963,1356,30.809,1452,13.008,1834,35.288,3173,46.27,3381,32.963]],["name/27-368",[]],["text/27-368",[]],["component/27-368",[]],["title/27-369",[63,5.604,257,7.189,402,20.929,770,21.933,2153,40.578,3214,60.952,3381,51.408]],["name/27-369",[]],["text/27-369",[]],["component/27-369",[]],["title/27-370",[224,59.922,257,8.21,402,23.901,770,25.048,3381,58.708]],["name/27-370",[]],["text/27-370",[]],["component/27-370",[]],["title/27-371",[1756,97.219]],["name/27-371",[]],["text/27-371",[]],["component/27-371",[]],["title/27-372",[63,4.275,160,37.823,199,19.774,257,5.484,402,15.965,624,37.823,770,16.732,992,35.191,1154,17.129,1813,41.983,3382,48.95]],["name/27-372",[]],["text/27-372",[]],["component/27-372",[]],["title/27-373",[63,3.21,76,20.748,160,28.396,199,24.766,257,4.117,402,11.986,624,28.396,740,22.709,741,21.926,770,12.561,992,26.42,1154,12.86,1813,31.519,3382,36.749,3383,34.907]],["name/27-373",[]],["text/27-373",[]],["component/27-373",[]],["title/27-374",[63,4.275,199,19.774,210,8.235,257,5.484,402,15.965,770,16.732,1367,23.196,1750,37.215,1811,39.216,1813,41.983,3384,48.95]],["name/27-374",[]],["text/27-374",[]],["component/27-374",[]],["title/27-375",[63,3.21,76,20.748,199,24.766,210,6.182,257,4.117,402,11.986,740,22.709,741,21.926,770,12.561,1367,17.414,1750,27.939,1811,29.441,1813,31.519,3383,34.907,3384,36.749]],["name/27-375",[]],["text/27-375",[]],["component/27-375",[]],["title/27-376",[63,5.604,210,10.795,257,7.189,402,20.929,770,21.933,1588,56.632,1813,55.035]],["name/27-376",[]],["text/27-376",[]],["component/27-376",[]],["title/27-377",[617,74.534]],["name/27-377",[]],["text/27-377",[]],["component/27-377",[]],["title/27-378",[3110,97.219]],["name/27-378",[]],["text/27-378",[]],["component/27-378",[]],["title/27-379",[63,4.488,74,8.553,83,34.237,199,13.819,210,8.645,211,33.612,257,5.757,657,16.928,1717,46.888,2118,33.612,3385,45.352]],["name/27-379",[]],["text/27-379",[]],["component/27-379",[]],["title/27-380",[63,5.276,74,10.055,199,23.06,257,6.768,2118,39.514,3386,57.384,3387,57.384]],["name/27-380",[]],["text/27-380",[]],["component/27-380",[]],["title/27-381",[63,4.488,74,12.691,83,34.237,199,20.504,257,5.757,2118,33.612,3385,45.352,3386,48.812,3387,48.812]],["name/27-381",[]],["text/27-381",[]],["component/27-381",[]],["title/27-382",[203,35.049,3388,93.114]],["name/27-382",[]],["text/27-382",[]],["component/27-382",[]],["title/27-383",[74,17.036]],["name/27-383",[]],["text/27-383",[]],["component/27-383",[]],["title/27-384",[74,10.681,210,10.795,211,41.971,257,7.189,1028,50.451,2937,58.55,3389,64.167]],["name/27-384",[]],["text/27-384",[]],["component/27-384",[]],["title/27-385",[63,5.276,74,10.055,257,6.768,462,26.908,657,28.248,862,27.823,3390,60.411]],["name/27-385",[]],["text/27-385",[]],["component/27-385",[]],["title/27-386",[63,4.723,74,9.002,210,9.098,257,6.059,386,14.217,462,24.088,657,26.081,862,24.907,3391,54.08]],["name/27-386",[]],["text/27-386",[]],["component/27-386",[]],["title/27-387",[63,5.276,74,10.055,257,6.768,462,26.908,657,28.248,862,27.823,3392,60.411]],["name/27-387",[]],["text/27-387",[]],["component/27-387",[]],["title/27-388",[63,5.276,74,10.055,257,6.768,462,26.908,657,28.248,862,27.823,3393,60.411]],["name/27-388",[]],["text/27-388",[]],["component/27-388",[]],["title/27-389",[63,4.723,74,9.002,257,6.059,462,24.088,657,26.081,1246,37.534,1452,17.098,2175,45.231,3394,54.08]],["name/27-389",[]],["text/27-389",[]],["component/27-389",[]],["title/27-390",[63,5.276,257,6.768,657,28.248,1246,41.928,1452,19.1,2175,50.526,3395,60.411]],["name/27-390",[]],["text/27-390",[]],["component/27-390",[]],["title/27-391",[74,13.13,203,29.691,462,35.135,3396,78.881]],["name/27-391",[]],["text/27-391",[]],["component/27-391",[]],["title/27-392",[791,68.19]],["name/27-392",[]],["text/27-392",[]],["component/27-392",[]],["title/27-393",[63,4.082,76,26.386,210,16.134,257,5.236,741,27.883,791,31.136,1217,38.215,1356,34.995,1452,14.775,2058,37.441]],["name/27-393",[]],["text/27-393",[]],["component/27-393",[]],["title/27-394",[63,5.976,210,15.733,257,7.666,791,45.586,2058,54.816]],["name/27-394",[]],["text/27-394",[]],["component/27-394",[]],["title/27-395",[63,4.082,74,15.963,76,26.386,257,5.236,741,27.883,791,31.136,1217,38.215,1356,34.995,1452,14.775,2058,37.441]],["name/27-395",[]],["text/27-395",[]],["component/27-395",[]],["title/27-396",[63,5.976,74,15.566,257,7.666,791,45.586,2058,54.816]],["name/27-396",[]],["text/27-396",[]],["component/27-396",[]],["title/27-397",[63,4.082,76,26.386,199,25.79,257,5.236,741,27.883,791,31.136,1217,38.215,1356,34.995,1452,14.775,2058,37.441]],["name/27-397",[]],["text/27-397",[]],["component/27-397",[]],["title/27-398",[63,5.976,199,25.15,257,7.666,791,45.586,2058,54.816]],["name/27-398",[]],["text/27-398",[]],["component/27-398",[]],["title/27-399",[63,5.276,210,16.77,257,6.768,791,40.249,1749,49.4,3397,60.411]],["name/27-399",[]],["text/27-399",[]],["component/27-399",[]],["title/27-400",[63,5.276,210,16.77,257,6.768,791,40.249,1749,49.4,3398,60.411]],["name/27-400",[]],["text/27-400",[]],["component/27-400",[]],["title/27-401",[63,5.276,210,16.77,257,6.768,791,40.249,1749,49.4,3399,60.411]],["name/27-401",[]],["text/27-401",[]],["component/27-401",[]],["title/27-402",[63,5.276,210,16.77,257,6.768,791,40.249,1749,49.4,3400,60.411]],["name/27-402",[]],["text/27-402",[]],["component/27-402",[]],["title/27-403",[63,5.276,210,16.77,257,6.768,791,40.249,1749,49.4,3401,60.411]],["name/27-403",[]],["text/27-403",[]],["component/27-403",[]],["title/27-404",[63,4.985,74,9.499,210,9.601,257,6.394,770,19.508,2511,41.029,3402,52.074,3403,47.732,3404,57.071]],["name/27-404",[]],["text/27-404",[]],["component/27-404",[]],["title/27-405",[63,4.985,199,15.348,210,9.601,257,6.394,770,19.508,2511,41.029,3402,52.074,3403,47.732,3405,57.071]],["name/27-405",[]],["text/27-405",[]],["component/27-405",[]],["title/27-406",[63,4.985,210,13.85,257,6.394,770,19.508,2511,41.029,3402,52.074,3403,47.732,3406,57.071]],["name/27-406",[]],["text/27-406",[]],["component/27-406",[]],["title/27-407",[63,4.985,74,13.704,210,9.601,257,6.394,1167,47.732,2511,41.029,3403,47.732,3407,52.074]],["name/27-407",[]],["text/27-407",[]],["component/27-407",[]],["title/27-408",[63,4.985,199,22.14,210,9.601,257,6.394,1167,47.732,2511,41.029,3403,47.732,3407,52.074]],["name/27-408",[]],["text/27-408",[]],["component/27-408",[]],["title/27-409",[63,4.985,210,16.247,257,6.394,1167,47.732,2511,41.029,3403,47.732,3407,52.074]],["name/27-409",[]],["text/27-409",[]],["component/27-409",[]],["title/27-410",[74,11.389,210,11.51,257,7.666,791,45.586,3408,62.431,3409,62.431]],["name/27-410",[]],["text/27-410",[]],["component/27-410",[]],["title/27-411",[199,18.4,210,11.51,257,7.666,791,45.586,3408,62.431,3409,62.431]],["name/27-411",[]],["text/27-411",[]],["component/27-411",[]],["title/27-412",[210,15.733,257,7.666,791,45.586,3408,62.431,3409,62.431]],["name/27-412",[]],["text/27-412",[]],["component/27-412",[]],["title/27-413",[1021,87.782]],["name/27-413",[]],["text/27-413",[]],["component/27-413",[]],["title/27-414",[63,5.976,257,7.666,657,22.54,736,30.878,862,31.512,1022,52.869]],["name/27-414",[]],["text/27-414",[]],["component/27-414",[]],["title/27-415",[63,5.976,257,7.666,657,22.54,736,30.878,862,31.512,3410,68.422]],["name/27-415",[]],["text/27-415",[]],["component/27-415",[]],["title/27-416",[200,45.593,257,8.837,736,35.598,3411,78.881]],["name/27-416",[]],["text/27-416",[]],["component/27-416",[]],["title/27-417",[200,45.593,257,8.837,736,35.598,3412,78.881]],["name/27-417",[]],["text/27-417",[]],["component/27-417",[]],["title/27-418",[736,46.189]],["name/27-418",[]],["text/27-418",[]],["component/27-418",[]],["title/27-419",[63,5.976,210,11.51,257,7.666,386,17.987,736,30.878,3413,64.992]],["name/27-419",[]],["text/27-419",[]],["component/27-419",[]],["title/27-420",[63,5.976,257,7.666,386,17.987,736,30.878,1779,38.631,3414,68.422]],["name/27-420",[]],["text/27-420",[]],["component/27-420",[]],["title/27-421",[63,5.976,210,11.51,257,7.666,386,17.987,736,30.878,3415,62.431]],["name/27-421",[]],["text/27-421",[]],["component/27-421",[]],["title/27-422",[63,5.276,210,14.426,257,6.768,386,15.881,736,27.263,2153,38.203,3415,55.122]],["name/27-422",[]],["text/27-422",[]],["component/27-422",[]],["title/27-423",[63,5.976,74,11.389,257,7.666,736,30.878,3385,60.386,3415,62.431]],["name/27-423",[]],["text/27-423",[]],["component/27-423",[]],["title/27-424",[63,5.976,74,11.389,257,7.666,736,30.878,3385,60.386,3416,68.422]],["name/27-424",[]],["text/27-424",[]],["component/27-424",[]],["title/27-425",[63,5.604,257,7.189,736,40.375,1114,51.408,1452,20.287,1781,41.971]],["name/27-425",[]],["text/27-425",[]],["component/27-425",[]],["title/27-426",[203,25.754,210,15.733,386,17.987,2153,43.268,3417,68.422]],["name/27-426",[]],["text/27-426",[]],["component/27-426",[]],["title/27-427",[3418,83.693]],["name/27-427",[]],["text/27-427",[]],["component/27-427",[]],["title/27-428",[63,5.976,257,7.666,736,30.878,3418,55.95,3419,68.422,3420,64.992]],["name/27-428",[]],["text/27-428",[]],["component/27-428",[]],["title/27-429",[63,5.976,257,7.666,736,30.878,3413,64.992,3418,55.95,3421,64.992]],["name/27-429",[]],["text/27-429",[]],["component/27-429",[]],["title/27-430",[63,5.976,210,11.51,257,7.666,3418,55.95,3421,64.992,3422,68.422]],["name/27-430",[]],["text/27-430",[]],["component/27-430",[]],["title/27-431",[63,5.276,257,6.768,386,15.881,446,41.928,736,38.698,3418,49.4,3423,60.411]],["name/27-431",[]],["text/27-431",[]],["component/27-431",[]],["title/27-432",[63,5.276,257,6.768,386,15.881,446,41.928,736,38.698,3418,49.4,3424,60.411]],["name/27-432",[]],["text/27-432",[]],["component/27-432",[]],["title/27-433",[63,5.276,210,10.163,257,6.768,386,15.881,446,41.928,736,27.263,3418,49.4,3425,60.411]],["name/27-433",[]],["text/27-433",[]],["component/27-433",[]],["title/27-434",[203,29.691,736,35.598,3420,74.927,3426,78.881]],["name/27-434",[]],["text/27-434",[]],["component/27-434",[]],["title/27-435",[203,35.049,3427,93.114]],["name/27-435",[]],["text/27-435",[]],["component/27-435",[]],["title/27-436",[1876,97.219]],["name/27-436",[]],["text/27-436",[]],["component/27-436",[]],["title/27-437",[63,5.604,199,17.256,257,7.189,736,28.958,1624,56.632,1682,38.033,3428,64.167]],["name/27-437",[]],["text/27-437",[]],["component/27-437",[]],["title/27-438",[63,4.985,199,22.14,210,9.601,257,6.394,710,17.975,1159,21.586,1682,33.827,2511,41.029]],["name/27-438",[]],["text/27-438",[]],["component/27-438",[]],["title/27-439",[63,5.604,199,24.06,257,7.189,710,20.21,1682,38.033,3429,64.167]],["name/27-439",[]],["text/27-439",[]],["component/27-439",[]],["title/27-440",[63,4.985,74,9.499,199,22.14,257,6.394,342,27.246,710,17.975,1682,33.827,3430,46.668]],["name/27-440",[]],["text/27-440",[]],["component/27-440",[]],["title/27-441",[63,4.985,199,22.14,257,6.394,342,27.246,710,17.975,1452,18.044,1682,33.827,3430,46.668]],["name/27-441",[]],["text/27-441",[]],["component/27-441",[]],["title/27-442",[63,4.985,199,25.972,257,6.394,342,27.246,710,17.975,1682,33.827,3430,46.668]],["name/27-442",[]],["text/27-442",[]],["component/27-442",[]],["title/27-443",[63,4.985,199,22.14,210,9.601,257,6.394,342,27.246,710,17.975,1682,33.827,3430,46.668]],["name/27-443",[]],["text/27-443",[]],["component/27-443",[]],["title/27-444",[63,4.985,199,22.14,257,6.394,342,27.246,710,17.975,1682,33.827,1779,32.222,3430,46.668]],["name/27-444",[]],["text/27-444",[]],["component/27-444",[]],["title/27-445",[63,4.985,199,22.14,257,6.394,342,27.246,710,17.975,736,25.755,1682,33.827,3430,46.668]],["name/27-445",[]],["text/27-445",[]],["component/27-445",[]],["title/27-446",[63,4.985,199,22.14,257,6.394,342,27.246,657,18.8,710,17.975,1682,33.827,3430,46.668]],["name/27-446",[]],["text/27-446",[]],["component/27-446",[]],["title/27-447",[1858,97.219]],["name/27-447",[]],["text/27-447",[]],["component/27-447",[]],["title/27-448",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3404,60.411,3431,60.411]],["name/27-448",[]],["text/27-448",[]],["component/27-448",[]],["title/27-449",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3432,60.411,3433,65.008]],["name/27-449",[]],["text/27-449",[]],["component/27-449",[]],["title/27-450",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3405,60.411,3434,60.411]],["name/27-450",[]],["text/27-450",[]],["component/27-450",[]],["title/27-451",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3406,60.411,3435,60.411]],["name/27-451",[]],["text/27-451",[]],["component/27-451",[]],["title/27-452",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3436,60.411,3437,65.008]],["name/27-452",[]],["text/27-452",[]],["component/27-452",[]],["title/27-453",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3438,57.384,3439,60.411]],["name/27-453",[]],["text/27-453",[]],["component/27-453",[]],["title/27-454",[63,5.276,257,6.768,446,41.928,736,27.263,770,20.65,1691,40.64,3438,57.384,3439,60.411]],["name/27-454",[]],["text/27-454",[]],["component/27-454",[]],["title/27-455",[63,5.276,199,16.246,257,6.768,770,20.65,1682,35.807,1691,40.64,3440,57.384,3441,60.411]],["name/27-455",[]],["text/27-455",[]],["component/27-455",[]],["title/27-456",[63,5.276,257,6.768,446,41.928,657,19.901,770,20.65,1691,40.64,3440,57.384,3441,60.411]],["name/27-456",[]],["text/27-456",[]],["component/27-456",[]],["title/27-457",[63,5.976,199,18.4,257,7.666,1682,40.555,3442,68.422,3443,64.992]],["name/27-457",[]],["text/27-457",[]],["component/27-457",[]],["title/27-458",[63,5.976,199,18.4,257,7.666,1682,40.555,3444,68.422,3445,64.992]],["name/27-458",[]],["text/27-458",[]],["component/27-458",[]],["title/27-459",[63,5.976,199,18.4,257,7.666,1682,40.555,3446,68.422,3447,64.992]],["name/27-459",[]],["text/27-459",[]],["component/27-459",[]],["title/27-460",[63,5.976,199,18.4,257,7.666,1682,40.555,3448,68.422,3449,64.992]],["name/27-460",[]],["text/27-460",[]],["component/27-460",[]],["title/27-461",[63,5.976,199,18.4,257,7.666,1682,40.555,3450,68.422,3451,64.992]],["name/27-461",[]],["text/27-461",[]],["component/27-461",[]],["title/27-462",[63,5.604,74,10.681,257,7.189,386,16.869,1682,38.033,1872,53.667,3443,60.952]],["name/27-462",[]],["text/27-462",[]],["component/27-462",[]],["title/27-463",[74,11.389,257,7.666,386,17.987,1682,40.555,1874,57.225,3443,64.992]],["name/27-463",[]],["text/27-463",[]],["component/27-463",[]],["title/27-464",[63,5.604,257,7.189,386,16.869,1452,20.287,1682,38.033,1872,53.667,3445,60.952]],["name/27-464",[]],["text/27-464",[]],["component/27-464",[]],["title/27-465",[257,7.666,386,17.987,1452,21.632,1682,40.555,1874,57.225,3445,64.992]],["name/27-465",[]],["text/27-465",[]],["component/27-465",[]],["title/27-466",[63,5.604,199,17.256,257,7.189,386,16.869,1682,38.033,1872,53.667,3447,60.952]],["name/27-466",[]],["text/27-466",[]],["component/27-466",[]],["title/27-467",[199,18.4,257,7.666,386,17.987,1682,40.555,1874,57.225,3447,64.992]],["name/27-467",[]],["text/27-467",[]],["component/27-467",[]],["title/27-468",[63,5.604,210,10.795,257,7.189,386,16.869,1682,38.033,1872,53.667,3449,60.952]],["name/27-468",[]],["text/27-468",[]],["component/27-468",[]],["title/27-469",[210,11.51,257,7.666,386,17.987,1682,40.555,1874,57.225,3449,64.992]],["name/27-469",[]],["text/27-469",[]],["component/27-469",[]],["title/27-470",[63,5.604,257,7.189,386,16.869,1682,38.033,1779,36.229,1872,53.667,3451,60.952]],["name/27-470",[]],["text/27-470",[]],["component/27-470",[]],["title/27-471",[257,7.666,386,17.987,1682,40.555,1779,38.631,1874,57.225,3451,64.992]],["name/27-471",[]],["text/27-471",[]],["component/27-471",[]],["title/27-472",[1683,87.782]],["name/27-472",[]],["text/27-472",[]],["component/27-472",[]],["title/27-473",[63,5.604,142,22.902,657,29.473,710,20.21,862,29.553,1683,55.035]],["name/27-473",[]],["text/27-473",[]],["component/27-473",[]],["title/27-474",[605,81.997]],["name/27-474",[]],["text/27-474",[]],["component/27-474",[]],["title/27-475",[63,6.89,74,13.13,257,8.837,2055,69.617]],["name/27-475",[]],["text/27-475",[]],["component/27-475",[]],["title/27-476",[63,6.89,257,8.837,657,25.985,2933,71.975]],["name/27-476",[]],["text/27-476",[]],["component/27-476",[]],["title/27-477",[63,6.89,210,13.27,257,8.837,2934,71.975]],["name/27-477",[]],["text/27-477",[]],["component/27-477",[]],["title/27-478",[1681,90.329]],["name/27-478",[]],["text/27-478",[]],["component/27-478",[]],["title/27-479",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,2836,52.486,3452,57.071,3453,33.827]],["name/27-479",[]],["text/27-479",[]],["component/27-479",[]],["title/27-480",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3453,48.798,3454,57.071]],["name/27-480",[]],["text/27-480",[]],["component/27-480",[]],["title/27-481",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3453,33.827,3455,57.071,3456,34.05]],["name/27-481",[]],["text/27-481",[]],["component/27-481",[]],["title/27-482",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3453,33.827,3456,34.05,3457,57.071]],["name/27-482",[]],["text/27-482",[]],["component/27-482",[]],["title/27-483",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3453,33.827,3458,57.071,3459,34.05]],["name/27-483",[]],["text/27-483",[]],["component/27-483",[]],["title/27-484",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3453,33.827,3459,34.05,3460,57.071]],["name/27-484",[]],["text/27-484",[]],["component/27-484",[]],["title/27-485",[63,4.985,257,6.394,381,29.181,710,17.975,1850,33.609,2582,30.27,3453,33.827,3461,57.071,3462,34.28]],["name/27-485",[]],["text/27-485",[]],["component/27-485",[]],["title/27-486",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3453,33.827,3462,34.28,3463,57.071,3464,34.516]],["name/27-486",[]],["text/27-486",[]],["component/27-486",[]],["title/27-487",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3453,33.827,3456,34.05,3465,57.071]],["name/27-487",[]],["text/27-487",[]],["component/27-487",[]],["title/27-488",[63,4.985,257,6.394,381,29.181,477,36.437,710,17.975,1848,32.987,2582,30.27,3466,57.071]],["name/27-488",[]],["text/27-488",[]],["component/27-488",[]],["title/27-489",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3456,34.05,3459,34.05,3467,57.071]],["name/27-489",[]],["text/27-489",[]],["component/27-489",[]],["title/27-490",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1845,32.987,1848,32.987,2582,30.27,3468,57.071]],["name/27-490",[]],["text/27-490",[]],["component/27-490",[]],["title/27-491",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1845,32.987,2582,30.27,3469,57.071,3470,33.827]],["name/27-491",[]],["text/27-491",[]],["component/27-491",[]],["title/27-492",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1850,33.609,2582,30.27,3470,33.827,3471,57.071]],["name/27-492",[]],["text/27-492",[]],["component/27-492",[]],["title/27-493",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1850,33.609,2582,30.27,3464,34.516,3472,57.071]],["name/27-493",[]],["text/27-493",[]],["component/27-493",[]],["title/27-494",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3464,34.516,3473,57.071,3474,34.759]],["name/27-494",[]],["text/27-494",[]],["component/27-494",[]],["title/27-495",[63,4.985,199,15.348,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3474,34.759,3475,57.071]],["name/27-495",[]],["text/27-495",[]],["component/27-495",[]],["title/27-496",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3453,33.827,3456,34.05,3476,57.071]],["name/27-496",[]],["text/27-496",[]],["component/27-496",[]],["title/27-497",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3456,34.05,3459,34.05,3477,57.071]],["name/27-497",[]],["text/27-497",[]],["component/27-497",[]],["title/27-498",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3456,49.121,3478,57.071]],["name/27-498",[]],["text/27-498",[]],["component/27-498",[]],["title/27-499",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3459,34.05,3470,33.827,3479,57.071]],["name/27-499",[]],["text/27-499",[]],["component/27-499",[]],["title/27-500",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3462,34.28,3470,33.827,3480,57.071]],["name/27-500",[]],["text/27-500",[]],["component/27-500",[]],["title/27-501",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3462,34.28,3474,34.759,3481,57.071]],["name/27-501",[]],["text/27-501",[]],["component/27-501",[]],["title/27-502",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3453,33.827,3459,34.05,3482,57.071]],["name/27-502",[]],["text/27-502",[]],["component/27-502",[]],["title/27-503",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1845,32.987,1848,32.987,2582,30.27,3483,57.071]],["name/27-503",[]],["text/27-503",[]],["component/27-503",[]],["title/27-504",[63,4.985,257,6.394,381,29.181,710,17.975,1848,47.586,2582,30.27,3470,33.827,3484,57.071]],["name/27-504",[]],["text/27-504",[]],["component/27-504",[]],["title/27-505",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,1848,32.987,1850,33.609,2582,30.27,3485,57.071]],["name/27-505",[]],["text/27-505",[]],["component/27-505",[]],["title/27-506",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3464,34.516,3470,33.827,3486,57.071]],["name/27-506",[]],["text/27-506",[]],["component/27-506",[]],["title/27-507",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,1850,33.609,2582,30.27,3474,34.759,3487,57.071]],["name/27-507",[]],["text/27-507",[]],["component/27-507",[]],["title/27-508",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3464,34.516,3488,57.071]],["name/27-508",[]],["text/27-508",[]],["component/27-508",[]],["title/27-509",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3453,33.827,3459,34.05,3489,57.071]],["name/27-509",[]],["text/27-509",[]],["component/27-509",[]],["title/27-510",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3459,34.05,3470,33.827,3490,57.071]],["name/27-510",[]],["text/27-510",[]],["component/27-510",[]],["title/27-511",[63,4.985,257,6.394,381,29.181,710,17.975,1850,33.609,2582,30.27,3459,49.121,3491,57.071]],["name/27-511",[]],["text/27-511",[]],["component/27-511",[]],["title/27-512",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3459,34.05,3462,34.28,3492,57.071]],["name/27-512",[]],["text/27-512",[]],["component/27-512",[]],["title/27-513",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,2582,30.27,3459,34.05,3462,34.28,3493,57.071]],["name/27-513",[]],["text/27-513",[]],["component/27-513",[]],["title/27-514",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1845,32.987,2582,30.27,3470,33.827,3494,57.071]],["name/27-514",[]],["text/27-514",[]],["component/27-514",[]],["title/27-515",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,1848,32.987,1850,33.609,2582,30.27,3495,57.071]],["name/27-515",[]],["text/27-515",[]],["component/27-515",[]],["title/27-516",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3459,34.05,3462,34.28,3496,57.071]],["name/27-516",[]],["text/27-516",[]],["component/27-516",[]],["title/27-517",[63,4.985,257,6.394,381,29.181,710,17.975,1845,47.586,2582,30.27,3464,34.516,3497,57.071]],["name/27-517",[]],["text/27-517",[]],["component/27-517",[]],["title/27-518",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3470,33.827,3474,34.759,3498,57.071]],["name/27-518",[]],["text/27-518",[]],["component/27-518",[]],["title/27-519",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,1845,32.987,1850,33.609,2582,30.27,3499,57.071]],["name/27-519",[]],["text/27-519",[]],["component/27-519",[]],["title/27-520",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1850,33.609,2582,30.27,3470,33.827,3500,57.071]],["name/27-520",[]],["text/27-520",[]],["component/27-520",[]],["title/27-521",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3462,34.28,3470,33.827,3501,57.071]],["name/27-521",[]],["text/27-521",[]],["component/27-521",[]],["title/27-522",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3464,34.516,3470,33.827,3502,57.071]],["name/27-522",[]],["text/27-522",[]],["component/27-522",[]],["title/27-523",[63,4.985,257,6.394,381,29.181,710,17.975,1845,32.987,2582,30.27,3470,33.827,3474,34.759,3503,57.071]],["name/27-523",[]],["text/27-523",[]],["component/27-523",[]],["title/27-524",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,2582,30.27,3470,48.798,3504,57.071]],["name/27-524",[]],["text/27-524",[]],["component/27-524",[]],["title/27-525",[63,4.985,257,6.394,381,29.181,710,17.975,1850,33.609,2582,30.27,3453,33.827,3462,34.28,3505,57.071]],["name/27-525",[]],["text/27-525",[]],["component/27-525",[]],["title/27-526",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,1850,33.609,2582,30.27,3464,34.516,3506,57.071]],["name/27-526",[]],["text/27-526",[]],["component/27-526",[]],["title/27-527",[63,4.985,257,6.394,381,29.181,710,17.975,1848,32.987,1850,33.609,2582,30.27,3474,34.759,3507,57.071]],["name/27-527",[]],["text/27-527",[]],["component/27-527",[]],["title/27-528",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,1845,32.987,1850,33.609,2582,30.27,3508,57.071]],["name/27-528",[]],["text/27-528",[]],["component/27-528",[]],["title/27-529",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3453,33.827,3462,34.28,3464,34.516,3509,57.071]],["name/27-529",[]],["text/27-529",[]],["component/27-529",[]],["title/27-530",[63,4.985,257,6.394,381,29.181,710,17.975,2582,30.27,3456,34.05,3462,34.28,3474,34.759,3510,57.071]],["name/27-530",[]],["text/27-530",[]],["component/27-530",[]],["title/27-531",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,2582,30.27,3459,34.05,3462,34.28,3511,57.071]],["name/27-531",[]],["text/27-531",[]],["component/27-531",[]],["title/27-532",[63,4.985,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3464,34.516,3474,34.759,3512,57.071]],["name/27-532",[]],["text/27-532",[]],["component/27-532",[]],["title/27-533",[63,4.985,199,15.348,257,6.394,381,29.181,710,17.975,1848,32.987,2582,30.27,3464,34.516,3513,57.071]],["name/27-533",[]],["text/27-533",[]],["component/27-533",[]],["title/27-534",[63,4.985,199,15.348,257,6.394,381,29.181,477,25.258,710,17.975,2582,30.27,3474,34.759,3514,57.071]],["name/27-534",[]],["text/27-534",[]],["component/27-534",[]],["title/27-535",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3453,33.827,3515,57.071]],["name/27-535",[]],["text/27-535",[]],["component/27-535",[]],["title/27-536",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3453,45.193,3516,51.387]],["name/27-536",[]],["text/27-536",[]],["component/27-536",[]],["title/27-537",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,2836,36.383,3517,57.071]],["name/27-537",[]],["text/27-537",[]],["component/27-537",[]],["title/27-538",[63,4.488,257,5.757,386,13.509,402,16.76,477,33.745,710,16.185,1154,17.982,1159,19.436,2836,32.76,3518,51.387]],["name/27-538",[]],["text/27-538",[]],["component/27-538",[]],["title/27-539",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3453,33.827,3519,57.071]],["name/27-539",[]],["text/27-539",[]],["component/27-539",[]],["title/27-540",[63,4.488,257,5.757,386,13.509,402,16.76,477,33.745,710,16.185,1154,17.982,1159,19.436,3453,30.458,3520,51.387]],["name/27-540",[]],["text/27-540",[]],["component/27-540",[]],["title/27-541",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3456,34.05,3521,57.071]],["name/27-541",[]],["text/27-541",[]],["component/27-541",[]],["title/27-542",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3456,45.492,3522,51.387]],["name/27-542",[]],["text/27-542",[]],["component/27-542",[]],["title/27-543",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3456,34.05,3523,57.071]],["name/27-543",[]],["text/27-543",[]],["component/27-543",[]],["title/27-544",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3456,45.492,3524,51.387]],["name/27-544",[]],["text/27-544",[]],["component/27-544",[]],["title/27-545",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3456,34.05,3525,57.071]],["name/27-545",[]],["text/27-545",[]],["component/27-545",[]],["title/27-546",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3456,45.492,3526,51.387]],["name/27-546",[]],["text/27-546",[]],["component/27-546",[]],["title/27-547",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,2836,36.383,3527,57.071]],["name/27-547",[]],["text/27-547",[]],["component/27-547",[]],["title/27-548",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,44.07,2836,32.76,3528,51.387]],["name/27-548",[]],["text/27-548",[]],["component/27-548",[]],["title/27-549",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3453,33.827,3529,57.071]],["name/27-549",[]],["text/27-549",[]],["component/27-549",[]],["title/27-550",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,44.07,3453,30.458,3530,51.387]],["name/27-550",[]],["text/27-550",[]],["component/27-550",[]],["title/27-551",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,1848,32.987,3531,57.071]],["name/27-551",[]],["text/27-551",[]],["component/27-551",[]],["title/27-552",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,1848,44.07,3532,51.387]],["name/27-552",[]],["text/27-552",[]],["component/27-552",[]],["title/27-553",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3456,34.05,3533,57.071]],["name/27-553",[]],["text/27-553",[]],["component/27-553",[]],["title/27-554",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,44.07,3456,30.66,3534,51.387]],["name/27-554",[]],["text/27-554",[]],["component/27-554",[]],["title/27-555",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3459,34.05,3535,57.071]],["name/27-555",[]],["text/27-555",[]],["component/27-555",[]],["title/27-556",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3459,45.492,3536,51.387]],["name/27-556",[]],["text/27-556",[]],["component/27-556",[]],["title/27-557",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3459,34.05,3537,57.071]],["name/27-557",[]],["text/27-557",[]],["component/27-557",[]],["title/27-558",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3459,45.492,3538,51.387]],["name/27-558",[]],["text/27-558",[]],["component/27-558",[]],["title/27-559",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3459,34.05,3539,57.071]],["name/27-559",[]],["text/27-559",[]],["component/27-559",[]],["title/27-560",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3459,45.492,3540,51.387]],["name/27-560",[]],["text/27-560",[]],["component/27-560",[]],["title/27-561",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3459,34.05,3541,57.071]],["name/27-561",[]],["text/27-561",[]],["component/27-561",[]],["title/27-562",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3459,45.492,3542,51.387]],["name/27-562",[]],["text/27-562",[]],["component/27-562",[]],["title/27-563",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3459,34.05,3543,57.071]],["name/27-563",[]],["text/27-563",[]],["component/27-563",[]],["title/27-564",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3459,45.492,3544,51.387]],["name/27-564",[]],["text/27-564",[]],["component/27-564",[]],["title/27-565",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,2836,36.383,3545,57.071]],["name/27-565",[]],["text/27-565",[]],["component/27-565",[]],["title/27-566",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,44.07,2836,32.76,3546,51.387]],["name/27-566",[]],["text/27-566",[]],["component/27-566",[]],["title/27-567",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3453,33.827,3547,57.071]],["name/27-567",[]],["text/27-567",[]],["component/27-567",[]],["title/27-568",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,44.07,3453,30.458,3548,51.387]],["name/27-568",[]],["text/27-568",[]],["component/27-568",[]],["title/27-569",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,1845,32.987,3549,57.071]],["name/27-569",[]],["text/27-569",[]],["component/27-569",[]],["title/27-570",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,1845,44.07,3550,51.387]],["name/27-570",[]],["text/27-570",[]],["component/27-570",[]],["title/27-571",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3456,34.05,3551,57.071]],["name/27-571",[]],["text/27-571",[]],["component/27-571",[]],["title/27-572",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,44.07,3456,30.66,3552,51.387]],["name/27-572",[]],["text/27-572",[]],["component/27-572",[]],["title/27-573",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,1848,32.987,3553,57.071]],["name/27-573",[]],["text/27-573",[]],["component/27-573",[]],["title/27-574",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,44.07,1848,29.702,3554,51.387]],["name/27-574",[]],["text/27-574",[]],["component/27-574",[]],["title/27-575",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3459,34.05,3555,57.071]],["name/27-575",[]],["text/27-575",[]],["component/27-575",[]],["title/27-576",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,44.07,3459,30.66,3556,51.387]],["name/27-576",[]],["text/27-576",[]],["component/27-576",[]],["title/27-577",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3470,33.827,3557,57.071]],["name/27-577",[]],["text/27-577",[]],["component/27-577",[]],["title/27-578",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3470,45.193,3558,51.387]],["name/27-578",[]],["text/27-578",[]],["component/27-578",[]],["title/27-579",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3470,33.827,3559,57.071]],["name/27-579",[]],["text/27-579",[]],["component/27-579",[]],["title/27-580",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3470,45.193,3560,51.387]],["name/27-580",[]],["text/27-580",[]],["component/27-580",[]],["title/27-581",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3470,33.827,3561,57.071]],["name/27-581",[]],["text/27-581",[]],["component/27-581",[]],["title/27-582",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3470,45.193,3562,51.387]],["name/27-582",[]],["text/27-582",[]],["component/27-582",[]],["title/27-583",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3470,33.827,3563,57.071]],["name/27-583",[]],["text/27-583",[]],["component/27-583",[]],["title/27-584",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3470,45.193,3564,51.387]],["name/27-584",[]],["text/27-584",[]],["component/27-584",[]],["title/27-585",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3470,33.827,3565,57.071]],["name/27-585",[]],["text/27-585",[]],["component/27-585",[]],["title/27-586",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3470,45.193,3566,51.387]],["name/27-586",[]],["text/27-586",[]],["component/27-586",[]],["title/27-587",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3459,34.05,3470,33.827,3567,57.071]],["name/27-587",[]],["text/27-587",[]],["component/27-587",[]],["title/27-588",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3459,30.66,3470,45.193,3568,51.387]],["name/27-588",[]],["text/27-588",[]],["component/27-588",[]],["title/27-589",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3470,33.827,3569,57.071]],["name/27-589",[]],["text/27-589",[]],["component/27-589",[]],["title/27-590",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,3470,45.193,3570,51.387]],["name/27-590",[]],["text/27-590",[]],["component/27-590",[]],["title/27-591",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,2836,36.383,3571,57.071]],["name/27-591",[]],["text/27-591",[]],["component/27-591",[]],["title/27-592",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,44.902,2836,32.76,3572,51.387]],["name/27-592",[]],["text/27-592",[]],["component/27-592",[]],["title/27-593",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3453,33.827,3573,57.071]],["name/27-593",[]],["text/27-593",[]],["component/27-593",[]],["title/27-594",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,44.902,3453,30.458,3574,51.387]],["name/27-594",[]],["text/27-594",[]],["component/27-594",[]],["title/27-595",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,1850,33.609,3575,57.071]],["name/27-595",[]],["text/27-595",[]],["component/27-595",[]],["title/27-596",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,1850,44.902,3576,51.387]],["name/27-596",[]],["text/27-596",[]],["component/27-596",[]],["title/27-597",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3456,34.05,3577,57.071]],["name/27-597",[]],["text/27-597",[]],["component/27-597",[]],["title/27-598",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,44.902,3456,30.66,3578,51.387]],["name/27-598",[]],["text/27-598",[]],["component/27-598",[]],["title/27-599",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,1850,33.609,3579,57.071]],["name/27-599",[]],["text/27-599",[]],["component/27-599",[]],["title/27-600",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,1850,44.902,3580,51.387]],["name/27-600",[]],["text/27-600",[]],["component/27-600",[]],["title/27-601",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3459,34.05,3581,57.071]],["name/27-601",[]],["text/27-601",[]],["component/27-601",[]],["title/27-602",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,44.902,3459,30.66,3582,51.387]],["name/27-602",[]],["text/27-602",[]],["component/27-602",[]],["title/27-603",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,1850,33.609,3583,57.071]],["name/27-603",[]],["text/27-603",[]],["component/27-603",[]],["title/27-604",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,1850,44.902,3584,51.387]],["name/27-604",[]],["text/27-604",[]],["component/27-604",[]],["title/27-605",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3470,33.827,3585,57.071]],["name/27-605",[]],["text/27-605",[]],["component/27-605",[]],["title/27-606",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,44.902,3470,30.458,3586,51.387]],["name/27-606",[]],["text/27-606",[]],["component/27-606",[]],["title/27-607",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3462,34.28,3587,57.071]],["name/27-607",[]],["text/27-607",[]],["component/27-607",[]],["title/27-608",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3462,45.799,3588,51.387]],["name/27-608",[]],["text/27-608",[]],["component/27-608",[]],["title/27-609",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3462,34.28,3589,57.071]],["name/27-609",[]],["text/27-609",[]],["component/27-609",[]],["title/27-610",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3462,45.799,3590,51.387]],["name/27-610",[]],["text/27-610",[]],["component/27-610",[]],["title/27-611",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3462,34.28,3591,57.071]],["name/27-611",[]],["text/27-611",[]],["component/27-611",[]],["title/27-612",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3462,45.799,3592,51.387]],["name/27-612",[]],["text/27-612",[]],["component/27-612",[]],["title/27-613",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3462,34.28,3593,57.071]],["name/27-613",[]],["text/27-613",[]],["component/27-613",[]],["title/27-614",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3462,45.799,3594,51.387]],["name/27-614",[]],["text/27-614",[]],["component/27-614",[]],["title/27-615",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3462,34.28,3595,57.071]],["name/27-615",[]],["text/27-615",[]],["component/27-615",[]],["title/27-616",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3462,45.799,3596,51.387]],["name/27-616",[]],["text/27-616",[]],["component/27-616",[]],["title/27-617",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3459,34.05,3462,34.28,3597,57.071]],["name/27-617",[]],["text/27-617",[]],["component/27-617",[]],["title/27-618",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3459,30.66,3462,45.799,3598,51.387]],["name/27-618",[]],["text/27-618",[]],["component/27-618",[]],["title/27-619",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3462,34.28,3599,57.071]],["name/27-619",[]],["text/27-619",[]],["component/27-619",[]],["title/27-620",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,3462,45.799,3600,51.387]],["name/27-620",[]],["text/27-620",[]],["component/27-620",[]],["title/27-621",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3462,34.28,3470,33.827,3601,57.071]],["name/27-621",[]],["text/27-621",[]],["component/27-621",[]],["title/27-622",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3462,45.799,3470,30.458,3602,51.387]],["name/27-622",[]],["text/27-622",[]],["component/27-622",[]],["title/27-623",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3462,34.28,3603,57.071]],["name/27-623",[]],["text/27-623",[]],["component/27-623",[]],["title/27-624",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,30.262,3462,45.799,3604,51.387]],["name/27-624",[]],["text/27-624",[]],["component/27-624",[]],["title/27-625",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3464,34.516,3605,57.071]],["name/27-625",[]],["text/27-625",[]],["component/27-625",[]],["title/27-626",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3464,46.114,3606,51.387]],["name/27-626",[]],["text/27-626",[]],["component/27-626",[]],["title/27-627",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3464,34.516,3607,57.071]],["name/27-627",[]],["text/27-627",[]],["component/27-627",[]],["title/27-628",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3464,46.114,3608,51.387]],["name/27-628",[]],["text/27-628",[]],["component/27-628",[]],["title/27-629",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3464,34.516,3609,57.071]],["name/27-629",[]],["text/27-629",[]],["component/27-629",[]],["title/27-630",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3464,46.114,3610,51.387]],["name/27-630",[]],["text/27-630",[]],["component/27-630",[]],["title/27-631",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3464,34.516,3611,57.071]],["name/27-631",[]],["text/27-631",[]],["component/27-631",[]],["title/27-632",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3464,46.114,3612,51.387]],["name/27-632",[]],["text/27-632",[]],["component/27-632",[]],["title/27-633",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3464,34.516,3613,57.071]],["name/27-633",[]],["text/27-633",[]],["component/27-633",[]],["title/27-634",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3464,46.114,3614,51.387]],["name/27-634",[]],["text/27-634",[]],["component/27-634",[]],["title/27-635",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3459,34.05,3464,34.516,3615,57.071]],["name/27-635",[]],["text/27-635",[]],["component/27-635",[]],["title/27-636",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3459,30.66,3464,46.114,3616,51.387]],["name/27-636",[]],["text/27-636",[]],["component/27-636",[]],["title/27-637",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3464,34.516,3617,57.071]],["name/27-637",[]],["text/27-637",[]],["component/27-637",[]],["title/27-638",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,3464,46.114,3618,51.387]],["name/27-638",[]],["text/27-638",[]],["component/27-638",[]],["title/27-639",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3464,34.516,3470,33.827,3619,57.071]],["name/27-639",[]],["text/27-639",[]],["component/27-639",[]],["title/27-640",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3464,46.114,3470,30.458,3620,51.387]],["name/27-640",[]],["text/27-640",[]],["component/27-640",[]],["title/27-641",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3464,34.516,3621,57.071]],["name/27-641",[]],["text/27-641",[]],["component/27-641",[]],["title/27-642",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,30.262,3464,46.114,3622,51.387]],["name/27-642",[]],["text/27-642",[]],["component/27-642",[]],["title/27-643",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3462,34.28,3464,34.516,3623,57.071]],["name/27-643",[]],["text/27-643",[]],["component/27-643",[]],["title/27-644",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3462,30.866,3464,46.114,3624,51.387]],["name/27-644",[]],["text/27-644",[]],["component/27-644",[]],["title/27-645",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3474,34.759,3625,57.071]],["name/27-645",[]],["text/27-645",[]],["component/27-645",[]],["title/27-646",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3474,46.439,3626,51.387]],["name/27-646",[]],["text/27-646",[]],["component/27-646",[]],["title/27-647",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3474,34.759,3627,57.071]],["name/27-647",[]],["text/27-647",[]],["component/27-647",[]],["title/27-648",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3474,46.439,3628,51.387]],["name/27-648",[]],["text/27-648",[]],["component/27-648",[]],["title/27-649",[63,4.985,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3474,34.759,3629,57.071]],["name/27-649",[]],["text/27-649",[]],["component/27-649",[]],["title/27-650",[63,4.488,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3474,46.439,3630,51.387]],["name/27-650",[]],["text/27-650",[]],["component/27-650",[]],["title/27-651",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3474,34.759,3631,57.071]],["name/27-651",[]],["text/27-651",[]],["component/27-651",[]],["title/27-652",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3474,46.439,3632,51.387]],["name/27-652",[]],["text/27-652",[]],["component/27-652",[]],["title/27-653",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3474,34.759,3633,57.071]],["name/27-653",[]],["text/27-653",[]],["component/27-653",[]],["title/27-654",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3474,46.439,3634,51.387]],["name/27-654",[]],["text/27-654",[]],["component/27-654",[]],["title/27-655",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3459,34.05,3474,34.759,3635,57.071]],["name/27-655",[]],["text/27-655",[]],["component/27-655",[]],["title/27-656",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3459,30.66,3474,46.439,3636,51.387]],["name/27-656",[]],["text/27-656",[]],["component/27-656",[]],["title/27-657",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3474,34.759,3637,57.071]],["name/27-657",[]],["text/27-657",[]],["component/27-657",[]],["title/27-658",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,3474,46.439,3638,51.387]],["name/27-658",[]],["text/27-658",[]],["component/27-658",[]],["title/27-659",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3470,33.827,3474,34.759,3639,57.071]],["name/27-659",[]],["text/27-659",[]],["component/27-659",[]],["title/27-660",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3470,30.458,3474,46.439,3640,51.387]],["name/27-660",[]],["text/27-660",[]],["component/27-660",[]],["title/27-661",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3474,34.759,3641,57.071]],["name/27-661",[]],["text/27-661",[]],["component/27-661",[]],["title/27-662",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,30.262,3474,46.439,3642,51.387]],["name/27-662",[]],["text/27-662",[]],["component/27-662",[]],["title/27-663",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3462,34.28,3474,34.759,3643,57.071]],["name/27-663",[]],["text/27-663",[]],["component/27-663",[]],["title/27-664",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3462,30.866,3474,46.439,3644,51.387]],["name/27-664",[]],["text/27-664",[]],["component/27-664",[]],["title/27-665",[63,4.985,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3464,34.516,3474,34.759,3645,57.071]],["name/27-665",[]],["text/27-665",[]],["component/27-665",[]],["title/27-666",[63,4.488,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3464,31.079,3474,46.439,3646,51.387]],["name/27-666",[]],["text/27-666",[]],["component/27-666",[]],["title/27-667",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,2836,36.383,3647,57.071]],["name/27-667",[]],["text/27-667",[]],["component/27-667",[]],["title/27-668",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,2836,32.76,3648,51.387]],["name/27-668",[]],["text/27-668",[]],["component/27-668",[]],["title/27-669",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3453,33.827,3649,57.071]],["name/27-669",[]],["text/27-669",[]],["component/27-669",[]],["title/27-670",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3453,30.458,3650,51.387]],["name/27-670",[]],["text/27-670",[]],["component/27-670",[]],["title/27-671",[63,4.985,199,15.348,257,6.394,402,18.614,477,25.258,710,17.975,1154,19.971,1159,21.586,3651,57.071]],["name/27-671",[]],["text/27-671",[]],["component/27-671",[]],["title/27-672",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,477,22.742,710,16.185,1154,17.982,1159,19.436,3652,51.387]],["name/27-672",[]],["text/27-672",[]],["component/27-672",[]],["title/27-673",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3456,34.05,3653,57.071]],["name/27-673",[]],["text/27-673",[]],["component/27-673",[]],["title/27-674",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3456,30.66,3654,51.387]],["name/27-674",[]],["text/27-674",[]],["component/27-674",[]],["title/27-675",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1848,32.987,3655,57.071]],["name/27-675",[]],["text/27-675",[]],["component/27-675",[]],["title/27-676",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1848,29.702,3656,51.387]],["name/27-676",[]],["text/27-676",[]],["component/27-676",[]],["title/27-677",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3459,34.05,3657,57.071]],["name/27-677",[]],["text/27-677",[]],["component/27-677",[]],["title/27-678",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3459,30.66,3658,51.387]],["name/27-678",[]],["text/27-678",[]],["component/27-678",[]],["title/27-679",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1845,32.987,3659,57.071]],["name/27-679",[]],["text/27-679",[]],["component/27-679",[]],["title/27-680",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1845,29.702,3660,51.387]],["name/27-680",[]],["text/27-680",[]],["component/27-680",[]],["title/27-681",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3470,33.827,3661,57.071]],["name/27-681",[]],["text/27-681",[]],["component/27-681",[]],["title/27-682",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3470,30.458,3662,51.387]],["name/27-682",[]],["text/27-682",[]],["component/27-682",[]],["title/27-683",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,1850,33.609,3663,57.071]],["name/27-683",[]],["text/27-683",[]],["component/27-683",[]],["title/27-684",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,1850,30.262,3664,51.387]],["name/27-684",[]],["text/27-684",[]],["component/27-684",[]],["title/27-685",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3462,34.28,3665,57.071]],["name/27-685",[]],["text/27-685",[]],["component/27-685",[]],["title/27-686",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3462,30.866,3666,51.387]],["name/27-686",[]],["text/27-686",[]],["component/27-686",[]],["title/27-687",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3464,34.516,3667,57.071]],["name/27-687",[]],["text/27-687",[]],["component/27-687",[]],["title/27-688",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3464,31.079,3668,51.387]],["name/27-688",[]],["text/27-688",[]],["component/27-688",[]],["title/27-689",[63,4.985,199,15.348,257,6.394,402,18.614,710,17.975,1154,19.971,1159,21.586,3474,34.759,3669,57.071]],["name/27-689",[]],["text/27-689",[]],["component/27-689",[]],["title/27-690",[63,4.488,199,20.504,257,5.757,386,13.509,402,16.76,710,16.185,1154,17.982,1159,19.436,3474,31.298,3670,51.387]],["name/27-690",[]],["text/27-690",[]],["component/27-690",[]],["title/27-691",[203,35.049,3671,93.114]],["name/27-691",[]],["text/27-691",[]],["component/27-691",[]],["title/27-692",[2152,93.388]],["name/27-692",[]],["text/27-692",[]],["component/27-692",[]],["title/27-693",[210,13.27,257,8.837,481,55.365,2152,71.975]],["name/27-693",[]],["text/27-693",[]],["component/27-693",[]],["title/27-694",[200,45.593,210,13.27,257,8.837,712,58.227]],["name/27-694",[]],["text/27-694",[]],["component/27-694",[]],["title/27-695",[200,45.593,210,13.27,257,8.837,3672,78.881]],["name/27-695",[]],["text/27-695",[]],["component/27-695",[]],["title/27-696",[200,45.593,210,13.27,257,8.837,3673,78.881]],["name/27-696",[]],["text/27-696",[]],["component/27-696",[]],["title/27-697",[200,45.593,210,13.27,257,8.837,3674,78.881]],["name/27-697",[]],["text/27-697",[]],["component/27-697",[]],["title/27-698",[200,45.593,210,13.27,257,8.837,3675,78.881]],["name/27-698",[]],["text/27-698",[]],["component/27-698",[]],["title/27-699",[200,45.593,210,13.27,257,8.837,3676,78.881]],["name/27-699",[]],["text/27-699",[]],["component/27-699",[]],["title/27-700",[200,45.593,210,13.27,257,8.837,3677,78.881]],["name/27-700",[]],["text/27-700",[]],["component/27-700",[]],["title/27-701",[200,45.593,210,13.27,257,8.837,3678,78.881]],["name/27-701",[]],["text/27-701",[]],["component/27-701",[]],["title/27-702",[200,45.593,210,13.27,257,8.837,3679,78.881]],["name/27-702",[]],["text/27-702",[]],["component/27-702",[]],["title/27-703",[200,45.593,210,13.27,257,8.837,3680,78.881]],["name/27-703",[]],["text/27-703",[]],["component/27-703",[]],["title/27-704",[1695,93.388]],["name/27-704",[]],["text/27-704",[]],["component/27-704",[]],["title/27-705",[63,5.604,210,15.051,257,7.189,1452,20.287,1781,41.971,1829,60.952]],["name/27-705",[]],["text/27-705",[]],["component/27-705",[]],["title/27-706",[63,5.604,210,15.051,257,7.189,1452,20.287,1781,41.971,3681,64.167]],["name/27-706",[]],["text/27-706",[]],["component/27-706",[]],["title/27",[675,68.853]],["name/27",[675,0.188]],["text/27",[3,0.229,4,0.422,5,0.023,6,2.673,10,0.463,11,0.03,12,0.269,14,1.565,17,0.146,23,0.255,26,0.801,28,0.397,29,1.154,32,0.018,33,0.025,36,0.177,37,0.027,39,0.146,42,0.389,48,0.071,51,0.029,52,0.057,53,0.083,58,0.092,59,0.235,60,0.096,62,0.546,63,0.602,65,0.051,66,0.047,67,0.051,69,0.47,73,0.088,74,0.245,76,2.693,78,0.017,80,0.999,83,0.302,84,1.283,85,0.178,88,0.554,89,0.413,92,0.081,93,0.202,96,0.126,97,1.451,99,0.172,100,0.108,101,0.029,102,0.061,103,0.026,104,0.13,105,0.497,106,0.344,108,0.472,109,0.03,110,0.054,111,0.102,113,0.108,116,0.413,117,1.982,119,0.08,121,0.358,122,0.181,125,0.366,126,0.032,127,0.396,131,0.392,132,0.112,134,0.443,135,0.099,136,0.249,137,0.162,138,0.142,139,0.027,140,0.121,141,0.028,142,0.094,143,0.027,144,0.075,145,0.345,150,0.117,153,0.235,159,0.095,160,0.203,161,0.025,162,0.18,163,0.025,171,0.41,172,0.229,173,0.405,174,0.146,178,0.491,179,0.054,181,0.194,183,0.207,184,0.47,185,0.025,186,0.537,190,0.153,193,0.405,194,0.09,199,0.26,200,0.439,202,0.469,203,0.375,205,0.083,208,0.292,210,0.318,211,0.129,213,0.051,214,1.989,216,0.443,217,0.128,218,0.027,219,0.178,220,0.099,221,0.694,222,0.059,223,0.025,224,0.345,242,0.063,244,0.028,245,0.2,247,0.128,248,0.057,249,0.106,252,0.13,254,0.025,257,0.065,260,0.381,261,0.053,262,0.056,263,0.488,264,0.052,265,0.121,266,0.081,270,0.252,271,0.576,272,0.033,273,0.026,274,0.126,275,0.027,276,0.094,277,0.715,282,0.165,283,0.214,284,0.026,289,0.157,296,0.104,297,0.065,298,0.842,299,0.028,300,0.026,301,0.029,304,0.025,305,0.053,306,0.321,309,0.08,310,0.077,311,0.048,312,0.029,313,0.029,314,0.057,315,0.053,318,0.625,319,0.519,321,0.054,323,0.277,324,0.063,326,0.389,327,0.215,328,0.345,332,0.188,333,0.225,334,0.08,335,0.059,337,0.151,339,1.943,340,2.104,341,1.209,342,2.328,343,0.111,351,0.239,352,0.769,356,0.215,357,0.063,358,0.094,359,0.146,360,0.675,361,0.026,362,0.054,364,0.102,366,0.025,369,0.158,372,0.714,374,0.03,376,0.583,378,0.032,381,0.902,382,0.228,384,0.075,385,0.43,386,1.914,391,0.053,393,0.232,394,0.13,396,0.03,397,0.381,399,0.174,401,0.83,402,1.566,404,0.03,405,0.029,408,0.405,410,0.032,414,0.368,417,0.457,418,0.08,422,0.025,423,0.132,425,0.081,427,0.138,428,0.029,429,0.273,431,0.132,438,0.404,441,0.028,442,0.025,444,0.047,445,0.056,446,0.85,447,0.053,449,0.028,451,0.675,454,0.358,455,0.051,456,0.21,460,0.339,461,0.059,462,0.174,463,0.062,464,0.33,465,0.292,466,0.03,467,0.072,468,0.053,471,0.088,474,0.181,476,0.225,477,0.044,480,0.091,481,0.162,484,0.104,490,0.135,493,0.027,497,0.095,499,0.03,504,0.243,506,0.028,507,0.122,509,0.08,511,0.15,516,0.539,517,0.106,518,0.056,519,0.032,521,0.032,523,0.024,525,0.027,528,0.148,532,0.059,533,0.059,538,1.508,539,0.288,540,0.029,541,0.053,546,0.083,548,0.135,549,0.083,552,0.165,558,0.248,560,0.422,562,0.128,565,0.056,571,0.052,572,0.287,573,1.163,574,0.032,575,0.993,576,0.091,577,0.239,578,0.029,580,0.03,585,0.744,586,0.416,587,0.362,590,0.029,591,0.316,592,0.128,593,0.896,595,0.029,599,0.196,600,0.158,605,0.21,607,0.032,608,0.17,612,0.669,615,0.076,617,1.17,618,0.029,620,0.032,621,0.121,622,0.059,623,0.088,624,0.326,626,0.132,627,0.032,628,0.146,629,0.267,633,0.033,635,1.981,637,0.032,638,0.03,640,0.678,654,1.832,657,0.211,658,1.344,659,0.148,660,0.815,661,0.088,662,0.081,663,0.319,665,0.776,666,1.805,669,0.6,674,0.03,675,0.22,679,0.31,680,0.88,681,0.721,682,0.246,685,0.073,686,0.146,689,0.082,690,0.35,691,0.437,694,0.033,696,0.997,699,0.063,701,0.322,704,0.027,705,0.032,706,1.216,709,0.025,710,0.359,712,0.217,713,0.032,716,0.422,725,0.111,726,0.115,727,0.68,729,0.033,736,0.553,737,0.671,738,0.056,739,0.192,740,0.395,741,3.719,743,0.025,751,0.024,752,0.056,758,0.126,759,0.054,760,0.413,763,0.132,764,0.124,768,0.184,770,0.068,771,0.26,773,0.03,775,0.494,778,0.063,785,0.03,788,0.032,791,1.785,792,0.547,793,0.029,794,0.032,795,0.03,799,0.027,800,0.862,801,0.146,804,0.313,807,0.246,808,0.502,811,0.027,813,0.298,815,0.029,820,0.061,822,0.257,826,0.121,827,0.083,828,0.029,829,0.15,835,0.106,841,0.057,846,0.101,854,0.032,855,0.026,858,0.025,861,0.151,862,0.666,863,0.057,865,0.181,870,0.088,872,0.061,873,0.21,876,0.032,879,0.033,880,0.46,882,0.054,883,0.032,886,0.245,890,0.025,892,0.068,901,0.029,902,0.307,908,0.078,913,0.17,917,0.197,924,0.071,925,0.054,926,0.045,927,0.321,928,0.381,931,0.059,932,0.135,933,0.135,936,1.255,942,0.639,944,0.054,959,0.029,961,0.057,963,0.066,972,0.126,973,0.05,986,0.269,988,0.029,989,0.158,991,0.132,992,0.737,993,0.032,994,0.1,995,0.066,996,0.132,998,0.114,1002,0.025,1008,0.31,1016,0.191,1017,0.155,1019,0.03,1021,0.114,1022,0.422,1028,0.078,1031,0.03,1039,0.061,1040,0.13,1041,0.085,1042,0.1,1054,0.077,1057,0.054,1059,0.371,1062,0.371,1065,0.188,1071,0.063,1077,0.126,1078,0.132,1079,0.241,1082,0.033,1088,0.046,1089,0.054,1090,0.057,1091,0.165,1097,0.033,1103,0.029,1104,0.114,1107,0.059,1111,0.121,1113,0.032,1114,0.388,1115,0.321,1119,0.121,1128,0.027,1135,0.032,1141,0.23,1143,0.138,1146,0.025,1148,0.063,1149,0.371,1150,0.028,1152,0.027,1154,0.035,1159,1.47,1167,0.028,1173,0.138,1176,0.066,1179,0.033,1182,0.132,1185,0.442,1190,0.28,1195,0.517,1196,0.219,1198,0.027,1217,0.054,1227,0.114,1228,0.032,1230,0.138,1246,0.249,1247,0.075,1254,0.029,1255,0.03,1259,0.03,1266,0.026,1267,0.032,1270,0.029,1281,0.21,1292,0.032,1293,0.032,1294,0.032,1296,0.033,1297,0.192,1302,0.032,1305,0.307,1306,0.057,1315,0.056,1327,0.344,1328,0.26,1337,0.029,1347,0.033,1348,0.085,1354,1.752,1356,0.221,1360,0.198,1363,0.585,1366,0.142,1367,0.933,1370,0.121,1373,0.157,1374,0.142,1380,0.483,1381,0.054,1386,0.066,1390,0.03,1394,0.033,1407,0.029,1415,0.085,1419,0.206,1425,0.246,1442,0.162,1452,0.031,1456,0.071,1465,0.078,1466,0.032,1468,0.155,1470,0.03,1471,0.059,1473,0.056,1478,0.061,1481,0.032,1496,0.132,1501,0.091,1503,0.121,1505,0.032,1506,0.142,1512,0.151,1522,0.059,1527,0.142,1537,0.091,1543,0.198,1545,0.03,1546,0.085,1568,1.825,1569,0.083,1571,0.032,1575,0.033,1580,0.241,1588,0.088,1601,0.335,1604,0.39,1607,0.032,1609,0.032,1611,0.142,1624,0.146,1630,0.032,1655,0.059,1660,0.081,1663,0.835,1666,0.063,1670,0.029,1673,0.032,1674,0.307,1675,0.883,1676,1.158,1677,0.032,1678,1.941,1679,1.295,1681,0.316,1682,1.255,1683,0.114,1685,0.063,1690,0.178,1691,0.198,1692,0.095,1693,0.221,1694,0.327,1695,1.219,1696,0.1,1697,0.033,1698,0.061,1699,0.032,1708,0.56,1713,0.23,1716,0.091,1717,0.21,1722,0.43,1724,0.066,1725,0.165,1731,0.198,1732,0.132,1734,0.066,1735,0.1,1736,0.4,1737,0.033,1746,1.868,1747,0.033,1748,0.033,1749,1.811,1750,0.867,1753,0.061,1754,0.095,1755,0.061,1756,0.063,1757,0.126,1759,0.28,1760,0.107,1761,0.063,1762,0.033,1764,0.063,1776,0.028,1777,0.203,1778,0.032,1779,0.595,1781,0.671,1785,0.121,1798,0.063,1800,0.162,1801,0.197,1802,1.048,1803,0.032,1804,0.307,1805,0.188,1806,0.1,1807,0.203,1808,0.03,1809,1.222,1810,0.032,1811,0.561,1812,0.142,1821,0.033,1823,0.066,1824,0.1,1826,0.165,1829,0.032,1833,0.978,1834,0.17,1837,0.061,1838,0.146,1840,0.033,1841,0.032,1844,0.033,1845,0.019,1846,0.066,1847,0.033,1848,0.019,1849,0.033,1850,0.02,1851,0.033,1852,0.033,1853,0.033,1854,0.033,1855,0.165,1856,0.239,1857,0.442,1858,0.095,1859,0.1,1860,0.032,1861,0.033,1862,0.066,1863,0.033,1864,0.056,1865,0.033,1866,0.547,1868,0.033,1869,0.033,1871,0.1,1872,0.165,1874,0.192,1876,0.157,1877,0.033,1880,0.066,1882,0.033,1885,0.033,1886,0.033,1889,0.027,1896,0.088,1899,0.033,1900,0.063,1929,0.263,1968,0.068,2030,0.029,2032,0.095,2036,0.032,2037,0.066,2041,0.1,2046,0.095,2047,0.033,2050,0.442,2053,0.032,2054,0.114,2055,0.088,2057,0.095,2058,0.936,2059,0.033,2061,0.371,2062,0.356,2063,0.39,2064,0.46,2065,0.39,2066,0.39,2067,0.151,2074,0.033,2080,0.057,2086,3.474,2095,0.032,2101,0.059,2104,0.095,2109,0.192,2117,0.033,2118,0.172,2120,0.03,2122,0.033,2123,0.063,2128,0.032,2133,0.856,2143,0.066,2148,0.066,2152,0.18,2153,1.37,2161,0.095,2175,0.056,2234,0.3,2276,0.026,2314,0.032,2315,0.032,2316,0.032,2317,0.032,2318,0.032,2319,0.138,2320,0.111,2321,0.108,2322,0.106,2323,0.056,2324,0.056,2325,0.108,2326,0.054,2335,0.121,2356,0.033,2358,0.061,2361,0.03,2365,0.045,2417,0.03,2511,0.371,2557,0.611,2558,0.126,2567,0.095,2570,0.033,2575,0.327,2581,0.76,2582,0.963,2583,0.063,2586,0.516,2589,0.057,2590,0.029,2591,0.029,2592,0.029,2599,0.03,2607,0.063,2630,0.032,2636,0.547,2643,0.083,2657,0.13,2661,0.1,2663,0.066,2664,0.066,2665,0.032,2667,0.142,2669,0.132,2673,0.061,2724,0.132,2728,0.063,2729,0.066,2742,0.063,2836,0.021,2837,0.091,2875,0.066,2886,0.059,2907,0.032,2909,0.219,2910,0.066,2927,0.029,2928,0.032,2932,0.029,2933,0.03,2934,0.03,2937,0.061,2962,0.063,2964,0.033,2971,0.063,2974,0.219,2976,0.066,2979,0.066,2982,0.033,2984,0.117,2986,0.032,3047,0.165,3049,0.157,3059,0.033,3061,0.198,3070,0.198,3094,0.033,3110,0.157,3112,0.066,3114,0.1,3117,0.422,3128,0.033,3129,0.219,3132,0.132,3137,0.033,3139,0.033,3140,0.033,3141,0.033,3142,0.033,3143,0.033,3144,0.188,3145,0.063,3146,0.033,3147,0.063,3148,0.126,3150,0.066,3151,0.066,3152,0.295,3153,0.095,3154,0.174,3155,0.095,3156,0.095,3157,0.063,3158,0.063,3159,0.063,3160,0.033,3161,0.033,3162,0.033,3163,0.1,3164,0.033,3165,0.1,3166,0.033,3167,0.1,3168,0.033,3169,0.081,3170,0.033,3171,0.1,3172,0.033,3173,0.072,3174,0.033,3175,0.1,3176,0.033,3177,0.033,3178,0.1,3179,0.033,3180,0.1,3181,0.033,3182,0.1,3183,0.033,3184,0.081,3185,0.033,3186,0.1,3187,0.033,3188,0.1,3189,0.033,3190,0.1,3191,0.033,3192,0.033,3193,0.1,3194,0.033,3195,0.1,3196,0.033,3197,0.1,3198,0.033,3199,0.099,3200,0.033,3201,0.1,3202,0.033,3203,0.1,3204,0.033,3205,0.1,3206,0.033,3207,0.033,3208,0.1,3209,0.033,3210,0.033,3211,0.1,3212,0.033,3213,0.033,3214,0.095,3215,0.033,3216,0.132,3217,0.033,3218,0.033,3219,0.033,3220,0.132,3221,1.154,3222,0.033,3223,0.132,3224,0.033,3225,0.132,3226,0.033,3227,0.132,3228,0.033,3229,0.132,3230,0.033,3231,0.132,3232,0.033,3233,0.132,3234,0.033,3235,0.132,3236,0.033,3237,0.132,3238,0.033,3239,0.132,3240,0.033,3241,0.132,3242,0.033,3243,0.132,3244,0.033,3245,0.132,3246,0.033,3247,0.132,3248,0.033,3249,0.132,3250,0.033,3251,0.132,3252,0.033,3253,0.132,3254,0.033,3255,0.132,3256,0.033,3257,0.132,3258,0.033,3259,0.132,3260,0.033,3261,0.132,3262,0.033,3263,0.132,3264,0.033,3265,0.132,3266,0.033,3267,0.132,3268,0.033,3269,0.132,3270,0.033,3271,0.132,3272,0.033,3273,0.132,3274,0.033,3275,0.132,3276,0.033,3277,0.132,3278,0.033,3279,0.132,3280,0.033,3281,0.132,3282,0.033,3283,0.033,3285,0.033,3286,0.033,3287,0.033,3288,0.033,3289,0.091,3291,0.063,3292,0.033,3293,0.132,3294,0.066,3295,0.033,3296,0.066,3297,0.066,3298,0.033,3299,0.1,3300,0.066,3301,0.033,3302,0.033,3303,0.1,3305,0.1,3306,0.033,3307,0.033,3308,0.066,3309,0.033,3310,0.033,3311,0.033,3312,0.033,3313,0.063,3314,0.21,3315,0.063,3316,0.063,3317,0.413,3318,0.371,3320,0.063,3321,0.126,3322,0.033,3323,0.165,3324,0.43,3325,0.063,3326,0.063,3327,0.066,3328,0.059,3329,0.066,3330,0.066,3331,0.442,3332,0.029,3333,0.029,3334,0.029,3335,0.029,3336,0.059,3337,0.029,3338,0.029,3339,0.066,3340,0.033,3341,0.033,3342,0.033,3344,0.033,3346,0.232,3348,0.053,3355,0.033,3357,0.056,3359,0.033,3360,0.026,3361,0.277,3362,0.033,3363,0.033,3364,0.033,3365,0.132,3366,0.054,3368,0.091,3369,0.18,3370,0.091,3371,0.091,3378,0.033,3379,0.095,3383,0.063,3385,0.059,3386,0.126,3387,0.095,3388,0.033,3389,0.066,3390,0.132,3391,0.033,3392,0.033,3393,0.033,3394,0.033,3395,0.033,3396,0.033,3397,0.033,3398,0.132,3399,0.066,3400,0.033,3401,0.033,3402,0.091,3403,0.165,3407,0.091,3408,0.091,3409,0.121,3410,0.033,3411,0.033,3412,0.033,3413,0.063,3414,0.033,3415,0.091,3416,0.033,3417,0.033,3418,0.345,3419,0.033,3420,0.063,3421,0.063,3422,0.033,3423,0.033,3424,0.033,3425,0.033,3426,0.066,3427,0.033,3428,0.033,3429,0.033,3430,0.241,3431,0.1,3432,0.033,3434,0.033,3435,0.033,3436,0.033,3438,0.063,3440,0.063,3442,0.033,3444,0.033,3446,0.033,3448,0.033,3450,0.033,3452,0.033,3454,0.033,3455,0.033,3457,0.033,3458,0.033,3460,0.033,3461,0.033,3463,0.033,3465,0.033,3466,0.033,3467,0.033,3468,0.033,3469,0.033,3471,0.033,3472,0.033,3473,0.033,3475,0.033,3476,0.033,3477,0.033,3478,0.033,3479,0.033,3480,0.033,3481,0.033,3482,0.033,3483,0.033,3484,0.033,3485,0.033,3486,0.033,3487,0.033,3488,0.033,3489,0.033,3490,0.033,3491,0.033,3492,0.033,3493,0.033,3494,0.033,3495,0.033,3496,0.033,3497,0.033,3498,0.033,3499,0.033,3500,0.033,3501,0.033,3502,0.033,3503,0.033,3504,0.033,3505,0.033,3506,0.033,3507,0.033,3508,0.033,3509,0.033,3510,0.033,3511,0.033,3512,0.033,3513,0.033,3514,0.033,3515,0.033,3516,0.033,3517,0.033,3518,0.033,3519,0.033,3520,0.033,3521,0.033,3522,0.033,3523,0.033,3524,0.033,3525,0.033,3526,0.033,3527,0.033,3528,0.033,3529,0.033,3530,0.033,3531,0.033,3532,0.033,3533,0.033,3534,0.033,3535,0.033,3536,0.033,3537,0.033,3538,0.033,3539,0.033,3540,0.033,3541,0.033,3542,0.033,3543,0.033,3544,0.033,3545,0.033,3546,0.033,3547,0.033,3548,0.033,3549,0.033,3550,0.033,3551,0.033,3552,0.033,3553,0.033,3554,0.033,3555,0.033,3556,0.033,3557,0.033,3558,0.033,3559,0.033,3560,0.033,3561,0.033,3562,0.033,3563,0.033,3564,0.033,3565,0.033,3566,0.033,3567,0.033,3568,0.033,3569,0.033,3570,0.033,3571,0.033,3572,0.033,3573,0.033,3574,0.033,3575,0.033,3576,0.033,3577,0.033,3578,0.033,3579,0.033,3580,0.033,3581,0.033,3582,0.033,3583,0.033,3584,0.033,3585,0.033,3586,0.033,3587,0.033,3588,0.033,3589,0.033,3590,0.033,3591,0.033,3592,0.033,3593,0.033,3594,0.033,3595,0.033,3596,0.033,3597,0.033,3598,0.033,3599,0.033,3600,0.033,3601,0.033,3602,0.033,3603,0.033,3604,0.033,3605,0.033,3606,0.033,3607,0.033,3608,0.033,3609,0.033,3610,0.033,3611,0.033,3612,0.033,3613,0.033,3614,0.033,3615,0.033,3616,0.033,3617,0.033,3618,0.033,3619,0.033,3620,0.033,3621,0.033,3622,0.033,3623,0.033,3624,0.033,3625,0.033,3626,0.033,3627,0.033,3628,0.033,3629,0.033,3630,0.033,3631,0.033,3632,0.033,3633,0.033,3634,0.033,3635,0.033,3636,0.033,3637,0.033,3638,0.033,3639,0.033,3640,0.033,3641,0.033,3642,0.033,3643,0.033,3644,0.033,3645,0.033,3646,0.033,3647,0.033,3648,0.033,3649,0.033,3650,0.033,3651,0.033,3652,0.033,3653,0.033,3654,0.033,3655,0.033,3656,0.033,3657,0.033,3658,0.033,3659,0.033,3660,0.033,3661,0.033,3662,0.033,3663,0.033,3664,0.033,3665,0.033,3666,0.033,3667,0.033,3668,0.033,3669,0.033,3670,0.033,3671,0.033,3672,0.066,3673,0.033,3674,0.033,3675,0.033,3676,0.033,3677,0.033,3678,0.033,3679,0.033,3680,0.033,3681,0.033,3682,0.036,3683,0.036,3684,0.036,3685,0.036,3686,0.786,3687,0.188,3688,0.107,3689,0.036,3690,0.036,3691,0.036,3692,0.072,3693,0.072,3694,0.063,3695,0.072,3696,0.036,3697,0.036,3698,0.036,3699,0.282,3700,0.142,3701,0.072,3702,0.036,3703,0.107,3704,0.317,3705,0.213,3706,0.036,3707,0.072,3708,0.142,3709,0.072,3710,2.009,3711,1.104,3712,0.036,3713,0.036,3714,0.036,3715,0.036,3716,0.036,3717,0.036,3718,0.036,3719,0.036,3720,0.036,3721,0.036,3722,0.036,3723,0.107,3724,0.066,3725,0.072,3726,0.072,3727,0.072,3728,0.036,3729,0.072,3730,0.036,3731,0.036,3732,0.072,3733,0.072,3734,0.072,3735,0.107,3736,0.178,3737,0.036,3738,0.036,3739,0.036,3740,0.036,3741,0.036,3742,0.036,3743,0.036,3744,0.036,3745,0.036,3746,0.036,3747,0.036,3748,0.033,3749,1.982,3750,0.072,3751,0.072,3752,0.072,3753,0.072,3754,0.072,3755,0.072,3756,0.072,3757,0.072,3758,0.072,3759,0.072,3760,0.072,3761,0.072,3762,0.072,3763,0.072,3764,0.072,3765,0.072,3766,0.072,3767,0.072,3768,0.072,3769,0.072,3770,0.072,3771,0.072,3772,0.072,3773,0.072,3774,0.107,3775,0.42,3776,0.036,3777,0.107,3778,0.107,3779,0.036,3780,0.072,3781,0.107,3782,0.072,3783,0.072,3784,0.036,3785,0.036,3786,0.036,3787,0.036,3788,0.142,3789,0.036,3790,0.036,3791,0.036,3792,0.1,3793,0.036,3794,0.036,3795,0.036,3796,0.036,3797,0.036,3798,0.036,3799,0.036,3800,0.036,3801,0.107,3802,0.036,3803,0.036,3804,0.072,3805,0.107,3806,0.107,3807,0.107,3808,0.036,3809,0.213,3810,0.036,3811,0.036,3812,0.107,3813,0.107,3814,0.036,3815,0.036,3816,0.072,3817,0.036,3818,0.036,3819,0.036,3820,0.036,3821,0.036,3822,0.036,3823,0.036,3824,0.036,3825,0.036,3826,0.142,3827,0.036,3828,0.036,3829,0.036,3830,0.178,3831,0.072,3832,0.072,3833,0.036,3834,0.036,3835,0.036,3836,0.036,3837,0.036,3838,0.033,3839,0.072,3840,0.072,3841,0.072,3842,0.213,3843,0.036,3844,0.178,3845,0.036,3846,0.036,3847,0.036,3848,0.036,3849,0.036,3850,0.142,3851,0.42,3852,0.282,3853,0.142,3854,0.142,3855,0.317,3856,0.85,3857,0.282,3858,0.282,3859,0.282,3860,0.132,3861,0.42,3862,0.142,3863,0.282,3864,0.142,3865,0.142,3866,0.126,3867,0.142,3868,0.036,3869,0.142,3870,0.1,3871,0.036,3872,0.036,3873,0.036,3874,0.072,3875,0.036,3876,0.036,3877,0.036,3878,0.033,3879,0.036,3880,0.033,3881,0.036,3882,0.036,3883,0.036,3884,0.036,3885,0.036,3886,0.036,3887,0.033,3888,0.036,3889,0.036,3890,0.036,3891,0.033,3892,0.036,3893,0.036,3894,0.036,3895,0.036,3896,3.026,3897,0.036,3898,0.036,3899,0.036,3900,0.072,3901,0.036,3902,0.036,3903,0.072,3904,0.036,3905,0.036,3906,0.142,3907,0.036,3908,0.036,3909,0.036,3910,0.072,3911,0.072,3912,0.036,3913,0.036,3914,0.036,3915,0.036,3916,0.036,3917,0.036,3918,0.036,3919,0.036,3920,0.036,3921,0.072,3922,0.072,3923,0.142,3924,0.036,3925,0.178,3926,0.142,3927,0.036,3928,0.036,3929,0.072,3930,0.036,3931,0.036,3932,0.036,3933,0.036,3934,0.036,3935,0.036,3936,0.42,3937,0.317,3938,0.107,3939,0.033,3940,0.036,3941,0.036,3942,0.036,3943,0.033,3944,0.036,3945,0.036,3946,0.036,3947,0.033,3948,0.036,3949,0.036,3950,0.033,3951,0.036,3952,0.142,3953,0.036,3954,0.036,3955,0.036,3956,0.107,3957,0.036,3958,0.036,3959,0.036,3960,0.036,3961,0.036,3962,0.036,3963,0.072,3964,0.036,3965,0.036,3966,0.036,3967,0.036,3968,0.036,3969,0.033,3970,0.107,3971,0.107,3972,0.036,3973,0.033,3974,0.036,3975,0.107,3976,0.107,3977,0.107,3978,0.072,3979,0.036,3980,0.036,3981,0.036,3982,0.036,3983,0.036,3984,0.036,3985,0.036,3986,0.036,3987,0.213,3988,0.072,3989,0.036,3990,0.036,3991,0.107,3992,0.036,3993,0.036,3994,0.036,3995,0.072,3996,0.036,3997,0.036,3998,0.036,3999,0.036,4000,0.036,4001,0.036,4002,0.036,4003,0.036,4004,0.036,4005,0.036,4006,0.036,4007,0.036,4008,0.036,4009,0.036,4010,0.036,4011,0.036,4012,0.036,4013,0.072,4014,0.072,4015,0.036,4016,0.036,4017,0.036,4018,0.036,4019,0.036,4020,0.072,4021,0.036,4022,0.036,4023,0.036,4024,0.036,4025,0.036,4026,0.036,4027,0.036,4028,0.036,4029,0.107,4030,0.036,4031,0.036,4032,0.036,4033,0.036,4034,0.036,4035,0.036,4036,0.036,4037,0.036,4038,0.036,4039,0.036,4040,0.033,4041,0.036]],["component/27",[29,0.109]],["title/28-1",[1105,74.534]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[2847,97.219]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[12,22.26,63,5.276,74,10.055,142,21.562,210,14.426,921,46.68,924,32.197]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[12,22.26,63,5.276,74,10.055,142,21.562,210,14.426,924,32.197,934,55.122]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[14,37.79,74,11.389,142,24.42,1452,21.632,2690,46.029,4042,58.684]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28-6",[12,22.26,14,33.365,63,5.276,74,14.273,142,21.562,1452,19.1,4043,51.813]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["title/28-7",[74,13.178,142,19.302,210,13.319,386,14.217,657,17.815,862,24.907,924,28.823,1026,41.787]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["title/28-8",[74,13.178,142,19.302,210,13.319,386,14.217,657,17.815,862,24.907,924,28.823,935,47.729]],["name/28-8",[]],["text/28-8",[]],["component/28-8",[]],["title/28-9",[14,25.811,74,14.292,210,11.945,386,12.286,924,24.908,1088,21.674,1367,40.689,4044,46.733]],["name/28-9",[]],["text/28-9",[]],["component/28-9",[]],["title/28-10",[14,25.811,74,14.292,210,11.945,386,12.286,924,24.908,1088,21.674,1367,40.689,4045,46.733]],["name/28-10",[]],["text/28-10",[]],["component/28-10",[]],["title/28-11",[12,19.927,14,29.869,74,13.178,1088,25.081,1367,37.518,1452,17.098,2690,36.381,4046,49.345]],["name/28-11",[]],["text/28-11",[]],["component/28-11",[]],["title/28-12",[210,10.795,386,16.869,736,28.958,924,34.199,969,51.408,1088,29.759,1367,30.407]],["name/28-12",[]],["text/28-12",[]],["component/28-12",[]],["title/28-13",[968,93.388]],["name/28-13",[]],["text/28-13",[]],["component/28-13",[]],["title/28-14",[63,5.976,142,24.42,210,11.51,736,30.878,924,36.467,969,54.816]],["name/28-14",[]],["text/28-14",[]],["component/28-14",[]],["title/28-15",[909,90.329]],["name/28-15",[]],["text/28-15",[]],["component/28-15",[]],["title/28-16",[73,42.041,257,8.837,736,35.598,4047,78.881]],["name/28-16",[]],["text/28-16",[]],["component/28-16",[]],["title/28-17",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/28-17",[]],["text/28-17",[]],["component/28-17",[]],["title/28-18",[63,6.4,78,19.141,210,12.328,736,33.07,969,58.708]],["name/28-18",[]],["text/28-18",[]],["component/28-18",[]],["title/28-19",[12,22.26,63,5.276,74,10.055,78,15.78,210,14.426,921,46.68,924,32.197]],["name/28-19",[]],["text/28-19",[]],["component/28-19",[]],["title/28-20",[12,22.26,63,5.276,74,10.055,78,15.78,210,14.426,924,32.197,934,55.122]],["name/28-20",[]],["text/28-20",[]],["component/28-20",[]],["title/28-21",[14,37.79,74,11.389,78,17.872,1452,21.632,2690,46.029,4042,58.684]],["name/28-21",[]],["text/28-21",[]],["component/28-21",[]],["title/28-22",[12,22.26,14,33.365,63,5.276,74,14.273,78,15.78,1452,19.1,4043,51.813]],["name/28-22",[]],["text/28-22",[]],["component/28-22",[]],["title/28-23",[74,13.178,78,14.126,210,13.319,386,14.217,657,17.815,862,24.907,924,28.823,1026,41.787]],["name/28-23",[]],["text/28-23",[]],["component/28-23",[]],["title/28-24",[74,13.178,78,14.126,210,13.319,386,14.217,657,17.815,862,24.907,924,28.823,935,47.729]],["name/28-24",[]],["text/28-24",[]],["component/28-24",[]],["title/28-25",[74,14.273,210,14.426,257,6.768,386,15.881,924,32.197,1106,42.902]],["name/28-25",[]],["text/28-25",[]],["component/28-25",[]],["title/28-26",[74,13.178,210,13.319,257,6.059,386,14.217,657,17.815,862,24.907,924,28.823,4048,54.08]],["name/28-26",[]],["text/28-26",[]],["component/28-26",[]],["title/28-27",[74,13.178,210,13.319,257,6.059,386,14.217,657,17.815,862,24.907,924,28.823,4049,54.08]],["name/28-27",[]],["text/28-27",[]],["component/28-27",[]],["title/28-28",[74,13.178,210,13.319,257,6.059,386,14.217,657,17.815,862,24.907,924,28.823,4050,54.08]],["name/28-28",[]],["text/28-28",[]],["component/28-28",[]],["title/28-29",[257,8.837,736,35.598,4051,74.927,4052,78.881]],["name/28-29",[]],["text/28-29",[]],["component/28-29",[]],["title/28-30",[74,9.499,210,13.85,215,44.098,257,6.394,386,15.003,657,18.8,862,26.284,924,30.417]],["name/28-30",[]],["text/28-30",[]],["component/28-30",[]],["title/28-31",[74,9.499,210,13.85,257,6.394,386,15.003,657,18.8,862,26.284,924,30.417,940,54.21]],["name/28-31",[]],["text/28-31",[]],["component/28-31",[]],["title/28-32",[74,10.681,210,15.051,241,53.667,257,7.189,386,16.869,924,34.199]],["name/28-32",[]],["text/28-32",[]],["component/28-32",[]],["title/28-33",[74,10.681,210,15.051,257,7.189,386,16.869,924,34.199,4053,64.167]],["name/28-33",[]],["text/28-33",[]],["component/28-33",[]],["title/28-34",[14,33.365,53,30.492,74,14.273,257,6.768,1452,19.1,2690,40.64,4054,55.122]],["name/28-34",[]],["text/28-34",[]],["component/28-34",[]],["title/28-35",[2848,97.219]],["name/28-35",[]],["text/28-35",[]],["component/28-35",[]],["title/28-36",[14,25.811,63,4.082,74,11.818,142,16.68,210,11.945,386,12.286,477,20.683,657,15.395,862,21.523,924,24.908,1048,39.086]],["name/28-36",[]],["text/28-36",[]],["component/28-36",[]],["title/28-37",[14,25.811,63,4.082,74,11.818,142,16.68,210,11.945,386,12.286,477,20.683,657,15.395,862,21.523,924,24.908,1049,39.086]],["name/28-37",[]],["text/28-37",[]],["component/28-37",[]],["title/28-38",[297,66.944]],["name/28-38",[]],["text/28-38",[]],["component/28-38",[]],["title/28-39",[4055,102.349]],["name/28-39",[]],["text/28-39",[]],["component/28-39",[]],["title/28-40",[74,14.273,210,14.426,257,6.768,386,15.881,924,32.197,1106,42.902]],["name/28-40",[]],["text/28-40",[]],["component/28-40",[]],["title/28-41",[4056,102.349]],["name/28-41",[]],["text/28-41",[]],["component/28-41",[]],["title/28-42",[12,22.26,74,10.055,78,15.78,210,14.426,240,46.68,386,15.881,924,32.197]],["name/28-42",[]],["text/28-42",[]],["component/28-42",[]],["title/28-43",[12,22.26,74,10.055,78,15.78,210,14.426,386,15.881,924,32.197,4057,60.411]],["name/28-43",[]],["text/28-43",[]],["component/28-43",[]],["title/28-44",[4058,110.136]],["name/28-44",[]],["text/28-44",[]],["component/28-44",[]],["title/28-45",[63,5.976,78,17.872,210,15.733,924,36.467,1073,52.019]],["name/28-45",[]],["text/28-45",[]],["component/28-45",[]],["title/28-46",[63,6.89,78,20.604,210,13.27,1073,59.971]],["name/28-46",[]],["text/28-46",[]],["component/28-46",[]],["title/28-47",[63,5.976,78,17.872,210,11.51,924,36.467,928,50.507,1452,21.632]],["name/28-47",[]],["text/28-47",[]],["component/28-47",[]],["title/28-48",[74,14.273,210,14.426,257,6.768,386,15.881,924,32.197,1106,42.902]],["name/28-48",[]],["text/28-48",[]],["component/28-48",[]],["title/28-49",[4059,110.136]],["name/28-49",[]],["text/28-49",[]],["component/28-49",[]],["title/28-50",[63,5.976,78,17.872,210,11.51,736,30.878,969,54.816,1240,35.455]],["name/28-50",[]],["text/28-50",[]],["component/28-50",[]],["title/28-51",[210,11.51,257,7.666,736,30.878,1239,55.95,1240,35.455,4051,64.992]],["name/28-51",[]],["text/28-51",[]],["component/28-51",[]],["title/28-52",[257,8.837,736,35.598,4060,78.881,4061,74.927]],["name/28-52",[]],["text/28-52",[]],["component/28-52",[]],["title/28-53",[675,68.853]],["name/28-53",[]],["text/28-53",[]],["component/28-53",[]],["title/28-54",[1043,93.388]],["name/28-54",[]],["text/28-54",[]],["component/28-54",[]],["title/28-55",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/28-55",[]],["text/28-55",[]],["component/28-55",[]],["title/28-56",[63,4.985,74,13.704,78,14.907,210,13.85,477,25.258,657,18.8,1048,47.732]],["name/28-56",[]],["text/28-56",[]],["component/28-56",[]],["title/28-57",[63,4.985,74,13.704,78,14.907,210,13.85,477,25.258,657,18.8,1049,47.732]],["name/28-57",[]],["text/28-57",[]],["component/28-57",[]],["title/28-58",[4062,110.136]],["name/28-58",[]],["text/28-58",[]],["component/28-58",[]],["title/28-59",[14,27.035,74,14.7,210,12.37,257,5.484,386,12.868,657,16.125,862,22.544,924,26.089,4063,48.95]],["name/28-59",[]],["text/28-59",[]],["component/28-59",[]],["title/28-60",[14,27.035,74,14.7,210,12.37,257,5.484,386,12.868,657,16.125,862,22.544,924,26.089,4064,48.95]],["name/28-60",[]],["text/28-60",[]],["component/28-60",[]],["title/28",[193,53.82,614,67.809]],["name/28",[909,0.247]],["text/28",[1,0.184,2,0.136,3,0.33,4,0.31,5,0.166,6,0.807,7,0.184,8,0.403,9,0.403,12,2.022,14,4.274,17,0.176,23,0.733,26,1.363,28,1.306,29,1.988,31,0.682,32,3.786,35,0.218,36,2.457,42,1.621,48,0.17,49,0.2,53,1.141,59,0.172,60,0.174,62,0.462,63,0.241,66,0.168,73,0.127,74,0.631,76,2.562,78,0.062,80,1.143,83,0.159,84,1.157,88,0.174,89,0.162,92,0.567,93,0.323,99,0.179,103,0.184,104,0.545,105,0.334,106,0.211,111,0.866,117,2.026,119,2.814,121,0.166,125,0.17,130,0.556,131,0.162,132,0.162,134,0.166,135,0.179,138,0.338,139,0.191,142,0.085,143,0.191,144,0.352,153,0.338,159,0.172,162,0.77,164,0.403,171,0.796,172,0.487,174,0.672,178,1.069,193,2.031,202,0.403,203,0.422,205,0.15,210,0.153,211,1.244,213,0.357,215,1.177,216,0.166,232,0.393,237,0.403,240,0.536,241,1.108,247,0.184,257,0.053,258,0.239,259,0.195,263,0.174,270,0.184,271,1.586,276,0.796,283,0.454,293,0.195,297,0.867,298,0.176,311,0.174,319,0.17,330,0.188,341,3.041,356,0.174,358,0.17,360,0.172,364,0.363,369,0.376,372,0.176,376,0.476,384,0.352,385,1.025,386,2.523,393,0.45,398,0.347,408,0.487,422,0.179,429,0.527,441,0.2,442,0.176,451,0.172,454,0.176,455,0.181,460,0.352,462,0.209,463,0.295,467,0.338,474,0.369,477,0.208,481,0.639,511,0.181,516,0.347,528,0.179,532,0.211,533,0.211,538,0.188,544,0.536,552,0.172,558,0.181,560,0.184,562,0.363,585,0.77,592,1.024,593,0.179,599,0.462,602,0.195,612,1.007,613,0.172,614,2.126,615,0.181,617,0.174,635,0.334,640,0.205,657,0.155,675,0.161,686,0.512,689,1.297,690,0.363,691,0.172,700,0.211,701,0.17,706,0.17,710,0.148,712,0.347,715,0.2,725,0.2,726,0.326,737,0.867,740,0.147,741,1.924,742,0.211,743,0.179,760,0.376,764,0.179,773,0.429,775,0.363,791,0.313,800,2.267,801,1.255,808,0.188,839,0.218,846,0.357,858,0.527,862,2.816,865,0.716,882,0.195,890,1.124,892,0.162,902,0.505,907,0.446,909,1.169,911,0.393,921,1.325,924,5.387,925,0.195,926,1.293,927,0.357,928,0.347,932,0.195,934,1.39,935,1.514,940,1.065,948,0.205,950,0.184,952,0.239,968,0.429,969,3.906,988,0.804,989,0.376,992,1.368,998,0.205,1026,1.47,1027,1.023,1028,0.369,1046,0.239,1048,0.938,1049,0.938,1073,0.527,1076,0.218,1088,1.878,1090,0.205,1093,0.205,1105,0.174,1106,1.082,1114,0.191,1115,0.181,1125,0.191,1142,0.227,1173,0.2,1182,0.191,1191,0.239,1198,0.195,1235,0.218,1239,0.567,1240,0.889,1243,0.403,1247,2.302,1268,0.211,1270,0.205,1312,0.211,1316,0.227,1333,0.218,1381,0.195,1419,0.188,1425,0.2,1442,0.567,1465,0.188,1479,0.218,1490,0.227,1522,0.211,1611,0.205,1660,0.195,1693,0.179,1742,0.2,1749,0.195,1760,1.233,1776,0.2,1839,0.446,1929,1.184,2054,0.403,2078,0.195,2113,0.239,2153,1.085,2347,0.218,2566,0.211,2608,0.218,2627,1.523,2628,1.121,2690,3.28,2773,1.065,2774,1.065,2775,1.065,2776,1.065,2777,1.065,2778,1.065,2779,1.065,2780,1.065,2781,1.065,2847,2.147,2848,0.446,2857,0.227,2863,0.227,2873,0.239,2980,0.227,3328,0.804,3331,1.136,3332,0.211,3333,0.211,3334,0.211,3335,0.211,3336,0.415,3337,0.211,3338,0.211,3687,1.065,3866,0.446,3870,0.47,3878,0.911,3891,0.239,4042,1.631,4043,1.306,4044,2.761,4045,2.432,4046,1.736,4047,0.239,4048,1.325,4049,1.325,4050,1.121,4051,1.447,4052,1.121,4053,1.121,4054,1.023,4055,0.239,4056,0.239,4057,0.239,4060,0.239,4061,0.446,4063,0.239,4064,0.239,4065,0.257,4066,0.257,4067,0.257,4068,0.746,4069,0.257,4070,0.227,4071,0.257,4072,0.506,4073,0.239,4074,1.902,4075,0.746,4076,0.257,4077,0.257,4078,0.746,4079,0.239,4080,0.257,4081,0.257,4082,0.257,4083,0.257,4084,0.257,4085,0.257,4086,0.257,4087,0.257,4088,0.506,4089,0.506,4090,0.257,4091,0.257,4092,0.257,4093,0.257,4094,0.257,4095,0.506,4096,0.257,4097,0.257,4098,0.257,4099,0.227,4100,0.227,4101,0.227,4102,0.227,4103,0.506,4104,0.257,4105,0.257,4106,0.257,4107,0.257,4108,0.865,4109,0.227,4110,0.98,4111,0.257,4112,0.257,4113,0.257]],["component/28",[29,0.109]],["title/29-1",[1105,74.534]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[1204,75.551]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[63,6.89,142,28.153,210,13.27,1073,59.971]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[12,25.211,63,5.976,74,11.389,142,24.42,210,11.51,921,52.869]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[36,43.167,63,5.604,74,10.681,142,22.902,210,10.795,386,16.869,1452,20.287]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29-6",[23,39.514,53,30.492,63,5.276,74,14.273,142,21.562,210,10.163,2761,36.794]],["name/29-6",[]],["text/29-6",[]],["component/29-6",[]],["title/29-7",[63,5.276,74,10.055,142,21.562,210,10.163,386,15.881,1452,19.1,2690,40.64,2761,36.794]],["name/29-7",[]],["text/29-7",[]],["component/29-7",[]],["title/29-8",[63,5.276,74,14.273,142,21.562,210,10.163,386,15.881,1452,19.1,1774,49.4]],["name/29-8",[]],["text/29-8",[]],["component/29-8",[]],["title/29-9",[36,40.64,74,14.273,210,10.163,386,15.881,1088,28.017,1367,40.635]],["name/29-9",[]],["text/29-9",[]],["component/29-9",[]],["title/29-10",[53,27.296,74,13.178,210,9.098,386,14.217,1088,25.081,1367,37.518,2690,36.381,2761,32.938]],["name/29-10",[]],["text/29-10",[]],["component/29-10",[]],["title/29-11",[2841,97.219]],["name/29-11",[]],["text/29-11",[]],["component/29-11",[]],["title/29-12",[63,6.89,142,28.153,504,49.112,736,35.598]],["name/29-12",[]],["text/29-12",[]],["component/29-12",[]],["title/29-13",[63,6.89,142,28.153,736,35.598,1128,63.195]],["name/29-13",[]],["text/29-13",[]],["component/29-13",[]],["title/29-14",[63,6.89,142,28.153,973,59.067,1154,27.603]],["name/29-14",[]],["text/29-14",[]],["component/29-14",[]],["title/29-15",[196,77.813]],["name/29-15",[]],["text/29-15",[]],["component/29-15",[]],["title/29-16",[73,36.467,257,7.666,736,42.205,2407,58.684,4114,62.431]],["name/29-16",[]],["text/29-16",[]],["component/29-16",[]],["title/29-17",[63,6.89,78,20.604,504,49.112,736,35.598]],["name/29-17",[]],["text/29-17",[]],["component/29-17",[]],["title/29-18",[63,6.89,78,20.604,736,35.598,1128,63.195]],["name/29-18",[]],["text/29-18",[]],["component/29-18",[]],["title/29-19",[63,6.89,78,20.604,973,59.067,1154,27.603]],["name/29-19",[]],["text/29-19",[]],["component/29-19",[]],["title/29-20",[63,6.89,78,20.604,210,13.27,1073,59.971]],["name/29-20",[]],["text/29-20",[]],["component/29-20",[]],["title/29-21",[12,25.211,63,5.976,74,11.389,78,17.872,210,11.51,921,52.869]],["name/29-21",[]],["text/29-21",[]],["component/29-21",[]],["title/29-22",[36,43.167,63,5.604,74,10.681,78,16.761,210,10.795,386,16.869,1452,20.287]],["name/29-22",[]],["text/29-22",[]],["component/29-22",[]],["title/29-23",[23,39.514,53,30.492,63,5.276,74,14.273,78,15.78,210,10.163,2761,36.794]],["name/29-23",[]],["text/29-23",[]],["component/29-23",[]],["title/29-24",[63,5.276,74,10.055,78,15.78,210,10.163,386,15.881,1452,19.1,2690,40.64,2761,36.794]],["name/29-24",[]],["text/29-24",[]],["component/29-24",[]],["title/29-25",[63,5.276,74,14.273,78,15.78,210,10.163,386,15.881,1452,19.1,1774,49.4]],["name/29-25",[]],["text/29-25",[]],["component/29-25",[]],["title/29-26",[74,15.566,210,11.51,257,7.666,386,17.987,4115,62.431]],["name/29-26",[]],["text/29-26",[]],["component/29-26",[]],["title/29-27",[74,15.566,210,11.51,257,7.666,386,17.987,1106,48.59]],["name/29-27",[]],["text/29-27",[]],["component/29-27",[]],["title/29-28",[12,25.211,74,11.389,210,11.51,215,52.869,257,7.666,386,17.987]],["name/29-28",[]],["text/29-28",[]],["component/29-28",[]],["title/29-29",[12,25.211,74,11.389,210,11.51,241,57.225,257,7.666,386,17.987]],["name/29-29",[]],["text/29-29",[]],["component/29-29",[]],["title/29-30",[53,30.492,74,14.273,210,10.163,257,6.768,386,15.881,2761,36.794,4116,51.813]],["name/29-30",[]],["text/29-30",[]],["component/29-30",[]],["title/29-31",[53,27.296,74,13.178,210,9.098,257,6.059,386,14.217,1452,17.098,2761,32.938,4116,46.383,4117,49.345]],["name/29-31",[]],["text/29-31",[]],["component/29-31",[]],["title/29-32",[53,30.492,74,14.273,210,10.163,257,6.768,386,15.881,2761,36.794,4118,57.384]],["name/29-32",[]],["text/29-32",[]],["component/29-32",[]],["title/29-33",[297,66.944]],["name/29-33",[]],["text/29-33",[]],["component/29-33",[]],["title/29-34",[2884,102.349]],["name/29-34",[]],["text/29-34",[]],["component/29-34",[]],["title/29-35",[252,61.459,1170,79.862]],["name/29-35",[]],["text/29-35",[]],["component/29-35",[]],["title/29-36",[53,20.767,74,10.713,142,14.685,199,17.308,210,10.827,386,10.816,1154,14.398,1529,32.963,1690,31.792,1691,27.679,1693,30.809,2761,25.059,2885,37.542]],["name/29-36",[]],["text/29-36",[]],["component/29-36",[]],["title/29-37",[53,34.535,63,5.976,74,11.389,142,24.42,210,11.51,771,45.586]],["name/29-37",[]],["text/29-37",[]],["component/29-37",[]],["title/29-38",[63,6.89,142,28.153,199,21.213,2886,69.617]],["name/29-38",[]],["text/29-38",[]],["component/29-38",[]],["title/29-39",[1391,97.219]],["name/29-39",[]],["text/29-39",[]],["component/29-39",[]],["title/29-40",[73,42.041,257,8.837,504,49.112,736,35.598]],["name/29-40",[]],["text/29-40",[]],["component/29-40",[]],["title/29-41",[53,20.767,74,10.713,78,10.747,199,17.308,210,10.827,386,10.816,1154,14.398,1529,32.963,1690,31.792,1691,27.679,1693,30.809,2761,25.059,2885,37.542]],["name/29-41",[]],["text/29-41",[]],["component/29-41",[]],["title/29-42",[53,34.535,63,5.976,74,11.389,78,17.872,210,11.51,771,45.586]],["name/29-42",[]],["text/29-42",[]],["component/29-42",[]],["title/29-43",[63,6.89,142,28.153,199,21.213,2886,69.617]],["name/29-43",[]],["text/29-43",[]],["component/29-43",[]],["title/29-44",[203,29.691,210,13.27,1529,63.195,4119,78.881]],["name/29-44",[]],["text/29-44",[]],["component/29-44",[]],["title/29-45",[53,34.535,74,15.566,203,25.754,577,41.972,4120,68.422]],["name/29-45",[]],["text/29-45",[]],["component/29-45",[]],["title/29-46",[4121,102.349]],["name/29-46",[]],["text/29-46",[]],["component/29-46",[]],["title/29-47",[78,20.604,210,13.27,240,60.951,386,20.737]],["name/29-47",[]],["text/29-47",[]],["component/29-47",[]],["title/29-48",[12,25.211,74,11.389,78,17.872,210,11.51,386,17.987,4122,68.422]],["name/29-48",[]],["text/29-48",[]],["component/29-48",[]],["title/29-49",[4123,102.349]],["name/29-49",[]],["text/29-49",[]],["component/29-49",[]],["title/29-50",[73,42.041,210,13.27,257,8.837,4124,78.881]],["name/29-50",[]],["text/29-50",[]],["component/29-50",[]],["title/29-51",[63,6.89,78,20.604,210,13.27,2079,67.654]],["name/29-51",[]],["text/29-51",[]],["component/29-51",[]],["title/29-52",[74,15.566,210,11.51,257,7.666,386,17.987,1106,48.59]],["name/29-52",[]],["text/29-52",[]],["component/29-52",[]],["title/29-53",[203,25.754,210,15.733,2079,58.684,4125,68.422,4126,64.992]],["name/29-53",[]],["text/29-53",[]],["component/29-53",[]],["title/29-54",[203,29.691,210,13.27,2079,67.654,4127,78.881]],["name/29-54",[]],["text/29-54",[]],["component/29-54",[]],["title/29-55",[4128,102.349]],["name/29-55",[]],["text/29-55",[]],["component/29-55",[]],["title/29-56",[74,15.566,210,11.51,257,7.666,386,17.987,1106,48.59]],["name/29-56",[]],["text/29-56",[]],["component/29-56",[]],["title/29-57",[1320,90.329]],["name/29-57",[]],["text/29-57",[]],["component/29-57",[]],["title/29-58",[63,6.89,210,13.27,257,8.837,4129,78.881]],["name/29-58",[]],["text/29-58",[]],["component/29-58",[]],["title/29-59",[74,15.566,210,11.51,257,7.666,386,17.987,1106,48.59]],["name/29-59",[]],["text/29-59",[]],["component/29-59",[]],["title/29-60",[12,25.211,63,5.976,74,11.389,210,11.51,257,7.666,2513,58.684]],["name/29-60",[]],["text/29-60",[]],["component/29-60",[]],["title/29-61",[12,25.211,63,5.976,74,11.389,78,17.872,1968,35.139,4130,68.422]],["name/29-61",[]],["text/29-61",[]],["component/29-61",[]],["title/29-62",[12,21.029,63,4.985,74,9.499,78,14.907,770,19.508,1802,47.732,1968,29.31,2511,41.029,2512,54.21]],["name/29-62",[]],["text/29-62",[]],["component/29-62",[]],["title/29-63",[203,25.754,210,15.733,2079,58.684,4126,64.992,4131,68.422]],["name/29-63",[]],["text/29-63",[]],["component/29-63",[]],["title/29-64",[1397,97.219]],["name/29-64",[]],["text/29-64",[]],["component/29-64",[]],["title/29-65",[29,32.961,73,39.056,257,8.21,1204,54.093,4132,66.864]],["name/29-65",[]],["text/29-65",[]],["component/29-65",[]],["title/29-66",[63,6.89,78,20.604,973,59.067,1154,27.603]],["name/29-66",[]],["text/29-66",[]],["component/29-66",[]],["title/29-67",[29,32.961,63,6.4,78,19.141,1017,57.616,1204,54.093]],["name/29-67",[]],["text/29-67",[]],["component/29-67",[]],["title/29-68",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,386,15.881,1452,19.1,4133,55.122]],["name/29-68",[]],["text/29-68",[]],["component/29-68",[]],["title/29-69",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,386,15.881,1452,19.1,4134,55.122]],["name/29-69",[]],["text/29-69",[]],["component/29-69",[]],["title/29-70",[12,25.211,63,5.976,74,11.389,210,11.51,257,7.666,4135,62.431]],["name/29-70",[]],["text/29-70",[]],["component/29-70",[]],["title/29-71",[32,41.443,74,13.13,203,29.691,4136,78.881]],["name/29-71",[]],["text/29-71",[]],["component/29-71",[]],["title/29-72",[4137,102.349]],["name/29-72",[]],["text/29-72",[]],["component/29-72",[]],["title/29-73",[32,35.948,63,5.976,74,11.389,78,17.872,210,11.51,2815,62.431]],["name/29-73",[]],["text/29-73",[]],["component/29-73",[]],["title/29-74",[32,31.74,63,5.276,74,10.055,78,15.78,210,14.426,386,15.881,2816,55.122]],["name/29-74",[]],["text/29-74",[]],["component/29-74",[]],["title/29-75",[32,31.74,63,5.276,74,10.055,210,14.426,257,6.768,386,15.881,4138,60.411]],["name/29-75",[]],["text/29-75",[]],["component/29-75",[]],["title/29-76",[63,6.89,74,13.13,257,8.837,4139,78.881]],["name/29-76",[]],["text/29-76",[]],["component/29-76",[]],["title/29-77",[29,21.021,32,24.553,63,4.082,74,7.779,78,12.207,210,7.862,386,12.286,657,15.395,801,25.95,862,21.523,1452,14.775,2817,42.642,2818,41.245]],["name/29-77",[]],["text/29-77",[]],["component/29-77",[]],["title/29-78",[32,41.443,74,13.13,203,29.691,4140,78.881]],["name/29-78",[]],["text/29-78",[]],["component/29-78",[]],["title/29-79",[203,29.691,210,13.27,4141,78.881,4142,78.881]],["name/29-79",[]],["text/29-79",[]],["component/29-79",[]],["title/29-80",[74,13.13,203,29.691,801,43.801,4143,78.881]],["name/29-80",[]],["text/29-80",[]],["component/29-80",[]],["title/29-81",[4144,102.349]],["name/29-81",[]],["text/29-81",[]],["component/29-81",[]],["title/29-82",[23,39.514,53,30.492,63,5.276,74,14.273,78,15.78,210,10.163,2761,36.794]],["name/29-82",[]],["text/29-82",[]],["component/29-82",[]],["title/29-83",[53,30.492,63,5.276,74,14.273,210,10.163,257,6.768,2761,36.794,4145,60.411]],["name/29-83",[]],["text/29-83",[]],["component/29-83",[]],["title/29-84",[63,5.276,74,10.055,78,15.78,210,10.163,386,15.881,1452,19.1,2761,36.794,2839,55.122]],["name/29-84",[]],["text/29-84",[]],["component/29-84",[]],["title/29-85",[53,30.492,74,14.273,210,10.163,257,6.768,386,15.881,2761,36.794,4146,60.411]],["name/29-85",[]],["text/29-85",[]],["component/29-85",[]],["title/29-86",[53,30.492,74,14.273,210,10.163,257,6.768,386,15.881,2761,36.794,4118,57.384]],["name/29-86",[]],["text/29-86",[]],["component/29-86",[]],["title/29-87",[4147,102.349]],["name/29-87",[]],["text/29-87",[]],["component/29-87",[]],["title/29-88",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/29-88",[]],["text/29-88",[]],["component/29-88",[]],["title/29-89",[63,5.604,74,10.681,78,16.761,210,10.795,386,16.869,1452,20.287,2784,55.035]],["name/29-89",[]],["text/29-89",[]],["component/29-89",[]],["title/29-90",[63,4.985,74,9.499,78,14.907,210,9.601,386,15.003,657,18.8,862,26.284,1452,18.044,2784,48.948]],["name/29-90",[]],["text/29-90",[]],["component/29-90",[]],["title/29-91",[63,5.276,74,14.273,78,15.78,210,10.163,386,15.881,1452,19.1,2785,51.813]],["name/29-91",[]],["text/29-91",[]],["component/29-91",[]],["title/29-92",[63,4.723,74,13.178,78,14.126,210,9.098,386,14.217,657,17.815,862,24.907,1452,17.098,2785,46.383]],["name/29-92",[]],["text/29-92",[]],["component/29-92",[]],["title/29-93",[63,5.276,74,10.055,78,15.78,210,10.163,386,15.881,1452,19.1,2761,36.794,2786,51.813]],["name/29-93",[]],["text/29-93",[]],["component/29-93",[]],["title/29-94",[63,4.723,74,9.002,78,14.126,210,9.098,386,14.217,657,17.815,862,24.907,1452,17.098,2761,32.938,2786,46.383]],["name/29-94",[]],["text/29-94",[]],["component/29-94",[]],["title/29-95",[74,11.389,203,25.754,210,11.51,386,17.987,801,37.993,4148,68.422]],["name/29-95",[]],["text/29-95",[]],["component/29-95",[]],["title/29-96",[74,14.273,203,22.739,210,10.163,386,15.881,689,37.613,801,33.545,4149,60.411]],["name/29-96",[]],["text/29-96",[]],["component/29-96",[]],["title/29-97",[74,11.389,203,25.754,210,11.51,386,17.987,2761,41.673,4150,68.422]],["name/29-97",[]],["text/29-97",[]],["component/29-97",[]],["title/29-98",[1160,97.219]],["name/29-98",[]],["text/29-98",[]],["component/29-98",[]],["title/29-99",[29,32.961,73,39.056,257,8.21,1204,54.093,4151,73.28]],["name/29-99",[]],["text/29-99",[]],["component/29-99",[]],["title/29-100",[63,6.89,78,20.604,973,59.067,1154,27.603]],["name/29-100",[]],["text/29-100",[]],["component/29-100",[]],["title/29-101",[63,6.89,74,13.13,78,20.604,673,47.707]],["name/29-101",[]],["text/29-101",[]],["component/29-101",[]],["title/29-102",[63,6.89,78,20.604,210,13.27,2821,71.975]],["name/29-102",[]],["text/29-102",[]],["component/29-102",[]],["title/29-103",[63,5.976,78,17.872,210,15.733,673,41.381,2823,62.431]],["name/29-103",[]],["text/29-103",[]],["component/29-103",[]],["title/29-104",[63,5.976,78,17.872,210,15.733,766,43.268,2824,62.431]],["name/29-104",[]],["text/29-104",[]],["component/29-104",[]],["title/29-105",[63,6.4,74,12.197,78,19.141,210,12.328,2825,66.864]],["name/29-105",[]],["text/29-105",[]],["component/29-105",[]],["title/29-106",[63,6.4,74,12.197,78,19.141,210,12.328,2828,66.864]],["name/29-106",[]],["text/29-106",[]],["component/29-106",[]],["title/29-107",[53,34.535,63,5.976,74,11.389,78,17.872,210,11.51,2831,62.431]],["name/29-107",[]],["text/29-107",[]],["component/29-107",[]],["title/29-108",[53,34.535,63,5.976,74,11.389,78,17.872,210,11.51,2833,62.431]],["name/29-108",[]],["text/29-108",[]],["component/29-108",[]],["title/29-109",[63,5.976,78,17.872,210,15.733,673,41.381,2827,62.431]],["name/29-109",[]],["text/29-109",[]],["component/29-109",[]],["title/29-110",[63,5.976,78,17.872,210,15.733,766,43.268,2830,62.431]],["name/29-110",[]],["text/29-110",[]],["component/29-110",[]],["title/29-111",[63,5.976,78,17.872,210,15.733,673,41.381,2832,62.431]],["name/29-111",[]],["text/29-111",[]],["component/29-111",[]],["title/29-112",[63,5.976,78,17.872,210,15.733,766,43.268,2834,62.431]],["name/29-112",[]],["text/29-112",[]],["component/29-112",[]],["title/29-113",[63,5.276,74,10.055,78,15.78,210,14.426,673,36.537,801,33.545,1171,49.4]],["name/29-113",[]],["text/29-113",[]],["component/29-113",[]],["title/29-114",[31,45.237,63,5.276,74,10.055,78,15.78,210,14.426,766,38.203,801,33.545]],["name/29-114",[]],["text/29-114",[]],["component/29-114",[]],["title/29-115",[53,27.296,63,4.723,74,13.178,78,14.126,210,13.319,673,32.708,801,30.03,1183,45.231]],["name/29-115",[]],["text/29-115",[]],["component/29-115",[]],["title/29-116",[53,27.296,63,4.723,74,13.178,78,14.126,210,13.319,766,34.199,801,30.03,1172,47.729]],["name/29-116",[]],["text/29-116",[]],["component/29-116",[]],["title/29-117",[63,4.985,210,13.85,257,6.394,673,34.516,1195,44.098,2365,38.779,3149,46.668,4152,57.071]],["name/29-117",[]],["text/29-117",[]],["component/29-117",[]],["title/29-118",[63,4.985,210,13.85,257,6.394,766,36.09,1195,44.098,2365,38.779,3149,46.668,4153,57.071]],["name/29-118",[]],["text/29-118",[]],["component/29-118",[]],["title/29-119",[74,13.178,205,33.931,210,13.319,257,6.059,673,32.708,766,34.199,801,30.03,1208,51.37]],["name/29-119",[]],["text/29-119",[]],["component/29-119",[]],["title/29-120",[53,24.707,74,14.7,205,30.712,210,12.37,257,5.484,673,29.605,766,30.955,801,27.181,1209,46.497]],["name/29-120",[]],["text/29-120",[]],["component/29-120",[]],["title/29-121",[63,6.89,257,8.837,1154,27.603,4154,78.881]],["name/29-121",[]],["text/29-121",[]],["component/29-121",[]],["title/29-122",[74,10.055,203,22.739,210,14.426,673,36.537,801,33.545,2657,47.498,4155,60.411]],["name/29-122",[]],["text/29-122",[]],["component/29-122",[]],["title/29-123",[74,10.055,203,22.739,210,14.426,766,38.203,801,33.545,2657,47.498,4156,60.411]],["name/29-123",[]],["text/29-123",[]],["component/29-123",[]],["title/29-124",[53,30.492,74,10.055,203,22.739,210,14.426,673,36.537,2657,47.498,4157,60.411]],["name/29-124",[]],["text/29-124",[]],["component/29-124",[]],["title/29-125",[53,30.492,74,10.055,203,22.739,210,14.426,766,38.203,2657,47.498,4158,60.411]],["name/29-125",[]],["text/29-125",[]],["component/29-125",[]],["title/29-126",[675,68.853]],["name/29-126",[]],["text/29-126",[]],["component/29-126",[]],["title/29-127",[4159,102.349]],["name/29-127",[]],["text/29-127",[]],["component/29-127",[]],["title/29-128",[29,27.173,32,31.74,74,10.055,210,10.163,257,6.768,386,15.881,1204,44.594,4160,57.384]],["name/29-128",[]],["text/29-128",[]],["component/29-128",[]],["title/29-129",[29,25.67,32,29.985,74,13.704,210,9.601,257,6.394,386,15.003,1026,44.098,1204,42.128]],["name/29-129",[]],["text/29-129",[]],["component/29-129",[]],["title/29-130",[29,25.67,32,29.985,74,9.499,210,9.601,257,6.394,386,15.003,1204,42.128,2761,34.759,4161,57.071]],["name/29-130",[]],["text/29-130",[]],["component/29-130",[]],["title/29-131",[29,25.67,32,29.985,74,9.499,210,9.601,257,6.394,1204,42.128,2761,34.759,4162,57.071,4163,54.21]],["name/29-131",[]],["text/29-131",[]],["component/29-131",[]],["title/29-132",[29,25.67,32,29.985,74,9.499,210,9.601,257,6.394,386,15.003,1204,42.128,2761,34.759,4164,57.071]],["name/29-132",[]],["text/29-132",[]],["component/29-132",[]],["title/29-133",[29,24.325,32,28.413,74,9.002,210,9.098,257,6.059,386,14.217,657,17.815,862,24.907,2783,47.729,4165,54.08]],["name/29-133",[]],["text/29-133",[]],["component/29-133",[]],["title/29-134",[29,23.114,32,26.999,74,12.691,210,8.645,257,5.757,386,13.509,657,16.928,862,23.667,2783,45.352,4166,51.387]],["name/29-134",[]],["text/29-134",[]],["component/29-134",[]],["title/29-135",[29,24.325,32,28.413,74,9.002,210,9.098,257,6.059,386,14.217,657,17.815,862,24.907,2783,47.729,4167,54.08]],["name/29-135",[]],["text/29-135",[]],["component/29-135",[]],["title/29-136",[32,41.443,74,13.13,203,29.691,4168,78.881]],["name/29-136",[]],["text/29-136",[]],["component/29-136",[]],["title/29-137",[74,10.055,203,22.739,210,14.426,2761,36.794,4163,57.384,4169,60.411,4170,60.411]],["name/29-137",[]],["text/29-137",[]],["component/29-137",[]],["title/29-138",[4171,110.136]],["name/29-138",[]],["text/29-138",[]],["component/29-138",[]],["title/29-139",[14,29.869,74,15.589,210,9.098,257,6.059,386,14.217,657,17.815,862,24.907,4172,54.08]],["name/29-139",[]],["text/29-139",[]],["component/29-139",[]],["title/29-140",[14,29.869,74,13.178,210,9.098,257,6.059,386,14.217,657,17.815,862,24.907,2761,32.938,4173,54.08]],["name/29-140",[]],["text/29-140",[]],["component/29-140",[]],["title/29-141",[74,13.13,203,29.691,801,43.801,4174,78.881]],["name/29-141",[]],["text/29-141",[]],["component/29-141",[]],["title/29-142",[74,13.13,203,29.691,2761,48.043,4175,78.881]],["name/29-142",[]],["text/29-142",[]],["component/29-142",[]],["title/29",[193,53.82,194,63.271]],["name/29",[196,0.213]],["text/29",[1,0.08,3,0.144,4,0.201,5,0.142,6,2.161,7,0.08,10,0.078,12,1.777,14,0.824,16,0.088,17,0.076,21,0.083,23,3.504,26,1.031,28,0.071,29,1.429,30,0.075,31,0.926,32,3.518,33,1.118,35,0.094,36,2.877,42,1.183,44,0.091,48,0.287,49,0.086,53,2.984,56,0.091,59,0.074,60,0.772,61,0.072,62,0.269,63,0.299,73,0.267,74,0.367,76,2.294,78,0.105,79,0.181,80,1.76,83,0.069,84,1.267,85,0.312,88,0.222,89,0.341,92,0.084,93,0.209,96,0.737,97,0.067,99,0.228,100,0.249,103,0.236,105,0.424,111,0.08,113,0.167,114,0.094,116,0.402,117,1.426,119,0.63,121,0.212,122,0.24,125,0.145,127,0.41,130,0.63,131,0.139,132,0.406,134,0.481,135,0.589,138,0.36,139,0.083,142,0.037,143,0.083,144,0.077,145,0.232,153,0.43,159,0.074,160,0.158,162,1.566,171,0.753,172,0.283,173,0.072,174,0.511,178,0.352,180,0.167,181,0.511,184,0.236,186,0.72,189,0.094,193,2.317,194,1.842,196,1.323,197,0.091,199,0.055,203,0.465,205,0.375,208,0.375,210,0.132,211,1.443,213,0.232,214,0.926,215,0.955,216,0.415,218,0.084,220,0.153,223,0.228,225,0.094,232,0.086,237,0.346,240,0.679,241,0.886,244,0.086,245,0.078,247,0.236,249,0.083,251,0.083,252,0.135,254,0.078,255,0.194,256,0.176,257,0.148,259,0.084,260,0.394,261,0.244,263,0.772,266,0.084,270,0.387,271,0.283,273,0.081,274,0.156,275,0.164,276,0.816,277,0.081,281,0.091,282,0.086,283,0.575,287,0.084,293,0.33,294,0.187,296,0.161,297,0.976,298,0.511,300,0.08,303,0.167,304,0.078,305,0.083,306,0.232,311,0.075,318,0.806,319,0.073,323,0.217,326,0.088,327,0.504,329,0.176,330,0.161,331,0.081,333,0.176,334,0.083,338,0.512,340,0.05,341,0.149,352,0.356,355,0.094,356,0.294,360,0.762,361,0.161,362,0.167,364,0.462,372,0.37,373,0.091,375,0.181,376,0.071,380,0.081,382,0.236,384,0.228,385,1.116,386,2.471,391,0.083,392,0.094,393,0.133,394,0.24,395,0.086,396,0.094,397,0.081,398,0.225,401,0.075,405,0.091,408,0.283,409,0.278,414,0.232,415,0.167,422,0.153,423,0.083,425,0.084,429,0.381,436,0.077,438,0.441,442,0.076,445,0.338,446,0.072,447,0.083,450,0.094,451,0.219,454,0.076,455,0.078,456,0.323,460,0.077,461,0.181,462,0.949,463,0.315,464,0.504,465,0.153,467,0.147,468,0.164,481,0.868,504,1.231,507,0.441,511,0.381,516,0.298,517,0.164,518,0.086,525,0.084,528,0.077,532,0.091,533,0.091,538,0.833,539,0.269,541,0.402,542,0.091,544,0.679,546,0.086,549,0.255,552,0.219,558,0.307,562,0.158,565,0.338,566,0.086,570,0.151,572,0.555,573,0.911,575,0.435,576,0.071,577,0.126,581,0.083,593,0.153,599,0.585,602,0.249,612,0.526,613,0.074,615,0.078,617,0.149,618,0.088,625,0.098,635,0.356,640,0.176,652,0.094,661,0.091,663,0.167,665,0.356,669,0.176,673,1.424,675,0.272,680,0.176,682,0.811,683,0.147,685,0.225,686,0.151,689,1.374,693,0.083,697,0.098,701,0.217,707,0.149,709,0.598,710,0.064,712,0.441,716,0.158,725,0.086,726,0.858,727,0.312,737,0.199,740,0.064,741,2.358,742,0.091,743,0.228,751,0.706,758,0.156,760,0.083,761,0.098,764,0.302,765,0.205,766,1.396,771,1.105,775,0.158,789,0.088,795,0.094,800,2.264,801,1.728,804,0.777,806,0.269,807,0.086,812,0.088,813,0.094,814,0.075,816,0.098,822,0.618,826,0.094,828,0.091,829,0.307,841,0.088,844,0.338,856,0.103,857,0.091,858,0.078,862,0.529,863,0.594,865,0.081,878,0.181,882,0.249,886,0.153,892,0.07,893,0.566,908,0.161,912,0.103,915,0.103,916,0.103,921,1.022,924,0.055,925,0.249,926,1.071,927,0.668,928,0.151,929,0.091,931,0.091,932,0.167,933,0.084,936,0.086,948,0.088,950,1.153,961,0.088,962,0.29,971,0.091,973,1.653,992,1.133,1016,0.075,1017,1.174,1022,0.158,1026,0.08,1028,0.24,1040,0.394,1041,0.176,1050,0.346,1054,0.158,1057,0.084,1062,0.167,1073,0.94,1078,0.083,1088,1.289,1089,0.084,1090,0.088,1091,0.086,1095,0.171,1102,0.187,1105,0.149,1106,1.178,1107,0.269,1114,0.083,1115,0.232,1117,0.171,1125,0.244,1128,1.263,1140,0.103,1143,0.086,1144,0.098,1146,0.078,1147,0.205,1148,0.098,1150,0.338,1152,0.249,1154,0.036,1155,0.205,1157,0.935,1159,0.19,1160,0.098,1170,0.346,1171,0.793,1172,0.269,1174,0.205,1182,0.083,1183,0.579,1188,0.205,1190,0.176,1195,0.312,1196,0.255,1198,0.249,1204,1.102,1207,0.094,1208,0.098,1209,0.098,1222,0.244,1230,0.171,1232,0.094,1246,0.546,1247,1.303,1257,0.094,1266,0.161,1268,0.181,1281,0.187,1287,0.098,1297,0.171,1306,0.43,1315,0.338,1316,0.098,1320,0.442,1329,0.158,1337,0.091,1344,0.094,1346,0.103,1348,0.088,1350,0.103,1351,0.167,1352,0.194,1353,0.098,1356,0.153,1359,0.094,1362,0.094,1378,0.194,1381,0.084,1391,0.098,1392,0.103,1393,0.103,1397,0.098,1398,0.103,1404,0.161,1405,0.205,1410,0.176,1411,0.091,1419,0.833,1425,0.086,1428,0.176,1429,0.098,1452,0.065,1465,0.24,1468,0.081,1473,0.255,1476,0.098,1482,0.091,1503,0.278,1507,0.094,1513,0.083,1529,0.63,1568,0.269,1569,0.171,1576,0.187,1580,0.167,1591,0.098,1611,0.346,1637,0.098,1660,0.33,1670,0.088,1672,0.194,1674,0.081,1690,0.535,1691,0.466,1693,0.726,1701,0.103,1708,0.171,1722,0.194,1742,0.171,1760,0.067,1774,1.553,1801,0.43,1802,0.5,1807,0.091,1808,0.094,1810,0.098,1828,0.187,1837,0.094,1857,0.094,1896,0.527,1929,0.127,2032,0.194,2035,0.094,2062,0.094,2067,0.187,2078,0.167,2079,1.06,2080,0.512,2106,0.214,2109,0.338,2145,0.747,2231,0.084,2319,0.171,2320,0.171,2321,0.167,2322,0.164,2323,0.171,2324,0.171,2325,0.167,2326,0.167,2338,0.098,2339,0.098,2350,0.103,2359,0.103,2361,0.094,2371,0.086,2407,0.088,2501,0.091,2502,0.091,2503,0.094,2504,0.255,2505,0.091,2506,0.181,2507,0.094,2508,0.094,2509,0.094,2510,0.094,2511,0.219,2513,0.088,2514,0.094,2515,0.094,2553,0.098,2557,0.278,2575,0.187,2580,0.098,2589,0.176,2590,0.176,2591,0.176,2592,0.176,2599,0.187,2608,0.094,2610,0.305,2630,0.384,2657,0.833,2665,0.098,2667,0.176,2680,0.747,2690,3.338,2711,0.103,2712,1.007,2713,1.174,2716,0.094,2717,0.094,2718,0.094,2719,0.094,2720,0.094,2721,0.094,2722,0.094,2725,0.29,2727,0.098,2728,0.098,2741,0.098,2742,0.098,2756,1.007,2757,1.007,2758,1.007,2759,1.007,2760,1.007,2761,4.362,2762,1.007,2763,1.007,2784,0.43,2785,0.43,2786,0.43,2787,0.29,2789,0.194,2815,0.278,2816,0.187,2817,0.278,2818,0.091,2821,0.094,2823,0.094,2824,0.094,2825,0.094,2827,0.094,2828,0.094,2830,0.094,2831,0.094,2832,0.094,2833,0.094,2834,0.094,2839,0.187,2841,0.098,2853,0.103,2856,0.205,2857,0.658,2858,0.597,2859,0.404,2863,0.384,2885,1.733,2886,0.181,2893,0.194,2898,0.305,2907,0.194,2908,0.305,2926,0.205,2965,0.103,2974,0.194,3049,0.194,3102,0.103,3106,0.194,3173,0.074,3328,0.356,3331,0.512,3332,0.091,3333,0.091,3334,0.091,3335,0.091,3336,0.181,3337,0.091,3338,0.091,3694,0.568,3724,0.103,3748,0.103,3792,0.103,3838,0.103,3860,0.103,3880,0.103,3887,0.103,3939,0.103,3950,0.103,3973,0.103,4040,0.205,4070,0.098,4073,0.103,4099,0.098,4100,0.098,4101,0.098,4102,0.098,4114,0.094,4115,0.967,4116,2.02,4117,1.048,4118,1.174,4119,0.103,4120,0.103,4121,0.103,4122,0.103,4123,0.205,4124,0.103,4125,0.103,4126,0.194,4127,0.103,4128,0.103,4129,0.103,4130,0.103,4131,0.103,4132,0.187,4133,0.094,4134,0.094,4135,0.187,4136,0.103,4137,0.103,4138,0.205,4139,0.103,4140,0.103,4141,0.103,4142,0.103,4143,0.103,4144,0.103,4145,0.103,4146,0.103,4147,0.692,4148,0.103,4149,0.103,4150,0.103,4151,0.103,4152,0.205,4153,0.205,4154,0.205,4155,0.103,4156,0.103,4157,0.103,4158,0.103,4159,0.205,4160,0.098,4161,0.103,4162,0.103,4163,0.29,4164,0.205,4165,0.103,4166,0.103,4167,0.103,4168,0.103,4169,0.103,4170,0.103,4172,0.103,4173,0.103,4174,0.103,4175,0.103,4176,0.111,4177,0.111,4178,0.328,4179,0.111,4180,0.111,4181,0.111,4182,0.111,4183,0.111,4184,0.111,4185,0.111,4186,0.22,4187,0.111,4188,0.111,4189,0.111,4190,0.111,4191,0.22,4192,0.111,4193,0.111,4194,0.22,4195,0.22,4196,0.111,4197,0.328,4198,0.539,4199,0.111,4200,0.111,4201,0.22,4202,0.111,4203,0.111,4204,0.111,4205,0.111,4206,0.111,4207,0.111,4208,0.111,4209,0.111,4210,0.22,4211,0.111,4212,0.111,4213,0.111,4214,0.111,4215,0.111,4216,0.786,4217,0.111,4218,0.111,4219,0.22,4220,0.111,4221,0.111,4222,0.111,4223,0.22,4224,0.22,4225,0.111,4226,0.22,4227,0.111,4228,0.111,4229,0.111,4230,0.111,4231,0.111,4232,0.111,4233,0.111,4234,0.111,4235,0.111,4236,0.111,4237,0.22,4238,0.111,4239,0.111,4240,0.103,4241,0.111,4242,0.111,4243,0.111,4244,0.111,4245,0.111,4246,0.111,4247,0.22,4248,0.111,4249,0.111,4250,0.111,4251,0.111,4252,0.22,4253,0.111,4254,0.111,4255,0.111,4256,0.328,4257,0.111,4258,0.111,4259,0.111,4260,0.328,4261,0.22,4262,0.328,4263,0.22,4264,0.111,4265,0.111,4266,0.111,4267,0.305,4268,0.111,4269,0.111,4270,0.111,4271,0.111,4272,0.111,4273,0.111,4274,0.111,4275,0.111,4276,0.111,4277,0.111,4278,0.111,4279,0.111,4280,0.111,4281,0.111,4282,0.111,4283,0.111,4284,0.111,4285,0.111,4286,0.111,4287,0.111,4288,0.111,4289,0.111,4290,0.111,4291,0.111,4292,0.111,4293,0.111,4294,0.111,4295,0.111]],["component/29",[29,0.109]],["title/30-1",[1105,74.534]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[1773,87.782]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[53,32.388,63,5.604,74,10.681,142,22.902,210,10.795,921,49.582,926,43.602]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[53,32.388,63,5.604,74,10.681,142,22.902,210,10.795,1240,33.251,4296,60.952]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[74,14.273,142,21.562,210,10.163,657,19.901,862,27.823,1026,46.68,1240,31.304]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[74,15.566,142,24.42,210,11.51,1026,52.869,1240,35.455]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[74,15.566,142,24.42,210,11.51,1240,35.455,1774,55.95]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30-8",[74,12.197,142,26.154,210,12.328,1240,37.973,2690,49.297]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["title/30-9",[14,37.79,74,11.389,142,24.42,1452,21.632,2690,46.029,4042,58.684]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["title/30-10",[14,35.44,63,5.604,74,10.681,142,22.902,210,10.795,1240,33.251,4297,60.952]],["name/30-10",[]],["text/30-10",[]],["component/30-10",[]],["title/30-11",[14,33.365,53,30.492,63,5.276,74,14.273,142,21.562,1452,19.1,4043,51.813]],["name/30-11",[]],["text/30-11",[]],["component/30-11",[]],["title/30-12",[36,38.393,74,13.704,210,9.601,1088,26.468,1240,29.573,1367,45.766]],["name/30-12",[]],["text/30-12",[]],["component/30-12",[]],["title/30-13",[53,25.937,74,12.691,210,8.645,1088,23.832,1240,26.628,1367,43.079,2690,51.293]],["name/30-13",[]],["text/30-13",[]],["component/30-13",[]],["title/30-14",[14,29.869,53,27.296,74,13.178,1088,25.081,1367,37.518,1452,17.098,2690,36.381,4046,49.345]],["name/30-14",[]],["text/30-14",[]],["component/30-14",[]],["title/30-15",[1242,93.388]],["name/30-15",[]],["text/30-15",[]],["component/30-15",[]],["title/30-16",[63,6.89,142,28.153,504,49.112,736,35.598]],["name/30-16",[]],["text/30-16",[]],["component/30-16",[]],["title/30-17",[63,6.89,142,28.153,736,35.598,1128,63.195]],["name/30-17",[]],["text/30-17",[]],["component/30-17",[]],["title/30-18",[63,5.976,142,24.42,210,11.51,736,30.878,1239,55.95,1240,35.455]],["name/30-18",[]],["text/30-18",[]],["component/30-18",[]],["title/30-19",[2843,97.219]],["name/30-19",[]],["text/30-19",[]],["component/30-19",[]],["title/30-20",[63,6.89,142,28.153,210,13.27,1073,59.971]],["name/30-20",[]],["text/30-20",[]],["component/30-20",[]],["title/30-21",[53,30.492,63,5.276,74,10.055,142,21.562,210,14.426,1367,28.628,4298,57.384]],["name/30-21",[]],["text/30-21",[]],["component/30-21",[]],["title/30-22",[63,5.976,142,24.42,210,15.733,1367,32.423,4299,64.992]],["name/30-22",[]],["text/30-22",[]],["component/30-22",[]],["title/30-23",[1222,81.997]],["name/30-23",[]],["text/30-23",[]],["component/30-23",[]],["title/30-24",[73,36.467,257,7.666,736,42.205,2407,58.684,4114,62.431]],["name/30-24",[]],["text/30-24",[]],["component/30-24",[]],["title/30-25",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/30-25",[]],["text/30-25",[]],["component/30-25",[]],["title/30-26",[53,34.535,63,5.976,74,11.389,78,17.872,210,11.51,921,52.869]],["name/30-26",[]],["text/30-26",[]],["component/30-26",[]],["title/30-27",[63,5.976,74,11.389,78,17.872,210,11.51,1240,35.455,4296,64.992]],["name/30-27",[]],["text/30-27",[]],["component/30-27",[]],["title/30-28",[63,6.89,78,20.604,504,49.112,736,35.598]],["name/30-28",[]],["text/30-28",[]],["component/30-28",[]],["title/30-29",[63,6.89,78,20.604,736,35.598,1128,63.195]],["name/30-29",[]],["text/30-29",[]],["component/30-29",[]],["title/30-30",[63,5.976,78,17.872,210,11.51,736,30.878,1239,55.95,1240,35.455]],["name/30-30",[]],["text/30-30",[]],["component/30-30",[]],["title/30-31",[63,6.89,257,8.837,736,35.598,4108,74.927]],["name/30-31",[]],["text/30-31",[]],["component/30-31",[]],["title/30-32",[74,12.197,78,19.141,210,12.328,1240,37.973,2690,49.297]],["name/30-32",[]],["text/30-32",[]],["component/30-32",[]],["title/30-33",[63,5.976,74,11.389,78,17.872,210,11.51,1240,35.455,4297,64.992]],["name/30-33",[]],["text/30-33",[]],["component/30-33",[]],["title/30-34",[14,37.79,74,11.389,78,17.872,1452,21.632,2690,46.029,4042,58.684]],["name/30-34",[]],["text/30-34",[]],["component/30-34",[]],["title/30-35",[14,33.365,53,30.492,63,5.276,74,14.273,78,15.78,1452,19.1,4043,51.813]],["name/30-35",[]],["text/30-35",[]],["component/30-35",[]],["title/30-36",[74,15.566,78,17.872,210,11.51,1240,35.455,1774,55.95]],["name/30-36",[]],["text/30-36",[]],["component/30-36",[]],["title/30-37",[74,15.566,78,17.872,210,11.51,1026,52.869,1240,35.455]],["name/30-37",[]],["text/30-37",[]],["component/30-37",[]],["title/30-38",[74,14.273,78,15.78,210,10.163,657,19.901,862,27.823,1026,46.68,1240,31.304]],["name/30-38",[]],["text/30-38",[]],["component/30-38",[]],["title/30-39",[63,5.976,74,11.389,210,11.51,257,7.666,1240,35.455,4300,64.992]],["name/30-39",[]],["text/30-39",[]],["component/30-39",[]],["title/30-40",[63,5.976,74,11.389,210,11.51,257,7.666,1240,35.455,4301,68.422]],["name/30-40",[]],["text/30-40",[]],["component/30-40",[]],["title/30-41",[53,27.296,63,4.723,74,13.178,210,9.098,257,6.059,1240,28.024,1452,17.098,2761,32.938,4302,54.08]],["name/30-41",[]],["text/30-41",[]],["component/30-41",[]],["title/30-42",[53,30.492,74,14.273,210,10.163,257,6.768,1240,31.304,2761,36.794,4303,60.411]],["name/30-42",[]],["text/30-42",[]],["component/30-42",[]],["title/30-43",[12,25.211,74,11.389,257,7.666,386,17.987,2643,57.225,4304,62.431]],["name/30-43",[]],["text/30-43",[]],["component/30-43",[]],["title/30-44",[63,4.985,74,16.075,210,9.601,257,6.394,1106,40.529,1240,29.573,4305,46.668]],["name/30-44",[]],["text/30-44",[]],["component/30-44",[]],["title/30-45",[74,12.197,210,12.328,215,56.623,257,8.21,1240,37.973]],["name/30-45",[]],["text/30-45",[]],["component/30-45",[]],["title/30-46",[74,12.197,210,12.328,257,8.21,1240,37.973,4306,69.607]],["name/30-46",[]],["text/30-46",[]],["component/30-46",[]],["title/30-47",[74,10.681,210,10.795,257,7.189,657,21.138,862,29.553,1240,33.251,4306,60.952]],["name/30-47",[]],["text/30-47",[]],["component/30-47",[]],["title/30-48",[210,13.27,241,65.973,257,8.837,1240,40.875]],["name/30-48",[]],["text/30-48",[]],["component/30-48",[]],["title/30-49",[74,15.566,210,11.51,257,7.666,1240,35.455,4115,62.431]],["name/30-49",[]],["text/30-49",[]],["component/30-49",[]],["title/30-50",[74,15.566,210,11.51,257,7.666,1240,35.455,4307,64.992]],["name/30-50",[]],["text/30-50",[]],["component/30-50",[]],["title/30-51",[74,14.273,210,10.163,257,6.768,657,19.901,862,27.823,1240,31.304,4307,57.384]],["name/30-51",[]],["text/30-51",[]],["component/30-51",[]],["title/30-52",[74,14.892,210,10.795,257,7.189,1240,33.251,4116,55.035,4305,52.471]],["name/30-52",[]],["text/30-52",[]],["component/30-52",[]],["title/30-53",[74,13.704,210,9.601,257,6.394,1240,29.573,1452,18.044,4116,48.948,4117,52.074,4305,46.668]],["name/30-53",[]],["text/30-53",[]],["component/30-53",[]],["title/30-54",[14,33.365,53,30.492,74,14.273,257,6.768,1452,19.1,2690,40.64,4054,55.122]],["name/30-54",[]],["text/30-54",[]],["component/30-54",[]],["title/30-55",[63,5.976,74,11.389,210,11.51,257,7.666,1240,35.455,4308,68.422]],["name/30-55",[]],["text/30-55",[]],["component/30-55",[]],["title/30-56",[4309,102.349]],["name/30-56",[]],["text/30-56",[]],["component/30-56",[]],["title/30-57",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/30-57",[]],["text/30-57",[]],["component/30-57",[]],["title/30-58",[53,30.492,63,5.276,74,10.055,78,15.78,210,14.426,1367,28.628,4298,57.384]],["name/30-58",[]],["text/30-58",[]],["component/30-58",[]],["title/30-59",[63,6.89,78,20.604,210,13.27,1073,59.971]],["name/30-59",[]],["text/30-59",[]],["component/30-59",[]],["title/30-60",[63,5.976,78,17.872,210,15.733,1367,32.423,4299,64.992]],["name/30-60",[]],["text/30-60",[]],["component/30-60",[]],["title/30-61",[63,4.985,74,16.075,210,9.601,257,6.394,1106,40.529,1240,29.573,4305,46.668]],["name/30-61",[]],["text/30-61",[]],["component/30-61",[]],["title/30-62",[12,25.211,74,11.389,211,44.753,257,7.666,2643,57.225,4304,62.431]],["name/30-62",[]],["text/30-62",[]],["component/30-62",[]],["title/30-63",[53,34.535,74,11.389,203,25.754,210,11.51,1367,32.423,4310,68.422]],["name/30-63",[]],["text/30-63",[]],["component/30-63",[]],["title/30-64",[203,35.049,4311,93.114]],["name/30-64",[]],["text/30-64",[]],["component/30-64",[]],["title/30-65",[2842,97.219]],["name/30-65",[]],["text/30-65",[]],["component/30-65",[]],["title/30-66",[14,28.381,63,4.488,74,12.691,142,18.341,210,8.645,477,22.742,657,16.928,862,23.667,1240,26.628,2296,42.978]],["name/30-66",[]],["text/30-66",[]],["component/30-66",[]],["title/30-67",[297,66.944]],["name/30-67",[]],["text/30-67",[]],["component/30-67",[]],["title/30-68",[4312,102.349]],["name/30-68",[]],["text/30-68",[]],["component/30-68",[]],["title/30-69",[63,4.985,74,16.075,210,9.601,257,6.394,1106,40.529,1240,29.573,4305,46.668]],["name/30-69",[]],["text/30-69",[]],["component/30-69",[]],["title/30-70",[4313,102.349]],["name/30-70",[]],["text/30-70",[]],["component/30-70",[]],["title/30-71",[78,20.604,210,13.27,240,60.951,1240,40.875]],["name/30-71",[]],["text/30-71",[]],["component/30-71",[]],["title/30-72",[4314,102.349]],["name/30-72",[]],["text/30-72",[]],["component/30-72",[]],["title/30-73",[63,6.89,257,8.837,3199,59.067,4315,78.881]],["name/30-73",[]],["text/30-73",[]],["component/30-73",[]],["title/30-74",[63,5.976,74,11.389,210,11.51,257,7.666,1240,35.455,4300,64.992]],["name/30-74",[]],["text/30-74",[]],["component/30-74",[]],["title/30-75",[63,5.604,74,10.681,257,7.189,3199,66.994,4316,64.167,4317,60.952]],["name/30-75",[]],["text/30-75",[]],["component/30-75",[]],["title/30-76",[63,4.985,74,16.075,210,9.601,257,6.394,1106,40.529,1240,29.573,4305,46.668]],["name/30-76",[]],["text/30-76",[]],["component/30-76",[]],["title/30-77",[63,6.89,257,8.837,3199,59.067,4318,78.881]],["name/30-77",[]],["text/30-77",[]],["component/30-77",[]],["title/30-78",[203,35.049,4319,93.114]],["name/30-78",[]],["text/30-78",[]],["component/30-78",[]],["title/30-79",[203,25.754,210,15.733,4317,64.992,4320,68.422,4321,68.422]],["name/30-79",[]],["text/30-79",[]],["component/30-79",[]],["title/30-80",[203,35.049,4322,93.114]],["name/30-80",[]],["text/30-80",[]],["component/30-80",[]],["title/30-81",[203,35.049,4323,93.114]],["name/30-81",[]],["text/30-81",[]],["component/30-81",[]],["title/30-82",[1235,93.388]],["name/30-82",[]],["text/30-82",[]],["component/30-82",[]],["title/30-83",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/30-83",[]],["text/30-83",[]],["component/30-83",[]],["title/30-84",[63,5.976,78,17.872,210,11.51,736,30.878,1239,55.95,1240,35.455]],["name/30-84",[]],["text/30-84",[]],["component/30-84",[]],["title/30-85",[210,11.51,257,7.666,736,30.878,1240,35.455,1241,64.992,4324,68.422]],["name/30-85",[]],["text/30-85",[]],["component/30-85",[]],["title/30-86",[1402,93.388]],["name/30-86",[]],["text/30-86",[]],["component/30-86",[]],["title/30-87",[63,4.985,74,16.075,210,9.601,257,6.394,1106,40.529,1240,29.573,4305,46.668]],["name/30-87",[]],["text/30-87",[]],["component/30-87",[]],["title/30-88",[12,25.211,63,5.976,74,11.389,210,11.51,257,7.666,2513,58.684]],["name/30-88",[]],["text/30-88",[]],["component/30-88",[]],["title/30-89",[12,25.211,74,11.389,211,44.753,257,7.666,2643,57.225,4304,62.431]],["name/30-89",[]],["text/30-89",[]],["component/30-89",[]],["title/30-90",[4325,97.219]],["name/30-90",[]],["text/30-90",[]],["component/30-90",[]],["title/30-91",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/30-91",[]],["text/30-91",[]],["component/30-91",[]],["title/30-92",[1403,97.219]],["name/30-92",[]],["text/30-92",[]],["component/30-92",[]],["title/30-93",[29,32.961,73,39.056,257,8.21,1773,62.85,4132,66.864]],["name/30-93",[]],["text/30-93",[]],["component/30-93",[]],["title/30-94",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,1240,31.304,1452,19.1,4133,55.122]],["name/30-94",[]],["text/30-94",[]],["component/30-94",[]],["title/30-95",[12,22.26,63,5.276,74,10.055,78,15.78,210,10.163,1240,31.304,1452,19.1,4134,55.122]],["name/30-95",[]],["text/30-95",[]],["component/30-95",[]],["title/30-96",[63,4.985,74,13.704,78,14.907,210,9.601,477,25.258,657,18.8,1240,29.573,2296,47.732]],["name/30-96",[]],["text/30-96",[]],["component/30-96",[]],["title/30-97",[12,22.26,63,5.276,74,10.055,210,14.426,257,6.768,1240,31.304,4135,55.122]],["name/30-97",[]],["text/30-97",[]],["component/30-97",[]],["title/30-98",[29,32.961,63,6.4,78,19.141,1017,57.616,1773,62.85]],["name/30-98",[]],["text/30-98",[]],["component/30-98",[]],["title/30-99",[32,41.443,74,13.13,203,29.691,4326,78.881]],["name/30-99",[]],["text/30-99",[]],["component/30-99",[]],["title/30-100",[675,68.853]],["name/30-100",[]],["text/30-100",[]],["component/30-100",[]],["title/30-101",[2295,93.388]],["name/30-101",[]],["text/30-101",[]],["component/30-101",[]],["title/30-102",[63,5.276,74,14.273,78,15.78,210,10.163,477,26.736,657,19.901,2296,50.526]],["name/30-102",[]],["text/30-102",[]],["component/30-102",[]],["title/30-103",[4327,110.136]],["name/30-103",[]],["text/30-103",[]],["component/30-103",[]],["title/30-104",[14,29.869,74,15.589,210,9.098,257,6.059,657,17.815,862,24.907,1240,28.024,4328,54.08]],["name/30-104",[]],["text/30-104",[]],["component/30-104",[]],["title/30",[193,53.82,613,66.942]],["name/30",[1222,0.224]],["text/30",[0,0.598,1,0.104,3,0.369,4,0.347,5,0.186,6,1.341,7,0.104,10,0.103,12,1.179,14,3.608,17,0.572,23,1.034,26,1.174,28,0.361,29,1.621,30,0.195,31,2.458,32,3.78,33,1.102,35,0.123,36,3.303,41,0.113,42,1.167,48,0.096,49,0.113,52,0.116,53,3.977,59,0.192,60,0.289,61,0.094,62,0.35,63,0.119,66,0.095,69,0.188,73,0.413,74,0.383,76,2.205,78,0.035,80,1.265,83,0.09,84,0.361,85,0.207,89,0.182,93,0.184,96,0.103,97,0.173,100,0.219,101,0.119,105,0.636,109,0.123,110,0.11,113,0.219,116,0.214,117,1.528,119,0.813,121,0.186,122,0.313,125,0.096,127,0.83,130,0.108,131,0.182,132,0.27,134,0.365,135,0.58,139,0.108,142,0.095,143,0.907,144,0.101,153,0.468,161,0.103,162,0.093,163,0.2,164,0.116,168,0.119,171,0.282,173,0.279,174,0.197,178,0.794,180,0.219,181,0.388,184,0.104,186,0.182,189,0.123,190,0.207,193,2.215,194,0.092,203,0.426,205,0.71,208,0.393,210,0.023,211,0.506,213,0.203,214,0.393,215,0.963,216,0.276,217,0.104,219,0.104,220,0.2,223,0.101,224,0.325,232,0.224,237,0.229,240,0.963,241,0.947,245,0.103,247,0.307,255,0.128,257,0.073,260,0.704,261,0.813,263,0.289,264,0.21,270,0.307,271,0.188,275,0.108,276,0.373,277,0.106,283,0.506,297,1.309,298,0.293,300,0.307,304,0.103,306,0.203,310,0.104,312,0.116,315,0.214,318,0.545,319,0.096,321,0.11,326,0.116,328,0.203,331,0.106,334,0.214,341,0.098,343,0.749,345,0.11,352,0.462,356,0.474,358,0.19,361,0.609,362,0.11,366,0.101,372,0.1,382,0.503,384,0.101,385,0.761,386,0.499,393,0.258,398,0.572,404,0.123,408,0.095,411,0.116,415,0.11,418,0.214,422,0.101,423,0.108,429,0.103,433,0.135,438,0.197,442,0.1,446,0.276,447,0.108,451,0.097,453,0.135,454,0.1,455,0.399,456,0.108,460,0.2,462,0.06,463,0.168,464,0.289,465,0.2,467,0.097,468,0.214,474,0.106,481,0.095,488,0.108,490,0.11,504,0.984,505,0.123,506,0.224,507,0.388,511,0.203,516,0.197,521,0.128,528,0.101,532,0.119,533,0.119,546,0.224,548,0.11,552,0.286,554,0.119,558,0.203,562,0.406,564,0.119,572,0.108,573,0.074,575,0.098,576,0.093,585,0.093,592,1.624,593,0.101,597,0.113,599,0.516,602,0.325,605,0.108,612,0.203,613,2.24,614,0.098,615,0.103,617,0.098,635,0.096,663,0.325,673,0.394,675,0.18,682,0.749,685,0.388,686,0.1,689,1.371,693,0.108,701,0.096,706,0.096,709,0.86,710,0.125,712,0.1,715,0.439,725,0.113,726,1.172,727,0.104,737,0.088,740,0.083,741,1.704,742,0.119,764,0.2,769,0.123,771,0.434,773,0.123,775,0.104,789,0.116,793,0.116,800,2.371,801,1.223,807,0.113,808,0.106,822,0.313,829,0.103,844,0.113,845,0.123,846,0.103,848,0.135,857,0.119,858,0.302,859,0.229,862,1.765,863,0.116,865,0.106,882,0.11,886,0.393,890,0.388,892,0.092,893,0.325,911,0.224,921,1.387,924,0.603,925,0.325,926,0.526,927,0.495,928,1.004,948,0.116,969,0.62,971,0.351,986,0.123,989,0.318,992,1.214,1016,0.474,1017,0.512,1026,2.342,1028,0.704,1030,0.244,1031,0.244,1040,0.106,1060,0.135,1061,0.135,1073,0.302,1076,0.123,1078,0.108,1079,0.11,1088,1.561,1090,0.116,1093,0.229,1095,0.224,1102,0.123,1103,0.119,1104,0.116,1105,0.383,1106,0.966,1114,0.108,1128,1.266,1146,0.103,1149,0.128,1159,0.051,1171,0.325,1183,0.332,1197,0.113,1198,0.219,1222,1.09,1227,0.341,1230,0.113,1235,0.123,1236,0.135,1239,1.203,1240,5.747,1241,0.128,1242,0.123,1243,0.229,1247,1.865,1281,0.123,1292,0.254,1293,0.128,1295,0.499,1297,0.224,1305,0.229,1312,0.119,1339,0.128,1349,0.135,1354,0.116,1366,0.116,1367,0.697,1370,0.123,1381,0.11,1402,0.363,1403,0.128,1404,0.21,1407,0.236,1410,0.229,1415,0.229,1419,0.106,1425,0.439,1428,0.116,1442,0.325,1452,0.043,1465,0.106,1468,0.106,1476,0.128,1479,0.244,1513,0.108,1527,0.116,1554,0.123,1568,0.236,1576,0.123,1580,0.11,1598,0.236,1630,0.128,1660,0.11,1674,0.21,1690,0.104,1691,0.091,1693,0.101,1736,0.119,1742,0.224,1760,0.954,1773,1.629,1774,1.381,1776,0.113,1807,0.119,1837,0.123,1839,0.128,1889,0.11,1929,0.916,2035,0.123,2044,0.244,2054,0.451,2078,0.219,2080,0.116,2101,0.119,2106,0.279,2109,0.113,2133,0.123,2153,0.085,2231,0.11,2295,0.123,2296,0.544,2319,0.113,2320,0.113,2321,0.11,2322,0.108,2323,0.113,2324,0.113,2325,0.11,2326,0.11,2371,0.113,2407,0.116,2501,0.119,2502,0.119,2503,0.123,2504,0.332,2505,0.119,2506,0.236,2507,0.123,2508,0.123,2509,0.123,2510,0.123,2511,0.097,2513,0.116,2514,0.123,2515,0.123,2566,0.236,2587,0.123,2589,0.116,2590,0.116,2591,0.116,2592,0.116,2608,0.123,2626,1.247,2643,0.224,2654,0.135,2657,0.21,2667,0.229,2669,0.214,2673,0.123,2679,0.135,2690,4.864,2715,0.525,2716,0.123,2717,0.123,2718,0.123,2719,0.123,2720,0.123,2721,0.123,2722,0.123,2725,0.128,2727,0.128,2761,1.517,2764,1.075,2765,1.075,2766,1.075,2767,1.075,2768,1.075,2769,1.075,2770,1.075,2771,1.075,2772,1.075,2811,0.119,2812,0.119,2842,0.254,2843,0.128,2849,0.135,2888,0.735,2889,0.254,2890,0.254,2892,0.128,2895,0.378,2932,0.229,2962,0.378,3077,0.135,3106,0.254,3129,0.254,3328,0.464,3331,0.664,3332,0.119,3333,0.119,3334,0.119,3335,0.119,3336,0.236,3337,0.119,3338,0.119,3687,0.128,3694,0.128,3866,0.128,3943,0.135,3947,0.135,3969,0.135,4042,1.629,4043,1.262,4046,1.541,4054,1.033,4061,0.128,4070,0.128,4074,0.135,4079,0.267,4099,0.128,4100,0.128,4101,0.128,4102,0.128,4108,1.075,4109,0.128,4114,0.123,4115,1.033,4116,1.888,4117,1.138,4132,0.244,4133,0.244,4134,0.123,4135,0.123,4160,0.128,4216,0.267,4240,0.135,4267,0.135,4296,1.604,4297,1.398,4298,0.254,4299,0.254,4300,1.398,4301,1.132,4302,1.132,4303,1.132,4304,1.343,4305,2.685,4306,2.184,4307,2.091,4308,1.132,4309,0.398,4310,0.135,4311,0.135,4312,0.135,4313,0.135,4314,0.398,4315,0.267,4316,0.774,4317,0.618,4318,0.135,4319,0.135,4320,0.135,4321,0.135,4322,0.135,4323,0.135,4324,0.267,4325,0.128,4326,0.135,4328,0.135,4329,0.145,4330,0.288,4331,0.145,4332,0.428,4333,0.145,4334,0.288,4335,0.145,4336,0.145,4337,0.145,4338,0.145,4339,0.145,4340,0.145,4341,0.145,4342,0.288,4343,0.288,4344,0.145,4345,0.288,4346,0.145,4347,0.288,4348,0.565,4349,0.428,4350,0.145,4351,0.145,4352,0.145,4353,0.145,4354,0.145,4355,0.145,4356,0.145,4357,0.145,4358,0.288,4359,0.145,4360,0.145,4361,0.145,4362,0.145,4363,0.428,4364,0.288,4365,0.145,4366,0.145,4367,0.145,4368,0.145,4369,0.145,4370,0.145,4371,0.145,4372,0.145,4373,0.145,4374,0.145,4375,0.145,4376,0.145,4377,0.145,4378,0.398,4379,0.288,4380,0.145,4381,0.145,4382,0.145,4383,0.145,4384,0.145,4385,0.145,4386,0.145,4387,0.145,4388,0.145,4389,0.135,4390,0.145,4391,0.135,4392,0.135,4393,0.135,4394,0.254,4395,0.128,4396,0.128,4397,0.244,4398,0.128,4399,0.128,4400,0.128,4401,0.128,4402,0.128,4403,0.128,4404,0.128,4405,0.145,4406,0.145,4407,0.145,4408,0.145]],["component/30",[29,0.109]],["title/31-1",[29,46.037]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[4394,97.219]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[63,5.976,78,17.872,477,30.281,1452,21.632,1760,44.361,1929,42.6]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[63,4.985,74,9.499,78,14.907,210,16.247,1240,29.573,2811,50.368,2812,50.368]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[63,6.89,257,8.837,3199,59.067,4395,74.927]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[74,11.389,257,7.666,801,37.993,3199,51.235,4396,64.992,4397,62.431]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31-7",[257,10.432,4398,88.448]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["title/31-8",[74,10.055,210,10.163,257,6.768,801,33.545,1240,31.304,3199,45.237,4397,55.122,4399,57.384]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["title/31-9",[210,13.27,257,8.837,1240,40.875,4400,74.927]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["title/31-10",[203,25.754,210,15.733,506,57.225,2669,54.816,4401,64.992]],["name/31-10",[]],["text/31-10",[]],["component/31-10",[]],["title/31-11",[74,13.13,203,29.691,801,43.801,4402,74.927]],["name/31-11",[]],["text/31-11",[]],["component/31-11",[]],["title/31-12",[203,22.739,210,16.77,506,50.526,1240,31.304,2669,48.399,4403,57.384]],["name/31-12",[]],["text/31-12",[]],["component/31-12",[]],["title/31-13",[74,11.389,203,25.754,210,11.51,801,37.993,1240,35.455,4404,64.992]],["name/31-13",[]],["text/31-13",[]],["component/31-13",[]],["title/31",[32,48.922,48,66.126]],["name/31",[48,0.199]],["text/31",[3,0.975,12,0.512,23,0.909,26,0.909,29,1.143,32,2.979,36,0.935,42,0.772,48,0.987,63,0.585,74,0.423,76,1.434,84,3.149,96,1.057,97,0.901,99,1.041,105,1.804,117,1.763,121,0.964,131,0.944,172,0.975,180,1.136,193,3.594,194,0.944,203,0.523,208,3.246,211,0.909,224,1.136,240,1.074,263,5.197,271,0.975,304,1.057,318,0.846,319,0.987,345,1.136,352,0.987,376,1.744,382,1.074,384,1.041,397,1.997,506,3.626,528,2.627,552,1.826,570,1.026,597,1.162,599,2.888,613,1.826,614,1.012,635,1.804,685,4.948,706,0.987,726,2.435,741,0.829,775,1.074,793,1.192,800,1.709,801,3.962,804,4.044,829,1.057,924,2.691,984,1.192,992,1.826,1040,1.093,1093,3.009,1117,2.125,1146,1.057,1240,3.222,1354,2.179,1415,1.192,1428,2.179,1506,1.192,1507,1.268,1522,1.226,1527,3.718,1601,1.192,1760,0.901,1776,2.125,1812,1.192,1929,0.865,2044,1.268,2054,1.192,2550,2.54,2566,2.242,2669,5.717,2811,1.226,2812,1.226,2888,9.619,2889,2.413,2890,1.32,2891,1.39,2892,4.118,2893,4.795,2894,1.39,2895,2.413,2896,1.39,4109,1.32,4325,1.32,4378,1.39,4389,1.39,4391,1.39,4392,1.39,4393,1.39,4394,1.32,4395,2.413,4396,3.333,4397,3.955,4398,1.32,4399,3.333,4400,1.32,4401,1.32,4402,1.32,4403,1.32,4404,1.32,4409,1.495,4410,2.734,4411,2.734]],["component/31",[29,0.109]]],"invertedIndex":[["",{"_index":63,"title":{"3-4":{},"14-3":{},"14-4":{},"14-5":{},"20-5":{},"20-14":{},"20-20":{},"20-21":{},"20-32":{},"20-33":{},"20-36":{},"20-41":{},"20-42":{},"20-43":{},"20-46":{},"20-47":{},"20-49":{},"20-50":{},"20-51":{},"20-52":{},"20-53":{},"20-54":{},"20-56":{},"20-57":{},"20-58":{},"20-59":{},"20-65":{},"20-75":{},"20-76":{},"20-80":{},"20-81":{},"20-83":{},"20-84":{},"20-85":{},"20-86":{},"20-87":{},"20-98":{},"20-101":{},"20-103":{},"20-104":{},"20-105":{},"20-106":{},"20-107":{},"20-108":{},"20-109":{},"20-110":{},"20-111":{},"20-112":{},"20-113":{},"20-124":{},"20-125":{},"20-126":{},"20-127":{},"20-128":{},"20-130":{},"20-158":{},"20-159":{},"20-160":{},"20-161":{},"20-162":{},"20-163":{},"20-164":{},"20-165":{},"20-166":{},"20-167":{},"20-168":{},"20-176":{},"20-177":{},"20-187":{},"20-188":{},"20-189":{},"20-190":{},"20-191":{},"20-193":{},"20-194":{},"20-196":{},"20-197":{},"20-199":{},"20-201":{},"20-209":{},"20-211":{},"20-215":{},"21-5":{},"21-6":{},"21-7":{},"21-8":{},"21-10":{},"21-17":{},"21-18":{},"21-19":{},"21-20":{},"21-21":{},"21-23":{},"21-24":{},"21-25":{},"21-31":{},"21-32":{},"21-33":{},"21-38":{},"21-39":{},"21-40":{},"21-43":{},"21-44":{},"21-45":{},"21-49":{},"21-50":{},"21-53":{},"21-54":{},"21-59":{},"21-64":{},"21-68":{},"21-73":{},"21-77":{},"21-82":{},"21-86":{},"21-87":{},"21-97":{},"21-98":{},"21-107":{},"21-108":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-115":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-137":{},"21-138":{},"21-139":{},"21-140":{},"21-141":{},"21-142":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-149":{},"21-150":{},"21-151":{},"21-153":{},"21-154":{},"21-158":{},"21-159":{},"21-160":{},"21-161":{},"21-162":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"21-167":{},"21-168":{},"22-5":{},"22-6":{},"22-7":{},"22-8":{},"22-9":{},"22-10":{},"22-11":{},"22-14":{},"22-15":{},"22-16":{},"23-4":{},"23-5":{},"23-6":{},"23-7":{},"23-8":{},"23-9":{},"23-10":{},"23-11":{},"23-12":{},"23-13":{},"23-14":{},"23-15":{},"23-16":{},"23-17":{},"23-18":{},"23-19":{},"23-20":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-56":{},"23-57":{},"23-58":{},"23-59":{},"23-60":{},"23-61":{},"23-62":{},"23-63":{},"23-64":{},"23-65":{},"23-66":{},"23-68":{},"23-69":{},"23-70":{},"23-71":{},"23-72":{},"23-73":{},"23-74":{},"23-75":{},"23-76":{},"23-77":{},"23-79":{},"23-80":{},"23-81":{},"23-82":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-91":{},"23-92":{},"23-93":{},"23-94":{},"23-95":{},"23-96":{},"23-97":{},"23-98":{},"23-99":{},"23-100":{},"23-101":{},"23-102":{},"23-103":{},"23-106":{},"23-107":{},"23-108":{},"23-109":{},"23-110":{},"23-111":{},"23-113":{},"23-114":{},"23-115":{},"23-116":{},"23-117":{},"23-118":{},"23-119":{},"23-124":{},"23-125":{},"23-126":{},"23-127":{},"23-130":{},"23-131":{},"23-132":{},"23-133":{},"23-142":{},"23-143":{},"23-146":{},"23-149":{},"23-150":{},"23-151":{},"23-152":{},"23-154":{},"23-162":{},"23-163":{},"23-164":{},"23-165":{},"23-167":{},"23-168":{},"23-173":{},"23-174":{},"23-175":{},"23-176":{},"23-178":{},"23-179":{},"23-185":{},"23-186":{},"23-187":{},"23-199":{},"23-200":{},"23-201":{},"23-207":{},"23-211":{},"23-212":{},"23-213":{},"23-216":{},"23-217":{},"23-218":{},"23-219":{},"23-220":{},"23-221":{},"23-222":{},"23-228":{},"23-229":{},"23-230":{},"23-238":{},"23-239":{},"23-240":{},"23-241":{},"23-242":{},"23-243":{},"23-244":{},"23-245":{},"23-246":{},"23-247":{},"23-255":{},"23-256":{},"23-257":{},"23-258":{},"24-28":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-37":{},"24-39":{},"24-41":{},"24-44":{},"24-46":{},"24-47":{},"24-49":{},"24-50":{},"24-54":{},"24-57":{},"24-59":{},"24-60":{},"24-61":{},"24-63":{},"24-65":{},"24-66":{},"24-67":{},"24-68":{},"24-69":{},"24-70":{},"24-71":{},"24-72":{},"24-73":{},"24-74":{},"24-75":{},"24-76":{},"24-77":{},"24-78":{},"24-79":{},"24-80":{},"24-84":{},"24-86":{},"24-90":{},"24-91":{},"24-93":{},"25-4":{},"25-5":{},"25-6":{},"25-7":{},"25-8":{},"25-13":{},"25-16":{},"25-17":{},"25-18":{},"26-5":{},"26-11":{},"26-13":{},"26-15":{},"26-17":{},"26-29":{},"26-35":{},"26-39":{},"26-40":{},"26-42":{},"26-45":{},"26-51":{},"26-52":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"26-63":{},"26-72":{},"26-73":{},"26-80":{},"26-85":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-8":{},"27-9":{},"27-10":{},"27-11":{},"27-12":{},"27-13":{},"27-14":{},"27-15":{},"27-16":{},"27-17":{},"27-18":{},"27-19":{},"27-20":{},"27-21":{},"27-22":{},"27-23":{},"27-24":{},"27-25":{},"27-26":{},"27-27":{},"27-28":{},"27-29":{},"27-31":{},"27-32":{},"27-33":{},"27-34":{},"27-35":{},"27-37":{},"27-38":{},"27-39":{},"27-40":{},"27-41":{},"27-42":{},"27-43":{},"27-44":{},"27-45":{},"27-46":{},"27-47":{},"27-48":{},"27-49":{},"27-50":{},"27-51":{},"27-52":{},"27-53":{},"27-54":{},"27-55":{},"27-56":{},"27-57":{},"27-58":{},"27-59":{},"27-60":{},"27-61":{},"27-62":{},"27-63":{},"27-64":{},"27-65":{},"27-66":{},"27-67":{},"27-68":{},"27-69":{},"27-70":{},"27-71":{},"27-72":{},"27-73":{},"27-74":{},"27-75":{},"27-76":{},"27-77":{},"27-78":{},"27-79":{},"27-80":{},"27-81":{},"27-82":{},"27-83":{},"27-84":{},"27-85":{},"27-86":{},"27-87":{},"27-88":{},"27-89":{},"27-90":{},"27-91":{},"27-92":{},"27-93":{},"27-94":{},"27-95":{},"27-96":{},"27-97":{},"27-98":{},"27-99":{},"27-100":{},"27-101":{},"27-108":{},"27-109":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-119":{},"27-120":{},"27-121":{},"27-122":{},"27-123":{},"27-125":{},"27-126":{},"27-127":{},"27-128":{},"27-129":{},"27-130":{},"27-134":{},"27-135":{},"27-136":{},"27-137":{},"27-138":{},"27-139":{},"27-140":{},"27-142":{},"27-143":{},"27-144":{},"27-145":{},"27-147":{},"27-148":{},"27-150":{},"27-152":{},"27-153":{},"27-154":{},"27-155":{},"27-156":{},"27-157":{},"27-158":{},"27-159":{},"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{},"27-173":{},"27-177":{},"27-183":{},"27-193":{},"27-194":{},"27-199":{},"27-201":{},"27-203":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"27-210":{},"27-215":{},"27-216":{},"27-217":{},"27-218":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{},"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-248":{},"27-249":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-258":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-266":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{},"27-271":{},"27-272":{},"27-273":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-282":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{},"27-289":{},"27-290":{},"27-291":{},"27-292":{},"27-293":{},"27-294":{},"27-295":{},"27-296":{},"27-297":{},"27-298":{},"27-299":{},"27-300":{},"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{},"27-309":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-316":{},"27-317":{},"27-322":{},"27-323":{},"27-324":{},"27-325":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{},"27-333":{},"27-334":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-341":{},"27-342":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{},"27-349":{},"27-350":{},"27-353":{},"27-354":{},"27-355":{},"27-358":{},"27-359":{},"27-360":{},"27-362":{},"27-363":{},"27-364":{},"27-367":{},"27-368":{},"27-369":{},"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-376":{},"27-379":{},"27-380":{},"27-381":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-389":{},"27-390":{},"27-393":{},"27-394":{},"27-395":{},"27-396":{},"27-397":{},"27-398":{},"27-399":{},"27-400":{},"27-401":{},"27-402":{},"27-403":{},"27-404":{},"27-405":{},"27-406":{},"27-407":{},"27-408":{},"27-409":{},"27-414":{},"27-415":{},"27-419":{},"27-420":{},"27-421":{},"27-422":{},"27-423":{},"27-424":{},"27-425":{},"27-428":{},"27-429":{},"27-430":{},"27-431":{},"27-432":{},"27-433":{},"27-437":{},"27-438":{},"27-439":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-454":{},"27-455":{},"27-456":{},"27-457":{},"27-458":{},"27-459":{},"27-460":{},"27-461":{},"27-462":{},"27-464":{},"27-466":{},"27-468":{},"27-470":{},"27-473":{},"27-475":{},"27-476":{},"27-477":{},"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-529":{},"27-530":{},"27-531":{},"27-532":{},"27-533":{},"27-534":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{},"27-705":{},"27-706":{},"28-3":{},"28-4":{},"28-6":{},"28-14":{},"28-17":{},"28-18":{},"28-19":{},"28-20":{},"28-22":{},"28-36":{},"28-37":{},"28-45":{},"28-46":{},"28-47":{},"28-50":{},"28-55":{},"28-56":{},"28-57":{},"29-3":{},"29-4":{},"29-5":{},"29-6":{},"29-7":{},"29-8":{},"29-12":{},"29-13":{},"29-14":{},"29-17":{},"29-18":{},"29-19":{},"29-20":{},"29-21":{},"29-22":{},"29-23":{},"29-24":{},"29-25":{},"29-37":{},"29-38":{},"29-42":{},"29-43":{},"29-51":{},"29-58":{},"29-60":{},"29-61":{},"29-62":{},"29-66":{},"29-67":{},"29-68":{},"29-69":{},"29-70":{},"29-73":{},"29-74":{},"29-75":{},"29-76":{},"29-77":{},"29-82":{},"29-83":{},"29-84":{},"29-88":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"29-100":{},"29-101":{},"29-102":{},"29-103":{},"29-104":{},"29-105":{},"29-106":{},"29-107":{},"29-108":{},"29-109":{},"29-110":{},"29-111":{},"29-112":{},"29-113":{},"29-114":{},"29-115":{},"29-116":{},"29-117":{},"29-118":{},"29-121":{},"30-3":{},"30-4":{},"30-10":{},"30-11":{},"30-16":{},"30-17":{},"30-18":{},"30-20":{},"30-21":{},"30-22":{},"30-25":{},"30-26":{},"30-27":{},"30-28":{},"30-29":{},"30-30":{},"30-31":{},"30-33":{},"30-35":{},"30-39":{},"30-40":{},"30-41":{},"30-44":{},"30-55":{},"30-57":{},"30-58":{},"30-59":{},"30-60":{},"30-61":{},"30-66":{},"30-69":{},"30-73":{},"30-74":{},"30-75":{},"30-76":{},"30-77":{},"30-83":{},"30-84":{},"30-87":{},"30-88":{},"30-91":{},"30-94":{},"30-95":{},"30-96":{},"30-97":{},"30-98":{},"30-102":{},"31-3":{},"31-4":{},"31-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["0",{"_index":352,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"13":{},"14":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["0.0000001",{"_index":1201,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0.5",{"_index":1177,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0.8.20",{"_index":70,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{}},"component":{}}],["000",{"_index":3880,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["0000000000000000000000000000000000000000000000000000000000000002",{"_index":997,"title":{},"name":{},"text":{"6":{}},"component":{}}],["0x",{"_index":500,"title":{},"name":{},"text":{"1":{},"6":{},"10":{}},"component":{}}],["0x0",{"_index":981,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["0x00",{"_index":3833,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0x00000000",{"_index":2151,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x0000000000000000000000000000000000000000",{"_index":1248,"title":{},"name":{},"text":{"10":{}},"component":{}}],["0x000…​1000",{"_index":2738,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0x000…​10000",{"_index":2629,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0x01",{"_index":3835,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0x05",{"_index":3732,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0x100",{"_index":1714,"title":{},"name":{},"text":{"18":{}},"component":{}}],["0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",{"_index":1860,"title":{},"name":{},"text":{"18":{},"26":{},"27":{}},"component":{}}],["0x40c10f19",{"_index":475,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0x45",{"_index":3831,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0x4cce0",{"_index":4092,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0x7b04a2d0",{"_index":2864,"title":{},"name":{},"text":{"24":{}},"component":{}}],["0x80ac58cd",{"_index":1769,"title":{},"name":{},"text":{"18":{}},"component":{}}],["0x88a7ca5c",{"_index":2861,"title":{},"name":{},"text":{"24":{}},"component":{}}],["0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",{"_index":2752,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",{"_index":3073,"title":{},"name":{},"text":{"26":{}},"component":{}}],["0xbc197c81",{"_index":4097,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",{"_index":2754,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0xf23a6e61",{"_index":4096,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542",{"_index":1869,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["1",{"_index":635,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"14":{},"15":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["1.5",{"_index":1136,"title":{},"name":{},"text":{"8":{},"18":{}},"component":{}}],["10",{"_index":961,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"23":{},"27":{},"29":{}},"component":{}}],["100",{"_index":984,"title":{},"name":{},"text":{"6":{},"9":{},"23":{},"24":{},"25":{},"31":{}},"component":{}}],["1000",{"_index":1068,"title":{},"name":{},"text":{"7":{}},"component":{}}],["10000",{"_index":4410,"title":{},"name":{},"text":{"31":{}},"component":{}}],["1000000000",{"_index":978,"title":{},"name":{},"text":{"6":{}},"component":{}}],["1000000000000000000000",{"_index":1130,"title":{},"name":{},"text":{"8":{}},"component":{}}],["104",{"_index":3766,"title":{},"name":{},"text":{"27":{}},"component":{}}],["112",{"_index":3765,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1153",{"_index":3688,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1155",{"_index":614,"title":{"6":{},"28":{},"6-3":{}},"name":{},"text":{"2":{},"6":{},"9":{},"10":{},"16":{},"18":{},"22":{},"24":{},"25":{},"28":{},"30":{},"31":{}},"component":{}}],["1167",{"_index":3108,"title":{},"name":{},"text":{"26":{}},"component":{}}],["12",{"_index":1430,"title":{},"name":{},"text":{"14":{}},"component":{}}],["120",{"_index":3764,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1214",{"_index":904,"title":{},"name":{},"text":{"5":{}},"component":{}}],["1271",{"_index":2335,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"27":{}},"component":{}}],["128",{"_index":2663,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["129",{"_index":3808,"title":{},"name":{},"text":{"27":{}},"component":{}}],["136",{"_index":3763,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1363",{"_index":2856,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["144",{"_index":3762,"title":{},"name":{},"text":{"27":{}},"component":{}}],["15",{"_index":1145,"title":{},"name":{},"text":{"8":{}},"component":{}}],["152",{"_index":3761,"title":{},"name":{},"text":{"27":{}},"component":{}}],["16",{"_index":778,"title":{},"name":{},"text":{"2":{},"8":{},"27":{}},"component":{}}],["160",{"_index":3760,"title":{},"name":{},"text":{"27":{}},"component":{}}],["165",{"_index":1757,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["168",{"_index":3759,"title":{},"name":{},"text":{"27":{}},"component":{}}],["176",{"_index":3758,"title":{},"name":{},"text":{"27":{}},"component":{}}],["18",{"_index":962,"title":{},"name":{},"text":{"6":{},"8":{},"29":{}},"component":{}}],["1820",{"_index":2866,"title":{},"name":{},"text":{"24":{}},"component":{}}],["1822",{"_index":2878,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["184",{"_index":3757,"title":{},"name":{},"text":{"27":{}},"component":{}}],["191",{"_index":3830,"title":{},"name":{},"text":{"27":{}},"component":{}}],["192",{"_index":3756,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1967",{"_index":2986,"title":{"26-8":{}},"name":{},"text":{"26":{},"27":{}},"component":{}}],["198",{"_index":3733,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1:1",{"_index":4233,"title":{},"name":{},"text":{"29":{}},"component":{}}],["1e9",{"_index":1200,"title":{},"name":{},"text":{"9":{}},"component":{}}],["2",{"_index":145,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"14":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"27":{},"29":{}},"component":{}}],["2**256",{"_index":4106,"title":{},"name":{},"text":{"28":{}},"component":{}}],["2**64",{"_index":3131,"title":{},"name":{},"text":{"26":{}},"component":{}}],["2**depth",{"_index":3955,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2**level",{"_index":3960,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2*i+1",{"_index":3945,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2*i+2",{"_index":3946,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2.0",{"_index":1178,"title":{},"name":{},"text":{"9":{}},"component":{}}],["20",{"_index":194,"title":{"7":{},"8":{},"29":{},"8-1":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"9":{},"10":{},"14":{},"16":{},"18":{},"22":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["200",{"_index":1176,"title":{},"name":{},"text":{"9":{},"27":{}},"component":{}}],["2048",{"_index":1745,"title":{},"name":{},"text":{"18":{}},"component":{}}],["208",{"_index":3755,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2098",{"_index":3785,"title":{},"name":{},"text":{"27":{}},"component":{}}],["20’",{"_index":922,"title":{},"name":{},"text":{"6":{}},"component":{}}],["216",{"_index":3754,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2208",{"_index":4226,"title":{},"name":{},"text":{"29":{}},"component":{}}],["224",{"_index":3753,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2300",{"_index":3968,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2309",{"_index":4332,"title":{},"name":{},"text":{"30":{}},"component":{}}],["232",{"_index":3752,"title":{},"name":{},"text":{"27":{}},"component":{}}],["24",{"_index":497,"title":{},"name":{},"text":{"1":{},"18":{},"27":{}},"component":{}}],["240",{"_index":3751,"title":{},"name":{},"text":{"27":{}},"component":{}}],["248",{"_index":3750,"title":{},"name":{},"text":{"27":{}},"component":{}}],["255",{"_index":2658,"title":{},"name":{},"text":{"23":{}},"component":{}}],["256",{"_index":2909,"title":{},"name":{},"text":{"24":{},"26":{},"27":{}},"component":{}}],["2612",{"_index":4178,"title":{},"name":{},"text":{"29":{}},"component":{}}],["263524729",{"_index":4185,"title":{},"name":{},"text":{"29":{}},"component":{}}],["27",{"_index":963,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["2771",{"_index":2953,"title":{},"name":{},"text":{"25":{}},"component":{}}],["28",{"_index":2875,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["296",{"_index":4227,"title":{},"name":{},"text":{"29":{}},"component":{}}],["2981",{"_index":2895,"title":{},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["2^96",{"_index":1355,"title":{},"name":{},"text":{"14":{}},"component":{}}],["3",{"_index":146,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"18":{},"20":{},"23":{}},"component":{}}],["3.5",{"_index":1138,"title":{},"name":{},"text":{"8":{}},"component":{}}],["30",{"_index":2665,"title":{},"name":{},"text":{"23":{},"27":{},"29":{}},"component":{}}],["300000000000000000000",{"_index":1133,"title":{},"name":{},"text":{"8":{}},"component":{}}],["31",{"_index":3700,"title":{},"name":{},"text":{"27":{}},"component":{}}],["3156",{"_index":2898,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["32",{"_index":1692,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["350k",{"_index":1033,"title":{},"name":{},"text":{"6":{}},"component":{}}],["4",{"_index":959,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"20":{},"27":{}},"component":{}}],["4.3",{"_index":1469,"title":{},"name":{},"text":{"14":{}},"component":{}}],["4.5",{"_index":1467,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["4.9.3",{"_index":1539,"title":{},"name":{},"text":{"15":{},"25":{}},"component":{}}],["4.9.4",{"_index":4022,"title":{},"name":{},"text":{"27":{}},"component":{}}],["40",{"_index":3773,"title":{},"name":{},"text":{"27":{}},"component":{}}],["42n",{"_index":483,"title":{},"name":{},"text":{"1":{}},"component":{}}],["4337",{"_index":580,"title":{"2-10":{}},"name":{},"text":{"2":{},"21":{},"27":{}},"component":{}}],["4626",{"_index":1050,"title":{"9":{}},"name":{},"text":{"6":{},"9":{},"14":{},"24":{},"29":{}},"component":{}}],["4648",{"_index":3698,"title":{},"name":{},"text":{"27":{}},"component":{}}],["48",{"_index":3772,"title":{},"name":{},"text":{"27":{}},"component":{}}],["5",{"_index":499,"title":{},"name":{},"text":{"1":{},"8":{},"20":{},"27":{}},"component":{}}],["5.0.0",{"_index":1540,"title":{},"name":{},"text":{"15":{},"26":{}},"component":{}}],["5.0.1",{"_index":4021,"title":{},"name":{},"text":{"27":{}},"component":{}}],["5.05",{"_index":4192,"title":{},"name":{},"text":{"29":{}},"component":{}}],["5.1",{"_index":4006,"title":{},"name":{},"text":{"27":{}},"component":{}}],["50",{"_index":983,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["5000",{"_index":4364,"title":{},"name":{},"text":{"30":{}},"component":{}}],["50400",{"_index":1432,"title":{},"name":{},"text":{"14":{}},"component":{}}],["505",{"_index":4191,"title":{},"name":{},"text":{"29":{}},"component":{}}],["5267",{"_index":3800,"title":{},"name":{},"text":{"27":{}},"component":{}}],["55",{"_index":3989,"title":{},"name":{},"text":{"27":{}},"component":{}}],["56",{"_index":3771,"title":{},"name":{},"text":{"27":{}},"component":{}}],["5805",{"_index":1526,"title":{},"name":{},"text":{"14":{}},"component":{}}],["60",{"_index":495,"title":{},"name":{},"text":{"1":{}},"component":{}}],["6093",{"_index":2852,"title":{},"name":{},"text":{"24":{}},"component":{}}],["6372",{"_index":1413,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["64",{"_index":994,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["65",{"_index":1688,"title":{},"name":{},"text":{"18":{}},"component":{}}],["7",{"_index":1249,"title":{},"name":{},"text":{"10":{}},"component":{}}],["700000000000000000000",{"_index":1134,"title":{},"name":{},"text":{"8":{}},"component":{}}],["712",{"_index":681,"title":{},"name":{},"text":{"2":{},"23":{},"24":{},"27":{}},"component":{}}],["72",{"_index":3770,"title":{},"name":{},"text":{"27":{}},"component":{}}],["7200",{"_index":1431,"title":{},"name":{},"text":{"14":{}},"component":{}}],["7201",{"_index":1666,"title":{},"name":{},"text":{"17":{},"18":{},"27":{}},"component":{}}],["721",{"_index":613,"title":{"10":{},"30":{},"10-1":{}},"name":{},"text":{"2":{},"6":{},"7":{},"10":{},"14":{},"16":{},"18":{},"24":{},"25":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["7212",{"_index":1712,"title":{},"name":{},"text":{"18":{}},"component":{}}],["7562",{"_index":574,"title":{"2-4":{}},"name":{},"text":{"2":{},"27":{}},"component":{}}],["7579",{"_index":609,"title":{"11":{},"11-1":{}},"name":{},"text":{"2":{},"11":{},"16":{}},"component":{}}],["7674",{"_index":2926,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["777",{"_index":916,"title":{},"name":{},"text":{"6":{},"29":{}},"component":{}}],["777’",{"_index":923,"title":{},"name":{},"text":{"6":{}},"component":{}}],["8",{"_index":3774,"title":{},"name":{},"text":{"27":{}},"component":{}}],["80",{"_index":3769,"title":{},"name":{},"text":{"27":{}},"component":{}}],["88",{"_index":3768,"title":{},"name":{},"text":{"27":{}},"component":{}}],["8u5h2m.json",{"_index":1245,"title":{},"name":{},"text":{"10":{}},"component":{}}],["8u5h2m.png",{"_index":1010,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["9",{"_index":964,"title":{},"name":{},"text":{"6":{}},"component":{}}],["96",{"_index":3767,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_",{"_index":4007,"title":{},"name":{},"text":{"27":{}},"component":{}}],["__acceptadmin",{"_index":2468,"title":{"23-180":{}},"name":{},"text":{"23":{}},"component":{}}],["__erc20_init",{"_index":3119,"title":{},"name":{},"text":{"26":{}},"component":{}}],["__erc20permit_init",{"_index":3123,"title":{},"name":{},"text":{"26":{}},"component":{}}],["__erc721_init",{"_index":1640,"title":{},"name":{},"text":{"17":{}},"component":{}}],["__{contractname}_init",{"_index":1638,"title":{},"name":{},"text":{"17":{}},"component":{}}],["__{contractname}_init_unchain",{"_index":1658,"title":{},"name":{},"text":{"17":{}},"component":{}}],["_acceptdefaultadmintransf",{"_index":1961,"title":{"20-93":{}},"name":{},"text":{"20":{}},"component":{}}],["_adderc1271sign",{"_index":2208,"title":{"21-93":{}},"name":{},"text":{"21":{}},"component":{}}],["_approv",{"_index":4116,"title":{"29-30":{},"29-31":{},"30-52":{},"30-53":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["_authorizeupgrad",{"_index":3043,"title":{"26-84":{}},"name":{},"text":{"26":{}},"component":{}}],["_balanc",{"_index":4350,"title":{},"name":{},"text":{"30":{}},"component":{}}],["_baseuri",{"_index":4108,"title":{"30-31":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["_basis_point_scal",{"_index":1219,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_batch",{"_index":2230,"title":{"21-120":{}},"name":{},"text":{"21":{}},"component":{}}],["_batchstructhash",{"_index":2236,"title":{"21-124":{}},"name":{},"text":{"21":{}},"component":{}}],["_begindefaultadmintransf",{"_index":1959,"title":{"20-89":{}},"name":{},"text":{"20":{}},"component":{}}],["_burn",{"_index":241,"title":{"28-32":{},"29-29":{},"30-48":{}},"name":{},"text":{"1":{},"28":{},"29":{},"30":{}},"component":{}}],["_burnbatch",{"_index":4053,"title":{"28-33":{}},"name":{},"text":{"28":{}},"component":{}}],["_cancel",{"_index":1460,"title":{"23-80":{},"23-154":{},"23-167":{},"23-178":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["_canceldefaultadmintransf",{"_index":1960,"title":{"20-91":{}},"name":{},"text":{"20":{}},"component":{}}],["_castvot",{"_index":2416,"title":{"23-88":{},"23-89":{},"23-200":{}},"name":{},"text":{"23":{}},"component":{}}],["_changedefaultadmindelay",{"_index":1962,"title":{"20-95":{}},"name":{},"text":{"20":{}},"component":{}}],["_checkauthor",{"_index":4303,"title":{"30-42":{}},"name":{},"text":{"30":{}},"component":{}}],["_checkcancal",{"_index":2025,"title":{"20-213":{}},"name":{},"text":{"20":{}},"component":{}}],["_checkentrypoint",{"_index":2164,"title":{"21-12":{}},"name":{},"text":{"21":{}},"component":{}}],["_checkentrypointorself",{"_index":2165,"title":{"21-13":{}},"name":{},"text":{"21":{}},"component":{}}],["_checkgovern",{"_index":2408,"title":{"23-67":{}},"name":{},"text":{"23":{}},"component":{}}],["_checkiniti",{"_index":3032,"title":{"26-70":{}},"name":{},"text":{"26":{}},"component":{}}],["_checkmodul",{"_index":2304,"title":{},"name":{},"text":{"21":{}},"component":{}}],["_checknotdeleg",{"_index":3042,"title":{"26-83":{}},"name":{},"text":{"26":{}},"component":{}}],["_checkown",{"_index":1909,"title":{"20-6":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["_checkpoint",{"_index":2510,"title":{"23-229":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_checkproxi",{"_index":3041,"title":{"26-82":{}},"name":{},"text":{"26":{}},"component":{}}],["_checkrol",{"_index":1930,"title":{"20-34":{},"20-35":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["_consumescheduledop",{"_index":2016,"title":{"20-193":{}},"name":{},"text":{"20":{}},"component":{}}],["_contextsuffixlength",{"_index":2934,"title":{"25-8":{},"27-477":{}},"name":{},"text":{"25":{},"27":{}},"component":{}}],["_converttoasset",{"_index":4153,"title":{"29-118":{}},"name":{},"text":{"29":{}},"component":{}}],["_converttoshar",{"_index":4152,"title":{"29-117":{}},"name":{},"text":{"29":{}},"component":{}}],["_countvot",{"_index":2412,"title":{"23-71":{},"23-111":{},"23-119":{}},"name":{},"text":{"23":{}},"component":{}}],["_data",{"_index":2988,"title":{"26-10":{},"26-28":{}},"name":{},"text":{"26":{}},"component":{}}],["_decimalsoffset",{"_index":4154,"title":{"29-121":{}},"name":{},"text":{"29":{}},"component":{}}],["_decodepackedsignatur",{"_index":2212,"title":{"21-98":{}},"name":{},"text":{"21":{}},"component":{}}],["_defaultparam",{"_index":2414,"title":{"23-72":{}},"name":{},"text":{"23":{}},"component":{}}],["_delaychangewait",{"_index":1964,"title":{"20-98":{}},"name":{},"text":{"20":{}},"component":{}}],["_deleg",{"_index":2231,"title":{"21-121":{},"23-225":{},"26-4":{}},"name":{},"text":{"21":{},"23":{},"26":{},"29":{},"30":{}},"component":{}}],["_delegatestructhash",{"_index":2237,"title":{"21-125":{}},"name":{},"text":{"21":{}},"component":{}}],["_deletedefaultroyalti",{"_index":4398,"title":{"31-7":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["_deposit",{"_index":1208,"title":{"29-119":{}},"name":{},"text":{"9":{},"29":{}},"component":{}}],["_depth",{"_index":1815,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_disableiniti",{"_index":3033,"title":{"26-71":{}},"name":{},"text":{"26":{}},"component":{}}],["_domainseparatorv4",{"_index":2319,"title":{"27-119":{}},"name":{},"text":{"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_done_timestamp",{"_index":2543,"title":{"23-269":{}},"name":{},"text":{"23":{}},"component":{}}],["_eip712nam",{"_index":2323,"title":{"27-122":{}},"name":{},"text":{"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_eip712vers",{"_index":2324,"title":{"27-123":{}},"name":{},"text":{"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_encodestatebitmap",{"_index":2418,"title":{"23-95":{},"23-255":{}},"name":{},"text":{"23":{}},"component":{}}],["_entryfeebasispoint",{"_index":1213,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_entryfeerecipi",{"_index":1214,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_execut",{"_index":2174,"title":{"21-25":{},"21-50":{},"23-253":{},"25-18":{}},"name":{},"text":{"21":{},"23":{},"25":{}},"component":{}}],["_execute_request_batch_typehash",{"_index":2246,"title":{"21-133":{}},"name":{},"text":{"21":{}},"component":{}}],["_execute_request_batch_typenam",{"_index":2243,"title":{"21-130":{}},"name":{},"text":{"21":{}},"component":{}}],["_execute_request_delegatecall_typehash",{"_index":2247,"title":{"21-134":{}},"name":{},"text":{"21":{}},"component":{}}],["_execute_request_delegatecall_typenam",{"_index":2244,"title":{"21-131":{}},"name":{},"text":{"21":{}},"component":{}}],["_execute_request_single_typehash",{"_index":2245,"title":{"21-132":{}},"name":{},"text":{"21":{}},"component":{}}],["_execute_request_single_typenam",{"_index":2242,"title":{"21-129":{}},"name":{},"text":{"21":{}},"component":{}}],["_executeoper",{"_index":1458,"title":{"23-78":{},"23-153":{},"23-166":{},"23-177":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["_executor",{"_index":1462,"title":{"23-91":{},"23-168":{},"23-179":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["_exitfeebasispoint",{"_index":1211,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_exitfeerecipi",{"_index":1206,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_fallback",{"_index":2186,"title":{"21-55":{},"26-6":{},"26-30":{}},"name":{},"text":{"21":{},"26":{}},"component":{}}],["_fallbackhandl",{"_index":2299,"title":{},"name":{},"text":{"21":{}},"component":{}}],["_feedenomin",{"_index":4395,"title":{"31-5":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["_feeonraw",{"_index":1210,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_feeontot",{"_index":1221,"title":{},"name":{},"text":{"9":{}},"component":{}}],["_firstconsecutiveid",{"_index":4318,"title":{"30-77":{}},"name":{},"text":{"30":{}},"component":{}}],["_flashfe",{"_index":4138,"title":{"29-75":{}},"name":{},"text":{"29":{}},"component":{}}],["_flashfeereceiv",{"_index":4139,"title":{"29-76":{}},"name":{},"text":{"29":{}},"component":{}}],["_forward_request_typehash",{"_index":2950,"title":{"25-24":{}},"name":{},"text":{"25":{}},"component":{}}],["_fromtokenid",{"_index":4382,"title":{},"name":{},"text":{"30":{}},"component":{}}],["_getapprov",{"_index":4301,"title":{"30-40":{}},"name":{},"text":{"30":{}},"component":{}}],["_getbeacon",{"_index":3014,"title":{"26-40":{}},"name":{},"text":{"26":{}},"component":{}}],["_getimplement",{"_index":1861,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_getinitializedvers",{"_index":3034,"title":{"26-72":{}},"name":{},"text":{"26":{}},"component":{}}],["_gettotalsuppli",{"_index":2503,"title":{"23-221":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_gettransientlock",{"_index":1870,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_getvot",{"_index":2411,"title":{"23-70":{},"23-127":{}},"name":{},"text":{"23":{}},"component":{}}],["_getvotingunit",{"_index":2513,"title":{"23-230":{},"29-60":{},"30-88":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_grantrol",{"_index":209,"title":{"20-41":{},"20-53":{},"20-80":{},"20-176":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["_hashfn",{"_index":1822,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_hashtypeddatav4",{"_index":2320,"title":{"27-120":{}},"name":{},"text":{"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_implement",{"_index":2985,"title":{"26-5":{},"26-11":{},"26-39":{}},"name":{},"text":{"26":{}},"component":{}}],["_implementation_slot",{"_index":1859,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_increasebal",{"_index":4304,"title":{"30-43":{},"30-62":{},"30-89":{}},"name":{},"text":{"30":{}},"component":{}}],["_installfallback",{"_index":2302,"title":{},"name":{},"text":{"21":{}},"component":{}}],["_installmodul",{"_index":724,"title":{"21-51":{}},"name":{},"text":{"2":{},"11":{},"21":{}},"component":{}}],["_interfacehash",{"_index":2799,"title":{"24-45":{},"24-46":{}},"name":{},"text":{"24":{}},"component":{}}],["_isauthor",{"_index":4302,"title":{"30-41":{}},"name":{},"text":{"30":{}},"component":{}}],["_ishookinstal",{"_index":2185,"title":{"21-54":{}},"name":{},"text":{"21":{}},"component":{}}],["_isiniti",{"_index":3035,"title":{"26-73":{}},"name":{},"text":{"26":{}},"component":{}}],["_ismoduleinstal",{"_index":2182,"title":{"21-49":{}},"name":{},"text":{"21":{}},"component":{}}],["_isvaliddescriptionforpropos",{"_index":2419,"title":{"23-96":{}},"name":{},"text":{"23":{}},"component":{}}],["_isvalidexecuterequest",{"_index":2232,"title":{"21-122":{}},"name":{},"text":{"21":{}},"component":{}}],["_isvalidpersonalsigenvelopesignatur",{"_index":2316,"title":{"27-137":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["_isvalidsignatur",{"_index":2314,"title":{"27-135":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["_isvalidsignaturewithsend",{"_index":2192,"title":{"21-64":{},"21-73":{},"21-82":{},"21-97":{},"21-110":{}},"name":{},"text":{"21":{}},"component":{}}],["_isvalidtypeddataenvelopesignatur",{"_index":2315,"title":{"27-136":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["_key",{"_index":3372,"title":{"27-332":{},"27-340":{},"27-348":{}},"name":{},"text":{},"component":{}}],["_lock_slot",{"_index":1868,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_lock_slot.asboolean",{"_index":1871,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_logic",{"_index":3006,"title":{"26-28":{}},"name":{},"text":{"26":{}},"component":{}}],["_maxbatchs",{"_index":4315,"title":{"30-73":{}},"name":{},"text":{"30":{}},"component":{}}],["_maxsuppli",{"_index":4129,"title":{"29-58":{}},"name":{},"text":{"29":{}},"component":{}}],["_mint",{"_index":215,"title":{"28-30":{},"29-28":{},"30-45":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"10":{},"28":{},"29":{},"30":{}},"component":{}}],["_mintbatch",{"_index":940,"title":{"28-31":{}},"name":{},"text":{"6":{},"28":{}},"component":{}}],["_mintconsecut",{"_index":4316,"title":{"30-75":{}},"name":{},"text":{"30":{}},"component":{}}],["_mintminerreward",{"_index":1109,"title":{},"name":{},"text":{"7":{}},"component":{}}],["_movedelegatevot",{"_index":2508,"title":{"23-227":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_msgdata",{"_index":2933,"title":{"25-7":{},"27-476":{}},"name":{},"text":{"25":{},"27":{}},"component":{}}],["_msgsender",{"_index":2055,"title":{"25-6":{},"27-475":{}},"name":{},"text":{"20":{},"25":{},"27":{}},"component":{}}],["_name",{"_index":3801,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_name.tostringwithfallback",{"_index":3993,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_namefallback",{"_index":3991,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_namespac",{"_index":1877,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_namespace.erc7201slot",{"_index":1880,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_nextconsecutiveid",{"_index":4376,"title":{},"name":{},"text":{"30":{}},"component":{}}],["_nexttokenid",{"_index":1237,"title":{},"name":{},"text":{"10":{}},"component":{}}],["_numcheckpoint",{"_index":2509,"title":{"23-228":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_oninstal",{"_index":2190,"title":{"21-62":{},"21-71":{},"21-80":{}},"name":{},"text":{"21":{}},"component":{}}],["_onlyproxi",{"_index":3135,"title":{},"name":{},"text":{"26":{}},"component":{}}],["_onuninstal",{"_index":2191,"title":{"21-63":{},"21-72":{},"21-81":{}},"name":{},"text":{"21":{}},"component":{}}],["_ownerof",{"_index":4300,"title":{"30-39":{},"30-74":{}},"name":{},"text":{"30":{}},"component":{}}],["_pack",{"_index":1844,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_paus",{"_index":3334,"title":{"27-186":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["_payprefund",{"_index":2163,"title":{"21-11":{}},"name":{},"text":{"21":{}},"component":{}}],["_personal_sign_envelope_typehash",{"_index":3303,"title":{"27-132":{}},"name":{},"text":{"27":{}},"component":{}}],["_personalsigenvelopehash",{"_index":2318,"title":{"27-139":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["_propos",{"_index":2415,"title":{"23-74":{},"23-207":{}},"name":{},"text":{"23":{}},"component":{}}],["_proxyadmin",{"_index":3007,"title":{"26-29":{}},"name":{},"text":{"26":{}},"component":{}}],["_queueoper",{"_index":1454,"title":{"23-76":{},"23-152":{},"23-165":{},"23-176":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["_quorumreach",{"_index":2409,"title":{"23-68":{},"23-109":{},"23-117":{}},"name":{},"text":{"23":{}},"component":{}}],["_recov",{"_index":4135,"title":{"29-70":{},"30-97":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["_recoverforwardrequestsign",{"_index":2941,"title":{"25-17":{}},"name":{},"text":{"25":{}},"component":{}}],["_reentrancyguardent",{"_index":3325,"title":{"27-173":{},"27-177":{}},"name":{},"text":{"27":{}},"component":{}}],["_registerinterfac",{"_index":1763,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_removesign",{"_index":2209,"title":{"21-94":{}},"name":{},"text":{"21":{}},"component":{}}],["_requirenotpaus",{"_index":3332,"title":{"27-184":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["_requireown",{"_index":4308,"title":{"30-55":{}},"name":{},"text":{"30":{}},"component":{}}],["_requirepaus",{"_index":3333,"title":{"27-185":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["_resettokenroyalti",{"_index":4400,"title":{"31-9":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["_revokerol",{"_index":1932,"title":{"20-42":{},"20-54":{},"20-81":{},"20-177":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["_rollbackdefaultadmindelay",{"_index":1963,"title":{"20-97":{}},"name":{},"text":{"20":{}},"component":{}}],["_safebatchtransferfrom",{"_index":4050,"title":{"28-28":{}},"name":{},"text":{"28":{}},"component":{}}],["_safemint",{"_index":4306,"title":{"30-46":{},"30-47":{}},"name":{},"text":{"30":{}},"component":{}}],["_safetransf",{"_index":4307,"title":{"30-50":{},"30-51":{}},"name":{},"text":{"30":{}},"component":{}}],["_safetransferfrom",{"_index":4049,"title":{"28-27":{}},"name":{},"text":{"28":{}},"component":{}}],["_setaccessmanagerignor",{"_index":2449,"title":{"23-148":{}},"name":{},"text":{"23":{}},"component":{}}],["_setapprovalforal",{"_index":4054,"title":{"28-34":{},"30-54":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["_setauthor",{"_index":2024,"title":{"20-212":{}},"name":{},"text":{"20":{}},"component":{}}],["_setbasedelaysecond",{"_index":2446,"title":{"23-145":{}},"name":{},"text":{"23":{}},"component":{}}],["_setbaseuri",{"_index":4060,"title":{"28-52":{}},"name":{},"text":{"28":{}},"component":{}}],["_setdefaultroyalti",{"_index":4396,"title":{"31-6":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["_setgrantdelay",{"_index":2012,"title":{"20-180":{}},"name":{},"text":{"20":{}},"component":{}}],["_setimplement",{"_index":1863,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_setlatequorumvoteextens",{"_index":2493,"title":{"23-203":{}},"name":{},"text":{"23":{}},"component":{}}],["_setproposalthreshold",{"_index":2481,"title":{"23-193":{}},"name":{},"text":{"23":{}},"component":{}}],["_setroleadmin",{"_index":288,"title":{"20-40":{},"20-82":{},"20-178":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["_setroleguardian",{"_index":2011,"title":{"20-179":{}},"name":{},"text":{"20":{}},"component":{}}],["_settargetadmindelay",{"_index":2014,"title":{"20-184":{}},"name":{},"text":{"20":{}},"component":{}}],["_settargetclos",{"_index":2015,"title":{"20-186":{}},"name":{},"text":{"20":{}},"component":{}}],["_settargetfunctionrol",{"_index":2013,"title":{"20-182":{}},"name":{},"text":{"20":{}},"component":{}}],["_setthreshold",{"_index":2210,"title":{"21-95":{}},"name":{},"text":{"21":{}},"component":{}}],["_settokenroyalti",{"_index":4399,"title":{"31-8":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["_settokenuri",{"_index":1241,"title":{"30-85":{}},"name":{},"text":{"10":{},"30":{}},"component":{}}],["_settransientlock",{"_index":1873,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_seturi",{"_index":4051,"title":{"28-29":{},"28-51":{}},"name":{},"text":{"28":{}},"component":{}}],["_setvotingdelay",{"_index":2479,"title":{"23-191":{}},"name":{},"text":{"23":{}},"component":{}}],["_setvotingperiod",{"_index":2480,"title":{"23-192":{}},"name":{},"text":{"23":{}},"component":{}}],["_singl",{"_index":2229,"title":{"21-119":{}},"name":{},"text":{"21":{}},"component":{}}],["_singlestructhash",{"_index":2235,"title":{"21-123":{}},"name":{},"text":{"21":{}},"component":{}}],["_spendallow",{"_index":4118,"title":{"29-32":{},"29-86":{}},"name":{},"text":{"29":{}},"component":{}}],["_supportsexecutionmod",{"_index":2173,"title":{"21-24":{}},"name":{},"text":{"21":{}},"component":{}}],["_supportsmodul",{"_index":2184,"title":{"21-53":{}},"name":{},"text":{"21":{}},"component":{}}],["_tabl",{"_index":3411,"title":{"27-416":{}},"name":{},"text":{"27":{}},"component":{}}],["_table_url",{"_index":3412,"title":{"27-417":{}},"name":{},"text":{"27":{}},"component":{}}],["_temporaryallow",{"_index":4145,"title":{"29-83":{}},"name":{},"text":{"29":{}},"component":{}}],["_temporaryapprov",{"_index":4146,"title":{"29-85":{}},"name":{},"text":{"29":{}},"component":{}}],["_timelock",{"_index":1446,"title":{},"name":{},"text":{"14":{}},"component":{}}],["_token",{"_index":1445,"title":{},"name":{},"text":{"14":{}},"component":{}}],["_tokenid",{"_index":4380,"title":{},"name":{},"text":{"30":{}},"component":{}}],["_tokenuri",{"_index":4324,"title":{"30-85":{}},"name":{},"text":{"30":{}},"component":{}}],["_tokenuris[tokenid",{"_index":4110,"title":{},"name":{},"text":{"28":{}},"component":{}}],["_totokenid",{"_index":4383,"title":{},"name":{},"text":{"30":{}},"component":{}}],["_transfer",{"_index":4115,"title":{"29-26":{},"30-49":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["_transferownership",{"_index":1911,"title":{"20-9":{},"20-16":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["_transfervotingunit",{"_index":2507,"title":{"23-226":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["_tree",{"_index":1814,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_tree.push",{"_index":1820,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_tree.setup",{"_index":1817,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_typeddataenvelopehash",{"_index":2317,"title":{"27-138":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["_uninstallfallback",{"_index":2303,"title":{},"name":{},"text":{"21":{}},"component":{}}],["_uninstallmodul",{"_index":2183,"title":{"21-52":{}},"name":{},"text":{"21":{}},"component":{}}],["_unpack",{"_index":1851,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["_unpaus",{"_index":3335,"title":{"27-187":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["_unwraptypeddataenvelopeforsend",{"_index":2223,"title":{"21-111":{}},"name":{},"text":{"21":{}},"component":{}}],["_updat",{"_index":1106,"title":{"28-25":{},"28-40":{},"28-48":{},"29-27":{},"29-52":{},"29-56":{},"29-59":{},"30-44":{},"30-61":{},"30-69":{},"30-76":{},"30-87":{}},"name":{},"text":{"7":{},"14":{},"28":{},"29":{},"30":{}},"component":{}}],["_updatequorumnumer",{"_index":2437,"title":{"23-135":{}},"name":{},"text":{"23":{}},"component":{}}],["_updatewithacceptancecheck",{"_index":4048,"title":{"28-26":{}},"name":{},"text":{"28":{}},"component":{}}],["_usecheckednonc",{"_index":2590,"title":{"27-195":{}},"name":{},"text":{"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_usenonc",{"_index":2589,"title":{"27-194":{}},"name":{},"text":{"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["_valid",{"_index":2939,"title":{"25-16":{}},"name":{},"text":{"25":{}},"component":{}}],["_validatesignatur",{"_index":752,"title":{"21-33":{},"21-40":{},"21-45":{},"27-140":{}},"name":{},"text":{"2":{},"21":{},"27":{}},"component":{}}],["_validatesignaturewithsend",{"_index":2227,"title":{"21-112":{}},"name":{},"text":{"21":{}},"component":{}}],["_validatethreshold",{"_index":2211,"title":{"21-96":{}},"name":{},"text":{"21":{}},"component":{}}],["_validateuserop",{"_index":619,"title":{"21-10":{},"21-18":{},"21-32":{},"21-39":{},"21-44":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["_valu",{"_index":3373,"title":{"27-332":{},"27-340":{},"27-348":{}},"name":{},"text":{},"component":{}}],["_verifi",{"_index":1700,"title":{},"name":{},"text":{"18":{}},"component":{}}],["_version",{"_index":3802,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_vestingschedul",{"_index":2343,"title":{"22-16":{}},"name":{},"text":{"22":{}},"component":{}}],["_votesucceed",{"_index":2410,"title":{"23-69":{},"23-110":{},"23-118":{}},"name":{},"text":{"23":{}},"component":{}}],["_withdraw",{"_index":1209,"title":{"29-120":{}},"name":{},"text":{"9":{},"29":{}},"component":{}}],["_zero",{"_index":1816,"title":{},"name":{},"text":{"18":{}},"component":{}}],["a.averag",{"_index":1797,"title":{},"name":{},"text":{"18":{}},"component":{}}],["ab",{"_index":3161,"title":{"27-35":{}},"name":{},"text":{"27":{}},"component":{}}],["abi",{"_index":2119,"title":{"24-2":{}},"name":{},"text":{"20":{},"23":{},"24":{},"26":{}},"component":{}}],["abi.decod",{"_index":3972,"title":{},"name":{},"text":{"27":{}},"component":{}}],["abi.encod",{"_index":3788,"title":{},"name":{},"text":{"27":{}},"component":{}}],["abi.encodepack",{"_index":2661,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["abil",{"_index":546,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["abov",{"_index":256,"title":{},"name":{},"text":{"1":{},"14":{},"21":{},"23":{},"26":{},"29":{}},"component":{}}],["absolut",{"_index":3739,"title":{},"name":{},"text":{"27":{}},"component":{}}],["abstain",{"_index":1422,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["abstainvot",{"_index":2425,"title":{"23-108":{},"23-116":{}},"name":{},"text":{"23":{}},"component":{}}],["abstract",{"_index":571,"title":{"2":{}},"name":{"2":{}},"text":{"1":{},"2":{},"11":{},"18":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["accept",{"_index":119,"title":{},"name":{},"text":{"1":{},"2":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["acceptdefaultadmintransf",{"_index":1946,"title":{"20-62":{},"20-92":{}},"name":{},"text":{"20":{}},"component":{}}],["acceptownership",{"_index":120,"title":{"20-17":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["acceptschedul",{"_index":1939,"title":{"20-57":{},"20-66":{}},"name":{},"text":{"20":{}},"component":{}}],["access",{"_index":4,"title":{"1":{},"20":{},"1-2":{},"1-9":{}},"name":{"1":{},"20":{}},"text":{"1":{},"2":{},"3":{},"7":{},"10":{},"13":{},"14":{},"15":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["accesscontrol",{"_index":7,"title":{"1-3":{},"1-14":{},"20-30":{}},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"23":{},"28":{},"29":{},"30":{}},"component":{}}],["accesscontrol'",{"_index":1288,"title":{},"name":{},"text":{"12":{}},"component":{}}],["accesscontrol._grantrol",{"_index":2045,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrol._revokerol",{"_index":2069,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrol._setroleadmin",{"_index":2039,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrol.connect",{"_index":567,"title":{},"name":{},"text":{"1":{}},"component":{}}],["accesscontrol.grantrol",{"_index":2091,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrol.renouncerol",{"_index":2093,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrol.revokerol",{"_index":2092,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accesscontrolbadconfirm",{"_index":1928,"title":{"20-29":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["accesscontroldefaultadminrul",{"_index":295,"title":{"20-73":{}},"name":{},"text":{"1":{},"12":{},"20":{}},"component":{}}],["accesscontrolenforceddefaultadmindelay",{"_index":1956,"title":{"20-72":{}},"name":{},"text":{"20":{}},"component":{}}],["accesscontrolenforceddefaultadminrul",{"_index":1955,"title":{"20-71":{}},"name":{},"text":{"20":{}},"component":{}}],["accesscontrolenumer",{"_index":1934,"title":{"20-48":{}},"name":{},"text":{"20":{}},"component":{}}],["accesscontrolerc20mint",{"_index":238,"title":{},"name":{},"text":{"1":{}},"component":{}}],["accesscontrolerc20mintbas",{"_index":198,"title":{},"name":{},"text":{"1":{}},"component":{}}],["accesscontrolerc20mintmiss",{"_index":308,"title":{},"name":{},"text":{"1":{}},"component":{}}],["accesscontrolinvaliddefaultadmin",{"_index":1954,"title":{"20-70":{}},"name":{},"text":{"20":{}},"component":{}}],["accesscontrolmodifi",{"_index":1273,"title":{},"name":{},"text":{"12":{}},"component":{}}],["accesscontrolnonrevok",{"_index":1274,"title":{},"name":{},"text":{"12":{}},"component":{}}],["accesscontrolunauthorizedaccount",{"_index":1926,"title":{"20-28":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["accessmanag",{"_index":18,"title":{"1-10":{},"20-99":{},"20-155":{},"20-206":{},"23-142":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["accessmanaged.author",{"_index":2130,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accessmanaged.restrict",{"_index":2127,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accessmanagederc20mint",{"_index":473,"title":{},"name":{},"text":{"1":{}},"component":{}}],["accessmanagedinvalidauthor",{"_index":2023,"title":{"20-205":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagedrequireddelay",{"_index":2022,"title":{"20-204":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagedunauthor",{"_index":2021,"title":{"20-203":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanager.execut",{"_index":2675,"title":{},"name":{},"text":{"23":{}},"component":{}}],["accessmanager.schedul",{"_index":2681,"title":{},"name":{},"text":{"23":{}},"component":{}}],["accessmanageralreadyschedul",{"_index":1997,"title":{"20-144":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerbadconfirm",{"_index":2002,"title":{"20-149":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerexpir",{"_index":2000,"title":{"20-147":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerignoredset",{"_index":2455,"title":{"23-156":{}},"name":{},"text":{"23":{}},"component":{}}],["accessmanagerinvalidinitialadmin",{"_index":2008,"title":{"20-154":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerlockedrol",{"_index":2001,"title":{"20-148":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagernotreadi",{"_index":1999,"title":{"20-146":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagernotschedul",{"_index":1998,"title":{"20-145":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerunauthorizedaccount",{"_index":2003,"title":{"20-150":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerunauthorizedcal",{"_index":2005,"title":{"20-151":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerunauthorizedcancel",{"_index":2007,"title":{"20-153":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanagerunauthorizedconsum",{"_index":2006,"title":{"20-152":{}},"name":{},"text":{"20":{}},"component":{}}],["accessmanager’",{"_index":492,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["accessor",{"_index":2062,"title":{},"name":{},"text":{"20":{},"23":{},"27":{},"29":{}},"component":{}}],["accident",{"_index":851,"title":{},"name":{},"text":{"3":{},"20":{},"26":{}},"component":{}}],["accommod",{"_index":1349,"title":{},"name":{},"text":{"14":{},"30":{}},"component":{}}],["accompani",{"_index":2642,"title":{},"name":{},"text":{"23":{}},"component":{}}],["accord",{"_index":474,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"30":{}},"component":{}}],["accordingli",{"_index":1523,"title":{},"name":{},"text":{"14":{}},"component":{}}],["account",{"_index":12,"title":{"2":{},"21":{},"1-5":{},"2-1":{},"2-2":{},"2-8":{},"2-14":{},"11-1":{},"20-11":{},"20-20":{},"20-22":{},"20-23":{},"20-26":{},"20-27":{},"20-28":{},"20-33":{},"20-35":{},"20-37":{},"20-38":{},"20-41":{},"20-42":{},"20-53":{},"20-54":{},"20-77":{},"20-78":{},"20-79":{},"20-80":{},"20-81":{},"20-112":{},"20-113":{},"20-115":{},"20-116":{},"20-136":{},"20-137":{},"20-167":{},"20-168":{},"20-170":{},"20-171":{},"20-176":{},"20-177":{},"21-59":{},"21-62":{},"21-63":{},"21-65":{},"21-66":{},"21-68":{},"21-71":{},"21-72":{},"21-74":{},"21-75":{},"21-77":{},"21-80":{},"21-81":{},"21-83":{},"21-84":{},"21-86":{},"21-87":{},"21-93":{},"21-94":{},"21-95":{},"21-96":{},"21-99":{},"21-100":{},"21-101":{},"21-102":{},"21-103":{},"21-104":{},"21-105":{},"21-118":{},"21-119":{},"21-120":{},"21-121":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-126":{},"21-127":{},"21-128":{},"23-18":{},"23-19":{},"23-20":{},"23-39":{},"23-40":{},"23-70":{},"23-71":{},"23-81":{},"23-82":{},"23-88":{},"23-89":{},"23-107":{},"23-111":{},"23-114":{},"23-115":{},"23-119":{},"23-127":{},"23-200":{},"23-218":{},"23-219":{},"23-222":{},"23-225":{},"23-228":{},"23-229":{},"24-41":{},"24-43":{},"24-44":{},"24-45":{},"24-46":{},"24-48":{},"24-49":{},"24-50":{},"24-51":{},"24-52":{},"27-188":{},"27-189":{},"27-196":{},"27-203":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"28-3":{},"28-4":{},"28-6":{},"28-11":{},"28-19":{},"28-20":{},"28-22":{},"28-42":{},"28-43":{},"29-4":{},"29-21":{},"29-28":{},"29-29":{},"29-48":{},"29-60":{},"29-61":{},"29-62":{},"29-68":{},"29-69":{},"29-70":{},"30-43":{},"30-62":{},"30-88":{},"30-89":{},"30-94":{},"30-95":{},"30-97":{}},"name":{"2":{},"21":{}},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"13":{},"14":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["account'",{"_index":2873,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["accountbas",{"_index":610,"title":{"21-2":{}},"name":{},"text":{"2":{},"11":{},"21":{}},"component":{}}],["accountecdsa",{"_index":631,"title":{"21-29":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["accounteip7702",{"_index":2180,"title":{"21-34":{}},"name":{},"text":{},"component":{}}],["accountentrypointrestrict",{"_index":2166,"title":{"21-15":{}},"name":{},"text":{"21":{}},"component":{}}],["accounterc7579",{"_index":714,"title":{"21-16":{}},"name":{},"text":{"2":{},"11":{},"21":{}},"component":{}}],["accounterc7579.executeuserop",{"_index":757,"title":{},"name":{},"text":{"2":{}},"component":{}}],["accounterc7579.isvalidsignatur",{"_index":747,"title":{},"name":{},"text":{"2":{}},"component":{}}],["accounterc7579.sol",{"_index":721,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["accounterc7579hook",{"_index":1261,"title":{"21-47":{}},"name":{},"text":{"11":{}},"component":{}}],["accountgaslimit",{"_index":776,"title":{},"name":{},"text":{"2":{}},"component":{}}],["accountid",{"_index":2167,"title":{"21-19":{}},"name":{},"text":{"21":{}},"component":{}}],["accountp256",{"_index":636,"title":{"21-36":{}},"name":{},"text":{"2":{}},"component":{}}],["accountrsa",{"_index":653,"title":{"21-41":{}},"name":{},"text":{"2":{}},"component":{}}],["accounts'",{"_index":4221,"title":{},"name":{},"text":{"29":{}},"component":{}}],["account’",{"_index":2725,"title":{},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["accru",{"_index":4237,"title":{},"name":{},"text":{"29":{}},"component":{}}],["achiev",{"_index":229,"title":{},"name":{},"text":{"1":{},"8":{},"12":{},"20":{},"23":{},"25":{}},"component":{}}],["acquir",{"_index":4239,"title":{},"name":{},"text":{"29":{}},"component":{}}],["acquisit",{"_index":2969,"title":{},"name":{},"text":{"25":{}},"component":{}}],["act",{"_index":286,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"24":{}},"component":{}}],["action",{"_index":175,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"20":{},"23":{}},"component":{}}],["activ",{"_index":1411,"title":{"25-16":{}},"name":{},"text":{"14":{},"20":{},"23":{},"29":{}},"component":{}}],["actual",{"_index":989,"title":{},"name":{},"text":{"6":{},"8":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{},"30":{}},"component":{}}],["actualnonc",{"_index":2460,"title":{"23-158":{}},"name":{},"text":{"23":{}},"component":{}}],["ad",{"_index":451,"title":{"9-5":{}},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"11":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["adapt",{"_index":1521,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["add",{"_index":134,"title":{"27-289":{},"27-295":{},"27-301":{}},"name":{},"text":{"1":{},"6":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["addit",{"_index":135,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"12":{},"14":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["addition",{"_index":422,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"14":{},"17":{},"18":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["additionalcontext",{"_index":2301,"title":{},"name":{},"text":{"21":{}},"component":{}}],["addr",{"_index":3385,"title":{"27-379":{},"27-381":{},"27-423":{},"27-424":{}},"name":{},"text":{"27":{}},"component":{}}],["address",{"_index":74,"title":{"20-4":{},"20-5":{},"20-8":{},"20-9":{},"20-10":{},"20-11":{},"20-12":{},"20-14":{},"20-15":{},"20-16":{},"20-18":{},"20-20":{},"20-22":{},"20-23":{},"20-24":{},"20-26":{},"20-27":{},"20-28":{},"20-33":{},"20-35":{},"20-37":{},"20-38":{},"20-39":{},"20-41":{},"20-42":{},"20-46":{},"20-50":{},"20-52":{},"20-53":{},"20-54":{},"20-56":{},"20-57":{},"20-60":{},"20-66":{},"20-70":{},"20-74":{},"20-76":{},"20-77":{},"20-78":{},"20-79":{},"20-80":{},"20-81":{},"20-83":{},"20-84":{},"20-88":{},"20-89":{},"20-101":{},"20-103":{},"20-106":{},"20-107":{},"20-108":{},"20-112":{},"20-113":{},"20-115":{},"20-116":{},"20-117":{},"20-121":{},"20-122":{},"20-123":{},"20-126":{},"20-127":{},"20-128":{},"20-129":{},"20-130":{},"20-131":{},"20-132":{},"20-136":{},"20-137":{},"20-141":{},"20-142":{},"20-143":{},"20-150":{},"20-151":{},"20-152":{},"20-153":{},"20-154":{},"20-157":{},"20-158":{},"20-161":{},"20-162":{},"20-163":{},"20-167":{},"20-168":{},"20-170":{},"20-171":{},"20-172":{},"20-176":{},"20-177":{},"20-181":{},"20-182":{},"20-183":{},"20-184":{},"20-185":{},"20-186":{},"20-189":{},"20-190":{},"20-191":{},"20-192":{},"20-194":{},"20-195":{},"20-199":{},"20-200":{},"20-202":{},"20-203":{},"20-204":{},"20-205":{},"20-208":{},"20-209":{},"20-210":{},"20-212":{},"20-213":{},"20-215":{},"21-18":{},"21-26":{},"21-27":{},"21-30":{},"21-31":{},"21-49":{},"21-51":{},"21-52":{},"21-54":{},"21-59":{},"21-62":{},"21-63":{},"21-64":{},"21-65":{},"21-66":{},"21-68":{},"21-71":{},"21-72":{},"21-73":{},"21-74":{},"21-75":{},"21-77":{},"21-80":{},"21-81":{},"21-82":{},"21-83":{},"21-84":{},"21-86":{},"21-87":{},"21-88":{},"21-89":{},"21-93":{},"21-94":{},"21-95":{},"21-96":{},"21-97":{},"21-98":{},"21-99":{},"21-100":{},"21-101":{},"21-102":{},"21-103":{},"21-104":{},"21-105":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-118":{},"21-119":{},"21-120":{},"21-121":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-126":{},"21-127":{},"21-128":{},"21-137":{},"21-138":{},"21-141":{},"21-143":{},"21-149":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"22-3":{},"22-9":{},"22-11":{},"22-13":{},"22-15":{},"22-18":{},"23-7":{},"23-12":{},"23-18":{},"23-19":{},"23-20":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-28":{},"23-29":{},"23-30":{},"23-34":{},"23-35":{},"23-37":{},"23-39":{},"23-40":{},"23-44":{},"23-45":{},"23-51":{},"23-59":{},"23-64":{},"23-70":{},"23-71":{},"23-73":{},"23-74":{},"23-75":{},"23-76":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-81":{},"23-82":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-90":{},"23-91":{},"23-92":{},"23-93":{},"23-94":{},"23-96":{},"23-107":{},"23-111":{},"23-114":{},"23-115":{},"23-119":{},"23-120":{},"23-127":{},"23-141":{},"23-146":{},"23-147":{},"23-148":{},"23-151":{},"23-152":{},"23-153":{},"23-154":{},"23-156":{},"23-163":{},"23-165":{},"23-166":{},"23-167":{},"23-168":{},"23-170":{},"23-174":{},"23-176":{},"23-177":{},"23-178":{},"23-179":{},"23-182":{},"23-200":{},"23-207":{},"23-212":{},"23-213":{},"23-218":{},"23-219":{},"23-222":{},"23-223":{},"23-224":{},"23-225":{},"23-226":{},"23-227":{},"23-228":{},"23-229":{},"23-230":{},"23-236":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-253":{},"23-259":{},"23-260":{},"23-268":{},"24-4":{},"24-5":{},"24-6":{},"24-7":{},"24-8":{},"24-9":{},"24-11":{},"24-13":{},"24-14":{},"24-15":{},"24-16":{},"24-17":{},"24-18":{},"24-20":{},"24-21":{},"24-22":{},"24-23":{},"24-24":{},"24-25":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-37":{},"24-39":{},"24-41":{},"24-43":{},"24-44":{},"24-45":{},"24-46":{},"24-48":{},"24-49":{},"24-50":{},"24-51":{},"24-52":{},"24-57":{},"24-59":{},"24-60":{},"24-61":{},"24-63":{},"24-65":{},"24-69":{},"24-71":{},"24-72":{},"24-74":{},"24-75":{},"24-77":{},"24-78":{},"24-80":{},"24-81":{},"24-82":{},"24-84":{},"24-86":{},"24-93":{},"25-3":{},"25-4":{},"25-5":{},"25-6":{},"25-15":{},"25-16":{},"25-17":{},"25-19":{},"25-20":{},"25-23":{},"26-4":{},"26-5":{},"26-10":{},"26-11":{},"26-13":{},"26-14":{},"26-15":{},"26-16":{},"26-17":{},"26-18":{},"26-19":{},"26-20":{},"26-21":{},"26-28":{},"26-29":{},"26-33":{},"26-34":{},"26-38":{},"26-39":{},"26-40":{},"26-42":{},"26-44":{},"26-45":{},"26-46":{},"26-47":{},"26-48":{},"26-51":{},"26-52":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"26-63":{},"26-81":{},"26-84":{},"27-108":{},"27-109":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-121":{},"27-130":{},"27-144":{},"27-147":{},"27-148":{},"27-188":{},"27-189":{},"27-193":{},"27-194":{},"27-195":{},"27-196":{},"27-203":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"27-231":{},"27-235":{},"27-236":{},"27-237":{},"27-247":{},"27-248":{},"27-249":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{},"27-279":{},"27-283":{},"27-284":{},"27-285":{},"27-295":{},"27-296":{},"27-297":{},"27-299":{},"27-300":{},"27-379":{},"27-380":{},"27-381":{},"27-383":{},"27-384":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-389":{},"27-391":{},"27-395":{},"27-396":{},"27-404":{},"27-407":{},"27-410":{},"27-423":{},"27-424":{},"27-440":{},"27-462":{},"27-463":{},"27-475":{},"28-3":{},"28-4":{},"28-5":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{},"28-10":{},"28-11":{},"28-19":{},"28-20":{},"28-21":{},"28-22":{},"28-23":{},"28-24":{},"28-25":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-32":{},"28-33":{},"28-34":{},"28-36":{},"28-37":{},"28-40":{},"28-42":{},"28-43":{},"28-48":{},"28-56":{},"28-57":{},"28-59":{},"28-60":{},"29-4":{},"29-5":{},"29-6":{},"29-7":{},"29-8":{},"29-9":{},"29-10":{},"29-21":{},"29-22":{},"29-23":{},"29-24":{},"29-25":{},"29-26":{},"29-27":{},"29-28":{},"29-29":{},"29-30":{},"29-31":{},"29-32":{},"29-36":{},"29-37":{},"29-41":{},"29-42":{},"29-45":{},"29-48":{},"29-52":{},"29-56":{},"29-59":{},"29-60":{},"29-61":{},"29-62":{},"29-68":{},"29-69":{},"29-70":{},"29-71":{},"29-73":{},"29-74":{},"29-75":{},"29-76":{},"29-77":{},"29-78":{},"29-80":{},"29-82":{},"29-83":{},"29-84":{},"29-85":{},"29-86":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"29-95":{},"29-96":{},"29-97":{},"29-101":{},"29-105":{},"29-106":{},"29-107":{},"29-108":{},"29-113":{},"29-114":{},"29-115":{},"29-116":{},"29-119":{},"29-120":{},"29-122":{},"29-123":{},"29-124":{},"29-125":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"29-136":{},"29-137":{},"29-139":{},"29-140":{},"29-141":{},"29-142":{},"30-3":{},"30-4":{},"30-5":{},"30-6":{},"30-7":{},"30-8":{},"30-9":{},"30-10":{},"30-11":{},"30-12":{},"30-13":{},"30-14":{},"30-21":{},"30-26":{},"30-27":{},"30-32":{},"30-33":{},"30-34":{},"30-35":{},"30-36":{},"30-37":{},"30-38":{},"30-39":{},"30-40":{},"30-41":{},"30-42":{},"30-43":{},"30-44":{},"30-45":{},"30-46":{},"30-47":{},"30-49":{},"30-50":{},"30-51":{},"30-52":{},"30-53":{},"30-54":{},"30-55":{},"30-58":{},"30-61":{},"30-62":{},"30-63":{},"30-66":{},"30-69":{},"30-74":{},"30-75":{},"30-76":{},"30-87":{},"30-88":{},"30-89":{},"30-94":{},"30-95":{},"30-96":{},"30-97":{},"30-99":{},"30-102":{},"30-104":{},"31-4":{},"31-6":{},"31-8":{},"31-11":{},"31-13":{}},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["address.code.length",{"_index":1309,"title":{},"name":{},"text":{"13":{}},"component":{}}],["addressemptycod",{"_index":3396,"title":{"27-391":{}},"name":{},"text":{"27":{}},"component":{}}],["addressset",{"_index":3917,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addressslot",{"_index":4008,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addressslottyp",{"_index":4015,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addresstoaddressmap",{"_index":3907,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addresstobytes32map",{"_index":3908,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addresstouintmap",{"_index":3899,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addsign",{"_index":2204,"title":{"21-88":{}},"name":{},"text":{"21":{}},"component":{}}],["adjust",{"_index":554,"title":{},"name":{},"text":{"1":{},"8":{},"22":{},"23":{},"30":{}},"component":{}}],["admin",{"_index":19,"title":{"1-11":{},"20-118":{},"20-138":{},"20-173":{},"20-178":{},"23-236":{},"23-274":{},"26-20":{}},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"26":{}},"component":{}}],["admin_rol",{"_index":387,"title":{"20-196":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["admin_slot",{"_index":3003,"title":{"26-24":{}},"name":{},"text":{"26":{}},"component":{}}],["administ",{"_index":403,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["administr",{"_index":54,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"26":{}},"component":{}}],["adminrol",{"_index":1931,"title":{"20-40":{},"20-82":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["admit",{"_index":3857,"title":{},"name":{},"text":{"27":{}},"component":{}}],["adopt",{"_index":598,"title":{},"name":{},"text":{"2":{}},"component":{}}],["advanc",{"_index":1753,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"27":{}},"component":{}}],["advantag",{"_index":307,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["advis",{"_index":852,"title":{},"name":{},"text":{"3":{}},"component":{}}],["advisori",{"_index":834,"title":{},"name":{},"text":{"3":{}},"component":{}}],["advoc",{"_index":1383,"title":{},"name":{},"text":{"14":{}},"component":{}}],["affect",{"_index":549,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"23":{},"25":{},"27":{},"29":{}},"component":{}}],["afterward",{"_index":3102,"title":{},"name":{},"text":{"26":{},"29":{}},"component":{}}],["again",{"_index":2095,"title":{},"name":{},"text":{"20":{},"26":{},"27":{}},"component":{}}],["against",{"_index":1297,"title":{},"name":{},"text":{"12":{},"14":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["againstvot",{"_index":2423,"title":{"23-108":{},"23-116":{}},"name":{},"text":{"23":{}},"component":{}}],["aggreg",{"_index":1163,"title":{"21-137":{},"21-138":{},"21-141":{}},"name":{},"text":{"9":{},"21":{}},"component":{}}],["agnost",{"_index":912,"title":{},"name":{},"text":{"6":{},"29":{}},"component":{}}],["ah",{"_index":1594,"title":{},"name":{},"text":{"16":{}},"component":{}}],["aid",{"_index":2734,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["aim",{"_index":910,"title":{},"name":{},"text":{"6":{}},"component":{}}],["airdrop",{"_index":1752,"title":{},"name":{},"text":{"18":{}},"component":{}}],["albeit",{"_index":1620,"title":{},"name":{},"text":{"16":{}},"component":{}}],["algorithm",{"_index":621,"title":{},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["alia",{"_index":2874,"title":{},"name":{},"text":{"24":{}},"component":{}}],["align",{"_index":2970,"title":{},"name":{},"text":{"25":{}},"component":{}}],["alik",{"_index":1223,"title":{},"name":{},"text":{"10":{}},"component":{}}],["alloc",{"_index":313,"title":{},"name":{},"text":{"1":{},"7":{},"18":{},"22":{},"27":{}},"component":{}}],["allow",{"_index":23,"title":{"20-101":{},"20-103":{},"24-7":{},"29-6":{},"29-23":{},"29-82":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"9":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["along",{"_index":468,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"16":{},"23":{},"27":{},"29":{},"30":{}},"component":{}}],["alongsid",{"_index":3055,"title":{},"name":{},"text":{"26":{}},"component":{}}],["alpha",{"_index":2546,"title":{},"name":{},"text":{"23":{}},"component":{}}],["alreadi",{"_index":560,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["alter",{"_index":526,"title":{},"name":{},"text":{"1":{}},"component":{}}],["altern",{"_index":113,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["although",{"_index":449,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"13":{},"18":{},"26":{},"27":{}},"component":{}}],["altogeth",{"_index":98,"title":{},"name":{},"text":{"1":{}},"component":{}}],["alway",{"_index":328,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"30":{}},"component":{}}],["ambigu",{"_index":856,"title":{},"name":{},"text":{"3":{},"29":{}},"component":{}}],["amongst",{"_index":2641,"title":{},"name":{},"text":{"23":{}},"component":{}}],["amount",{"_index":211,"title":{"22-17":{},"22-18":{},"23-226":{},"23-227":{},"24-60":{},"24-61":{},"24-63":{},"27-379":{},"27-384":{},"30-62":{},"30-89":{}},"name":{},"text":{"1":{},"8":{},"9":{},"14":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["analysi",{"_index":1378,"title":{},"name":{},"text":{"14":{},"24":{},"29":{}},"component":{}}],["analyz",{"_index":1099,"title":{},"name":{},"text":{"7":{}},"component":{}}],["and/or",{"_index":4389,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["annot",{"_index":1665,"title":{},"name":{},"text":{"17":{}},"component":{}}],["anoth",{"_index":122,"title":{},"name":{},"text":{"1":{},"3":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["anymor",{"_index":112,"title":{},"name":{},"text":{"1":{},"25":{}},"component":{}}],["anyon",{"_index":79,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"29":{}},"component":{}}],["anyth",{"_index":227,"title":{},"name":{},"text":{"1":{},"14":{},"16":{},"26":{}},"component":{}}],["api",{"_index":811,"title":{"3-1":{}},"name":{},"text":{"3":{},"8":{},"10":{},"14":{},"15":{},"18":{},"20":{},"27":{}},"component":{}}],["app'",{"_index":3821,"title":{},"name":{},"text":{"27":{}},"component":{}}],["appear",{"_index":1187,"title":{},"name":{},"text":{"9":{}},"component":{}}],["append",{"_index":2117,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["appli",{"_index":541,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"18":{},"20":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["applic",{"_index":282,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"15":{},"20":{},"27":{},"29":{}},"component":{}}],["applicaton",{"_index":3817,"title":{},"name":{},"text":{"27":{}},"component":{}}],["approach",{"_index":56,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"18":{},"29":{}},"component":{}}],["appropri",{"_index":2608,"title":{},"name":{},"text":{"23":{},"28":{},"29":{},"30":{}},"component":{}}],["approv",{"_index":2690,"title":{"24-8":{},"24-17":{},"24-24":{},"28-5":{},"28-11":{},"28-21":{},"28-34":{},"29-7":{},"29-10":{},"29-24":{},"30-8":{},"30-9":{},"30-13":{},"30-14":{},"30-32":{},"30-34":{},"30-54":{}},"name":{},"text":{"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["approvalforal",{"_index":4046,"title":{"28-11":{},"30-14":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["approveandcal",{"_index":2786,"title":{"24-34":{},"24-35":{},"29-93":{},"29-94":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["approveandcallrelax",{"_index":4167,"title":{"29-135":{}},"name":{},"text":{"29":{}},"component":{}}],["appsepar",{"_index":2225,"title":{"21-111":{},"27-125":{}},"name":{},"text":{},"component":{}}],["aptli",{"_index":1058,"title":{},"name":{},"text":{"7":{}},"component":{}}],["aragon",{"_index":128,"title":{},"name":{},"text":{"1":{}},"component":{}}],["arbitrari",{"_index":586,"title":{},"name":{},"text":{"2":{},"8":{},"18":{},"23":{},"25":{},"27":{}},"component":{}}],["arbitrarili",{"_index":2551,"title":{},"name":{},"text":{"23":{}},"component":{}}],["architectur",{"_index":1590,"title":{},"name":{},"text":{"15":{}},"component":{}}],["aren’t",{"_index":543,"title":{},"name":{},"text":{"1":{}},"component":{}}],["arg",{"_index":3025,"title":{"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{}},"name":{},"text":{"26":{}},"component":{}}],["argent",{"_index":3838,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["argument",{"_index":925,"title":{},"name":{},"text":{"6":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["arithmet",{"_index":1148,"title":{},"name":{},"text":{"8":{},"27":{},"29":{}},"component":{}}],["around",{"_index":461,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"27":{},"29":{}},"component":{}}],["arr",{"_index":3403,"title":{"27-404":{},"27-405":{},"27-406":{},"27-407":{},"27-408":{},"27-409":{}},"name":{},"text":{"27":{}},"component":{}}],["arrang",{"_index":1689,"title":{},"name":{},"text":{"18":{}},"component":{}}],["array",{"_index":791,"title":{"27-392":{},"27-393":{},"27-394":{},"27-395":{},"27-396":{},"27-397":{},"27-398":{},"27-399":{},"27-400":{},"27-401":{},"27-402":{},"27-403":{},"27-410":{},"27-411":{},"27-412":{}},"name":{},"text":{"2":{},"14":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["array_out_of_bound",{"_index":3678,"title":{"27-701":{}},"name":{},"text":{"27":{}},"component":{}}],["articl",{"_index":1578,"title":{},"name":{},"text":{"15":{}},"component":{}}],["asaddress",{"_index":3442,"title":{"27-457":{}},"name":{},"text":{"27":{}},"component":{}}],["asboolean",{"_index":3444,"title":{"27-458":{}},"name":{},"text":{"27":{}},"component":{}}],["asbytes32",{"_index":3446,"title":{"27-459":{}},"name":{},"text":{"27":{}},"component":{}}],["ascend",{"_index":3977,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ascii",{"_index":3987,"title":{},"name":{},"text":{"27":{}},"component":{}}],["asid",{"_index":616,"title":{},"name":{},"text":{"2":{}},"component":{}}],["asint256",{"_index":3450,"title":{"27-461":{}},"name":{},"text":{"27":{}},"component":{}}],["ask",{"_index":664,"title":{"13":{}},"name":{},"text":{"2":{},"15":{}},"component":{}}],["aspect",{"_index":542,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"23":{},"29":{}},"component":{}}],["assembl",{"_index":3695,"title":{},"name":{},"text":{"27":{}},"component":{}}],["assert",{"_index":3672,"title":{"27-695":{}},"name":{},"text":{"27":{}},"component":{}}],["asset",{"_index":673,"title":{"24-65":{},"24-67":{},"24-68":{},"24-70":{},"24-71":{},"24-73":{},"24-74":{},"24-76":{},"24-77":{},"24-79":{},"24-80":{},"24-81":{},"24-82":{},"29-101":{},"29-103":{},"29-109":{},"29-111":{},"29-113":{},"29-115":{},"29-117":{},"29-119":{},"29-120":{},"29-122":{},"29-124":{}},"name":{},"text":{"2":{},"6":{},"9":{},"10":{},"15":{},"16":{},"22":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["asset_",{"_index":4151,"title":{"29-99":{}},"name":{},"text":{"29":{}},"component":{}}],["assets.muldiv",{"_index":1218,"title":{},"name":{},"text":{"9":{}},"component":{}}],["assettokenaddress",{"_index":2820,"title":{"24-65":{}},"name":{},"text":{},"component":{}}],["asset’",{"_index":4260,"title":{},"name":{},"text":{"29":{}},"component":{}}],["assign",{"_index":259,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"20":{},"23":{},"26":{},"28":{},"29":{}},"component":{}}],["associ",{"_index":108,"title":{},"name":{},"text":{"1":{},"4":{},"8":{},"18":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["assum",{"_index":822,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"15":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["assumpt",{"_index":1292,"title":{},"name":{},"text":{"12":{},"27":{},"30":{}},"component":{}}],["asuint256",{"_index":3448,"title":{"27-460":{}},"name":{},"text":{"27":{}},"component":{}}],["async",{"_index":1647,"title":{},"name":{},"text":{"17":{}},"component":{}}],["atom",{"_index":1895,"title":{},"name":{},"text":{"18":{},"23":{},"25":{}},"component":{}}],["attach",{"_index":411,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"25":{},"26":{},"30":{}},"component":{}}],["attack",{"_index":364,"title":{"9-1":{},"9-3":{}},"name":{},"text":{"1":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["attacker’",{"_index":4263,"title":{},"name":{},"text":{"29":{}},"component":{}}],["attempt",{"_index":1306,"title":{},"name":{},"text":{"13":{},"18":{},"20":{},"23":{},"27":{},"29":{}},"component":{}}],["attent",{"_index":1641,"title":{},"name":{},"text":{"17":{}},"component":{}}],["attribut",{"_index":945,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["audit",{"_index":432,"title":{},"name":{},"text":{"1":{}},"component":{}}],["augment",{"_index":235,"title":{},"name":{},"text":{"1":{}},"component":{}}],["auth",{"_index":4305,"title":{"30-44":{},"30-52":{},"30-53":{},"30-61":{},"30-69":{},"30-76":{},"30-87":{}},"name":{},"text":{"30":{}},"component":{}}],["authent",{"_index":588,"title":{},"name":{},"text":{"2":{}},"component":{}}],["author",{"_index":161,"title":{"20-199":{},"20-202":{},"20-205":{},"20-209":{},"20-215":{}},"name":{},"text":{"1":{},"18":{},"20":{},"23":{},"26":{},"27":{},"30":{}},"component":{}}],["authoris",{"_index":2100,"title":{},"name":{},"text":{"20":{}},"component":{}}],["authorityupd",{"_index":2020,"title":{"20-202":{}},"name":{},"text":{"20":{}},"component":{}}],["authorityutil",{"_index":2026,"title":{"20-214":{}},"name":{},"text":{},"component":{}}],["autom",{"_index":1053,"title":{"7-3":{}},"name":{},"text":{},"component":{}}],["automat",{"_index":1473,"title":{},"name":{},"text":{"14":{},"20":{},"22":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["auxiliari",{"_index":3098,"title":{},"name":{},"text":{"26":{}},"component":{}}],["avail",{"_index":886,"title":{},"name":{},"text":{"4":{},"5":{},"14":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["averag",{"_index":1777,"title":{"27-11":{},"27-34":{}},"name":{},"text":{"18":{},"24":{},"27":{}},"component":{}}],["avg",{"_index":1796,"title":{},"name":{},"text":{"18":{}},"component":{}}],["avoid",{"_index":835,"title":{},"name":{},"text":{"3":{},"15":{},"17":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["await",{"_index":349,"title":{},"name":{},"text":{"1":{},"14":{},"17":{},"18":{}},"component":{}}],["awar",{"_index":1030,"title":{},"name":{},"text":{"6":{},"18":{},"24":{},"30":{}},"component":{}}],["award",{"_index":1231,"title":{},"name":{},"text":{"10":{}},"component":{}}],["awarditem",{"_index":1233,"title":{},"name":{},"text":{"10":{}},"component":{}}],["away",{"_index":805,"title":{},"name":{},"text":{"2":{},"9":{},"11":{}},"component":{}}],["b",{"_index":1781,"title":{"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-8":{},"27-9":{},"27-10":{},"27-11":{},"27-12":{},"27-17":{},"27-18":{},"27-19":{},"27-20":{},"27-31":{},"27-32":{},"27-33":{},"27-34":{},"27-101":{},"27-150":{},"27-425":{},"27-705":{},"27-706":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["back",{"_index":1040,"title":{"27-313":{}},"name":{},"text":{"6":{},"9":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["background",{"_index":1579,"title":{},"name":{},"text":{"15":{}},"component":{}}],["backward",{"_index":569,"title":{"3":{}},"name":{"3":{}},"text":{"1":{},"3":{},"15":{},"17":{},"20":{}},"component":{}}],["balanc",{"_index":926,"title":{"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"24-4":{},"24-20":{},"30-3":{}},"name":{},"text":{"6":{},"7":{},"8":{},"14":{},"16":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["balanceof",{"_index":921,"title":{"28-3":{},"28-19":{},"29-4":{},"29-21":{},"30-3":{},"30-26":{}},"name":{},"text":{"6":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["balanceofbatch",{"_index":934,"title":{"28-4":{},"28-20":{}},"name":{},"text":{"6":{},"28":{}},"component":{}}],["balances[msg.send",{"_index":1074,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ballot_typehash",{"_index":2420,"title":{"23-102":{}},"name":{},"text":{"23":{}},"component":{}}],["ban",{"_index":165,"title":{},"name":{},"text":{"1":{}},"component":{}}],["band",{"_index":2967,"title":{},"name":{},"text":{"25":{}},"component":{}}],["bank",{"_index":1615,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bar",{"_index":1901,"title":{},"name":{},"text":{"18":{}},"component":{}}],["bare",{"_index":1060,"title":{},"name":{},"text":{"7":{},"30":{}},"component":{}}],["base",{"_index":3,"title":{"1-2":{},"14-15":{}},"name":{},"text":{"1":{},"2":{},"3":{},"9":{},"12":{},"14":{},"15":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["base64",{"_index":1021,"title":{"18-15":{},"27-413":{}},"name":{},"text":{"6":{},"10":{},"18":{},"27":{}},"component":{}}],["base64.encod",{"_index":1894,"title":{},"name":{},"text":{"18":{}},"component":{}}],["base64nft",{"_index":1887,"title":{},"name":{},"text":{"18":{}},"component":{}}],["base64url",{"_index":3696,"title":{},"name":{},"text":{"27":{}},"component":{}}],["basedelaysecond",{"_index":2443,"title":{"23-143":{}},"name":{},"text":{"23":{}},"component":{}}],["basedelayset",{"_index":2452,"title":{"23-155":{}},"name":{},"text":{"23":{}},"component":{}}],["baseuri",{"_index":4061,"title":{"28-52":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["basi",{"_index":4411,"title":{},"name":{},"text":{"31":{}},"component":{}}],["basic",{"_index":49,"title":{},"name":{},"text":{"1":{},"8":{},"15":{},"20":{},"28":{},"29":{},"30":{}},"component":{}}],["batch",{"_index":592,"title":{"6-2":{}},"name":{},"text":{"2":{},"6":{},"11":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{},"30":{}},"component":{}}],["batchexecutionindex",{"_index":2286,"title":{"21-169":{}},"name":{},"text":{"21":{}},"component":{}}],["batchmetadataupd",{"_index":4381,"title":{},"name":{},"text":{"30":{}},"component":{}}],["batchsiz",{"_index":4317,"title":{"30-75":{},"30-79":{}},"name":{},"text":{"30":{}},"component":{}}],["be",{"_index":507,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"8":{},"14":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["beacon",{"_index":3000,"title":{"26-21":{},"26-36":{},"26-38":{}},"name":{},"text":{"26":{}},"component":{}}],["beacon_slot",{"_index":3004,"title":{"26-25":{}},"name":{},"text":{"26":{}},"component":{}}],["beaconinvalidimplement",{"_index":3019,"title":{"26-48":{}},"name":{},"text":{"26":{}},"component":{}}],["beaconproxi",{"_index":3013,"title":{"26-37":{}},"name":{},"text":{"26":{}},"component":{}}],["bear",{"_index":440,"title":{},"name":{},"text":{"1":{},"9":{},"20":{}},"component":{}}],["bearer",{"_index":322,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["becom",{"_index":415,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"22":{},"23":{},"26":{},"29":{},"30":{}},"component":{}}],["befor",{"_index":220,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"11":{},"14":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["beforehand",{"_index":2121,"title":{},"name":{},"text":{"20":{}},"component":{}}],["begin",{"_index":1501,"title":{},"name":{},"text":{"14":{},"22":{},"23":{},"27":{}},"component":{}}],["begindefaultadmintransf",{"_index":1944,"title":{"20-60":{},"20-88":{}},"name":{},"text":{"20":{}},"component":{}}],["behalf",{"_index":1257,"title":{},"name":{},"text":{"11":{},"21":{},"25":{},"29":{}},"component":{}}],["behav",{"_index":828,"title":{},"name":{},"text":{"3":{},"12":{},"22":{},"27":{},"29":{}},"component":{}}],["behavior",{"_index":1115,"title":{"9-5":{}},"name":{},"text":{"8":{},"9":{},"12":{},"14":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["behaviour",{"_index":3113,"title":{},"name":{},"text":{"26":{}},"component":{}}],["behind",{"_index":1113,"title":{},"name":{},"text":{"7":{},"26":{},"27":{}},"component":{}}],["below",{"_index":821,"title":{},"name":{},"text":{"3":{},"14":{},"17":{},"19":{},"23":{},"26":{}},"component":{}}],["beneficiari",{"_index":2339,"title":{"22-3":{}},"name":{},"text":{"22":{},"29":{}},"component":{}}],["benefit",{"_index":2049,"title":{},"name":{},"text":{"20":{}},"component":{}}],["besid",{"_index":1423,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["best",{"_index":377,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"20":{},"26":{}},"component":{}}],["better",{"_index":442,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["between",{"_index":303,"title":{},"name":{},"text":{"1":{},"14":{},"16":{},"20":{},"23":{},"24":{},"26":{},"29":{}},"component":{}}],["bewar",{"_index":4182,"title":{},"name":{},"text":{"29":{}},"component":{}}],["beyond",{"_index":2547,"title":{},"name":{},"text":{"23":{}},"component":{}}],["big",{"_index":1609,"title":{},"name":{},"text":{"16":{},"18":{},"27":{}},"component":{}}],["bigger",{"_index":3950,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["binari",{"_index":1824,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["bind",{"_index":2685,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bit",{"_index":1746,"title":{"27-102":{},"27-104":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["bitmap",{"_index":1800,"title":{"27-209":{},"27-210":{},"27-211":{},"27-212":{},"27-213":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["bitmaps.bitmap",{"_index":3343,"title":{"27-210":{},"27-211":{},"27-212":{},"27-213":{}},"name":{},"text":{},"component":{}}],["blank",{"_index":3929,"title":{},"name":{},"text":{"27":{}},"component":{}}],["block",{"_index":792,"title":{},"name":{},"text":{"2":{},"7":{},"14":{},"20":{},"23":{},"24":{},"25":{},"27":{}},"component":{}}],["block.coinbas",{"_index":1094,"title":{},"name":{},"text":{"7":{}},"component":{}}],["block.timestamp",{"_index":1515,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["blockchain",{"_index":692,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"10":{},"14":{},"16":{}},"component":{}}],["blockchain’",{"_index":1595,"title":{},"name":{},"text":{"16":{}},"component":{}}],["block’",{"_index":1092,"title":{},"name":{},"text":{"7":{}},"component":{}}],["bloemen",{"_index":3717,"title":{},"name":{},"text":{"27":{}},"component":{}}],["blog",{"_index":1575,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["bone",{"_index":1061,"title":{},"name":{},"text":{"7":{},"30":{}},"component":{}}],["bool",{"_index":1452,"title":{"20-20":{},"20-32":{},"20-33":{},"20-41":{},"20-42":{},"20-49":{},"20-53":{},"20-54":{},"20-75":{},"20-80":{},"20-81":{},"20-101":{},"20-103":{},"20-106":{},"20-113":{},"20-123":{},"20-136":{},"20-141":{},"20-158":{},"20-161":{},"20-168":{},"20-176":{},"20-177":{},"20-185":{},"20-186":{},"20-215":{},"21-20":{},"21-21":{},"21-24":{},"21-33":{},"21-40":{},"21-45":{},"21-49":{},"21-53":{},"21-54":{},"21-64":{},"21-73":{},"21-82":{},"21-87":{},"21-97":{},"21-107":{},"21-110":{},"21-112":{},"21-115":{},"21-122":{},"21-139":{},"21-141":{},"23-14":{},"23-20":{},"23-56":{},"23-66":{},"23-68":{},"23-69":{},"23-96":{},"23-107":{},"23-109":{},"23-110":{},"23-114":{},"23-117":{},"23-118":{},"23-146":{},"23-147":{},"23-148":{},"23-149":{},"23-150":{},"23-156":{},"23-164":{},"23-175":{},"23-238":{},"23-239":{},"23-240":{},"23-241":{},"23-242":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-49":{},"24-50":{},"24-61":{},"24-93":{},"25-5":{},"25-13":{},"25-16":{},"25-17":{},"25-18":{},"25-19":{},"26-73":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-8":{},"27-18":{},"27-20":{},"27-29":{},"27-31":{},"27-101":{},"27-129":{},"27-135":{},"27-136":{},"27-137":{},"27-140":{},"27-147":{},"27-148":{},"27-152":{},"27-154":{},"27-156":{},"27-158":{},"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{},"27-173":{},"27-177":{},"27-183":{},"27-199":{},"27-201":{},"27-203":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"27-210":{},"27-211":{},"27-215":{},"27-216":{},"27-217":{},"27-220":{},"27-223":{},"27-224":{},"27-225":{},"27-228":{},"27-231":{},"27-232":{},"27-233":{},"27-236":{},"27-239":{},"27-240":{},"27-241":{},"27-244":{},"27-247":{},"27-248":{},"27-249":{},"27-252":{},"27-255":{},"27-256":{},"27-257":{},"27-260":{},"27-263":{},"27-264":{},"27-265":{},"27-268":{},"27-271":{},"27-272":{},"27-273":{},"27-276":{},"27-279":{},"27-280":{},"27-281":{},"27-284":{},"27-289":{},"27-290":{},"27-291":{},"27-295":{},"27-296":{},"27-297":{},"27-301":{},"27-302":{},"27-303":{},"27-317":{},"27-325":{},"27-332":{},"27-340":{},"27-348":{},"27-355":{},"27-357":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-389":{},"27-390":{},"27-393":{},"27-395":{},"27-397":{},"27-425":{},"27-441":{},"27-464":{},"27-465":{},"27-705":{},"27-706":{},"28-5":{},"28-6":{},"28-11":{},"28-17":{},"28-21":{},"28-22":{},"28-34":{},"28-47":{},"28-55":{},"29-5":{},"29-7":{},"29-8":{},"29-22":{},"29-24":{},"29-25":{},"29-31":{},"29-68":{},"29-69":{},"29-77":{},"29-84":{},"29-88":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"30-9":{},"30-11":{},"30-14":{},"30-25":{},"30-34":{},"30-35":{},"30-41":{},"30-53":{},"30-54":{},"30-57":{},"30-83":{},"30-91":{},"30-94":{},"30-95":{},"31-3":{}},"name":{},"text":{"14":{},"18":{},"27":{},"29":{},"30":{}},"component":{}}],["boolean",{"_index":1801,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"25":{},"27":{},"29":{}},"component":{}}],["booleanslot",{"_index":4009,"title":{},"name":{},"text":{"27":{}},"component":{}}],["booleanslottyp",{"_index":4016,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bootstrap",{"_index":1906,"title":{},"name":{},"text":{"19":{}},"component":{}}],["both",{"_index":384,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"8":{},"14":{},"18":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["bottom",{"_index":2147,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bound",{"_index":2962,"title":{},"name":{},"text":{"25":{},"27":{},"30":{}},"component":{}}],["bounti",{"_index":1560,"title":{},"name":{},"text":{"15":{}},"component":{}}],["box",{"_index":466,"title":{},"name":{},"text":{"1":{},"14":{},"18":{},"27":{}},"component":{}}],["branch",{"_index":1543,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["branchless",{"_index":3707,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bravo",{"_index":1357,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["break",{"_index":700,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"13":{},"28":{}},"component":{}}],["breakdown",{"_index":2135,"title":{},"name":{},"text":{"20":{}},"component":{}}],["brick",{"_index":2882,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["bridg",{"_index":2646,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bring",{"_index":625,"title":{},"name":{},"text":{"2":{},"9":{},"29":{}},"component":{}}],["bubbl",{"_index":3970,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bucket",{"_index":2579,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffer",{"_index":2586,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["bug",{"_index":1090,"title":{},"name":{},"text":{"7":{},"15":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["build",{"_index":799,"title":{"18-10":{}},"name":{},"text":{"2":{},"7":{},"14":{},"15":{},"18":{},"21":{},"23":{},"27":{}},"component":{}}],["built",{"_index":391,"title":{},"name":{},"text":{"1":{},"7":{},"11":{},"12":{},"14":{},"18":{},"26":{},"27":{},"29":{}},"component":{}}],["builtin",{"_index":4038,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bundl",{"_index":687,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{}}],["bundler",{"_index":584,"title":{"2-13":{}},"name":{},"text":{"2":{}},"component":{}}],["burn",{"_index":240,"title":{"28-42":{},"29-47":{},"30-71":{}},"name":{},"text":{"1":{},"9":{},"23":{},"24":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["burnbatch",{"_index":4057,"title":{"28-43":{}},"name":{},"text":{"28":{}},"component":{}}],["burner",{"_index":236,"title":{},"name":{},"text":{"1":{}},"component":{}}],["burner_rol",{"_index":239,"title":{},"name":{},"text":{"1":{}},"component":{}}],["burnfrom",{"_index":4122,"title":{"29-48":{}},"name":{},"text":{"29":{}},"component":{}}],["burnt",{"_index":4243,"title":{},"name":{},"text":{"29":{}},"component":{}}],["buy",{"_index":2554,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bypass",{"_index":2154,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["byte",{"_index":657,"title":{"20-126":{},"20-127":{},"20-128":{},"20-129":{},"20-130":{},"20-132":{},"20-189":{},"20-190":{},"20-191":{},"20-192":{},"20-194":{},"20-213":{},"21-17":{},"21-22":{},"21-23":{},"21-25":{},"21-26":{},"21-27":{},"21-33":{},"21-40":{},"21-42":{},"21-43":{},"21-45":{},"21-49":{},"21-50":{},"21-51":{},"21-52":{},"21-60":{},"21-61":{},"21-64":{},"21-69":{},"21-70":{},"21-73":{},"21-77":{},"21-78":{},"21-79":{},"21-80":{},"21-82":{},"21-83":{},"21-91":{},"21-92":{},"21-97":{},"21-98":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-116":{},"21-117":{},"21-118":{},"21-119":{},"21-120":{},"21-121":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-129":{},"21-130":{},"21-131":{},"21-158":{},"21-159":{},"21-160":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"21-167":{},"21-168":{},"21-169":{},"23-7":{},"23-19":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-27":{},"23-28":{},"23-29":{},"23-30":{},"23-35":{},"23-59":{},"23-70":{},"23-71":{},"23-72":{},"23-73":{},"23-74":{},"23-75":{},"23-76":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-82":{},"23-85":{},"23-86":{},"23-87":{},"23-89":{},"23-90":{},"23-92":{},"23-93":{},"23-94":{},"23-111":{},"23-119":{},"23-127":{},"23-151":{},"23-152":{},"23-153":{},"23-154":{},"23-165":{},"23-166":{},"23-167":{},"23-176":{},"23-177":{},"23-178":{},"23-200":{},"23-207":{},"23-212":{},"23-213":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-253":{},"23-259":{},"23-260":{},"24-28":{},"24-31":{},"24-33":{},"24-35":{},"24-37":{},"24-39":{},"24-61":{},"24-63":{},"25-7":{},"26-10":{},"26-14":{},"26-18":{},"26-28":{},"26-34":{},"26-38":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"26-63":{},"26-81":{},"27-19":{},"27-20":{},"27-108":{},"27-109":{},"27-125":{},"27-126":{},"27-129":{},"27-130":{},"27-134":{},"27-135":{},"27-136":{},"27-137":{},"27-138":{},"27-140":{},"27-143":{},"27-144":{},"27-147":{},"27-148":{},"27-379":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-389":{},"27-390":{},"27-414":{},"27-415":{},"27-446":{},"27-456":{},"27-473":{},"27-476":{},"28-7":{},"28-8":{},"28-23":{},"28-24":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-36":{},"28-37":{},"28-56":{},"28-57":{},"28-59":{},"28-60":{},"29-77":{},"29-90":{},"29-92":{},"29-94":{},"29-133":{},"29-134":{},"29-135":{},"29-139":{},"29-140":{},"30-5":{},"30-38":{},"30-47":{},"30-51":{},"30-66":{},"30-96":{},"30-102":{},"30-104":{}},"name":{},"text":{"2":{},"11":{},"14":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["bytecod",{"_index":1717,"title":{"27-379":{}},"name":{},"text":{"18":{},"26":{},"27":{}},"component":{}}],["bytecodehash",{"_index":3387,"title":{"27-380":{},"27-381":{}},"name":{},"text":{"27":{}},"component":{}}],["bytelength",{"_index":3422,"title":{"27-430":{}},"name":{},"text":{"27":{}},"component":{}}],["bytelengthwithfallback",{"_index":3425,"title":{"27-433":{}},"name":{},"text":{"27":{}},"component":{}}],["bytes1",{"_index":2836,"title":{"24-86":{},"27-121":{},"27-479":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-541":{},"27-542":{},"27-547":{},"27-548":{},"27-555":{},"27-556":{},"27-565":{},"27-566":{},"27-577":{},"27-578":{},"27-591":{},"27-592":{},"27-607":{},"27-608":{},"27-625":{},"27-626":{},"27-645":{},"27-646":{},"27-667":{},"27-668":{}},"name":{},"text":{"27":{}},"component":{}}],["bytes10",{"_index":3459,"title":{"27-483":{},"27-484":{},"27-489":{},"27-497":{},"27-499":{},"27-502":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-516":{},"27-531":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-575":{},"27-576":{},"27-587":{},"27-588":{},"27-601":{},"27-602":{},"27-617":{},"27-618":{},"27-635":{},"27-636":{},"27-655":{},"27-656":{},"27-677":{},"27-678":{}},"name":{},"text":{},"component":{}}],["bytes12",{"_index":1845,"title":{"27-484":{},"27-490":{},"27-491":{},"27-498":{},"27-503":{},"27-505":{},"27-509":{},"27-512":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-523":{},"27-528":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-589":{},"27-590":{},"27-603":{},"27-604":{},"27-619":{},"27-620":{},"27-637":{},"27-638":{},"27-657":{},"27-658":{},"27-679":{},"27-680":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["bytes16",{"_index":3470,"title":{"27-491":{},"27-492":{},"27-499":{},"27-500":{},"27-504":{},"27-506":{},"27-510":{},"27-514":{},"27-518":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-605":{},"27-606":{},"27-621":{},"27-622":{},"27-639":{},"27-640":{},"27-659":{},"27-660":{},"27-681":{},"27-682":{}},"name":{},"text":{},"component":{}}],["bytes2",{"_index":3453,"title":{"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-496":{},"27-502":{},"27-509":{},"27-525":{},"27-529":{},"27-535":{},"27-536":{},"27-539":{},"27-540":{},"27-543":{},"27-544":{},"27-549":{},"27-550":{},"27-557":{},"27-558":{},"27-567":{},"27-568":{},"27-579":{},"27-580":{},"27-593":{},"27-594":{},"27-609":{},"27-610":{},"27-627":{},"27-628":{},"27-647":{},"27-648":{},"27-669":{},"27-670":{}},"name":{},"text":{},"component":{}}],["bytes20",{"_index":1850,"title":{"27-485":{},"27-492":{},"27-493":{},"27-505":{},"27-507":{},"27-511":{},"27-515":{},"27-519":{},"27-520":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-623":{},"27-624":{},"27-641":{},"27-642":{},"27-661":{},"27-662":{},"27-683":{},"27-684":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["bytes22",{"_index":3462,"title":{"27-485":{},"27-486":{},"27-500":{},"27-501":{},"27-512":{},"27-513":{},"27-516":{},"27-521":{},"27-525":{},"27-529":{},"27-530":{},"27-531":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-643":{},"27-644":{},"27-663":{},"27-664":{},"27-685":{},"27-686":{}},"name":{},"text":{},"component":{}}],["bytes24",{"_index":3464,"title":{"27-486":{},"27-493":{},"27-494":{},"27-506":{},"27-508":{},"27-517":{},"27-522":{},"27-526":{},"27-529":{},"27-532":{},"27-533":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-665":{},"27-666":{},"27-687":{},"27-688":{}},"name":{},"text":{},"component":{}}],["bytes28",{"_index":3474,"title":{"27-494":{},"27-495":{},"27-501":{},"27-507":{},"27-518":{},"27-523":{},"27-527":{},"27-530":{},"27-532":{},"27-534":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-689":{},"27-690":{}},"name":{},"text":{},"component":{}}],["bytes32",{"_index":199,"title":{"20-20":{},"20-21":{},"20-22":{},"20-23":{},"20-24":{},"20-25":{},"20-26":{},"20-27":{},"20-28":{},"20-31":{},"20-33":{},"20-34":{},"20-35":{},"20-36":{},"20-37":{},"20-38":{},"20-39":{},"20-40":{},"20-41":{},"20-42":{},"20-43":{},"20-46":{},"20-47":{},"20-50":{},"20-51":{},"20-52":{},"20-53":{},"20-54":{},"20-77":{},"20-78":{},"20-79":{},"20-80":{},"20-81":{},"20-82":{},"20-124":{},"20-125":{},"20-126":{},"20-130":{},"20-132":{},"20-133":{},"20-134":{},"20-144":{},"20-145":{},"20-146":{},"20-147":{},"20-187":{},"20-188":{},"20-189":{},"20-193":{},"20-194":{},"21-8":{},"21-9":{},"21-10":{},"21-17":{},"21-18":{},"21-20":{},"21-22":{},"21-23":{},"21-24":{},"21-32":{},"21-33":{},"21-37":{},"21-38":{},"21-39":{},"21-40":{},"21-44":{},"21-45":{},"21-64":{},"21-68":{},"21-71":{},"21-73":{},"21-74":{},"21-82":{},"21-97":{},"21-108":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-132":{},"21-133":{},"21-134":{},"21-142":{},"21-143":{},"23-7":{},"23-22":{},"23-23":{},"23-24":{},"23-42":{},"23-59":{},"23-75":{},"23-76":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-95":{},"23-102":{},"23-103":{},"23-152":{},"23-153":{},"23-154":{},"23-165":{},"23-166":{},"23-167":{},"23-176":{},"23-177":{},"23-178":{},"23-212":{},"23-213":{},"23-224":{},"23-235":{},"23-239":{},"23-240":{},"23-241":{},"23-242":{},"23-243":{},"23-244":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-250":{},"23-251":{},"23-252":{},"23-255":{},"23-256":{},"23-257":{},"23-258":{},"23-259":{},"23-260":{},"23-261":{},"23-262":{},"23-266":{},"23-267":{},"24-28":{},"24-41":{},"24-45":{},"24-46":{},"24-47":{},"24-51":{},"24-54":{},"24-63":{},"24-86":{},"25-24":{},"26-23":{},"26-24":{},"26-25":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"26-80":{},"26-87":{},"27-108":{},"27-109":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-116":{},"27-119":{},"27-120":{},"27-121":{},"27-125":{},"27-126":{},"27-127":{},"27-128":{},"27-130":{},"27-132":{},"27-134":{},"27-135":{},"27-136":{},"27-137":{},"27-138":{},"27-139":{},"27-140":{},"27-142":{},"27-143":{},"27-144":{},"27-145":{},"27-147":{},"27-148":{},"27-150":{},"27-152":{},"27-153":{},"27-154":{},"27-155":{},"27-156":{},"27-157":{},"27-158":{},"27-159":{},"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{},"27-215":{},"27-216":{},"27-217":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{},"27-239":{},"27-243":{},"27-244":{},"27-245":{},"27-263":{},"27-267":{},"27-268":{},"27-269":{},"27-271":{},"27-272":{},"27-273":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{},"27-287":{},"27-289":{},"27-290":{},"27-291":{},"27-293":{},"27-294":{},"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-321":{},"27-324":{},"27-325":{},"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-379":{},"27-380":{},"27-381":{},"27-397":{},"27-398":{},"27-405":{},"27-408":{},"27-411":{},"27-437":{},"27-438":{},"27-439":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-455":{},"27-457":{},"27-458":{},"27-459":{},"27-460":{},"27-461":{},"27-466":{},"27-467":{},"27-495":{},"27-508":{},"27-513":{},"27-519":{},"27-524":{},"27-528":{},"27-531":{},"27-533":{},"27-534":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{},"29-36":{},"29-38":{},"29-41":{},"29-43":{}},"name":{},"text":{"1":{},"2":{},"12":{},"14":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["bytes32circularbuff",{"_index":3927,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32dequ",{"_index":3920,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32pushtre",{"_index":3958,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32set",{"_index":3916,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32slot",{"_index":4010,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32slottyp",{"_index":4017,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32toaddressmap",{"_index":3909,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32tobytes32map",{"_index":3901,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes32touintmap",{"_index":3904,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes4",{"_index":477,"title":{"20-32":{},"20-49":{},"20-75":{},"20-101":{},"20-103":{},"20-107":{},"20-121":{},"20-142":{},"20-151":{},"20-153":{},"20-158":{},"20-162":{},"20-181":{},"20-182":{},"20-201":{},"20-211":{},"20-215":{},"21-17":{},"21-109":{},"23-56":{},"23-92":{},"23-93":{},"23-94":{},"23-146":{},"23-147":{},"23-148":{},"23-156":{},"23-238":{},"24-28":{},"24-37":{},"24-39":{},"24-48":{},"24-49":{},"24-50":{},"27-134":{},"27-199":{},"27-201":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"27-480":{},"27-481":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-497":{},"27-503":{},"27-514":{},"27-520":{},"27-526":{},"27-532":{},"27-534":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-545":{},"27-546":{},"27-551":{},"27-552":{},"27-559":{},"27-560":{},"27-569":{},"27-570":{},"27-581":{},"27-582":{},"27-595":{},"27-596":{},"27-611":{},"27-612":{},"27-629":{},"27-630":{},"27-649":{},"27-650":{},"27-671":{},"27-672":{},"28-17":{},"28-36":{},"28-37":{},"28-55":{},"28-56":{},"28-57":{},"29-88":{},"30-25":{},"30-57":{},"30-66":{},"30-83":{},"30-91":{},"30-96":{},"30-102":{},"31-3":{}},"name":{},"text":{"1":{},"2":{},"18":{},"20":{},"24":{},"27":{},"28":{}},"component":{}}],["bytes6",{"_index":3456,"title":{"27-481":{},"27-482":{},"27-487":{},"27-489":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-510":{},"27-521":{},"27-530":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-553":{},"27-554":{},"27-561":{},"27-562":{},"27-571":{},"27-572":{},"27-583":{},"27-584":{},"27-597":{},"27-598":{},"27-613":{},"27-614":{},"27-631":{},"27-632":{},"27-651":{},"27-652":{},"27-673":{},"27-674":{}},"name":{},"text":{},"component":{}}],["bytes64",{"_index":3981,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes64url",{"_index":3982,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes8",{"_index":1848,"title":{"27-482":{},"27-483":{},"27-488":{},"27-490":{},"27-496":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-515":{},"27-522":{},"27-527":{},"27-533":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-563":{},"27-564":{},"27-573":{},"27-574":{},"27-585":{},"27-586":{},"27-599":{},"27-600":{},"27-615":{},"27-616":{},"27-633":{},"27-634":{},"27-653":{},"27-654":{},"27-675":{},"27-676":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["bytesslot",{"_index":4014,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytesxx",{"_index":1840,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["bytesyi",{"_index":1842,"title":{},"name":{},"text":{"18":{}},"component":{}}],["c",{"_index":3708,"title":{},"name":{},"text":{"27":{}},"component":{}}],["c++'",{"_index":3978,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cach",{"_index":3792,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["calcul",{"_index":476,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"22":{},"24":{},"27":{}},"component":{}}],["call",{"_index":80,"title":{"12-2":{}},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["callabl",{"_index":102,"title":{},"name":{},"text":{"1":{},"23":{},"26":{},"27":{}},"component":{}}],["calldata",{"_index":739,"title":{"21-124":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"23-7":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-30":{},"23-36":{},"23-59":{},"23-73":{},"23-74":{},"23-75":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-151":{},"23-152":{},"23-153":{},"23-154":{},"23-165":{},"23-166":{},"23-167":{},"23-176":{},"23-177":{},"23-178":{},"23-207":{}},"name":{},"text":{"2":{},"14":{},"18":{},"20":{},"21":{},"23":{},"25":{},"27":{}},"component":{}}],["caller",{"_index":205,"title":{"20-101":{},"20-103":{},"20-128":{},"20-129":{},"20-130":{},"20-132":{},"20-151":{},"20-153":{},"20-158":{},"20-191":{},"20-192":{},"20-194":{},"20-203":{},"20-204":{},"20-213":{},"20-215":{},"23-268":{},"29-119":{},"29-120":{}},"name":{},"text":{"1":{},"9":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["callerconfirm",{"_index":1920,"title":{"20-24":{},"20-39":{},"20-117":{},"20-172":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["callernotmint",{"_index":204,"title":{},"name":{},"text":{"1":{}},"component":{}}],["caller’",{"_index":2857,"title":{},"name":{},"text":{"24":{},"28":{},"29":{}},"component":{}}],["callexecut",{"_index":2532,"title":{"23-260":{}},"name":{},"text":{"23":{}},"component":{}}],["callga",{"_index":779,"title":{},"name":{},"text":{"2":{}},"component":{}}],["callgaslimit",{"_index":2259,"title":{"21-145":{}},"name":{},"text":{"21":{}},"component":{}}],["callsalt",{"_index":2533,"title":{"23-261":{}},"name":{},"text":{"23":{}},"component":{}}],["callschedul",{"_index":2531,"title":{"23-259":{}},"name":{},"text":{"23":{}},"component":{}}],["calltyp",{"_index":2241,"title":{"21-128":{},"21-161":{},"21-162":{},"21-170":{},"21-172":{},"21-173":{},"21-174":{}},"name":{},"text":{"21":{}},"component":{}}],["calltype_batch",{"_index":2290,"title":{"21-173":{}},"name":{},"text":{"21":{}},"component":{}}],["calltype_delegatecal",{"_index":2291,"title":{"21-174":{}},"name":{},"text":{"21":{}},"component":{}}],["calltype_singl",{"_index":2289,"title":{"21-172":{}},"name":{},"text":{"21":{}},"component":{}}],["cancal",{"_index":1966,"title":{"20-101":{},"20-103":{},"20-158":{}},"name":{},"text":{"20":{}},"component":{}}],["cancallwithdelay",{"_index":2027,"title":{"20-215":{}},"name":{},"text":{"20":{}},"component":{}}],["cancel",{"_index":547,"title":{"20-128":{},"20-191":{},"23-24":{},"23-79":{},"23-210":{},"23-250":{},"23-262":{}},"name":{},"text":{"1":{},"14":{},"20":{},"23":{}},"component":{}}],["canceldefaultadmintransf",{"_index":1945,"title":{"20-61":{},"20-90":{}},"name":{},"text":{"20":{}},"component":{}}],["canceller_rol",{"_index":2530,"title":{"23-258":{}},"name":{},"text":{"23":{}},"component":{}}],["canimplementinterfaceforaddress",{"_index":2792,"title":{"24-41":{}},"name":{},"text":{"24":{}},"component":{}}],["canon",{"_index":699,"title":{},"name":{},"text":{"2":{},"21":{},"27":{}},"component":{}}],["can’t",{"_index":110,"title":{},"name":{},"text":{"1":{},"7":{},"18":{},"23":{},"24":{},"26":{},"27":{},"30":{}},"component":{}}],["cap",{"_index":2079,"title":{"29-51":{},"29-53":{},"29-54":{},"29-63":{}},"name":{},"text":{"20":{},"29":{}},"component":{}}],["cap_",{"_index":4124,"title":{"29-50":{}},"name":{},"text":{"29":{}},"component":{}}],["capabl",{"_index":769,"title":{},"name":{},"text":{"2":{},"18":{},"25":{},"30":{}},"component":{}}],["capac",{"_index":3959,"title":{},"name":{},"text":{"27":{}},"component":{}}],["captur",{"_index":4262,"title":{},"name":{},"text":{"29":{}},"component":{}}],["care",{"_index":548,"title":{},"name":{},"text":{"1":{},"7":{},"16":{},"18":{},"20":{},"26":{},"27":{},"30":{}},"component":{}}],["carefulli",{"_index":1296,"title":{},"name":{},"text":{"12":{},"27":{}},"component":{}}],["carri",{"_index":291,"title":{},"name":{},"text":{"1":{},"14":{}},"component":{}}],["case",{"_index":319,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"9":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["cast",{"_index":1328,"title":{"14-13":{}},"name":{},"text":{"14":{},"18":{},"23":{},"27":{}},"component":{}}],["castvot",{"_index":1492,"title":{"23-25":{},"23-83":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["castvotebysig",{"_index":2377,"title":{"23-28":{},"23-86":{}},"name":{},"text":{"23":{}},"component":{}}],["castvotewithreason",{"_index":2375,"title":{"23-26":{},"23-84":{}},"name":{},"text":{"23":{}},"component":{}}],["castvotewithreasonandparam",{"_index":2376,"title":{"23-27":{},"23-85":{}},"name":{},"text":{"23":{}},"component":{}}],["castvotewithreasonandparamsbysig",{"_index":2378,"title":{"23-29":{},"23-87":{}},"name":{},"text":{"23":{}},"component":{}}],["catch",{"_index":4209,"title":{},"name":{},"text":{"29":{}},"component":{}}],["categor",{"_index":1256,"title":{},"name":{},"text":{"11":{}},"component":{}}],["categori",{"_index":2662,"title":{},"name":{},"text":{"23":{}},"component":{}}],["caus",{"_index":275,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["caution",{"_index":396,"title":{},"name":{},"text":{"1":{},"3":{},"27":{},"29":{}},"component":{}}],["cdn",{"_index":4089,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ceil",{"_index":3712,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ceildiv",{"_index":3146,"title":{"27-12":{}},"name":{},"text":{"27":{}},"component":{}}],["center",{"_index":1564,"title":{},"name":{},"text":{"15":{}},"component":{}}],["central",{"_index":95,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"14":{},"20":{}},"component":{}}],["certain",{"_index":333,"title":{},"name":{},"text":{"1":{},"20":{},"21":{},"23":{},"27":{},"29":{}},"component":{}}],["chain",{"_index":1016,"title":{"14":{},"18-2":{}},"name":{},"text":{"6":{},"10":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["chainid",{"_index":662,"title":{"21-143":{},"24-86":{},"27-121":{},"27-130":{}},"name":{},"text":{"2":{},"21":{},"23":{},"27":{}},"component":{}}],["chang",{"_index":360,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"10":{},"12":{},"14":{},"15":{},"17":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["changeadmin",{"_index":2993,"title":{"26-16":{}},"name":{},"text":{"26":{}},"component":{}}],["changedefaultadmindelay",{"_index":1947,"title":{"20-63":{},"20-94":{}},"name":{},"text":{"20":{}},"component":{}}],["changelog",{"_index":832,"title":{},"name":{},"text":{"3":{}},"component":{}}],["char",{"_index":3994,"title":{},"name":{},"text":{"27":{}},"component":{}}],["charact",{"_index":996,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["charg",{"_index":413,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"23":{},"24":{}},"component":{}}],["chart",{"_index":280,"title":{},"name":{},"text":{"1":{}},"component":{}}],["cheap",{"_index":2552,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["cheaper",{"_index":3724,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["cheapli",{"_index":3109,"title":{},"name":{},"text":{"26":{}},"component":{}}],["check",{"_index":178,"title":{"18-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"10":{},"12":{},"13":{},"17":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["checkonerc1155batchreceiv",{"_index":4064,"title":{"28-60":{}},"name":{},"text":{"28":{}},"component":{}}],["checkonerc1155receiv",{"_index":4063,"title":{"28-59":{}},"name":{},"text":{"28":{}},"component":{}}],["checkonerc1363approvalreceiv",{"_index":4173,"title":{"29-140":{}},"name":{},"text":{"29":{}},"component":{}}],["checkonerc1363transferreceiv",{"_index":4172,"title":{"29-139":{}},"name":{},"text":{"29":{}},"component":{}}],["checkonerc721receiv",{"_index":4328,"title":{"30-104":{}},"name":{},"text":{"30":{}},"component":{}}],["checkpoint",{"_index":1802,"title":{"27-326":{},"29-62":{}},"name":{},"text":{"18":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["checkpoints.checkpoint160",{"_index":3377,"title":{"27-350":{}},"name":{},"text":{},"component":{}}],["checkpoints.checkpoint208",{"_index":2512,"title":{"23-229":{},"27-342":{},"29-62":{}},"name":{},"text":{},"component":{}}],["checkpoints.checkpoint224",{"_index":3374,"title":{"27-334":{}},"name":{},"text":{},"component":{}}],["checkpoints.trac",{"_index":3934,"title":{},"name":{},"text":{"27":{}},"component":{}}],["checkpoints.trace160",{"_index":3376,"title":{"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{},"27-349":{},"27-350":{}},"name":{},"text":{},"component":{}}],["checkpoints.trace208",{"_index":3375,"title":{"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-341":{},"27-342":{}},"name":{},"text":{},"component":{}}],["checkpoints.trace224",{"_index":3367,"title":{"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{},"27-333":{},"27-334":{}},"name":{},"text":{},"component":{}}],["checkpointunorderedinsert",{"_index":3378,"title":{"27-351":{}},"name":{},"text":{"27":{}},"component":{}}],["checksum",{"_index":3988,"title":{},"name":{},"text":{"27":{}},"component":{}}],["child",{"_index":3943,"title":{},"name":{},"text":{"27":{},"30":{}},"component":{}}],["children",{"_index":2047,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["choic",{"_index":1371,"title":{},"name":{},"text":{"14":{}},"component":{}}],["choos",{"_index":1372,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"23":{}},"component":{}}],["chosen",{"_index":1505,"title":{},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["chunk",{"_index":1836,"title":{},"name":{},"text":{"18":{}},"component":{}}],["circularbuff",{"_index":3365,"title":{"27-318":{}},"name":{},"text":{"27":{}},"component":{}}],["circularbuffer.bytes32circularbuff",{"_index":3366,"title":{"27-319":{},"27-320":{},"27-321":{},"27-322":{},"27-323":{},"27-324":{},"27-325":{}},"name":{},"text":{"27":{}},"component":{}}],["circumst",{"_index":2594,"title":{},"name":{},"text":{"23":{}},"component":{}}],["circumv",{"_index":1308,"title":{},"name":{},"text":{"13":{}},"component":{}}],["claim",{"_index":2677,"title":{},"name":{},"text":{"23":{}},"component":{}}],["clash",{"_index":3048,"title":{},"name":{},"text":{"26":{}},"component":{}}],["class",{"_index":854,"title":{},"name":{},"text":{"3":{},"23":{},"27":{}},"component":{}}],["clean",{"_index":242,"title":{},"name":{},"text":{"1":{},"20":{},"27":{}},"component":{}}],["clear",{"_index":224,"title":{"27-315":{},"27-320":{},"27-361":{},"27-370":{}},"name":{},"text":{"1":{},"27":{},"30":{},"31":{}},"component":{}}],["clearer",{"_index":684,"title":{},"name":{},"text":{"2":{}},"component":{}}],["clearli",{"_index":1191,"title":{},"name":{},"text":{"9":{},"28":{}},"component":{}}],["clever",{"_index":1884,"title":{},"name":{},"text":{"18":{}},"component":{}}],["cli",{"_index":875,"title":{},"name":{},"text":{"3":{}},"component":{}}],["client",{"_index":988,"title":{},"name":{},"text":{"6":{},"7":{},"26":{},"27":{},"28":{}},"component":{}}],["clock",{"_index":1404,"title":{"23-97":{},"23-125":{},"23-216":{},"23-232":{},"24-90":{}},"name":{},"text":{"14":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["clock_mod",{"_index":1513,"title":{"23-98":{},"23-126":{},"23-217":{},"24-91":{}},"name":{},"text":{"14":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["clone",{"_index":3020,"title":{"26-49":{},"26-50":{},"26-51":{},"26-52":{}},"name":{},"text":{"26":{}},"component":{}}],["cloneargumentstoolong",{"_index":3029,"title":{"26-64":{}},"name":{},"text":{"26":{}},"component":{}}],["clonedeterminist",{"_index":3021,"title":{"26-53":{},"26-54":{}},"name":{},"text":{"26":{}},"component":{}}],["clonedeterministicwithimmutablearg",{"_index":3026,"title":{"26-59":{},"26-60":{}},"name":{},"text":{"26":{}},"component":{}}],["clones.clonedeterminist",{"_index":3115,"title":{},"name":{},"text":{"26":{}},"component":{}}],["clones.clonedeterministicwithimmutablearg",{"_index":3116,"title":{},"name":{},"text":{"26":{}},"component":{}}],["clonewithimmutablearg",{"_index":3024,"title":{"26-57":{},"26-58":{}},"name":{},"text":{"26":{}},"component":{}}],["close",{"_index":524,"title":{"20-123":{},"20-141":{},"20-185":{},"20-186":{}},"name":{},"text":{"1":{},"20":{},"23":{},"24":{}},"component":{}}],["cloud",{"_index":809,"title":{},"name":{},"text":{"2":{}},"component":{}}],["code",{"_index":481,"title":{"27-693":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"12":{},"13":{},"14":{},"15":{},"18":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["codebas",{"_index":4180,"title":{},"name":{},"text":{"29":{}},"component":{}}],["coexist",{"_index":3130,"title":{},"name":{},"text":{"26":{}},"component":{}}],["coffe",{"_index":1592,"title":{"16-1":{}},"name":{},"text":{},"component":{}}],["cold",{"_index":3794,"title":{},"name":{},"text":{"27":{}},"component":{}}],["collect",{"_index":1227,"title":{},"name":{},"text":{"10":{},"14":{},"15":{},"16":{},"27":{},"30":{}},"component":{}}],["collectible.j",{"_index":1646,"title":{},"name":{},"text":{"17":{}},"component":{}}],["collid",{"_index":1875,"title":{},"name":{},"text":{"18":{}},"component":{}}],["combin",{"_index":1230,"title":{},"name":{},"text":{"10":{},"12":{},"14":{},"23":{},"27":{},"29":{},"30":{}},"component":{}}],["combinevalidationdata",{"_index":2253,"title":{"21-140":{}},"name":{},"text":{"21":{}},"component":{}}],["come",{"_index":970,"title":{},"name":{},"text":{"6":{},"10":{},"11":{},"12":{},"16":{},"18":{},"26":{}},"component":{}}],["command",{"_index":1548,"title":{},"name":{},"text":{"15":{}},"component":{}}],["commit",{"_index":3954,"title":{},"name":{},"text":{"27":{}},"component":{}}],["common",{"_index":48,"title":{"31":{}},"name":{"31":{}},"text":{"1":{},"2":{},"9":{},"14":{},"15":{},"18":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["commonli",{"_index":1267,"title":{},"name":{},"text":{"12":{},"18":{},"27":{}},"component":{}}],["commun",{"_index":596,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"15":{},"16":{}},"component":{}}],["commut",{"_index":3844,"title":{},"name":{},"text":{"27":{}},"component":{}}],["commutativekeccak256",{"_index":3312,"title":{"27-150":{}},"name":{},"text":{"27":{}},"component":{}}],["comp",{"_index":1356,"title":{"27-355":{},"27-357":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-393":{},"27-395":{},"27-397":{}},"name":{},"text":{"14":{},"23":{},"27":{},"29":{}},"component":{}}],["compact",{"_index":3890,"title":{},"name":{},"text":{"27":{}},"component":{}}],["compani",{"_index":1599,"title":{},"name":{},"text":{"16":{}},"component":{}}],["compar",{"_index":1695,"title":{"27-704":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["comparators.gt",{"_index":1832,"title":{},"name":{},"text":{"18":{}},"component":{}}],["compat",{"_index":570,"title":{"3":{},"14-2":{}},"name":{"3":{}},"text":{"1":{},"3":{},"14":{},"15":{},"17":{},"18":{},"20":{},"25":{},"26":{},"29":{},"31":{}},"component":{}}],["compil",{"_index":827,"title":{},"name":{},"text":{"3":{},"15":{},"17":{},"19":{},"24":{},"26":{},"27":{}},"component":{}}],["complet",{"_index":359,"title":{},"name":{},"text":{"1":{},"8":{},"18":{},"20":{},"27":{}},"component":{}}],["complex",{"_index":137,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"15":{},"16":{},"20":{},"27":{}},"component":{}}],["complianc",{"_index":2963,"title":{},"name":{},"text":{"25":{}},"component":{}}],["compliant",{"_index":715,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"18":{},"26":{},"28":{},"30":{}},"component":{}}],["compon",{"_index":248,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"15":{},"19":{},"27":{}},"component":{}}],["compos",{"_index":133,"title":{},"name":{},"text":{"1":{},"9":{},"13":{},"18":{}},"component":{}}],["compound",{"_index":1344,"title":{},"name":{},"text":{"14":{},"23":{},"24":{},"29":{}},"component":{}}],["compound’",{"_index":1352,"title":{},"name":{},"text":{"14":{},"23":{},"29":{}},"component":{}}],["compris",{"_index":1376,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{}}],["compromis",{"_index":1670,"title":{},"name":{},"text":{"17":{},"20":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["comput",{"_index":807,"title":{},"name":{},"text":{"2":{},"14":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["computeaddress",{"_index":3386,"title":{"27-380":{},"27-381":{}},"name":{},"text":{"27":{}},"component":{}}],["concaten",{"_index":773,"title":{},"name":{},"text":{"2":{},"27":{},"28":{},"30":{}},"component":{}}],["concept",{"_index":51,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"15":{},"16":{},"27":{}},"component":{}}],["concern",{"_index":244,"title":{"9-1":{}},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"27":{},"29":{}},"component":{}}],["concurr",{"_index":2115,"title":{},"name":{},"text":{"20":{}},"component":{}}],["condit",{"_index":841,"title":{"27-8":{},"27-31":{}},"name":{},"text":{"3":{},"24":{},"27":{},"29":{}},"component":{}}],["configur",{"_index":21,"title":{"1-12":{}},"name":{},"text":{"1":{},"2":{},"9":{},"20":{},"22":{},"23":{},"26":{},"29":{}},"component":{}}],["confirm",{"_index":4334,"title":{},"name":{},"text":{"30":{}},"component":{}}],["conflict",{"_index":2599,"title":{},"name":{},"text":{"23":{},"26":{},"27":{},"29":{}},"component":{}}],["conform",{"_index":795,"title":{},"name":{},"text":{"2":{},"18":{},"27":{},"29":{}},"component":{}}],["confus",{"_index":1602,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["conjunct",{"_index":3106,"title":{},"name":{},"text":{"26":{},"29":{},"30":{}},"component":{}}],["connect",{"_index":2126,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["consecut",{"_index":4363,"title":{},"name":{},"text":{"30":{}},"component":{}}],["consecutivetransf",{"_index":4367,"title":{},"name":{},"text":{"30":{}},"component":{}}],["consequ",{"_index":1655,"title":{},"name":{},"text":{"17":{},"22":{},"23":{},"26":{},"27":{}},"component":{}}],["consid",{"_index":376,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"11":{},"13":{},"14":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{}},"component":{}}],["consider",{"_index":1170,"title":{"23-140":{},"25-11":{},"29-35":{}},"name":{},"text":{"9":{},"23":{},"29":{}},"component":{}}],["consist",{"_index":1479,"title":{},"name":{},"text":{"14":{},"18":{},"28":{},"30":{}},"component":{}}],["console.log",{"_index":1652,"title":{},"name":{},"text":{"17":{}},"component":{}}],["const",{"_index":347,"title":{},"name":{},"text":{"1":{},"14":{},"17":{},"18":{},"23":{}},"component":{}}],["constant",{"_index":200,"title":{"21-129":{},"21-130":{},"21-131":{},"21-132":{},"21-133":{},"21-134":{},"21-155":{},"21-156":{},"21-172":{},"21-173":{},"21-174":{},"21-175":{},"21-176":{},"23-121":{},"23-269":{},"25-24":{},"26-23":{},"26-24":{},"26-25":{},"27-132":{},"27-416":{},"27-417":{},"27-694":{},"27-695":{},"27-696":{},"27-697":{},"27-698":{},"27-699":{},"27-700":{},"27-701":{},"27-702":{},"27-703":{}},"name":{},"text":{"1":{},"6":{},"14":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["construct",{"_index":261,"title":{"6-3":{},"8-1":{},"10-1":{}},"name":{},"text":{"1":{},"13":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["constructor",{"_index":73,"title":{"20-4":{},"20-74":{},"20-157":{},"20-208":{},"21-30":{},"21-35":{},"21-37":{},"21-42":{},"22-3":{},"23-54":{},"23-123":{},"23-129":{},"23-141":{},"23-161":{},"23-172":{},"23-184":{},"23-198":{},"23-236":{},"25-3":{},"25-12":{},"26-10":{},"26-28":{},"26-33":{},"26-38":{},"26-44":{},"27-118":{},"27-172":{},"27-182":{},"28-16":{},"29-16":{},"29-40":{},"29-50":{},"29-65":{},"29-99":{},"30-24":{},"30-93":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["consum",{"_index":1708,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["consumescheduledop",{"_index":1984,"title":{"20-129":{},"20-192":{}},"name":{},"text":{"20":{}},"component":{}}],["contain",{"_index":585,"title":{"27-217":{},"27-225":{},"27-233":{},"27-241":{},"27-249":{},"27-257":{},"27-265":{},"27-273":{},"27-281":{},"27-291":{},"27-297":{},"27-303":{}},"name":{},"text":{"2":{},"15":{},"23":{},"25":{},"26":{},"27":{},"28":{},"30":{}},"component":{}}],["content",{"_index":1380,"title":{"27-125":{},"27-126":{},"27-127":{},"27-130":{}},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["contentstyp",{"_index":2234,"title":{"21-122":{},"27-125":{},"27-126":{},"27-129":{},"27-130":{}},"name":{},"text":{"21":{},"27":{}},"component":{}}],["contentstype.length",{"_index":3811,"title":{},"name":{},"text":{"27":{}},"component":{}}],["contentstypenam",{"_index":3300,"title":{"27-129":{}},"name":{},"text":{"27":{}},"component":{}}],["context",{"_index":605,"title":{"27-474":{}},"name":{},"text":{"2":{},"12":{},"20":{},"23":{},"25":{},"26":{},"27":{},"30":{}},"component":{}}],["continu",{"_index":826,"title":{},"name":{},"text":{"3":{},"15":{},"27":{},"29":{}},"component":{}}],["contract",{"_index":29,"title":{"12":{},"15":{},"19":{},"2-14":{},"2-15":{},"2-16":{},"6-3":{},"6-4":{},"8-1":{},"10-1":{},"16-1":{},"21-5":{},"22-1":{},"23-123":{},"23-124":{},"23-142":{},"23-161":{},"23-169":{},"23-172":{},"23-181":{},"24-61":{},"26-34":{},"29-65":{},"29-67":{},"29-77":{},"29-99":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"30-93":{},"30-98":{},"31-1":{}},"name":{"12":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}}}],["contract'",{"_index":3818,"title":{},"name":{},"text":{"27":{}},"component":{}}],["contractnam",{"_index":3963,"title":{},"name":{},"text":{"27":{}},"component":{}}],["contractname.toshortstringwithfallback",{"_index":3992,"title":{},"name":{},"text":{"27":{}},"component":{}}],["contracts.adoc",{"_index":1283,"title":{},"name":{},"text":{"12":{}},"component":{}}],["contracts/accesscontrolmodified.sol",{"_index":1272,"title":{},"name":{},"text":{"12":{}},"component":{}}],["contracts/box.sol",{"_index":1898,"title":{},"name":{},"text":{"18":{}},"component":{}}],["contracts/contract",{"_index":1551,"title":{},"name":{},"text":{"15":{}},"component":{}}],["contracts/gameitem.sol",{"_index":1234,"title":{},"name":{},"text":{"10":{}},"component":{}}],["contracts/gameitems.sol",{"_index":951,"title":{},"name":{},"text":{"6":{}},"component":{}}],["contracts/gldtoken.sol",{"_index":1122,"title":{},"name":{},"text":{"8":{}},"component":{}}],["contracts/myerc115holdercontract.sol",{"_index":1045,"title":{},"name":{},"text":{"6":{}},"component":{}}],["contracts/mymodularaccount.sol",{"_index":1262,"title":{},"name":{},"text":{"11":{}},"component":{}}],["contracts/mynft.sol",{"_index":1553,"title":{},"name":{},"text":{"15":{}},"component":{}}],["contract’",{"_index":445,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"17":{},"26":{},"27":{},"29":{}},"component":{}}],["control",{"_index":5,"title":{"1":{},"20":{},"1-2":{}},"name":{"1":{}},"text":{"1":{},"2":{},"3":{},"10":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["control/accesscontrolnonrevokableadmin.sol",{"_index":1285,"title":{},"name":{},"text":{"12":{}},"component":{}}],["control—that",{"_index":22,"title":{},"name":{},"text":{"1":{}},"component":{}}],["conveni",{"_index":1042,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["convent",{"_index":1637,"title":{},"name":{},"text":{"17":{},"23":{},"29":{}},"component":{}}],["convers",{"_index":4040,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["convert",{"_index":3775,"title":{},"name":{},"text":{"27":{}},"component":{}}],["converttoasset",{"_index":2824,"title":{"24-68":{},"29-104":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["converttoshar",{"_index":2823,"title":{"24-67":{},"29-103":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["convey",{"_index":4206,"title":{},"name":{},"text":{"29":{}},"component":{}}],["coordin",{"_index":522,"title":{},"name":{},"text":{"1":{}},"component":{}}],["copi",{"_index":221,"title":{},"name":{},"text":{"1":{},"15":{},"20":{},"27":{}},"component":{}}],["core",{"_index":1105,"title":{"20-1":{},"21-1":{},"23-2":{},"25-1":{},"26-2":{},"28-1":{},"29-1":{},"30-1":{}},"name":{},"text":{"7":{},"14":{},"23":{},"26":{},"28":{},"29":{},"30":{}},"component":{}}],["corpor",{"_index":645,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{}}],["correct",{"_index":1291,"title":{},"name":{},"text":{"12":{},"23":{}},"component":{}}],["correctli",{"_index":1102,"title":{},"name":{},"text":{"7":{},"26":{},"29":{},"30":{}},"component":{}}],["correspond",{"_index":270,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"14":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["corrupt",{"_index":872,"title":{},"name":{},"text":{"3":{},"18":{},"25":{},"27":{}},"component":{}}],["cost",{"_index":808,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"18":{},"20":{},"23":{},"25":{},"27":{},"28":{},"30":{}},"component":{}}],["costli",{"_index":1020,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["couldn’t",{"_index":4240,"title":{},"name":{},"text":{"29":{},"30":{}},"component":{}}],["count",{"_index":1407,"title":{"27-322":{}},"name":{},"text":{"14":{},"23":{},"27":{},"30":{}},"component":{}}],["counter",{"_index":905,"title":{},"name":{},"text":{"5":{}},"component":{}}],["counterexampl",{"_index":1313,"title":{},"name":{},"text":{"13":{}},"component":{}}],["counterfactu",{"_index":2356,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["counterpart",{"_index":3749,"title":{},"name":{},"text":{"27":{}},"component":{}}],["counting_mod",{"_index":2363,"title":{"23-6":{},"23-106":{},"23-113":{}},"name":{},"text":{"23":{}},"component":{}}],["cover",{"_index":1576,"title":{},"name":{},"text":{"15":{},"23":{},"29":{},"30":{}},"component":{}}],["craft",{"_index":3782,"title":{},"name":{},"text":{"27":{}},"component":{}}],["creat",{"_index":132,"title":{"7":{},"14-12":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["create2",{"_index":3110,"title":{"27-378":{}},"name":{},"text":{"26":{},"27":{}},"component":{}}],["create2emptybytecod",{"_index":3388,"title":{"27-382":{}},"name":{},"text":{"27":{}},"component":{}}],["creation",{"_index":1358,"title":{},"name":{},"text":{"14":{},"23":{},"26":{}},"component":{}}],["creationcod",{"_index":3964,"title":{},"name":{},"text":{"27":{}},"component":{}}],["credit",{"_index":3715,"title":{},"name":{},"text":{"27":{}},"component":{}}],["critic",{"_index":40,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"24":{},"26":{}},"component":{}}],["crowdsal",{"_index":881,"title":{"4":{}},"name":{"4":{}},"text":{"4":{}},"component":{}}],["cryptograph",{"_index":1685,"title":{},"name":{},"text":{"18":{},"21":{},"27":{}},"component":{}}],["cryptographi",{"_index":1671,"title":{"18-1":{},"27-106":{}},"name":{},"text":{},"component":{}}],["cryptosystem",{"_index":1727,"title":{},"name":{},"text":{"18":{}},"component":{}}],["currenc",{"_index":611,"title":{},"name":{},"text":{"2":{},"8":{},"16":{},"22":{},"24":{},"26":{}},"component":{}}],["current",{"_index":464,"title":{"23-42":{}},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"13":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["current_domain_separ",{"_index":3814,"title":{},"name":{},"text":{"27":{}},"component":{}}],["currentallow",{"_index":4170,"title":{"29-137":{}},"name":{},"text":{"29":{}},"component":{}}],["currentdelay",{"_index":1977,"title":{"20-112":{},"20-167":{}},"name":{},"text":{},"component":{}}],["currentnonc",{"_index":2592,"title":{"27-196":{}},"name":{},"text":{"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["currentroot",{"_index":1819,"title":{},"name":{},"text":{"18":{}},"component":{}}],["curv",{"_index":638,"title":{},"name":{},"text":{"2":{},"18":{},"22":{},"27":{}},"component":{}}],["custodi",{"_index":2351,"title":{},"name":{},"text":{"22":{}},"component":{}}],["custom",{"_index":131,"title":{"9-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"9":{},"10":{},"12":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["custom:oz",{"_index":3127,"title":{},"name":{},"text":{"26":{}},"component":{}}],["custom:storag",{"_index":1662,"title":{},"name":{},"text":{"17":{}},"component":{}}],["customiz",{"_index":1408,"title":{},"name":{},"text":{"14":{},"22":{}},"component":{}}],["danger",{"_index":107,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"25":{}},"component":{}}],["dao",{"_index":129,"title":{},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["dapp",{"_index":3795,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dappsi",{"_index":2098,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dashboard",{"_index":1377,"title":{},"name":{},"text":{"14":{}},"component":{}}],["data",{"_index":862,"title":{"20-126":{},"20-127":{},"20-128":{},"20-129":{},"20-130":{},"20-132":{},"20-189":{},"20-190":{},"20-191":{},"20-192":{},"20-194":{},"20-213":{},"21-49":{},"21-60":{},"21-61":{},"21-69":{},"21-70":{},"21-78":{},"21-79":{},"21-91":{},"21-92":{},"21-123":{},"21-125":{},"23-90":{},"23-246":{},"23-248":{},"23-253":{},"23-259":{},"23-260":{},"24-31":{},"24-33":{},"24-35":{},"24-37":{},"24-39":{},"24-61":{},"24-63":{},"26-14":{},"26-18":{},"26-34":{},"26-38":{},"26-81":{},"27-144":{},"27-208":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-414":{},"27-415":{},"27-473":{},"28-7":{},"28-8":{},"28-23":{},"28-24":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-36":{},"28-37":{},"28-59":{},"28-60":{},"29-77":{},"29-90":{},"29-92":{},"29-94":{},"29-133":{},"29-134":{},"29-135":{},"29-139":{},"29-140":{},"30-5":{},"30-38":{},"30-47":{},"30-51":{},"30-66":{},"30-104":{}},"name":{},"text":{"3":{},"6":{},"10":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["data.pkcs1",{"_index":1744,"title":{},"name":{},"text":{"18":{}},"component":{}}],["data.verifi",{"_index":1710,"title":{},"name":{},"text":{"18":{}},"component":{}}],["data.verifyn",{"_index":1721,"title":{},"name":{},"text":{"18":{}},"component":{}}],["data:application/json;base64",{"_index":1893,"title":{},"name":{},"text":{"18":{}},"component":{}}],["datauri",{"_index":1890,"title":{},"name":{},"text":{"18":{}},"component":{}}],["day",{"_index":430,"title":{},"name":{},"text":{"1":{},"14":{},"16":{},"20":{}},"component":{}}],["de",{"_index":1622,"title":{},"name":{},"text":{"16":{}},"component":{}}],["deadlin",{"_index":1529,"title":{"25-22":{},"29-36":{},"29-41":{},"29-44":{}},"name":{},"text":{"14":{},"23":{},"24":{},"25":{},"29":{}},"component":{}}],["deal",{"_index":1506,"title":{},"name":{},"text":{"14":{},"16":{},"18":{},"24":{},"27":{},"31":{}},"component":{}}],["decentr",{"_index":452,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"18":{}},"component":{}}],["decid",{"_index":404,"title":{},"name":{},"text":{"1":{},"15":{},"27":{},"30":{}},"component":{}}],["decim",{"_index":973,"title":{"8-2":{},"29-14":{},"29-19":{},"29-66":{},"29-100":{}},"name":{},"text":{"6":{},"8":{},"10":{},"14":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["decis",{"_index":1339,"title":{},"name":{},"text":{"14":{},"23":{},"30":{}},"component":{}}],["declar",{"_index":1856,"title":{},"name":{},"text":{"18":{},"20":{},"26":{},"27":{}},"component":{}}],["declin",{"_index":884,"title":{},"name":{},"text":{"4":{}},"component":{}}],["decod",{"_index":2567,"title":{},"name":{},"text":{"23":{},"26":{},"27":{}},"component":{}}],["decodebatch",{"_index":2284,"title":{"21-168":{}},"name":{},"text":{"21":{}},"component":{}}],["decodedeleg",{"_index":2281,"title":{"21-166":{}},"name":{},"text":{"21":{}},"component":{}}],["decodemod",{"_index":2277,"title":{"21-162":{}},"name":{},"text":{"21":{}},"component":{}}],["decodesingl",{"_index":2279,"title":{"21-164":{}},"name":{},"text":{"21":{}},"component":{}}],["decor",{"_index":2139,"title":{},"name":{},"text":{"20":{}},"component":{}}],["decreas",{"_index":4290,"title":{},"name":{},"text":{"29":{}},"component":{}}],["decreaseallow",{"_index":4294,"title":{},"name":{},"text":{"29":{}},"component":{}}],["dedic",{"_index":3084,"title":{},"name":{},"text":{"26":{}},"component":{}}],["deduct",{"_index":4186,"title":{},"name":{},"text":{"29":{}},"component":{}}],["deed",{"_index":1608,"title":{},"name":{},"text":{"16":{}},"component":{}}],["deep",{"_index":3050,"title":{},"name":{},"text":{"26":{}},"component":{}}],["deepest",{"_index":3864,"title":{},"name":{},"text":{"27":{}},"component":{}}],["default",{"_index":263,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["default_admin_rol",{"_index":285,"title":{"20-43":{}},"name":{},"text":{"1":{},"12":{},"20":{},"23":{}},"component":{}}],["defaultadmin",{"_index":1936,"title":{"20-56":{},"20-70":{},"20-83":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadmindelay",{"_index":1940,"title":{"20-58":{},"20-85":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadmindelaychangecancel",{"_index":1953,"title":{"20-69":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadmindelaychangeschedul",{"_index":1952,"title":{"20-68":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadmindelayincreasewait",{"_index":1949,"title":{"20-65":{},"20-87":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadminrolechangestart",{"_index":2073,"title":{},"name":{},"text":{"20":{}},"component":{}}],["defaultadmintransfercancel",{"_index":1951,"title":{"20-67":{}},"name":{},"text":{"20":{}},"component":{}}],["defaultadmintransferschedul",{"_index":1950,"title":{"20-66":{}},"name":{},"text":{"20":{}},"component":{}}],["defeat",{"_index":2631,"title":{},"name":{},"text":{"23":{}},"component":{}}],["defend",{"_index":1158,"title":{"9-4":{}},"name":{},"text":{"14":{}},"component":{}}],["defens",{"_index":677,"title":{},"name":{},"text":{"2":{}},"component":{}}],["defi",{"_index":2644,"title":{},"name":{},"text":{"23":{}},"component":{}}],["defin",{"_index":171,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["deflationari",{"_index":4242,"title":{},"name":{},"text":{"29":{}},"component":{}}],["deinitdata",{"_index":2178,"title":{"21-27":{},"21-52":{}},"name":{},"text":{"21":{}},"component":{}}],["delay",{"_index":13,"title":{"1-6":{},"1-8":{},"20-103":{},"20-136":{},"20-140":{},"20-143":{},"20-158":{},"20-204":{},"20-215":{},"23-149":{},"23-248":{},"23-249":{},"23-259":{},"23-265":{}},"name":{},"text":{"1":{},"14":{},"20":{},"23":{}},"component":{}}],["deleg",{"_index":709,"title":{"23-222":{},"23-223":{}},"name":{},"text":{"2":{},"11":{},"14":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["delegate",{"_index":2504,"title":{"23-223":{},"23-224":{},"23-225":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["delegatebysig",{"_index":2505,"title":{"23-224":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["delegatecal",{"_index":1259,"title":{},"name":{},"text":{"11":{},"25":{},"26":{},"27":{}},"component":{}}],["delegatechang",{"_index":2716,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["delegatevoteschang",{"_index":2719,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["delegate’",{"_index":2655,"title":{},"name":{},"text":{"23":{}},"component":{}}],["delet",{"_index":2037,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["deliber",{"_index":3090,"title":{},"name":{},"text":{"26":{}},"component":{}}],["demand",{"_index":949,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["demonstr",{"_index":479,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{}}],["deni",{"_index":2678,"title":{},"name":{},"text":{"23":{}},"component":{}}],["denial",{"_index":2138,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["denomin",{"_index":2669,"title":{"27-13":{},"27-14":{},"31-10":{},"31-12":{}},"name":{},"text":{"23":{},"24":{},"27":{},"30":{},"31":{}},"component":{}}],["depend",{"_index":1173,"title":{},"name":{},"text":{"9":{},"17":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["deploy",{"_index":83,"title":{"26-55":{},"26-61":{},"27-379":{},"27-381":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"11":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["deployeraddress",{"_index":977,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["deployer’",{"_index":975,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["deposit",{"_index":1171,"title":{"24-71":{},"24-81":{},"29-113":{}},"name":{},"text":{"9":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["deposit/mint",{"_index":4286,"title":{},"name":{},"text":{"29":{}},"component":{}}],["depositfor",{"_index":4133,"title":{"29-68":{},"30-94":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["depositor",{"_index":2914,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deprec",{"_index":3059,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["depth",{"_index":1588,"title":{"27-376":{}},"name":{},"text":{"15":{},"24":{},"26":{},"27":{}},"component":{}}],["dequ",{"_index":3361,"title":{"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-315":{},"27-316":{},"27-317":{}},"name":{},"text":{"27":{}},"component":{}}],["deriv",{"_index":1857,"title":{},"name":{},"text":{"18":{},"23":{},"27":{},"29":{}},"component":{}}],["derivearray",{"_index":3429,"title":{"27-439":{}},"name":{},"text":{"27":{}},"component":{}}],["derivemap",{"_index":3430,"title":{"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{}},"name":{},"text":{"27":{}},"component":{}}],["describ",{"_index":2558,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["descript",{"_index":1002,"title":{"23-21":{},"23-30":{},"23-73":{},"23-74":{},"23-96":{},"23-151":{},"23-207":{}},"name":{},"text":{"6":{},"10":{},"14":{},"20":{},"23":{},"24":{},"27":{}},"component":{}}],["descriptionhash",{"_index":1455,"title":{"23-7":{},"23-22":{},"23-23":{},"23-24":{},"23-59":{},"23-75":{},"23-77":{},"23-79":{},"23-80":{},"23-154":{},"23-165":{},"23-166":{},"23-167":{},"23-178":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["design",{"_index":460,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"14":{},"15":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["desir",{"_index":255,"title":{},"name":{},"text":{"1":{},"29":{},"30":{}},"component":{}}],["despit",{"_index":2043,"title":{},"name":{},"text":{"20":{}},"component":{}}],["destin",{"_index":3965,"title":{},"name":{},"text":{"27":{}},"component":{}}],["destroy",{"_index":237,"title":{},"name":{},"text":{"1":{},"13":{},"16":{},"28":{},"29":{},"30":{}},"component":{}}],["destruct",{"_index":1316,"title":{},"name":{},"text":{"13":{},"28":{},"29":{}},"component":{}}],["desynchron",{"_index":4234,"title":{},"name":{},"text":{"29":{}},"component":{}}],["detail",{"_index":758,"title":{"24-2":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"14":{},"15":{},"18":{},"20":{},"23":{},"27":{},"29":{}},"component":{}}],["detect",{"_index":1520,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"23":{},"26":{}},"component":{}}],["determin",{"_index":329,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"26":{},"29":{}},"component":{}}],["determinist",{"_index":3111,"title":{},"name":{},"text":{"26":{}},"component":{}}],["detriment",{"_index":4268,"title":{},"name":{},"text":{"29":{}},"component":{}}],["dev",{"_index":1205,"title":{},"name":{},"text":{"9":{},"18":{}},"component":{}}],["develop",{"_index":701,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["devic",{"_index":642,"title":{},"name":{},"text":{"2":{},"20":{}},"component":{}}],["dharma",{"_index":3052,"title":{},"name":{},"text":{"26":{}},"component":{}}],["diagon",{"_index":1189,"title":{},"name":{},"text":{"9":{}},"component":{}}],["dictat",{"_index":489,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{}},"component":{}}],["didn’t",{"_index":2088,"title":{},"name":{},"text":{"20":{}},"component":{}}],["differ",{"_index":159,"title":{"16-2":{}},"name":{},"text":{"1":{},"2":{},"5":{},"6":{},"8":{},"9":{},"14":{},"15":{},"16":{},"18":{},"23":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["differenti",{"_index":1310,"title":{},"name":{},"text":{"13":{}},"component":{}}],["difficult",{"_index":850,"title":{},"name":{},"text":{"3":{},"14":{},"22":{},"26":{}},"component":{}}],["difficulti",{"_index":1510,"title":{},"name":{},"text":{"14":{}},"component":{}}],["digest",{"_index":2050,"title":{"27-142":{},"27-145":{}},"name":{},"text":{"20":{},"27":{}},"component":{}}],["digit",{"_index":620,"title":{},"name":{},"text":{"2":{},"18":{},"27":{}},"component":{}}],["direct",{"_index":1281,"title":{},"name":{},"text":{"12":{},"27":{},"29":{},"30":{}},"component":{}}],["directli",{"_index":1078,"title":{},"name":{},"text":{"7":{},"15":{},"18":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["directori",{"_index":894,"title":{},"name":{},"text":{"5":{},"12":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["disabl",{"_index":334,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["disagre",{"_index":1464,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["disallow",{"_index":1077,"title":{},"name":{},"text":{"7":{},"20":{},"27":{}},"component":{}}],["disambigu",{"_index":2746,"title":{},"name":{},"text":{"23":{}},"component":{}}],["discard",{"_index":3975,"title":{},"name":{},"text":{"27":{}},"component":{}}],["disclaim",{"_index":1331,"title":{"14-19":{}},"name":{},"text":{},"component":{}}],["discourag",{"_index":1076,"title":{},"name":{},"text":{"7":{},"13":{},"28":{},"30":{}},"component":{}}],["discov",{"_index":1412,"title":{},"name":{},"text":{"14":{}},"component":{}}],["discover",{"_index":2108,"title":{},"name":{},"text":{"20":{}},"component":{}}],["discoveri",{"_index":510,"title":{},"name":{},"text":{"1":{}},"component":{}}],["discrep",{"_index":2913,"title":{},"name":{},"text":{"24":{}},"component":{}}],["discuss",{"_index":903,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"10":{},"15":{}},"component":{}}],["dispatch",{"_index":3089,"title":{},"name":{},"text":{"26":{}},"component":{}}],["display",{"_index":1147,"title":{},"name":{},"text":{"8":{},"29":{}},"component":{}}],["disregard",{"_index":2102,"title":{},"name":{},"text":{"20":{}},"component":{}}],["distinct",{"_index":920,"title":{},"name":{},"text":{"6":{},"10":{},"16":{}},"component":{}}],["distribut",{"_index":2653,"title":{},"name":{},"text":{"23":{},"25":{}},"component":{}}],["distributor",{"_index":3893,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dive",{"_index":1589,"title":{},"name":{},"text":{"15":{}},"component":{}}],["divid",{"_index":1135,"title":{},"name":{},"text":{"8":{},"23":{},"27":{}},"component":{}}],["divis",{"_index":3705,"title":{},"name":{},"text":{"27":{}},"component":{}}],["division_by_zero",{"_index":3674,"title":{"27-697":{}},"name":{},"text":{"27":{}},"component":{}}],["dnssec",{"_index":1730,"title":{},"name":{},"text":{"18":{}},"component":{}}],["do",{"_index":1660,"title":{},"name":{},"text":{"17":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["doc",{"_index":3999,"title":{},"name":{},"text":{"27":{}},"component":{}}],["document",{"_index":892,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["doesn’t",{"_index":562,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["dollar",{"_index":1038,"title":{},"name":{},"text":{"6":{}},"component":{}}],["domain",{"_index":2557,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"29":{}},"component":{}}],["domain/000000000000000000000000000000000000000000000000000000000004cce0.json",{"_index":4091,"title":{},"name":{},"text":{"28":{}},"component":{}}],["domain/{id}.json",{"_index":4090,"title":{},"name":{},"text":{"28":{}},"component":{}}],["domain_separ",{"_index":2886,"title":{"29-38":{},"29-43":{}},"name":{},"text":{"24":{},"27":{},"29":{}},"component":{}}],["domainsepar",{"_index":3308,"title":{"27-145":{}},"name":{},"text":{"27":{}},"component":{}}],["donat",{"_index":4256,"title":{},"name":{},"text":{"29":{}},"component":{}}],["done",{"_index":663,"title":{},"name":{},"text":{"2":{},"12":{},"20":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["don’t",{"_index":525,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"18":{},"20":{},"23":{},"27":{},"29":{}},"component":{}}],["door",{"_index":124,"title":{},"name":{},"text":{"1":{}},"component":{}}],["doth",{"_index":4210,"title":{},"name":{},"text":{"29":{}},"component":{}}],["dothingwithpermit",{"_index":4207,"title":{},"name":{},"text":{"29":{}},"component":{}}],["doubl",{"_index":1390,"title":{},"name":{},"text":{"14":{},"17":{},"23":{},"27":{}},"component":{}}],["doubleendedqueu",{"_index":1803,"title":{"27-307":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["doubleendedqueue.bytes32dequ",{"_index":3360,"title":{"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-315":{},"27-316":{},"27-317":{}},"name":{},"text":{"27":{}},"component":{}}],["doubt",{"_index":1718,"title":{},"name":{},"text":{"18":{}},"component":{}}],["down",{"_index":531,"title":{},"name":{},"text":{"1":{},"17":{}},"component":{}}],["downcast",{"_index":3221,"title":{"27-69":{},"27-70":{},"27-71":{},"27-72":{},"27-73":{},"27-74":{},"27-75":{},"27-76":{},"27-77":{},"27-78":{},"27-79":{},"27-80":{},"27-81":{},"27-82":{},"27-83":{},"27-84":{},"27-85":{},"27-86":{},"27-87":{},"27-88":{},"27-89":{},"27-90":{},"27-91":{},"27-92":{},"27-93":{},"27-94":{},"27-95":{},"27-96":{},"27-97":{},"27-98":{},"27-99":{}},"name":{},"text":{"27":{}},"component":{}}],["downsid",{"_index":1346,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["draft",{"_index":812,"title":{"5":{},"3-3":{}},"name":{"5":{}},"text":{"3":{},"5":{},"29":{}},"component":{}}],["dramat",{"_index":4069,"title":{},"name":{},"text":{"28":{}},"component":{}}],["draw",{"_index":914,"title":{},"name":{},"text":{"6":{}},"component":{}}],["drawback",{"_index":4266,"title":{},"name":{},"text":{"29":{}},"component":{}}],["drop",{"_index":3930,"title":{},"name":{},"text":{"27":{}},"component":{}}],["due",{"_index":855,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"10":{},"18":{},"23":{},"24":{},"25":{},"26":{},"27":{}},"component":{}}],["dummi",{"_index":1897,"title":{},"name":{},"text":{"18":{}},"component":{}}],["duplic",{"_index":2584,"title":{},"name":{},"text":{"23":{}},"component":{}}],["durat",{"_index":407,"title":{"22-6":{}},"name":{},"text":{"1":{},"14":{},"22":{},"23":{}},"component":{}}],["durationsecond",{"_index":2341,"title":{"22-3":{}},"name":{},"text":{"22":{}},"component":{}}],["dure",{"_index":260,"title":{},"name":{},"text":{"1":{},"2":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["dynam",{"_index":265,"title":{},"name":{},"text":{"1":{},"7":{},"20":{},"27":{}},"component":{}}],["e",{"_index":659,"title":{"21-42":{},"21-43":{},"21-77":{},"21-80":{},"21-83":{},"27-17":{},"27-18":{},"27-19":{},"27-20":{}},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["e.g",{"_index":511,"title":{},"name":{},"text":{"1":{},"2":{},"9":{},"11":{},"18":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["each",{"_index":173,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["earli",{"_index":3125,"title":{},"name":{},"text":{"26":{}},"component":{}}],["earliest",{"_index":2111,"title":{},"name":{},"text":{"20":{}},"component":{}}],["eas",{"_index":1474,"title":{},"name":{},"text":{"14":{}},"component":{}}],["easi",{"_index":281,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"18":{},"29":{}},"component":{}}],["easier",{"_index":272,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["easili",{"_index":704,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"14":{},"18":{},"23":{},"27":{}},"component":{}}],["ecdsa",{"_index":591,"title":{"27-107":{}},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["ecdsa'",{"_index":1703,"title":{},"name":{},"text":{"18":{}},"component":{}}],["ecdsa.recov",{"_index":1694,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["ecdsa.recovererror",{"_index":3290,"title":{"27-108":{},"27-110":{},"27-112":{}},"name":{},"text":{},"component":{}}],["ecdsa.tryrecov",{"_index":2979,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["ecdsainvalidsignatur",{"_index":3291,"title":{"27-114":{},"27-116":{}},"name":{},"text":{"27":{}},"component":{}}],["ecdsainvalidsignaturelength",{"_index":3292,"title":{"27-115":{}},"name":{},"text":{"27":{}},"component":{}}],["ecdsasignerassoci",{"_index":2194,"title":{"21-65":{}},"name":{},"text":{"21":{}},"component":{}}],["ecdsasignerdisassoci",{"_index":2195,"title":{"21-66":{}},"name":{},"text":{"21":{}},"component":{}}],["ecdsavalid",{"_index":2187,"title":{"21-58":{}},"name":{},"text":{},"component":{}}],["ecosystem",{"_index":869,"title":{},"name":{},"text":{"3":{},"15":{},"24":{}},"component":{}}],["ecrecov",{"_index":3780,"title":{},"name":{},"text":{"27":{}},"component":{}}],["edit",{"_index":3720,"title":{},"name":{},"text":{"27":{}},"component":{}}],["educ",{"_index":1379,"title":{},"name":{},"text":{"14":{}},"component":{}}],["effect",{"_index":104,"title":{"20-112":{},"20-167":{}},"name":{},"text":{"1":{},"13":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["effectschedul",{"_index":1943,"title":{"20-59":{},"20-68":{}},"name":{},"text":{"20":{}},"component":{}}],["effici",{"_index":913,"title":{},"name":{},"text":{"6":{},"14":{},"16":{},"18":{},"26":{},"27":{}},"component":{}}],["effort",{"_index":847,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{}}],["eg",{"_index":1776,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"27":{},"28":{},"30":{},"31":{}},"component":{}}],["eip",{"_index":680,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["eip1884",{"_index":3967,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eip1967.proxy.admin",{"_index":3080,"title":{},"name":{},"text":{"26":{}},"component":{}}],["eip1967.proxy.beacon",{"_index":3081,"title":{},"name":{},"text":{"26":{}},"component":{}}],["eip1967.proxy.implement",{"_index":3079,"title":{},"name":{},"text":{"26":{}},"component":{}}],["eip712",{"_index":572,"title":{"2-3":{},"27-117":{}},"name":{},"text":{"2":{},"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["eip712._domainseparatorv4",{"_index":3804,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eip712.constructor",{"_index":2972,"title":{},"name":{},"text":{"25":{}},"component":{}}],["eip712domain",{"_index":2322,"title":{"24-86":{},"27-121":{}},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["eip712domainchang",{"_index":2326,"title":{"24-87":{}},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["element",{"_index":1749,"title":{"27-399":{},"27-400":{},"27-401":{},"27-402":{},"27-403":{}},"name":{},"text":{"18":{},"27":{},"28":{}},"component":{}}],["elimin",{"_index":3748,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["ellipt",{"_index":637,"title":{},"name":{},"text":{"2":{},"18":{},"27":{}},"component":{}}],["elsewher",{"_index":3867,"title":{},"name":{},"text":{"27":{}},"component":{}}],["emb",{"_index":1654,"title":{},"name":{},"text":{"17":{}},"component":{}}],["embed",{"_index":606,"title":{},"name":{},"text":{"2":{}},"component":{}}],["emerg",{"_index":533,"title":{},"name":{},"text":{"1":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["emit",{"_index":1247,"title":{},"name":{},"text":{"10":{},"12":{},"14":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["emitev",{"_index":4117,"title":{"29-31":{},"30-53":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["employ",{"_index":4072,"title":{},"name":{},"text":{"28":{}},"component":{}}],["empti",{"_index":775,"title":{"27-317":{}},"name":{},"text":{"2":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["empty_array_pop",{"_index":3677,"title":{"27-700":{}},"name":{},"text":{"27":{}},"component":{}}],["emsa",{"_index":1738,"title":{},"name":{},"text":{"18":{}},"component":{}}],["enabl",{"_index":602,"title":{},"name":{},"text":{"2":{},"11":{},"18":{},"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["encapsul",{"_index":1081,"title":{},"name":{},"text":{"7":{}},"component":{}}],["enclav",{"_index":643,"title":{},"name":{},"text":{"2":{}},"component":{}}],["encod",{"_index":1022,"title":{"27-414":{}},"name":{},"text":{"6":{},"10":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["encodeabi",{"_index":2745,"title":{},"name":{},"text":{"23":{}},"component":{}}],["encodebatch",{"_index":2282,"title":{"21-167":{}},"name":{},"text":{"21":{}},"component":{}}],["encodedeleg",{"_index":2280,"title":{"21-165":{}},"name":{},"text":{"21":{}},"component":{}}],["encodedmod",{"_index":2169,"title":{"21-20":{},"21-24":{}},"name":{},"text":{"21":{}},"component":{}}],["encodemod",{"_index":2273,"title":{"21-161":{}},"name":{},"text":{"21":{}},"component":{}}],["encodesingl",{"_index":2278,"title":{"21-163":{}},"name":{},"text":{"21":{}},"component":{}}],["encodeurl",{"_index":3410,"title":{"27-415":{}},"name":{},"text":{"27":{}},"component":{}}],["encoding/decod",{"_index":3985,"title":{},"name":{},"text":{"27":{}},"component":{}}],["encourag",{"_index":842,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{}}],["end",{"_index":686,"title":{"22-7":{}},"name":{},"text":{"2":{},"12":{},"13":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["endpoint",{"_index":2694,"title":{},"name":{},"text":{"23":{}},"component":{}}],["enforc",{"_index":180,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"23":{},"29":{},"30":{},"31":{}},"component":{}}],["enforcedpaus",{"_index":3337,"title":{"27-190":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["enhanc",{"_index":1799,"title":{},"name":{},"text":{"18":{}},"component":{}}],["enjin",{"_index":4080,"title":{},"name":{},"text":{"28":{}},"component":{}}],["enough",{"_index":1266,"title":{},"name":{},"text":{"11":{},"12":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["ensur",{"_index":369,"title":{},"name":{},"text":{"1":{},"3":{},"11":{},"12":{},"22":{},"23":{},"26":{},"27":{},"28":{}},"component":{}}],["enter",{"_index":2143,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["entir",{"_index":417,"title":{},"name":{},"text":{"1":{},"6":{},"13":{},"14":{},"20":{},"25":{},"27":{}},"component":{}}],["entireti",{"_index":1498,"title":{},"name":{},"text":{"14":{}},"component":{}}],["entiti",{"_index":786,"title":{},"name":{},"text":{"2":{},"23":{}},"component":{}}],["entri",{"_index":1807,"title":{},"name":{},"text":{"18":{},"20":{},"27":{},"29":{},"30":{}},"component":{}}],["entrypoint",{"_index":583,"title":{"2-12":{},"21-5":{},"21-143":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["enum",{"_index":2365,"title":{"23-8":{},"23-42":{},"23-60":{},"23-95":{},"23-162":{},"23-173":{},"23-244":{},"23-255":{},"27-14":{},"27-22":{},"27-24":{},"27-26":{},"27-28":{},"27-29":{},"27-108":{},"27-110":{},"27-112":{},"29-117":{},"29-118":{}},"name":{},"text":{"23":{},"27":{}},"component":{}}],["enum_conversion_error",{"_index":3675,"title":{"27-698":{}},"name":{},"text":{"27":{}},"component":{}}],["enumer",{"_index":343,"title":{},"name":{},"text":{"1":{},"14":{},"18":{},"20":{},"23":{},"27":{},"30":{}},"component":{}}],["enumerablemap",{"_index":1805,"title":{"27-214":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["enumerablemap.addresstoaddressmap",{"_index":3351,"title":{"27-255":{},"27-256":{},"27-257":{},"27-258":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{}},"name":{},"text":{},"component":{}}],["enumerablemap.addresstobytes32map",{"_index":3352,"title":{"27-263":{},"27-264":{},"27-265":{},"27-266":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{}},"name":{},"text":{},"component":{}}],["enumerablemap.addresstouintmap",{"_index":3350,"title":{"27-247":{},"27-248":{},"27-249":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{}},"name":{},"text":{},"component":{}}],["enumerablemap.bytes32toaddressmap",{"_index":3354,"title":{"27-279":{},"27-280":{},"27-281":{},"27-282":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{}},"name":{},"text":{},"component":{}}],["enumerablemap.bytes32tobytes32map",{"_index":3345,"title":{"27-215":{},"27-216":{},"27-217":{},"27-218":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{}},"name":{},"text":{},"component":{}}],["enumerablemap.bytes32touintmap",{"_index":3353,"title":{"27-271":{},"27-272":{},"27-273":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{}},"name":{},"text":{},"component":{}}],["enumerablemap.uinttoaddressmap",{"_index":3348,"title":{"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{}},"name":{},"text":{"27":{}},"component":{}}],["enumerablemap.uinttobytes32map",{"_index":3349,"title":{"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{}},"name":{},"text":{},"component":{}}],["enumerablemap.uinttouintmap",{"_index":3347,"title":{"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{}},"name":{},"text":{},"component":{}}],["enumerablemapnonexistentkey",{"_index":3355,"title":{"27-287":{}},"name":{},"text":{"27":{}},"component":{}}],["enumerableset",{"_index":337,"title":{"27-288":{}},"name":{},"text":{"1":{},"18":{},"27":{}},"component":{}}],["enumerableset.addressset",{"_index":3357,"title":{"27-295":{},"27-296":{},"27-297":{},"27-298":{},"27-299":{},"27-300":{}},"name":{},"text":{"27":{}},"component":{}}],["enumerableset.bytes32set",{"_index":3356,"title":{"27-289":{},"27-290":{},"27-291":{},"27-292":{},"27-293":{},"27-294":{}},"name":{},"text":{},"component":{}}],["enumerableset.uintset",{"_index":3358,"title":{"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{}},"name":{},"text":{},"component":{}}],["envelop",{"_index":3686,"title":{},"name":{},"text":{"27":{}},"component":{}}],["envelopehash",{"_index":2193,"title":{"21-64":{},"21-73":{},"21-82":{},"21-97":{},"21-111":{},"21-112":{}},"name":{},"text":{"21":{}},"component":{}}],["environ",{"_index":646,"title":{},"name":{},"text":{"2":{},"15":{}},"component":{}}],["eoa",{"_index":144,"title":{"13-1":{}},"name":{},"text":{"1":{},"2":{},"13":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["ephemer",{"_index":4179,"title":{},"name":{},"text":{"29":{}},"component":{}}],["equal",{"_index":1114,"title":{"27-425":{}},"name":{},"text":{"8":{},"16":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["equival",{"_index":1611,"title":{},"name":{},"text":{"16":{},"18":{},"23":{},"27":{},"28":{},"29":{}},"component":{}}],["erc",{"_index":193,"title":{"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"28":{},"29":{},"30":{},"2-4":{},"2-10":{},"3-3":{},"6-3":{},"8-1":{},"10-1":{},"11-1":{},"26-8":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["erc1046",{"_index":899,"title":{},"name":{},"text":{"5":{}},"component":{}}],["erc1155",{"_index":909,"title":{"28-15":{}},"name":{"6":{},"28":{}},"text":{"6":{},"28":{}},"component":{}}],["erc1155._upd",{"_index":4103,"title":{},"name":{},"text":{"28":{}},"component":{}}],["erc1155._uri",{"_index":4112,"title":{},"name":{},"text":{"28":{}},"component":{}}],["erc1155burn",{"_index":4056,"title":{"28-41":{}},"name":{},"text":{"28":{}},"component":{}}],["erc1155hold",{"_index":1043,"title":{"28-54":{}},"name":{},"text":{"6":{},"21":{},"23":{}},"component":{}}],["erc1155insufficientbal",{"_index":2774,"title":{"24-20":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155invalidapprov",{"_index":2777,"title":{"24-24":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155invalidarraylength",{"_index":2779,"title":{"24-26":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155invalidoper",{"_index":2778,"title":{"24-25":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155invalidreceiv",{"_index":1027,"title":{"24-22":{}},"name":{},"text":{"6":{},"24":{},"28":{}},"component":{}}],["erc1155invalidsend",{"_index":2775,"title":{"24-21":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155metadataextens",{"_index":4077,"title":{},"name":{},"text":{"28":{}},"component":{}}],["erc1155missingapprovalforal",{"_index":2776,"title":{"24-23":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["erc1155paus",{"_index":4055,"title":{"28-39":{}},"name":{},"text":{"28":{}},"component":{}}],["erc1155suppli",{"_index":4058,"title":{"28-44":{}},"name":{},"text":{},"component":{}}],["erc1155uristorag",{"_index":4059,"title":{"28-49":{}},"name":{},"text":{},"component":{}}],["erc1155util",{"_index":4062,"title":{"28-58":{}},"name":{},"text":{},"component":{}}],["erc1271signersad",{"_index":2213,"title":{"21-99":{}},"name":{},"text":{"21":{}},"component":{}}],["erc1271signersremov",{"_index":2214,"title":{"21-100":{}},"name":{},"text":{"21":{}},"component":{}}],["erc1271typedsign",{"_index":674,"title":{"27-133":{}},"name":{},"text":{"2":{},"21":{},"27":{}},"component":{}}],["erc1271typedsigner.isvalidsignatur",{"_index":745,"title":{},"name":{},"text":{"2":{}},"component":{}}],["erc1363",{"_index":4147,"title":{"29-87":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363.approveandcal",{"_index":4252,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc1363.transferandcal",{"_index":4250,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc1363.transferfromandcal",{"_index":4251,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc1363approvefail",{"_index":4150,"title":{"29-97":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363invalidreceiv",{"_index":4174,"title":{"29-141":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363invalidspend",{"_index":4175,"title":{"29-142":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363transferfail",{"_index":4148,"title":{"29-95":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363transferfromfail",{"_index":4149,"title":{"29-96":{}},"name":{},"text":{"29":{}},"component":{}}],["erc1363util",{"_index":4171,"title":{"29-138":{}},"name":{},"text":{},"component":{}}],["erc165",{"_index":1761,"title":{"27-200":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["erc165check",{"_index":1764,"title":{"27-202":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["erc1820_accept_mag",{"_index":2867,"title":{},"name":{},"text":{"24":{}},"component":{}}],["erc1967",{"_index":4005,"title":{},"name":{},"text":{"27":{}},"component":{}}],["erc1967invalidadmin",{"_index":2998,"title":{"26-20":{}},"name":{},"text":{"26":{}},"component":{}}],["erc1967invalidbeacon",{"_index":2999,"title":{"26-21":{}},"name":{},"text":{"26":{}},"component":{}}],["erc1967invalidimplement",{"_index":2997,"title":{"26-19":{}},"name":{},"text":{"26":{}},"component":{}}],["erc1967nonpay",{"_index":3001,"title":{"26-22":{}},"name":{},"text":{"26":{}},"component":{}}],["erc1967proxi",{"_index":2987,"title":{"26-9":{}},"name":{},"text":{"26":{}},"component":{}}],["erc1967proxy.constructor",{"_index":3096,"title":{},"name":{},"text":{"26":{}},"component":{}}],["erc1967util",{"_index":2989,"title":{"26-12":{}},"name":{},"text":{"26":{}},"component":{}}],["erc20",{"_index":196,"title":{"29-15":{}},"name":{"7":{},"8":{},"29":{}},"text":{"1":{},"6":{},"7":{},"8":{},"12":{},"14":{},"15":{},"29":{}},"component":{}}],["erc20._burn",{"_index":4219,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc20._upd",{"_index":4223,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc20.allow",{"_index":4220,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc20.decim",{"_index":4238,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc20burn",{"_index":4121,"title":{"29-46":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20cap",{"_index":4123,"title":{"29-49":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20detail",{"_index":898,"title":{},"name":{},"text":{"5":{}},"component":{}}],["erc20exceededcap",{"_index":4125,"title":{"29-53":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20exceededsafesuppli",{"_index":4131,"title":{"29-63":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20fixedsuppli",{"_index":1072,"title":{},"name":{},"text":{"7":{}},"component":{}}],["erc20flashmint",{"_index":4137,"title":{"29-72":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20insufficientallow",{"_index":2760,"title":{"24-7":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20insufficientbal",{"_index":2757,"title":{"24-4":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20invalidapprov",{"_index":2762,"title":{"24-8":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20invalidcap",{"_index":4127,"title":{"29-54":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20invalidreceiv",{"_index":2759,"title":{"24-6":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20invalidsend",{"_index":2758,"title":{"24-5":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20invalidspend",{"_index":2763,"title":{"24-9":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["erc20invalidunderli",{"_index":4136,"title":{"29-71":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20migr",{"_index":895,"title":{},"name":{},"text":{"5":{}},"component":{}}],["erc20paus",{"_index":4128,"title":{"29-55":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20permit",{"_index":1391,"title":{"29-39":{}},"name":{},"text":{"14":{},"29":{}},"component":{}}],["erc20permitupgrad",{"_index":3121,"title":{},"name":{},"text":{"26":{}},"component":{}}],["erc20releas",{"_index":2346,"title":{"22-18":{}},"name":{},"text":{"22":{}},"component":{}}],["erc20snapshot",{"_index":896,"title":{},"name":{},"text":{"5":{}},"component":{}}],["erc20temporaryapprov",{"_index":4144,"title":{"29-81":{}},"name":{},"text":{"29":{}},"component":{}}],["erc20temporaryapproval.sol",{"_index":4246,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc20upgrad",{"_index":3118,"title":{},"name":{},"text":{"26":{}},"component":{}}],["erc20vot",{"_index":1320,"title":{"14-3":{},"29-57":{}},"name":{},"text":{"14":{},"23":{},"29":{}},"component":{}}],["erc20votescomp",{"_index":1321,"title":{"14-3":{}},"name":{},"text":{},"component":{}}],["erc20withautominerreward",{"_index":1108,"title":{},"name":{},"text":{"7":{}},"component":{}}],["erc20withminerreward",{"_index":1100,"title":{},"name":{},"text":{"7":{}},"component":{}}],["erc20wrapp",{"_index":1397,"title":{"29-64":{}},"name":{},"text":{"14":{},"29":{}},"component":{}}],["erc2612expiredsignatur",{"_index":4119,"title":{"29-44":{}},"name":{},"text":{"29":{}},"component":{}}],["erc2612invalidsign",{"_index":4120,"title":{"29-45":{}},"name":{},"text":{"29":{}},"component":{}}],["erc2771context",{"_index":2928,"title":{"25-2":{}},"name":{},"text":{"25":{},"27":{}},"component":{}}],["erc2771forward",{"_index":2935,"title":{"25-10":{}},"name":{},"text":{"25":{}},"component":{}}],["erc2771forwarder.forwardrequestdata",{"_index":2936,"title":{"25-13":{},"25-14":{},"25-15":{},"25-16":{},"25-17":{},"25-18":{}},"name":{},"text":{},"component":{}}],["erc2771forwarderexpiredrequest",{"_index":2948,"title":{"25-22":{}},"name":{},"text":{"25":{}},"component":{}}],["erc2771forwarderinvalidsign",{"_index":2944,"title":{"25-20":{}},"name":{},"text":{"25":{}},"component":{}}],["erc2771forwardermismatchedvalu",{"_index":2945,"title":{"25-21":{}},"name":{},"text":{"25":{}},"component":{}}],["erc2771untrustfultarget",{"_index":2949,"title":{"25-23":{}},"name":{},"text":{"25":{}},"component":{}}],["erc2981",{"_index":4394,"title":{"31-2":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc2981._setdefaultroyalti",{"_index":4388,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc2981._settokenroyalti",{"_index":4390,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc2981invaliddefaultroyalti",{"_index":4401,"title":{"31-10":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc2981invaliddefaultroyaltyreceiv",{"_index":4402,"title":{"31-11":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc2981invalidtokenroyalti",{"_index":4403,"title":{"31-12":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc2981invalidtokenroyaltyreceiv",{"_index":4404,"title":{"31-13":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc3156exceededmaxloan",{"_index":4141,"title":{"29-79":{}},"name":{},"text":{"29":{}},"component":{}}],["erc3156invalidreceiv",{"_index":4143,"title":{"29-80":{}},"name":{},"text":{"29":{}},"component":{}}],["erc3156unsupportedtoken",{"_index":4140,"title":{"29-78":{}},"name":{},"text":{"29":{}},"component":{}}],["erc4337util",{"_index":730,"title":{"21-136":{}},"name":{},"text":{"2":{}},"component":{}}],["erc4337utils.sig_validation_success",{"_index":754,"title":{},"name":{},"text":{"2":{}},"component":{}}],["erc4337utils.useropinfo",{"_index":2264,"title":{"21-152":{},"21-153":{},"21-154":{}},"name":{},"text":{},"component":{}}],["erc4626",{"_index":1160,"title":{"29-98":{}},"name":{"9":{}},"text":{"29":{}},"component":{}}],["erc4626exceededmaxdeposit",{"_index":4155,"title":{"29-122":{}},"name":{},"text":{"29":{}},"component":{}}],["erc4626exceededmaxmint",{"_index":4156,"title":{"29-123":{}},"name":{},"text":{"29":{}},"component":{}}],["erc4626exceededmaxredeem",{"_index":4158,"title":{"29-125":{}},"name":{},"text":{"29":{}},"component":{}}],["erc4626exceededmaxwithdraw",{"_index":4157,"title":{"29-124":{}},"name":{},"text":{"29":{}},"component":{}}],["erc4626rout",{"_index":4259,"title":{},"name":{},"text":{"29":{}},"component":{}}],["erc5805futurelookup",{"_index":2515,"title":{"23-232":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["erc6372",{"_index":1530,"title":{},"name":{},"text":{"14":{}},"component":{}}],["erc6372inconsistentclock",{"_index":2514,"title":{"23-231":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["erc7201",{"_index":1664,"title":{},"name":{},"text":{"17":{}},"component":{}}],["erc7201point",{"_index":1879,"title":{},"name":{},"text":{"18":{}},"component":{}}],["erc7201slot",{"_index":3428,"title":{"27-437":{}},"name":{},"text":{"27":{}},"component":{}}],["erc721",{"_index":1222,"title":{"30-23":{}},"name":{"10":{},"30":{}},"text":{"10":{},"15":{},"17":{},"18":{},"29":{},"30":{}},"component":{}}],["erc721._burn",{"_index":4361,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc721._increasebal",{"_index":4386,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc721._ownerof",{"_index":4374,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc721._upd",{"_index":2715,"title":{},"name":{},"text":{"23":{},"30":{}},"component":{}}],["erc721.balanceof",{"_index":2714,"title":{},"name":{},"text":{"23":{}},"component":{}}],["erc721burn",{"_index":4313,"title":{"30-70":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721consecut",{"_index":4314,"title":{"30-72":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721enumer",{"_index":4309,"title":{"30-56":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721enumerableforbiddenbatchmint",{"_index":4311,"title":{"30-64":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721exceededmaxbatchmint",{"_index":4320,"title":{"30-79":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721forbiddenbatchburn",{"_index":4323,"title":{"30-81":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721forbiddenbatchmint",{"_index":4319,"title":{"30-78":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721forbiddenmint",{"_index":4322,"title":{"30-80":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721hold",{"_index":2295,"title":{"30-101":{}},"name":{},"text":{"21":{},"23":{},"30":{}},"component":{}}],["erc721incorrectown",{"_index":2767,"title":{"24-13":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721insufficientapprov",{"_index":2770,"title":{"24-16":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721invalidapprov",{"_index":2771,"title":{"24-17":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721invalidoper",{"_index":2772,"title":{"24-18":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721invalidown",{"_index":2765,"title":{"24-11":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721invalidreceiv",{"_index":2769,"title":{"24-15":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721invalidsend",{"_index":2768,"title":{"24-14":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721nonexistenttoken",{"_index":2766,"title":{"24-12":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["erc721outofboundsindex",{"_index":4310,"title":{"30-63":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721paus",{"_index":4312,"title":{"30-68":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721royalti",{"_index":4325,"title":{"30-90":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["erc721unsupportedtoken",{"_index":4326,"title":{"30-99":{}},"name":{},"text":{"30":{}},"component":{}}],["erc721upgrad",{"_index":1634,"title":{},"name":{},"text":{"17":{}},"component":{}}],["erc721uristorag",{"_index":1235,"title":{"30-82":{}},"name":{},"text":{"10":{},"28":{},"30":{}},"component":{}}],["erc721util",{"_index":4327,"title":{"30-103":{}},"name":{},"text":{},"component":{}}],["erc721vot",{"_index":1402,"title":{"30-86":{}},"name":{},"text":{"14":{},"23":{},"30":{}},"component":{}}],["erc721wrapp",{"_index":1403,"title":{"30-92":{}},"name":{},"text":{"14":{},"30":{}},"component":{}}],["erc721wrapper._recov",{"_index":4406,"title":{},"name":{},"text":{"30":{}},"component":{}}],["erc7579",{"_index":744,"title":{},"name":{"11":{}},"text":{"2":{}},"component":{}}],["erc7579alreadyinstalledmodul",{"_index":2310,"title":{},"name":{},"text":{"21":{}},"component":{}}],["erc7579mismatchedmoduletypeid",{"_index":2308,"title":{},"name":{},"text":{"21":{}},"component":{}}],["erc7579moduleconfig",{"_index":2298,"title":{},"name":{},"text":{"21":{}},"component":{}}],["erc7579tryexecutefail",{"_index":2285,"title":{"21-169":{}},"name":{},"text":{"21":{}},"component":{}}],["erc7579typedexecutorinstal",{"_index":2238,"title":{"21-126":{}},"name":{},"text":{"21":{}},"component":{}}],["erc7579typedexecutoruninstal",{"_index":2239,"title":{"21-127":{}},"name":{},"text":{"21":{}},"component":{}}],["erc7579uninstalledmodul",{"_index":2309,"title":{},"name":{},"text":{"21":{}},"component":{}}],["erc7579unsupportedcalltyp",{"_index":2287,"title":{"21-170":{}},"name":{},"text":{"21":{}},"component":{}}],["erc7579unsupportedexectyp",{"_index":2288,"title":{"21-171":{}},"name":{},"text":{"21":{}},"component":{}}],["erc7579unsupportedmoduletyp",{"_index":2311,"title":{},"name":{},"text":{"21":{}},"component":{}}],["erc7579util",{"_index":2268,"title":{"21-157":{}},"name":{},"text":{},"component":{}}],["error",{"_index":203,"title":{"3-6":{},"20-11":{},"20-12":{},"20-28":{},"20-29":{},"20-70":{},"20-71":{},"20-72":{},"20-144":{},"20-145":{},"20-146":{},"20-147":{},"20-148":{},"20-149":{},"20-150":{},"20-151":{},"20-152":{},"20-153":{},"20-154":{},"20-203":{},"20-204":{},"20-205":{},"21-15":{},"21-102":{},"21-103":{},"21-104":{},"21-105":{},"21-128":{},"21-170":{},"21-171":{},"23-36":{},"23-37":{},"23-38":{},"23-39":{},"23-40":{},"23-41":{},"23-42":{},"23-43":{},"23-44":{},"23-45":{},"23-46":{},"23-47":{},"23-48":{},"23-49":{},"23-50":{},"23-51":{},"23-120":{},"23-137":{},"23-157":{},"23-158":{},"23-159":{},"23-231":{},"23-232":{},"23-264":{},"23-265":{},"23-266":{},"23-267":{},"23-268":{},"24-4":{},"24-5":{},"24-6":{},"24-7":{},"24-8":{},"24-9":{},"24-11":{},"24-12":{},"24-13":{},"24-14":{},"24-15":{},"24-16":{},"24-17":{},"24-18":{},"24-20":{},"24-21":{},"24-22":{},"24-23":{},"24-24":{},"24-25":{},"24-26":{},"25-20":{},"25-21":{},"25-22":{},"25-23":{},"26-19":{},"26-20":{},"26-21":{},"26-22":{},"26-31":{},"26-48":{},"26-64":{},"26-75":{},"26-76":{},"26-86":{},"26-87":{},"27-102":{},"27-103":{},"27-104":{},"27-105":{},"27-114":{},"27-115":{},"27-116":{},"27-131":{},"27-168":{},"27-174":{},"27-178":{},"27-190":{},"27-191":{},"27-196":{},"27-287":{},"27-351":{},"27-382":{},"27-391":{},"27-426":{},"27-434":{},"27-435":{},"27-691":{},"29-44":{},"29-45":{},"29-53":{},"29-54":{},"29-63":{},"29-71":{},"29-78":{},"29-79":{},"29-80":{},"29-95":{},"29-96":{},"29-97":{},"29-122":{},"29-123":{},"29-124":{},"29-125":{},"29-136":{},"29-137":{},"29-141":{},"29-142":{},"30-63":{},"30-64":{},"30-78":{},"30-79":{},"30-80":{},"30-81":{},"30-99":{},"31-10":{},"31-11":{},"31-12":{},"31-13":{}},"name":{},"text":{"1":{},"3":{},"6":{},"12":{},"15":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["errors.failedcal",{"_index":3971,"title":{},"name":{},"text":{"27":{}},"component":{}}],["especi",{"_index":1882,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["essenc",{"_index":170,"title":{},"name":{},"text":{"1":{}},"component":{}}],["essenti",{"_index":355,"title":{},"name":{},"text":{"1":{},"9":{},"26":{},"29":{}},"component":{}}],["estat",{"_index":1226,"title":{},"name":{},"text":{"10":{}},"component":{}}],["eta",{"_index":2571,"title":{},"name":{},"text":{"23":{}},"component":{}}],["etasecond",{"_index":2383,"title":{"23-31":{}},"name":{},"text":{"23":{}},"component":{}}],["etc",{"_index":1150,"title":{},"name":{},"text":{"8":{},"10":{},"14":{},"18":{},"24":{},"27":{},"29":{}},"component":{}}],["eth",{"_index":1470,"title":{},"name":{},"text":{"14":{},"22":{},"23":{},"27":{}},"component":{}}],["eth_cal",{"_index":3976,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eth_getstorageat",{"_index":3069,"title":{},"name":{},"text":{"26":{}},"component":{}}],["eth_personalsign",{"_index":3812,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eth_sign",{"_index":3832,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eth_signtypeddata",{"_index":3807,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eth_signtypeddatav4",{"_index":3790,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ether",{"_index":1152,"title":{},"name":{},"text":{"8":{},"16":{},"17":{},"21":{},"22":{},"23":{},"27":{},"29":{}},"component":{}}],["ethereum",{"_index":141,"title":{"18-3":{}},"name":{},"text":{"1":{},"7":{},"15":{},"16":{},"18":{},"27":{}},"component":{}}],["ethereum/solidity#11843",{"_index":3910,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ethereum’",{"_index":589,"title":{},"name":{},"text":{"2":{}},"component":{}}],["etherreleas",{"_index":2345,"title":{"22-17":{}},"name":{},"text":{"22":{}},"component":{}}],["ethers.deploycontract",{"_index":1903,"title":{},"name":{},"text":{"18":{}},"component":{}}],["ethers.getcontractat",{"_index":1484,"title":{},"name":{},"text":{"14":{}},"component":{}}],["ethers.getcontractfactori",{"_index":1648,"title":{},"name":{},"text":{"17":{}},"component":{}}],["ethers.j",{"_index":482,"title":{},"name":{},"text":{"1":{},"14":{},"18":{}},"component":{}}],["ethers.utils.id",{"_index":1499,"title":{},"name":{},"text":{"14":{}},"component":{}}],["evalu",{"_index":532,"title":{},"name":{},"text":{"1":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["even",{"_index":273,"title":{},"name":{},"text":{"1":{},"3":{},"9":{},"12":{},"14":{},"16":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["event",{"_index":1088,"title":{"20-10":{},"20-18":{},"20-25":{},"20-26":{},"20-27":{},"20-66":{},"20-67":{},"20-68":{},"20-69":{},"20-132":{},"20-133":{},"20-134":{},"20-135":{},"20-136":{},"20-137":{},"20-138":{},"20-139":{},"20-140":{},"20-141":{},"20-142":{},"20-143":{},"20-202":{},"21-65":{},"21-66":{},"21-74":{},"21-75":{},"21-83":{},"21-84":{},"21-99":{},"21-100":{},"21-101":{},"21-126":{},"21-127":{},"21-169":{},"22-17":{},"22-18":{},"23-30":{},"23-31":{},"23-32":{},"23-33":{},"23-34":{},"23-35":{},"23-136":{},"23-155":{},"23-156":{},"23-170":{},"23-182":{},"23-194":{},"23-195":{},"23-196":{},"23-204":{},"23-205":{},"23-259":{},"23-260":{},"23-261":{},"23-262":{},"23-263":{},"24-51":{},"24-52":{},"24-81":{},"24-82":{},"24-87":{},"25-19":{},"26-47":{},"26-74":{},"27-188":{},"27-189":{},"28-9":{},"28-10":{},"28-11":{},"28-12":{},"29-9":{},"29-10":{},"30-12":{},"30-13":{},"30-14":{}},"name":{},"text":{"7":{},"10":{},"12":{},"14":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["eventu",{"_index":1337,"title":{},"name":{},"text":{"14":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["everyon",{"_index":2733,"title":{},"name":{},"text":{"23":{}},"component":{}}],["everyth",{"_index":1617,"title":{},"name":{},"text":{"16":{}},"component":{}}],["evm",{"_index":628,"title":{},"name":{},"text":{"2":{},"8":{},"18":{},"26":{},"27":{}},"component":{}}],["evolut",{"_index":1332,"title":{},"name":{},"text":{"14":{}},"component":{}}],["evolv",{"_index":1583,"title":{},"name":{},"text":{"15":{}},"component":{}}],["exact",{"_index":2911,"title":{},"name":{},"text":{"24":{}},"component":{}}],["exactli",{"_index":1080,"title":{},"name":{},"text":{"7":{},"8":{},"14":{},"24":{},"25":{}},"component":{}}],["examin",{"_index":3876,"title":{},"name":{},"text":{"27":{}},"component":{}}],["exampl",{"_index":125,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"12":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["example.main",{"_index":1878,"title":{},"name":{},"text":{"18":{}},"component":{}}],["exce",{"_index":1837,"title":{},"name":{},"text":{"18":{},"27":{},"29":{},"30":{}},"component":{}}],["exceed",{"_index":4224,"title":{},"name":{},"text":{"29":{}},"component":{}}],["except",{"_index":820,"title":{},"name":{},"text":{"3":{},"20":{},"26":{},"27":{}},"component":{}}],["excess",{"_index":2083,"title":{},"name":{},"text":{"20":{}},"component":{}}],["exchang",{"_index":1117,"title":{},"name":{},"text":{"8":{},"9":{},"14":{},"16":{},"24":{},"29":{},"31":{}},"component":{}}],["exclus",{"_index":383,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["execbatch",{"_index":2271,"title":{"21-159":{}},"name":{},"text":{"21":{}},"component":{}}],["execdelegatecal",{"_index":2272,"title":{"21-160":{}},"name":{},"text":{"21":{}},"component":{}}],["execsingl",{"_index":2269,"title":{"21-158":{}},"name":{},"text":{"21":{}},"component":{}}],["exectyp",{"_index":2270,"title":{"21-158":{},"21-159":{},"21-160":{},"21-161":{},"21-162":{},"21-171":{},"21-175":{},"21-176":{}},"name":{},"text":{"21":{}},"component":{}}],["exectype_default",{"_index":2292,"title":{"21-175":{}},"name":{},"text":{"21":{}},"component":{}}],["exectype_tri",{"_index":2293,"title":{"21-176":{}},"name":{},"text":{"21":{}},"component":{}}],["execut",{"_index":393,"title":{"14-14":{},"20-127":{},"20-190":{},"21-22":{},"21-118":{},"21-167":{},"21-168":{},"23-23":{},"23-77":{},"23-209":{},"23-251":{},"25-14":{}},"name":{},"text":{"1":{},"2":{},"11":{},"14":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["executebatch",{"_index":2528,"title":{"23-252":{},"25-15":{}},"name":{},"text":{"23":{},"25":{}},"component":{}}],["executedforwardrequest",{"_index":2943,"title":{"25-19":{}},"name":{},"text":{"25":{}},"component":{}}],["executefromexecutor",{"_index":2172,"title":{"21-23":{}},"name":{},"text":{"21":{}},"component":{}}],["executeuserop",{"_index":756,"title":{"21-9":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["execution_delay",{"_index":498,"title":{},"name":{},"text":{"1":{}},"component":{}}],["executionbatch",{"_index":2283,"title":{"21-167":{},"21-168":{}},"name":{},"text":{"21":{}},"component":{}}],["executioncalldata",{"_index":2171,"title":{"21-22":{},"21-23":{},"21-25":{},"21-50":{},"21-158":{},"21-159":{},"21-160":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"21-167":{},"21-168":{}},"name":{},"text":{"21":{}},"component":{}}],["executiondelay",{"_index":1980,"title":{"20-113":{},"20-115":{},"20-168":{},"20-170":{},"20-176":{}},"name":{},"text":{"20":{}},"component":{}}],["executor",{"_index":367,"title":{"21-113":{},"23-236":{},"23-276":{}},"name":{},"text":{"1":{},"11":{},"14":{},"21":{},"23":{}},"component":{}}],["executor_rol",{"_index":389,"title":{"23-257":{}},"name":{},"text":{"1":{},"23":{}},"component":{}}],["executor’",{"_index":2572,"title":{},"name":{},"text":{"23":{}},"component":{}}],["exercis",{"_index":3887,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["exist",{"_index":928,"title":{"27-332":{},"27-340":{},"27-348":{},"28-47":{}},"name":{},"text":{"6":{},"14":{},"17":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["exit",{"_index":375,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"23":{},"29":{}},"component":{}}],["expect",{"_index":829,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["expectednonc",{"_index":2459,"title":{"23-158":{}},"name":{},"text":{"23":{}},"component":{}}],["expectedpaus",{"_index":3338,"title":{"27-191":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["expectedst",{"_index":2396,"title":{"23-42":{},"23-266":{}},"name":{},"text":{"23":{}},"component":{}}],["expens",{"_index":326,"title":{},"name":{},"text":{"1":{},"20":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["experi",{"_index":806,"title":{},"name":{},"text":{"2":{},"7":{},"16":{},"23":{},"29":{}},"component":{}}],["expir",{"_index":395,"title":{"20-104":{},"20-159":{}},"name":{},"text":{"1":{},"20":{},"23":{},"25":{},"29":{}},"component":{}}],["expiri",{"_index":2506,"title":{"23-224":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["explain",{"_index":1668,"title":{},"name":{},"text":{"17":{},"26":{}},"component":{}}],["explan",{"_index":2871,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["explicit",{"_index":225,"title":{},"name":{},"text":{"1":{},"3":{},"20":{},"29":{}},"component":{}}],["explicitli",{"_index":118,"title":{},"name":{},"text":{"1":{}},"component":{}}],["exploit",{"_index":3743,"title":{},"name":{},"text":{"27":{}},"component":{}}],["explor",{"_index":512,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["expon",{"_index":1734,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["exponenti",{"_index":1732,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["expos",{"_index":1742,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{}},"component":{}}],["express",{"_index":1507,"title":{},"name":{},"text":{"14":{},"23":{},"29":{},"31":{}},"component":{}}],["extend",{"_index":707,"title":{"12":{}},"name":{"12":{}},"text":{"2":{},"3":{},"6":{},"7":{},"10":{},"11":{},"12":{},"17":{},"19":{},"20":{},"23":{},"26":{},"29":{}},"component":{}}],["extended_ballot_typehash",{"_index":2421,"title":{"23-103":{}},"name":{},"text":{"23":{}},"component":{}}],["extendeddeadlin",{"_index":2495,"title":{"23-204":{}},"name":{},"text":{"23":{}},"component":{}}],["extens",{"_index":297,"title":{"20-44":{},"21-46":{},"23-138":{},"24-86":{},"27-121":{},"27-130":{},"28-38":{},"29-33":{},"30-67":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["extern",{"_index":142,"title":{"20-20":{},"20-21":{},"20-22":{},"20-23":{},"20-24":{},"20-46":{},"20-47":{},"20-56":{},"20-57":{},"20-58":{},"20-59":{},"20-60":{},"20-61":{},"20-62":{},"20-63":{},"20-64":{},"20-65":{},"20-101":{},"20-103":{},"20-104":{},"20-105":{},"20-106":{},"20-107":{},"20-108":{},"20-109":{},"20-110":{},"20-111":{},"20-112":{},"20-113":{},"20-114":{},"20-115":{},"20-116":{},"20-117":{},"20-118":{},"20-119":{},"20-120":{},"20-121":{},"20-122":{},"20-123":{},"20-124":{},"20-125":{},"20-126":{},"20-127":{},"20-128":{},"20-129":{},"20-130":{},"20-131":{},"20-199":{},"20-200":{},"20-201":{},"21-14":{},"21-28":{},"22-4":{},"23-4":{},"23-5":{},"23-6":{},"23-7":{},"23-8":{},"23-9":{},"23-10":{},"23-11":{},"23-12":{},"23-13":{},"23-14":{},"23-15":{},"23-16":{},"23-17":{},"23-18":{},"23-19":{},"23-20":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-55":{},"23-90":{},"23-134":{},"23-169":{},"23-181":{},"23-237":{},"23-254":{},"24-28":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-37":{},"24-39":{},"24-41":{},"24-43":{},"24-44":{},"24-45":{},"24-46":{},"24-47":{},"24-48":{},"24-49":{},"24-50":{},"24-54":{},"24-57":{},"24-59":{},"24-60":{},"24-61":{},"24-63":{},"24-65":{},"24-66":{},"24-67":{},"24-68":{},"24-69":{},"24-70":{},"24-71":{},"24-72":{},"24-73":{},"24-74":{},"24-75":{},"24-76":{},"24-77":{},"24-78":{},"24-79":{},"24-80":{},"24-84":{},"24-86":{},"24-90":{},"24-91":{},"24-93":{},"26-7":{},"26-42":{},"26-80":{},"27-199":{},"27-473":{},"28-3":{},"28-4":{},"28-5":{},"28-6":{},"28-7":{},"28-8":{},"28-14":{},"28-36":{},"28-37":{},"29-3":{},"29-4":{},"29-5":{},"29-6":{},"29-7":{},"29-8":{},"29-12":{},"29-13":{},"29-14":{},"29-36":{},"29-37":{},"29-38":{},"29-43":{},"30-3":{},"30-4":{},"30-5":{},"30-6":{},"30-7":{},"30-8":{},"30-9":{},"30-10":{},"30-11":{},"30-16":{},"30-17":{},"30-18":{},"30-20":{},"30-21":{},"30-22":{},"30-66":{}},"name":{},"text":{"1":{},"2":{},"3":{},"13":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["extra",{"_index":545,"title":{},"name":{},"text":{"1":{},"18":{},"20":{}},"component":{}}],["extract",{"_index":1841,"title":{},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["extract_10_1",{"_index":3535,"title":{"27-555":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_10_2",{"_index":3537,"title":{"27-557":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_10_4",{"_index":3539,"title":{"27-559":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_10_6",{"_index":3541,"title":{"27-561":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_10_8",{"_index":3543,"title":{"27-563":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_1",{"_index":3545,"title":{"27-565":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_10",{"_index":3555,"title":{"27-575":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_2",{"_index":3547,"title":{"27-567":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_4",{"_index":3549,"title":{"27-569":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_6",{"_index":3551,"title":{"27-571":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_12_8",{"_index":3553,"title":{"27-573":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_1",{"_index":3557,"title":{"27-577":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_10",{"_index":3567,"title":{"27-587":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_12",{"_index":3569,"title":{"27-589":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_2",{"_index":3559,"title":{"27-579":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_4",{"_index":3561,"title":{"27-581":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_6",{"_index":3563,"title":{"27-583":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_16_8",{"_index":3565,"title":{"27-585":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_1",{"_index":3571,"title":{"27-591":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_10",{"_index":3581,"title":{"27-601":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_12",{"_index":3583,"title":{"27-603":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_16",{"_index":3585,"title":{"27-605":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_2",{"_index":3573,"title":{"27-593":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_4",{"_index":3575,"title":{"27-595":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_6",{"_index":3577,"title":{"27-597":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_20_8",{"_index":3579,"title":{"27-599":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_1",{"_index":3587,"title":{"27-607":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_10",{"_index":3597,"title":{"27-617":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_12",{"_index":3599,"title":{"27-619":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_16",{"_index":3601,"title":{"27-621":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_2",{"_index":3589,"title":{"27-609":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_20",{"_index":3603,"title":{"27-623":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_4",{"_index":3591,"title":{"27-611":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_6",{"_index":3593,"title":{"27-613":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_22_8",{"_index":3595,"title":{"27-615":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_1",{"_index":3605,"title":{"27-625":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_10",{"_index":3615,"title":{"27-635":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_12",{"_index":3617,"title":{"27-637":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_16",{"_index":3619,"title":{"27-639":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_2",{"_index":3607,"title":{"27-627":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_20",{"_index":3621,"title":{"27-641":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_22",{"_index":3623,"title":{"27-643":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_4",{"_index":3609,"title":{"27-629":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_6",{"_index":3611,"title":{"27-631":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_24_8",{"_index":3613,"title":{"27-633":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_1",{"_index":3625,"title":{"27-645":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_10",{"_index":3635,"title":{"27-655":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_12",{"_index":3637,"title":{"27-657":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_16",{"_index":3639,"title":{"27-659":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_2",{"_index":3627,"title":{"27-647":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_20",{"_index":3641,"title":{"27-661":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_22",{"_index":3643,"title":{"27-663":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_24",{"_index":3645,"title":{"27-665":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_4",{"_index":3629,"title":{"27-649":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_6",{"_index":3631,"title":{"27-651":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_28_8",{"_index":3633,"title":{"27-653":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_2_1",{"_index":3515,"title":{"27-535":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_1",{"_index":3647,"title":{"27-667":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_10",{"_index":3657,"title":{"27-677":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_12",{"_index":3659,"title":{"27-679":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_16",{"_index":3661,"title":{"27-681":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_2",{"_index":3649,"title":{"27-669":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_20",{"_index":3663,"title":{"27-683":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_22",{"_index":3665,"title":{"27-685":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_24",{"_index":3667,"title":{"27-687":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_28",{"_index":3669,"title":{"27-689":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_4",{"_index":3651,"title":{"27-671":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_6",{"_index":3653,"title":{"27-673":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_32_8",{"_index":3655,"title":{"27-675":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_4_1",{"_index":3517,"title":{"27-537":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_4_2",{"_index":3519,"title":{"27-539":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_6_1",{"_index":3521,"title":{"27-541":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_6_2",{"_index":3523,"title":{"27-543":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_6_4",{"_index":3525,"title":{"27-545":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_8_1",{"_index":3527,"title":{"27-547":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_8_2",{"_index":3529,"title":{"27-549":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_8_4",{"_index":3531,"title":{"27-551":{}},"name":{},"text":{"27":{}},"component":{}}],["extract_8_6",{"_index":3533,"title":{"27-553":{}},"name":{},"text":{"27":{}},"component":{}}],["extrem",{"_index":849,"title":{},"name":{},"text":{"3":{}},"component":{}}],["face",{"_index":469,"title":{},"name":{},"text":{"1":{},"12":{}},"component":{}}],["fact",{"_index":290,"title":{},"name":{},"text":{"1":{},"7":{},"23":{}},"component":{}}],["facto",{"_index":1623,"title":{},"name":{},"text":{"16":{}},"component":{}}],["factori",{"_index":578,"title":{"2-8":{},"2-15":{}},"name":{},"text":{"2":{},"11":{},"26":{},"27":{}},"component":{}}],["factorydata",{"_index":774,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fail",{"_index":1896,"title":{},"name":{},"text":{"18":{},"20":{},"26":{},"27":{},"29":{}},"component":{}}],["failur",{"_index":2145,"title":{},"name":{},"text":{"20":{},"24":{},"29":{}},"component":{}}],["fall",{"_index":3973,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["fallback",{"_index":743,"title":{"21-28":{},"26-7":{}},"name":{},"text":{"2":{},"11":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["fals",{"_index":539,"title":{},"name":{},"text":{"1":{},"20":{},"25":{},"27":{},"29":{}},"component":{}}],["famili",{"_index":1493,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["faq",{"_index":1304,"title":{},"name":{"13":{}},"text":{"20":{}},"component":{}}],["far",{"_index":1103,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"27":{},"30":{}},"component":{}}],["father",{"_index":3944,"title":{},"name":{},"text":{"27":{}},"component":{}}],["favor",{"_index":1197,"title":{},"name":{},"text":{"9":{},"14":{},"15":{},"20":{},"23":{},"26":{},"30":{}},"component":{}}],["favour",{"_index":412,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["feasibl",{"_index":3787,"title":{},"name":{},"text":{"27":{}},"component":{}}],["featur",{"_index":390,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"14":{},"26":{}},"component":{}}],["fee",{"_index":804,"title":{"9-5":{},"24-63":{}},"name":{},"text":{"2":{},"9":{},"20":{},"24":{},"27":{},"29":{},"31":{}},"component":{}}],["feebasispoint",{"_index":1216,"title":{},"name":{},"text":{"9":{}},"component":{}}],["feenumer",{"_index":4397,"title":{"31-6":{},"31-8":{}},"name":{},"text":{"30":{},"31":{}},"component":{}}],["fermat’",{"_index":3725,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fetchclonearg",{"_index":3028,"title":{"26-63":{}},"name":{},"text":{"26":{}},"component":{}}],["few",{"_index":189,"title":{},"name":{},"text":{"1":{},"23":{},"29":{},"30":{}},"component":{}}],["fewer",{"_index":2916,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fiat",{"_index":1613,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fido",{"_index":644,"title":{},"name":{},"text":{"2":{}},"component":{}}],["field",{"_index":768,"title":{"24-86":{},"27-121":{}},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"24":{},"25":{},"27":{}},"component":{}}],["fifo",{"_index":3692,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fight",{"_index":2751,"title":{},"name":{},"text":{"23":{}},"component":{}}],["file",{"_index":839,"title":{},"name":{},"text":{"3":{},"17":{},"24":{},"28":{}},"component":{}}],["fill",{"_index":2755,"title":{},"name":{},"text":{"23":{}},"component":{}}],["filter",{"_index":4020,"title":{},"name":{},"text":{"27":{}},"component":{}}],["final",{"_index":518,"title":{"3-3":{}},"name":{},"text":{"1":{},"3":{},"15":{},"23":{},"27":{},"29":{}},"component":{}}],["financ",{"_index":2347,"title":{"22":{}},"name":{"22":{}},"text":{"23":{},"28":{}},"component":{}}],["financi",{"_index":2349,"title":{},"name":{},"text":{"22":{}},"component":{}}],["find",{"_index":1119,"title":{},"name":{},"text":{"8":{},"14":{},"15":{},"27":{}},"component":{}}],["findupperbound",{"_index":3397,"title":{"27-399":{}},"name":{},"text":{"27":{}},"component":{}}],["fine",{"_index":3095,"title":{},"name":{},"text":{"26":{}},"component":{}}],["first",{"_index":382,"title":{"16-1":{}},"name":{},"text":{"1":{},"7":{},"14":{},"20":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["fit",{"_index":654,"title":{},"name":{},"text":{"2":{},"6":{},"10":{},"12":{},"14":{},"18":{},"20":{},"23":{},"27":{}},"component":{}}],["fix",{"_index":427,"title":{"7-1":{}},"name":{},"text":{"1":{},"7":{},"14":{},"23":{},"26":{},"27":{}},"component":{}}],["flag",{"_index":2109,"title":{},"name":{},"text":{"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["flash",{"_index":2712,"title":{},"name":{},"text":{"23":{},"24":{},"29":{}},"component":{}}],["flashborrow",{"_index":2901,"title":{},"name":{},"text":{"24":{}},"component":{}}],["flashfe",{"_index":2816,"title":{"24-60":{},"29-74":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["flashlend",{"_index":2899,"title":{},"name":{},"text":{"24":{}},"component":{}}],["flashloan",{"_index":2817,"title":{"24-61":{},"29-77":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["fledg",{"_index":1375,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["flexibl",{"_index":168,"title":{},"name":{},"text":{"1":{},"2":{},"10":{},"15":{},"30":{}},"component":{}}],["flip",{"_index":1726,"title":{},"name":{},"text":{"18":{}},"component":{}}],["floor",{"_index":3714,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flow",{"_index":2915,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fnhash",{"_index":3383,"title":{"27-373":{},"27-375":{}},"name":{},"text":{"27":{}},"component":{}}],["focu",{"_index":1385,"title":{},"name":{},"text":{"14":{}},"component":{}}],["follow",{"_index":408,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"11":{},"14":{},"15":{},"17":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["foo",{"_index":1900,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["footprint",{"_index":1364,"title":{},"name":{},"text":{"14":{}},"component":{}}],["for/against/abstain",{"_index":2564,"title":{},"name":{},"text":{"23":{}},"component":{}}],["forbidden",{"_index":2104,"title":{},"name":{},"text":{"20":{},"24":{},"27":{}},"component":{}}],["forc",{"_index":2741,"title":{},"name":{},"text":{"23":{},"25":{},"29":{}},"component":{}}],["forceapprov",{"_index":4164,"title":{"29-132":{}},"name":{},"text":{"29":{}},"component":{}}],["forev",{"_index":1031,"title":{},"name":{},"text":{"6":{},"26":{},"27":{},"30":{}},"component":{}}],["forg",{"_index":1547,"title":{},"name":{},"text":{"15":{}},"component":{}}],["forget",{"_index":1085,"title":{},"name":{},"text":{"7":{}},"component":{}}],["forgotten",{"_index":1087,"title":{},"name":{},"text":{"7":{}},"component":{}}],["fork",{"_index":1347,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["form",{"_index":50,"title":{},"name":{},"text":{"1":{},"14":{},"20":{}},"component":{}}],["formal",{"_index":1525,"title":{},"name":{},"text":{"14":{}},"component":{}}],["format",{"_index":863,"title":{},"name":{},"text":{"3":{},"14":{},"23":{},"27":{},"29":{},"30":{}},"component":{}}],["formula",{"_index":2362,"title":{},"name":{},"text":{"22":{}},"component":{}}],["forum",{"_index":1574,"title":{},"name":{},"text":{"15":{},"20":{}},"component":{}}],["forvot",{"_index":2424,"title":{"23-108":{},"23-116":{}},"name":{},"text":{"23":{}},"component":{}}],["forward",{"_index":2932,"title":{"25-5":{},"25-23":{}},"name":{},"text":{"25":{},"26":{},"27":{},"30":{}},"component":{}}],["forwardrequest",{"_index":2981,"title":{},"name":{},"text":{"25":{}},"component":{}}],["found",{"_index":1268,"title":{},"name":{},"text":{"12":{},"14":{},"17":{},"28":{},"29":{}},"component":{}}],["foundat",{"_index":1535,"title":{},"name":{},"text":{"15":{}},"component":{}}],["foundri",{"_index":1533,"title":{"15-4":{}},"name":{},"text":{"15":{},"19":{},"26":{}},"component":{}}],["four",{"_index":4330,"title":{},"name":{},"text":{"30":{}},"component":{}}],["fourth",{"_index":2640,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fp",{"_index":3730,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fraction",{"_index":2550,"title":{},"name":{},"text":{"23":{},"31":{}},"component":{}}],["fragment",{"_index":459,"title":{},"name":{},"text":{"1":{}},"component":{}}],["free",{"_index":947,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"14":{}},"component":{}}],["freeli",{"_index":1669,"title":{},"name":{},"text":{"17":{}},"component":{}}],["freez",{"_index":35,"title":{},"name":{},"text":{"1":{},"28":{},"29":{},"30":{}},"component":{}}],["frequent",{"_index":1302,"title":{"13":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["fresh",{"_index":1386,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["friend",{"_index":1137,"title":{},"name":{},"text":{"8":{}},"component":{}}],["friendli",{"_index":603,"title":{},"name":{},"text":{"2":{}},"component":{}}],["from'",{"_index":4073,"title":{},"name":{},"text":{"28":{},"29":{}},"component":{}}],["fromaddress",{"_index":4370,"title":{},"name":{},"text":{"30":{}},"component":{}}],["fromdeleg",{"_index":2717,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["fromtokenid",{"_index":4368,"title":{},"name":{},"text":{"30":{}},"component":{}}],["front",{"_index":324,"title":{"27-312":{}},"name":{},"text":{"1":{},"27":{}},"component":{}}],["frontend",{"_index":1368,"title":{},"name":{},"text":{"14":{}},"component":{}}],["frontrun",{"_index":2610,"title":{},"name":{},"text":{"23":{},"29":{}},"component":{}}],["fuel",{"_index":1340,"title":{},"name":{},"text":{"14":{}},"component":{}}],["fulfil",{"_index":4066,"title":{},"name":{},"text":{"28":{}},"component":{}}],["full",{"_index":1374,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"20":{},"23":{},"27":{}},"component":{}}],["fulli",{"_index":218,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"18":{},"24":{},"26":{},"27":{},"29":{}},"component":{}}],["func",{"_index":1517,"title":{},"name":{},"text":{"14":{}},"component":{}}],["function",{"_index":76,"title":{"13-1":{},"27-154":{},"27-155":{},"27-158":{},"27-159":{},"27-162":{},"27-163":{},"27-166":{},"27-167":{},"27-355":{},"27-357":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-373":{},"27-375":{},"27-393":{},"27-395":{},"27-397":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["functioncal",{"_index":3390,"title":{"27-385":{}},"name":{},"text":{"27":{}},"component":{}}],["functioncallwithvalu",{"_index":3391,"title":{"27-386":{}},"name":{},"text":{"27":{}},"component":{}}],["functiondelegatecal",{"_index":3393,"title":{"27-388":{}},"name":{},"text":{"27":{}},"component":{}}],["functionstaticcal",{"_index":3392,"title":{"27-387":{}},"name":{},"text":{"27":{}},"component":{}}],["function’",{"_index":2041,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["fund",{"_index":1466,"title":{},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["fungibl",{"_index":911,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"16":{},"24":{},"28":{},"30":{}},"component":{}}],["further",{"_index":405,"title":{"17-4":{}},"name":{},"text":{"1":{},"23":{},"27":{},"29":{}},"component":{}}],["furthermor",{"_index":1314,"title":{},"name":{},"text":{"13":{}},"component":{}}],["futur",{"_index":1351,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"29":{}},"component":{}}],["ga",{"_index":593,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"15":{},"16":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["gain",{"_index":4264,"title":{},"name":{},"text":{"29":{}},"component":{}}],["game",{"_index":943,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"16":{}},"component":{}}],["gameitem",{"_index":953,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["gameitem.awarditem",{"_index":1244,"title":{},"name":{},"text":{"10":{}},"component":{}}],["gameitem.ownerof",{"_index":1250,"title":{},"name":{},"text":{"10":{}},"component":{}}],["gameitem.tokenuri",{"_index":1251,"title":{},"name":{},"text":{"10":{}},"component":{}}],["gameitems.balanceof",{"_index":976,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gameitems.balanceofbatch",{"_index":985,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gameitems.safebatchtransferfrom",{"_index":982,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gameitems.safetransferfrom",{"_index":979,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gameitems.uri",{"_index":987,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gasfe",{"_index":767,"title":{},"name":{},"text":{"2":{}},"component":{}}],["gasless",{"_index":4177,"title":{},"name":{},"text":{"29":{}},"component":{}}],["gaspric",{"_index":2261,"title":{"21-148":{},"21-154":{}},"name":{},"text":{"21":{}},"component":{}}],["gener",{"_index":712,"title":{"27-694":{}},"name":{},"text":{"2":{},"3":{},"14":{},"15":{},"18":{},"19":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["gentl",{"_index":1585,"title":{},"name":{},"text":{"15":{}},"component":{}}],["get",{"_index":379,"title":{},"name":{},"text":{"1":{},"2":{},"9":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{}},"component":{}}],["getaccess",{"_index":1976,"title":{"20-112":{},"20-167":{}},"name":{},"text":{"20":{}},"component":{}}],["getaddressslot",{"_index":3431,"title":{"27-448":{}},"name":{},"text":{"27":{}},"component":{}}],["getadmin",{"_index":2992,"title":{"26-15":{}},"name":{},"text":{"26":{}},"component":{}}],["getapprov",{"_index":4297,"title":{"30-10":{},"30-33":{}},"name":{},"text":{"30":{}},"component":{}}],["getbeacon",{"_index":2994,"title":{"26-17":{}},"name":{},"text":{"26":{}},"component":{}}],["getbooleanslot",{"_index":3432,"title":{"27-449":{}},"name":{},"text":{"27":{}},"component":{}}],["getbytes32slot",{"_index":3434,"title":{"27-450":{}},"name":{},"text":{"27":{}},"component":{}}],["getbytesslot",{"_index":3440,"title":{"27-455":{},"27-456":{}},"name":{},"text":{"27":{}},"component":{}}],["getimplement",{"_index":2990,"title":{"26-13":{}},"name":{},"text":{"26":{}},"component":{}}],["getint256slot",{"_index":3436,"title":{"27-452":{}},"name":{},"text":{"27":{}},"component":{}}],["getinterfaceimplement",{"_index":2800,"title":{"24-46":{}},"name":{},"text":{"24":{}},"component":{}}],["getmanag",{"_index":2797,"title":{"24-44":{}},"name":{},"text":{"24":{}},"component":{}}],["getmindelay",{"_index":437,"title":{"23-245":{}},"name":{},"text":{"1":{},"23":{}},"component":{}}],["getnonc",{"_index":1982,"title":{"20-125":{},"20-188":{},"21-6":{},"21-7":{}},"name":{},"text":{"20":{},"21":{}},"component":{}}],["getoperationst",{"_index":2523,"title":{"23-244":{}},"name":{},"text":{"23":{}},"component":{}}],["getpasttotalsuppli",{"_index":2502,"title":{"23-220":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["getpastvot",{"_index":2501,"title":{"23-219":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["getroleadmin",{"_index":1919,"title":{"20-21":{},"20-36":{},"20-109":{},"20-164":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["getrolegrantdelay",{"_index":1975,"title":{"20-111":{},"20-166":{}},"name":{},"text":{"20":{}},"component":{}}],["getroleguardian",{"_index":1974,"title":{"20-110":{},"20-165":{}},"name":{},"text":{"20":{}},"component":{}}],["getrolememb",{"_index":346,"title":{"20-46":{},"20-50":{},"20-52":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["getrolemembercount",{"_index":344,"title":{"20-47":{},"20-51":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["getschedul",{"_index":1981,"title":{"20-124":{},"20-187":{}},"name":{},"text":{"20":{}},"component":{}}],["getstringslot",{"_index":3438,"title":{"27-453":{},"27-454":{}},"name":{},"text":{"27":{}},"component":{}}],["getsupportedinterfac",{"_index":3340,"title":{"27-205":{}},"name":{},"text":{"27":{}},"component":{}}],["gettargetadmindelay",{"_index":1972,"title":{"20-108":{},"20-163":{}},"name":{},"text":{"20":{}},"component":{}}],["gettargetfunctionrol",{"_index":1971,"title":{"20-107":{},"20-162":{}},"name":{},"text":{"20":{}},"component":{}}],["getter",{"_index":2361,"title":{},"name":{},"text":{"22":{},"26":{},"27":{},"29":{}},"component":{}}],["gettimestamp",{"_index":2522,"title":{"23-243":{}},"name":{},"text":{"23":{}},"component":{}}],["getuint256slot",{"_index":3435,"title":{"27-451":{}},"name":{},"text":{"27":{}},"component":{}}],["getvalidationdata",{"_index":2256,"title":{"21-141":{}},"name":{},"text":{"21":{}},"component":{}}],["getvalueinnamespac",{"_index":4002,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getvot",{"_index":2371,"title":{"23-18":{},"23-81":{},"23-218":{}},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["getvoteswithparam",{"_index":2372,"title":{"23-19":{},"23-82":{}},"name":{},"text":{"23":{}},"component":{}}],["git",{"_index":1534,"title":{"15-4":{}},"name":{},"text":{"15":{}},"component":{}}],["give",{"_index":312,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"27":{},"30":{}},"component":{}}],["given",{"_index":516,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["gld",{"_index":1120,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gldtoken",{"_index":1123,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gldtoken.balanceof",{"_index":1129,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gldtoken.transf",{"_index":1131,"title":{},"name":{},"text":{"8":{}},"component":{}}],["global",{"_index":1093,"title":{},"name":{},"text":{"7":{},"20":{},"24":{},"28":{},"30":{},"31":{}},"component":{}}],["gnosi",{"_index":126,"title":{},"name":{},"text":{"1":{},"13":{},"27":{}},"component":{}}],["gnt",{"_index":1034,"title":{},"name":{},"text":{"6":{}},"component":{}}],["go",{"_index":441,"title":{},"name":{},"text":{"1":{},"17":{},"20":{},"23":{},"26":{},"27":{},"28":{}},"component":{}}],["god",{"_index":1006,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["goe",{"_index":2081,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gold",{"_index":954,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["golem",{"_index":1032,"title":{},"name":{},"text":{"6":{}},"component":{}}],["good",{"_index":251,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"12":{},"14":{},"15":{},"16":{},"18":{},"29":{}},"component":{}}],["govern",{"_index":30,"title":{"14":{},"23":{},"14-15":{}},"name":{"14":{},"23":{}},"text":{"1":{},"2":{},"9":{},"14":{},"18":{},"22":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["government",{"_index":1728,"title":{},"name":{},"text":{"18":{}},"component":{}}],["governor",{"_index":1322,"title":{"14-4":{},"14-9":{},"14-18":{},"23-1":{},"23-52":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governor._cancel",{"_index":2555,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._castvot",{"_index":2707,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._countvot",{"_index":2637,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._encodestatebitmap",{"_index":2585,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._executeoper",{"_index":2693,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._quorumreach",{"_index":2634,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor._votesucceed",{"_index":2635,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor.execut",{"_index":1504,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governor.propos",{"_index":1491,"title":{},"name":{},"text":{"14":{}},"component":{}}],["governor.proposaldeadlin",{"_index":2706,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor.proposalthreshold",{"_index":2700,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor.queu",{"_index":1500,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governor.relay",{"_index":2688,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governor.st",{"_index":2691,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governoralpha",{"_index":1342,"title":{},"name":{},"text":{"14":{}},"component":{}}],["governoralreadycastvot",{"_index":2390,"title":{"23-37":{}},"name":{},"text":{"23":{}},"component":{}}],["governoralreadyqueuedpropos",{"_index":2404,"title":{"23-50":{}},"name":{},"text":{"23":{}},"component":{}}],["governorbravo",{"_index":1343,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governorcountingfract",{"_index":2426,"title":{"23-112":{}},"name":{},"text":{"23":{}},"component":{}}],["governorcountingfractional[https://github.com/scopelift/flex",{"_index":2649,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governorcountingsimpl",{"_index":1420,"title":{"23-105":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governordisableddeposit",{"_index":2391,"title":{"23-38":{}},"name":{},"text":{"23":{}},"component":{}}],["governorexceedremainingweight",{"_index":2428,"title":{"23-120":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinsufficientproposervot",{"_index":2398,"title":{"23-44":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidproposallength",{"_index":2389,"title":{"23-36":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidquorumfract",{"_index":2440,"title":{"23-137":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidsignatur",{"_index":2405,"title":{"23-51":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidvoteparam",{"_index":2401,"title":{"23-47":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidvotetyp",{"_index":2400,"title":{"23-46":{}},"name":{},"text":{"23":{}},"component":{}}],["governorinvalidvotingperiod",{"_index":2397,"title":{"23-43":{}},"name":{},"text":{"23":{}},"component":{}}],["governorlockedignor",{"_index":2461,"title":{"23-159":{}},"name":{},"text":{"23":{}},"component":{}}],["governormismatchednonc",{"_index":2458,"title":{"23-158":{}},"name":{},"text":{"23":{}},"component":{}}],["governornonexistentpropos",{"_index":2394,"title":{"23-41":{}},"name":{},"text":{"23":{}},"component":{}}],["governornotqueuedpropos",{"_index":2403,"title":{"23-49":{}},"name":{},"text":{"23":{}},"component":{}}],["governoronlyexecutor",{"_index":2393,"title":{"23-40":{}},"name":{},"text":{"23":{}},"component":{}}],["governoronlypropos",{"_index":2392,"title":{"23-39":{}},"name":{},"text":{"23":{}},"component":{}}],["governorpreventlatequorum",{"_index":2488,"title":{"23-197":{}},"name":{},"text":{"23":{}},"component":{}}],["governorqueuenotimpl",{"_index":2402,"title":{"23-48":{}},"name":{},"text":{"23":{}},"component":{}}],["governorrestrictedpropos",{"_index":2399,"title":{"23-45":{}},"name":{},"text":{"23":{}},"component":{}}],["governorset",{"_index":2469,"title":{"23-183":{}},"name":{},"text":{"23":{}},"component":{}}],["governorstorag",{"_index":1323,"title":{"14-4":{},"23-206":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governortimelockaccess",{"_index":2441,"title":{"23-139":{}},"name":{},"text":{"23":{}},"component":{}}],["governortimelockcompound",{"_index":1325,"title":{"14-5":{},"23-171":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governortimelockcompound.acceptadmin",{"_index":2697,"title":{},"name":{},"text":{"23":{}},"component":{}}],["governortimelockcontrol",{"_index":1324,"title":{"14-5":{},"23-160":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governorunexpectedproposalst",{"_index":2395,"title":{"23-42":{}},"name":{},"text":{"23":{}},"component":{}}],["governorunmetdelay",{"_index":2456,"title":{"23-157":{}},"name":{},"text":{"23":{}},"component":{}}],["governorvot",{"_index":1409,"title":{"23-122":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governorvotesquorumfract",{"_index":1414,"title":{"23-128":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["governor’",{"_index":2593,"title":{},"name":{},"text":{"23":{}},"component":{}}],["grant",{"_index":8,"title":{"1-4":{}},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"28":{}},"component":{}}],["grant_delay",{"_index":496,"title":{},"name":{},"text":{"1":{}},"component":{}}],["grantamount",{"_index":1486,"title":{},"name":{},"text":{"14":{}},"component":{}}],["grantdelay",{"_index":2010,"title":{"20-176":{}},"name":{},"text":{"20":{}},"component":{}}],["grantrol",{"_index":268,"title":{"20-22":{},"20-37":{},"20-77":{},"20-115":{},"20-170":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["granular",{"_index":233,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["graph",{"_index":1193,"title":{},"name":{},"text":{"9":{}},"component":{}}],["great",{"_index":1573,"title":{},"name":{},"text":{"15":{}},"component":{}}],["greater",{"_index":1354,"title":{},"name":{},"text":{"14":{},"20":{},"26":{},"27":{},"30":{},"31":{}},"component":{}}],["grow",{"_index":2066,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["gt",{"_index":3681,"title":{"27-706":{}},"name":{},"text":{"27":{}},"component":{}}],["guarante",{"_index":690,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"15":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["guard",{"_index":3870,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["guardian",{"_index":20,"title":{"1-11":{},"20-119":{},"20-139":{},"20-174":{},"20-179":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["guid",{"_index":223,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"10":{},"14":{},"15":{},"16":{},"19":{},"23":{},"27":{},"29":{},"30":{}},"component":{}}],["guidanc",{"_index":1908,"title":{},"name":{},"text":{"19":{}},"component":{}}],["guidelin",{"_index":4189,"title":{},"name":{},"text":{"29":{}},"component":{}}],["h",{"_index":3850,"title":{},"name":{},"text":{"27":{}},"component":{}}],["half",{"_index":3781,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hammer",{"_index":967,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["hand",{"_index":929,"title":{},"name":{},"text":{"6":{},"14":{},"23":{},"26":{},"29":{}},"component":{}}],["handl",{"_index":760,"title":{},"name":{},"text":{"2":{},"6":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["handleop",{"_index":790,"title":{},"name":{},"text":{"2":{}},"component":{}}],["handler",{"_index":1258,"title":{},"name":{},"text":{"11":{}},"component":{}}],["happen",{"_index":1039,"title":{},"name":{},"text":{"6":{},"23":{},"25":{},"27":{}},"component":{}}],["hardcod",{"_index":508,"title":{},"name":{},"text":{"1":{}},"component":{}}],["hardhat",{"_index":1532,"title":{"15-3":{}},"name":{},"text":{"17":{},"19":{},"26":{}},"component":{}}],["hardwar",{"_index":1709,"title":{},"name":{},"text":{"18":{}},"component":{}}],["hash",{"_index":666,"title":{"21-17":{},"21-33":{},"21-40":{},"21-45":{},"21-109":{},"21-110":{},"21-142":{},"21-143":{},"24-28":{},"27-108":{},"27-109":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-134":{},"27-135":{},"27-136":{},"27-137":{},"27-139":{},"27-140":{},"27-147":{},"27-148":{},"27-149":{}},"name":{},"text":{"2":{},"10":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{}},"component":{}}],["hashedtypeddataenvelopestruct",{"_index":3298,"title":{"27-128":{}},"name":{},"text":{"27":{}},"component":{}}],["hasher",{"_index":3314,"title":{"27-154":{},"27-155":{},"27-158":{},"27-159":{},"27-162":{},"27-163":{},"27-166":{},"27-167":{}},"name":{},"text":{"27":{}},"component":{}}],["hashes.commutativekeccak256",{"_index":3956,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hashoper",{"_index":1985,"title":{"20-130":{},"20-194":{},"23-246":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["hashoperationbatch",{"_index":2526,"title":{"23-247":{}},"name":{},"text":{"23":{}},"component":{}}],["hashpropos",{"_index":2364,"title":{"23-7":{},"23-59":{}},"name":{},"text":{"23":{}},"component":{}}],["hasn’t",{"_index":2587,"title":{},"name":{},"text":{"23":{},"25":{},"26":{},"30":{}},"component":{}}],["hasrol",{"_index":212,"title":{"20-20":{},"20-33":{},"20-113":{},"20-168":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["hasvot",{"_index":2374,"title":{"23-20":{},"23-107":{},"23-114":{}},"name":{},"text":{"23":{}},"component":{}}],["have",{"_index":139,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["head",{"_index":919,"title":{},"name":{},"text":{"6":{},"12":{},"15":{},"16":{}},"component":{}}],["headach",{"_index":3085,"title":{},"name":{},"text":{"26":{}},"component":{}}],["heap",{"_index":1679,"title":{"18-11":{},"27-352":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["heap.data[heap.data[0].index].valu",{"_index":3951,"title":{},"name":{},"text":{"27":{}},"component":{}}],["heap.data[heap.data[i].index].lookup",{"_index":3948,"title":{},"name":{},"text":{"27":{}},"component":{}}],["heap.data[heap.data[i].lookup].index",{"_index":3949,"title":{},"name":{},"text":{"27":{}},"component":{}}],["heap.uint208heap",{"_index":3381,"title":{"27-362":{},"27-363":{},"27-364":{},"27-365":{},"27-366":{},"27-367":{},"27-368":{},"27-369":{},"27-370":{}},"name":{},"text":{},"component":{}}],["heap.uint256heap",{"_index":3380,"title":{"27-353":{},"27-354":{},"27-355":{},"27-356":{},"27-357":{},"27-358":{},"27-359":{},"27-360":{},"27-361":{}},"name":{},"text":{},"component":{}}],["heard",{"_index":1618,"title":{},"name":{},"text":{"16":{}},"component":{}}],["held",{"_index":423,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"20":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["help",{"_index":266,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"18":{},"20":{},"27":{},"29":{}},"component":{}}],["helper",{"_index":1759,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["henc",{"_index":2570,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["here",{"_index":1125,"title":{},"name":{},"text":{"8":{},"12":{},"14":{},"16":{},"18":{},"25":{},"26":{},"28":{},"29":{}},"component":{}}],["here’",{"_index":192,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"10":{}},"component":{}}],["hex",{"_index":995,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["hexadecim",{"_index":991,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["hierarch",{"_index":2029,"title":{},"name":{},"text":{"20":{}},"component":{}}],["high",{"_index":1348,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"25":{},"27":{},"29":{}},"component":{}}],["higher",{"_index":761,"title":{},"name":{},"text":{"2":{},"23":{},"29":{}},"component":{}}],["highest",{"_index":3132,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["highli",{"_index":1307,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{}}],["himself",{"_index":1686,"title":{},"name":{},"text":{"18":{}},"component":{}}],["histor",{"_index":1388,"title":{},"name":{},"text":{"14":{},"22":{}},"component":{}}],["histori",{"_index":1808,"title":{},"name":{},"text":{"18":{},"23":{},"27":{},"29":{}},"component":{}}],["hitchhiker’",{"_index":1584,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hold",{"_index":330,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{}},"component":{}}],["holder",{"_index":1198,"title":{},"name":{},"text":{"9":{},"14":{},"20":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["honor",{"_index":2096,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hood",{"_index":336,"title":{},"name":{},"text":{"1":{}},"component":{}}],["hook",{"_index":1252,"title":{"11-3":{}},"name":{},"text":{"11":{},"12":{},"14":{},"23":{}},"component":{}}],["hope",{"_index":1661,"title":{},"name":{},"text":{"17":{}},"component":{}}],["hopefulli",{"_index":1112,"title":{},"name":{},"text":{"7":{}},"component":{}}],["host",{"_index":1626,"title":{},"name":{},"text":{"17":{}},"component":{}}],["hour",{"_index":494,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["hous",{"_index":1610,"title":{},"name":{},"text":{"16":{}},"component":{}}],["https://datatracker.ietf.org/doc/html/rfc4648",{"_index":3986,"title":{},"name":{},"text":{"27":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/access",{"_index":2028,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/account",{"_index":2294,"title":{},"name":{},"text":{"21":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/fin",{"_index":2348,"title":{},"name":{},"text":{"22":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/govern",{"_index":2545,"title":{},"name":{},"text":{"23":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/interfac",{"_index":2840,"title":{},"name":{},"text":{"24":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/metatx",{"_index":2952,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/proxi",{"_index":3046,"title":{},"name":{},"text":{"26":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/token/erc1155",{"_index":4065,"title":{},"name":{},"text":{"28":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/token/erc20",{"_index":4176,"title":{},"name":{},"text":{"29":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/token/erc721",{"_index":4329,"title":{},"name":{},"text":{"30":{}},"component":{}}],["https://docs.openzeppelin.com/contracts/api/util",{"_index":3682,"title":{},"name":{},"text":{"27":{}},"component":{}}],["https://eips.ethereum.org/eips/eip",{"_index":4079,"title":{},"name":{},"text":{"28":{},"30":{}},"component":{}}],["https://game.example/api/item/0000000000000000000000000000000000000000000000000000000000000002.json",{"_index":999,"title":{},"name":{},"text":{"6":{}},"component":{}}],["https://game.example/api/item/{id}.json",{"_index":960,"title":{},"name":{},"text":{"6":{}},"component":{}}],["https://game.example/item",{"_index":1009,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["https://github.com/enjin/erc",{"_index":4081,"title":{},"name":{},"text":{"28":{}},"component":{}}],["https://github.com/ethereum/eips/issues/20#issuecom",{"_index":4184,"title":{},"name":{},"text":{"29":{}},"component":{}}],["https://token",{"_index":4088,"title":{},"name":{},"text":{"28":{}},"component":{}}],["https://xn—​2",{"_index":3718,"title":{},"name":{},"text":{"27":{}},"component":{}}],["human",{"_index":1480,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["hypothet",{"_index":1121,"title":{},"name":{},"text":{"8":{}},"component":{}}],["i.",{"_index":612,"title":{},"name":{},"text":{"2":{},"9":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["iaccesscontrol",{"_index":1918,"title":{"20-19":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["iaccesscontroldefaultadminrul",{"_index":1935,"title":{"20-55":{}},"name":{},"text":{"20":{}},"component":{}}],["iaccesscontrolenumer",{"_index":1933,"title":{"20-45":{}},"name":{},"text":{},"component":{}}],["iaccessmanag",{"_index":1967,"title":{"20-102":{},"20-198":{},"23-142":{}},"name":{},"text":{"20":{}},"component":{}}],["iaccount",{"_index":796,"title":{},"name":{},"text":{"2":{}},"component":{}}],["iaccountexecut",{"_index":798,"title":{},"name":{},"text":{"2":{}},"component":{}}],["iauthor",{"_index":1965,"title":{"20-100":{}},"name":{},"text":{"20":{}},"component":{}}],["ibeacon",{"_index":3015,"title":{"26-41":{}},"name":{},"text":{"26":{}},"component":{}}],["icompoundtimelock",{"_index":2467,"title":{"23-172":{},"23-181":{}},"name":{},"text":{},"component":{}}],["id",{"_index":924,"title":{"20-124":{},"20-125":{},"20-187":{},"20-188":{},"23-239":{},"23-240":{},"23-241":{},"23-242":{},"23-243":{},"23-244":{},"23-250":{},"23-259":{},"23-260":{},"23-261":{},"23-262":{},"28-3":{},"28-4":{},"28-7":{},"28-8":{},"28-9":{},"28-10":{},"28-12":{},"28-14":{},"28-19":{},"28-20":{},"28-23":{},"28-24":{},"28-25":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-32":{},"28-33":{},"28-36":{},"28-37":{},"28-40":{},"28-42":{},"28-43":{},"28-45":{},"28-47":{},"28-48":{},"28-59":{},"28-60":{}},"name":{},"text":{"6":{},"10":{},"14":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["idea",{"_index":915,"title":{},"name":{},"text":{"6":{},"29":{}},"component":{}}],["ideal",{"_index":2142,"title":{},"name":{},"text":{"20":{},"23":{},"24":{}},"component":{}}],["idempot",{"_index":3126,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ident",{"_index":2747,"title":{},"name":{},"text":{"23":{}},"component":{}}],["identif",{"_index":3888,"title":{},"name":{},"text":{"27":{}},"component":{}}],["identifi",{"_index":66,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{},"30":{}},"component":{}}],["idiomat",{"_index":1056,"title":{},"name":{},"text":{"7":{}},"component":{}}],["idslength",{"_index":2780,"title":{"24-26":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["ientrypoint",{"_index":2160,"title":{"21-5":{}},"name":{},"text":{},"component":{}}],["ierc",{"_index":3799,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ierc1155",{"_index":2847,"title":{"28-2":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["ierc1155.balanceof",{"_index":4082,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155.balanceofbatch",{"_index":4083,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155.isapprovedforal",{"_index":4085,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155.safebatchtransferfrom",{"_index":4087,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155.safetransferfrom",{"_index":4086,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155.setapprovalforal",{"_index":4084,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155error",{"_index":2773,"title":{"24-19":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["ierc1155metadatauri",{"_index":968,"title":{"28-13":{}},"name":{},"text":{"6":{},"24":{},"28":{}},"component":{}}],["ierc1155metadatauri.uri",{"_index":4075,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ierc1155receiv",{"_index":2848,"title":{"28-35":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["ierc1155receiver.onerc1155batchreceiv",{"_index":2628,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["ierc1155receiver.onerc1155receiv",{"_index":2627,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["ierc1271",{"_index":676,"title":{"24-27":{}},"name":{},"text":{"2":{},"24":{}},"component":{}}],["ierc1271.isvalidsignatur",{"_index":2588,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ierc1271.isvalidsignature.selector",{"_index":746,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ierc1363",{"_index":2783,"title":{"24-29":{},"29-133":{},"29-134":{},"29-135":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc1363receiv",{"_index":2787,"title":{"24-36":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc1363receiver.ontransferreceiv",{"_index":2858,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc1363spend",{"_index":2789,"title":{"24-38":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc1363spender.onapprovalreceiv",{"_index":2859,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc165",{"_index":1442,"title":{"27-198":{}},"name":{},"text":{"14":{},"18":{},"23":{},"24":{},"27":{},"28":{},"30":{}},"component":{}}],["ierc165.supportsinterfac",{"_index":2054,"title":{},"name":{},"text":{"20":{},"23":{},"27":{},"28":{},"30":{},"31":{}},"component":{}}],["ierc1820implement",{"_index":2791,"title":{"24-40":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc1820implementer.canimplementinterfaceforaddress",{"_index":2876,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc1820registri",{"_index":2794,"title":{"24-42":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc1820registry.setinterfaceimplement",{"_index":2868,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc1822.sol",{"_index":2877,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc1822proxi",{"_index":2807,"title":{"24-53":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc1967.adminchang",{"_index":3074,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ierc1967.beaconupgrad",{"_index":3075,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ierc1967.upgrad",{"_index":3072,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ierc20",{"_index":1204,"title":{"29-2":{},"29-65":{},"29-67":{},"29-99":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{}},"name":{},"text":{"9":{},"14":{},"22":{},"24":{},"29":{}},"component":{}}],["ierc20.allow",{"_index":4197,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20.approv",{"_index":4198,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20.balanceof",{"_index":4194,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20.totalsuppli",{"_index":4196,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20.transf",{"_index":4195,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20.transferfrom",{"_index":4199,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20error",{"_index":2756,"title":{"24-3":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc20metadata",{"_index":2841,"title":{"29-11":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc20metadata.decim",{"_index":4269,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc20permit",{"_index":2884,"title":{"29-34":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc2309",{"_index":4366,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc2309.consecutivetransf",{"_index":4375,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc2612",{"_index":2809,"title":{"24-55":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc2981",{"_index":2810,"title":{"24-56":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc3156flashborrow",{"_index":2818,"title":{"24-61":{},"24-62":{},"29-77":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ierc3156flashborrower.onflashloan",{"_index":4244,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc3156flashlend",{"_index":2814,"title":{"24-58":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc4626",{"_index":1207,"title":{"24-64":{}},"name":{},"text":{"9":{},"24":{},"29":{}},"component":{}}],["ierc4626.asset",{"_index":4270,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.converttoasset",{"_index":4273,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.converttoshar",{"_index":4272,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.deposit",{"_index":4282,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.maxdeposit",{"_index":4274,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.maxmint",{"_index":4275,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.maxredeem",{"_index":4277,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.maxwithdraw",{"_index":4276,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.mint",{"_index":4283,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.previewdeposit",{"_index":4278,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.previewmint",{"_index":4279,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.previewredeem",{"_index":4281,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.previewwithdraw",{"_index":4280,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.redeem",{"_index":4285,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.totalasset",{"_index":4271,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4626.withdraw",{"_index":4284,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ierc4906",{"_index":2849,"title":{},"name":{},"text":{"24":{},"30":{}},"component":{}}],["ierc5267",{"_index":2325,"title":{"24-85":{}},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["ierc5313",{"_index":2835,"title":{"24-83":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc5313.own",{"_index":2090,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ierc5805",{"_index":2431,"title":{"23-124":{},"24-88":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc6093.sol",{"_index":2851,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc6372",{"_index":1382,"title":{"24-89":{}},"name":{},"text":{"14":{},"23":{},"24":{}},"component":{}}],["ierc6372.clock",{"_index":2573,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ierc721",{"_index":1773,"title":{"30-2":{},"30-93":{},"30-98":{}},"name":{},"text":{"18":{},"24":{},"30":{}},"component":{}}],["ierc721.approv",{"_index":4343,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.balanceof",{"_index":4338,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.getapprov",{"_index":4344,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.isapprovedforal",{"_index":4346,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.ownerof",{"_index":4339,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.safetransferfrom",{"_index":4348,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.setapprovalforal",{"_index":4345,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.transf",{"_index":4377,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721.transferfrom",{"_index":4347,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721enumer",{"_index":2843,"title":{"30-19":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["ierc721enumerable.tokenbyindex",{"_index":4356,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721enumerable.tokenofownerbyindex",{"_index":4354,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721enumerable.totalsuppli",{"_index":4355,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721error",{"_index":2764,"title":{"24-10":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["ierc721metadata",{"_index":1242,"title":{"30-15":{}},"name":{},"text":{"10":{},"24":{},"30":{}},"component":{}}],["ierc721metadata.nam",{"_index":4340,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721metadata.symbol",{"_index":4341,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721metadata.tokenuri",{"_index":4342,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc721receiv",{"_index":2842,"title":{"30-65":{}},"name":{},"text":{"24":{},"30":{}},"component":{}}],["ierc721receiver.onerc721receiv",{"_index":2626,"title":{},"name":{},"text":{"23":{},"30":{}},"component":{}}],["ierc721receiver.onerc721received.selector",{"_index":4358,"title":{},"name":{},"text":{"30":{}},"component":{}}],["ierc7579modul",{"_index":2334,"title":{},"name":{},"text":{"21":{}},"component":{}}],["ierc7579moduleconfig",{"_index":2305,"title":{},"name":{},"text":{"21":{}},"component":{}}],["ierc7674",{"_index":2838,"title":{"24-92":{}},"name":{},"text":{"24":{}},"component":{}}],["ierc7674.sol",{"_index":2925,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc777",{"_index":2844,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc777recipi",{"_index":2845,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ierc777send",{"_index":2846,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ignor",{"_index":1889,"title":{"23-147":{},"23-148":{},"23-156":{}},"name":{},"text":{"18":{},"20":{},"23":{},"27":{},"30":{}},"component":{}}],["igovernor",{"_index":1434,"title":{"23-3":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["igovernor.cancel",{"_index":2615,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.castvot",{"_index":2619,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.castvotebysig",{"_index":2622,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.castvotewithreason",{"_index":2620,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.castvotewithreasonandparam",{"_index":2621,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.castvotewithreasonandparamsbysig",{"_index":2623,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.counting_mod",{"_index":2632,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.execut",{"_index":2614,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.getvot",{"_index":2617,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.getvoteswithparam",{"_index":2618,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.hashpropos",{"_index":2598,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.hasvot",{"_index":2633,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.nam",{"_index":2596,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.propos",{"_index":2609,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalcancel",{"_index":2616,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalcr",{"_index":2611,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposaldeadlin",{"_index":2603,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposaleta",{"_index":2605,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalneedsqueu",{"_index":2606,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalpropos",{"_index":2604,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalsnapshot",{"_index":2602,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.proposalst",{"_index":2366,"title":{"23-8":{},"23-42":{},"23-60":{},"23-95":{},"23-162":{},"23-173":{}},"name":{},"text":{},"component":{}}],["igovernor.proposalthreshold",{"_index":2601,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.queu",{"_index":2612,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.st",{"_index":2600,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.vers",{"_index":2597,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.votecast",{"_index":2624,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.votingdelay",{"_index":2574,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernor.votingperiod",{"_index":2576,"title":{},"name":{},"text":{"23":{}},"component":{}}],["igovernortimelock",{"_index":2709,"title":{},"name":{},"text":{"23":{}},"component":{}}],["imag",{"_index":1008,"title":{},"name":{},"text":{"6":{},"10":{},"27":{}},"component":{}}],["imagin",{"_index":1271,"title":{},"name":{},"text":{"12":{}},"component":{}}],["imit",{"_index":4193,"title":{},"name":{},"text":{"29":{}},"component":{}}],["immedi",{"_index":493,"title":{"20-158":{},"20-215":{}},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"22":{},"27":{}},"component":{}}],["immunefi",{"_index":1562,"title":{},"name":{},"text":{"15":{}},"component":{}}],["immut",{"_index":3049,"title":{},"name":{},"text":{"26":{},"27":{},"29":{}},"component":{}}],["impact",{"_index":1299,"title":{},"name":{},"text":{"12":{},"17":{},"26":{}},"component":{}}],["implement",{"_index":42,"title":{"24-45":{},"24-51":{},"26-4":{},"26-10":{},"26-19":{},"26-34":{},"26-42":{},"26-45":{},"26-47":{},"26-48":{},"26-51":{},"26-52":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["implementation_",{"_index":3017,"title":{"26-44":{}},"name":{},"text":{"26":{}},"component":{}}],["implementation_slot",{"_index":3002,"title":{"26-23":{}},"name":{},"text":{"26":{}},"component":{}}],["implementation’",{"_index":3056,"title":{},"name":{},"text":{"26":{}},"component":{}}],["implementserc165interfac",{"_index":2803,"title":{"24-49":{}},"name":{},"text":{"24":{}},"component":{}}],["implementserc165interfacenocach",{"_index":2804,"title":{"24-50":{}},"name":{},"text":{"24":{}},"component":{}}],["impli",{"_index":1312,"title":{},"name":{},"text":{"13":{},"20":{},"26":{},"28":{},"30":{}},"component":{}}],["implic",{"_index":2146,"title":{},"name":{},"text":{"20":{}},"component":{}}],["implicitli",{"_index":3088,"title":{},"name":{},"text":{"26":{}},"component":{}}],["import",{"_index":26,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["impos",{"_index":3969,"title":{},"name":{},"text":{"27":{},"30":{}},"component":{}}],["imposs",{"_index":3100,"title":{},"name":{},"text":{"26":{}},"component":{}}],["improv",{"_index":519,"title":{},"name":{},"text":{"1":{},"20":{},"27":{}},"component":{}}],["inaccess",{"_index":2687,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["incent",{"_index":2968,"title":{},"name":{},"text":{"25":{}},"component":{}}],["incid",{"_index":520,"title":{},"name":{},"text":{"1":{}},"component":{}}],["includ",{"_index":283,"title":{"27-325":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["include::api:example$access",{"_index":1284,"title":{},"name":{},"text":{"12":{}},"component":{}}],["inclus",{"_index":2057,"title":{},"name":{},"text":{"20":{},"24":{},"27":{}},"component":{}}],["incompat",{"_index":823,"title":{},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{}}],["inconsist",{"_index":1508,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["incorrect",{"_index":109,"title":{},"name":{},"text":{"1":{},"20":{},"27":{},"30":{}},"component":{}}],["incorrectli",{"_index":2729,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["increas",{"_index":456,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"16":{},"20":{},"23":{},"27":{},"29":{},"30":{}},"component":{}}],["increasedsuppli",{"_index":4126,"title":{"29-53":{},"29-63":{}},"name":{},"text":{"29":{}},"component":{}}],["incred",{"_index":25,"title":{},"name":{},"text":{"1":{}},"component":{}}],["increment",{"_index":3129,"title":{},"name":{},"text":{"26":{},"27":{},"30":{}},"component":{}}],["incur",{"_index":4385,"title":{},"name":{},"text":{"30":{}},"component":{}}],["inde",{"_index":230,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["indefinit",{"_index":419,"title":{},"name":{},"text":{"1":{}},"component":{}}],["independ",{"_index":3860,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["index",{"_index":1367,"title":{"20-10":{},"20-18":{},"20-25":{},"20-26":{},"20-27":{},"20-46":{},"20-50":{},"20-66":{},"20-132":{},"20-133":{},"20-134":{},"20-135":{},"20-136":{},"20-137":{},"20-138":{},"20-139":{},"20-140":{},"20-141":{},"20-142":{},"20-143":{},"21-65":{},"21-66":{},"21-74":{},"21-75":{},"21-83":{},"21-84":{},"21-99":{},"21-100":{},"21-101":{},"21-126":{},"21-127":{},"22-18":{},"23-34":{},"23-35":{},"23-204":{},"23-213":{},"23-259":{},"23-260":{},"23-261":{},"23-262":{},"24-51":{},"24-52":{},"24-81":{},"24-82":{},"25-19":{},"26-47":{},"27-210":{},"27-211":{},"27-212":{},"27-213":{},"27-219":{},"27-227":{},"27-235":{},"27-243":{},"27-251":{},"27-259":{},"27-267":{},"27-275":{},"27-283":{},"27-293":{},"27-299":{},"27-305":{},"27-314":{},"27-374":{},"27-375":{},"28-9":{},"28-10":{},"28-11":{},"28-12":{},"29-9":{},"29-10":{},"30-12":{},"30-13":{},"30-14":{},"30-21":{},"30-22":{},"30-58":{},"30-60":{},"30-63":{}},"name":{"15":{}},"text":{"14":{},"20":{},"23":{},"27":{},"30":{}},"component":{}}],["indic",{"_index":1419,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["indirect",{"_index":2103,"title":{"23-149":{}},"name":{},"text":{"20":{}},"component":{}}],["indirectli",{"_index":2101,"title":{},"name":{},"text":{"20":{},"23":{},"26":{},"27":{},"30":{}},"component":{}}],["individu",{"_index":4378,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["infeas",{"_index":4258,"title":{},"name":{},"text":{"29":{}},"component":{}}],["infin",{"_index":3713,"title":{},"name":{},"text":{"27":{}},"component":{}}],["infinit",{"_index":1188,"title":{},"name":{},"text":{"9":{},"29":{}},"component":{}}],["inflat",{"_index":1155,"title":{"9-1":{}},"name":{},"text":{"29":{}},"component":{}}],["info",{"_index":3911,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inform",{"_index":685,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"12":{},"15":{},"18":{},"20":{},"23":{},"24":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["infrastructur",{"_index":647,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{}}],["infrequ",{"_index":830,"title":{},"name":{},"text":{"3":{}},"component":{}}],["inherit",{"_index":467,"title":{"17-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"8":{},"12":{},"14":{},"17":{},"18":{},"20":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["inheritdoc",{"_index":748,"title":{},"name":{},"text":{"2":{}},"component":{}}],["init",{"_index":1656,"title":{},"name":{},"text":{"17":{}},"component":{}}],["initcod",{"_index":772,"title":{},"name":{},"text":{"2":{}},"component":{}}],["initdata",{"_index":802,"title":{"21-26":{},"21-51":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["initi",{"_index":93,"title":{"24-63":{},"26-67":{},"26-74":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"11":{},"14":{},"15":{},"17":{},"20":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["initialadmin",{"_index":502,"title":{"20-154":{},"20-157":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["initialauthor",{"_index":470,"title":{"20-208":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["initialbasedelay",{"_index":2442,"title":{"23-141":{}},"name":{},"text":{"23":{}},"component":{}}],["initialdefaultadmin",{"_index":1958,"title":{"20-74":{}},"name":{},"text":{"20":{}},"component":{}}],["initialdelay",{"_index":1957,"title":{"20-74":{}},"name":{},"text":{"20":{}},"component":{}}],["initializ",{"_index":1263,"title":{"26-66":{}},"name":{},"text":{"11":{}},"component":{}}],["initializev2",{"_index":3122,"title":{},"name":{},"text":{"26":{}},"component":{}}],["initialown",{"_index":75,"title":{"20-4":{},"26-28":{},"26-33":{},"26-44":{}},"name":{},"text":{"1":{},"20":{},"26":{}},"component":{}}],["initialproposalthreshold",{"_index":2472,"title":{"23-184":{}},"name":{},"text":{"23":{}},"component":{}}],["initialroot",{"_index":3382,"title":{"27-372":{},"27-373":{}},"name":{},"text":{},"component":{}}],["initialsuppli",{"_index":1124,"title":{},"name":{},"text":{"8":{}},"component":{}}],["initialvoteextens",{"_index":2489,"title":{"23-198":{}},"name":{},"text":{"23":{}},"component":{}}],["initialvotingdelay",{"_index":2470,"title":{"23-184":{}},"name":{},"text":{"23":{}},"component":{}}],["initialvotingperiod",{"_index":2471,"title":{"23-184":{}},"name":{},"text":{"23":{}},"component":{}}],["inlin",{"_index":4004,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inner",{"_index":3862,"title":{},"name":{},"text":{"27":{}},"component":{}}],["input",{"_index":2086,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["insecur",{"_index":831,"title":{},"name":{},"text":{"3":{}},"component":{}}],["insert",{"_index":1833,"title":{"27-356":{},"27-357":{},"27-365":{},"27-366":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["insid",{"_index":1149,"title":{},"name":{},"text":{"8":{},"27":{},"30":{}},"component":{}}],["inspect",{"_index":3690,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inspir",{"_index":3891,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["instal",{"_index":717,"title":{"11-2":{},"15-2":{},"17-2":{}},"name":{},"text":{"2":{},"4":{},"5":{},"11":{},"15":{},"17":{},"21":{}},"component":{}}],["installmodul",{"_index":2176,"title":{"21-26":{}},"name":{},"text":{"21":{}},"component":{}}],["instanc",{"_index":444,"title":{"26-51":{},"26-52":{},"26-53":{},"26-54":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-63":{}},"name":{},"text":{"1":{},"7":{},"14":{},"18":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["instance.interface.encodefunctiondata",{"_index":1905,"title":{},"name":{},"text":{"18":{}},"component":{}}],["instance.multical",{"_index":1904,"title":{},"name":{},"text":{"18":{}},"component":{}}],["instantan",{"_index":2124,"title":{},"name":{},"text":{"20":{}},"component":{}}],["instead",{"_index":138,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"12":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["institut",{"_index":1705,"title":{},"name":{},"text":{"18":{}},"component":{}}],["instruct",{"_index":3063,"title":{},"name":{},"text":{"26":{}},"component":{}}],["insuffici",{"_index":2157,"title":{},"name":{},"text":{"20":{}},"component":{}}],["int",{"_index":3778,"title":{},"name":{},"text":{"27":{}},"component":{}}],["int104",{"_index":3257,"title":{"27-87":{}},"name":{},"text":{"27":{}},"component":{}}],["int112",{"_index":3255,"title":{"27-86":{}},"name":{},"text":{"27":{}},"component":{}}],["int120",{"_index":3253,"title":{"27-85":{}},"name":{},"text":{"27":{}},"component":{}}],["int128",{"_index":3251,"title":{"27-84":{}},"name":{},"text":{"27":{}},"component":{}}],["int136",{"_index":3249,"title":{"27-83":{}},"name":{},"text":{"27":{}},"component":{}}],["int144",{"_index":3247,"title":{"27-82":{}},"name":{},"text":{"27":{}},"component":{}}],["int152",{"_index":3245,"title":{"27-81":{}},"name":{},"text":{"27":{}},"component":{}}],["int16",{"_index":3279,"title":{"27-98":{}},"name":{},"text":{"27":{}},"component":{}}],["int160",{"_index":3243,"title":{"27-80":{}},"name":{},"text":{"27":{}},"component":{}}],["int168",{"_index":3241,"title":{"27-79":{}},"name":{},"text":{"27":{}},"component":{}}],["int176",{"_index":3239,"title":{"27-78":{}},"name":{},"text":{"27":{}},"component":{}}],["int184",{"_index":3237,"title":{"27-77":{}},"name":{},"text":{"27":{}},"component":{}}],["int192",{"_index":3235,"title":{"27-76":{}},"name":{},"text":{"27":{}},"component":{}}],["int200",{"_index":3233,"title":{"27-75":{}},"name":{},"text":{"27":{}},"component":{}}],["int208",{"_index":3231,"title":{"27-74":{}},"name":{},"text":{"27":{}},"component":{}}],["int216",{"_index":3229,"title":{"27-73":{}},"name":{},"text":{"27":{}},"component":{}}],["int224",{"_index":3227,"title":{"27-72":{}},"name":{},"text":{"27":{}},"component":{}}],["int232",{"_index":3225,"title":{"27-71":{}},"name":{},"text":{"27":{}},"component":{}}],["int24",{"_index":3277,"title":{"27-97":{}},"name":{},"text":{"27":{}},"component":{}}],["int240",{"_index":3223,"title":{"27-70":{}},"name":{},"text":{"27":{}},"component":{}}],["int248",{"_index":3220,"title":{"27-69":{}},"name":{},"text":{"27":{}},"component":{}}],["int256",{"_index":1779,"title":{"27-31":{},"27-32":{},"27-33":{},"27-34":{},"27-35":{},"27-68":{},"27-69":{},"27-70":{},"27-71":{},"27-72":{},"27-73":{},"27-74":{},"27-75":{},"27-76":{},"27-77":{},"27-78":{},"27-79":{},"27-80":{},"27-81":{},"27-82":{},"27-83":{},"27-84":{},"27-85":{},"27-86":{},"27-87":{},"27-88":{},"27-89":{},"27-90":{},"27-91":{},"27-92":{},"27-93":{},"27-94":{},"27-95":{},"27-96":{},"27-97":{},"27-98":{},"27-99":{},"27-100":{},"27-103":{},"27-104":{},"27-420":{},"27-444":{},"27-470":{},"27-471":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["int256slot",{"_index":4012,"title":{},"name":{},"text":{"27":{}},"component":{}}],["int256slottyp",{"_index":4019,"title":{},"name":{},"text":{"27":{}},"component":{}}],["int32",{"_index":3275,"title":{"27-96":{}},"name":{},"text":{"27":{}},"component":{}}],["int40",{"_index":3273,"title":{"27-95":{}},"name":{},"text":{"27":{}},"component":{}}],["int48",{"_index":3271,"title":{"27-94":{}},"name":{},"text":{"27":{}},"component":{}}],["int56",{"_index":3269,"title":{"27-93":{}},"name":{},"text":{"27":{}},"component":{}}],["int64",{"_index":3267,"title":{"27-92":{}},"name":{},"text":{"27":{}},"component":{}}],["int72",{"_index":3265,"title":{"27-91":{}},"name":{},"text":{"27":{}},"component":{}}],["int8",{"_index":3281,"title":{"27-99":{}},"name":{},"text":{"27":{}},"component":{}}],["int80",{"_index":3263,"title":{"27-90":{}},"name":{},"text":{"27":{}},"component":{}}],["int88",{"_index":3261,"title":{"27-89":{}},"name":{},"text":{"27":{}},"component":{}}],["int96",{"_index":3259,"title":{"27-88":{}},"name":{},"text":{"27":{}},"component":{}}],["intact",{"_index":2131,"title":{},"name":{},"text":{"20":{}},"component":{}}],["integ",{"_index":1141,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{}}],["integr",{"_index":443,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"24":{}},"component":{}}],["intend",{"_index":1716,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"27":{}},"component":{}}],["intens",{"_index":937,"title":{},"name":{},"text":{"6":{}},"component":{}}],["intent",{"_index":765,"title":{},"name":{},"text":{"2":{},"29":{}},"component":{}}],["interact",{"_index":111,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"14":{},"16":{},"19":{},"20":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["interchang",{"_index":1612,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interest",{"_index":378,"title":{},"name":{},"text":{"1":{},"9":{},"27":{}},"component":{}}],["interfac",{"_index":385,"title":{"24":{},"24-1":{}},"name":{"24":{}},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"9":{},"11":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["interfacehash",{"_index":2793,"title":{"24-41":{},"24-47":{},"24-51":{}},"name":{},"text":{"24":{}},"component":{}}],["interfaceid",{"_index":1929,"title":{"20-32":{},"20-49":{},"20-75":{},"23-56":{},"23-238":{},"24-48":{},"24-49":{},"24-50":{},"27-199":{},"27-201":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"28-17":{},"28-55":{},"29-88":{},"30-25":{},"30-57":{},"30-83":{},"30-91":{},"31-3":{}},"name":{},"text":{"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["interfaceid_erc721",{"_index":1768,"title":{},"name":{},"text":{"18":{}},"component":{}}],["interfaceimplementerset",{"_index":2805,"title":{"24-51":{}},"name":{},"text":{"24":{}},"component":{}}],["interfacenam",{"_index":2801,"title":{"24-47":{}},"name":{},"text":{"24":{}},"component":{}}],["interfer",{"_index":4353,"title":{},"name":{},"text":{"30":{}},"component":{}}],["intermedi",{"_index":4026,"title":{},"name":{},"text":{"27":{}},"component":{}}],["intern",{"_index":257,"title":{"20-4":{},"20-6":{},"20-9":{},"20-16":{},"20-34":{},"20-35":{},"20-40":{},"20-41":{},"20-42":{},"20-53":{},"20-54":{},"20-74":{},"20-80":{},"20-81":{},"20-82":{},"20-89":{},"20-91":{},"20-93":{},"20-95":{},"20-97":{},"20-98":{},"20-176":{},"20-177":{},"20-178":{},"20-179":{},"20-180":{},"20-182":{},"20-184":{},"20-186":{},"20-193":{},"20-208":{},"20-212":{},"20-213":{},"20-215":{},"21-10":{},"21-11":{},"21-12":{},"21-13":{},"21-18":{},"21-24":{},"21-25":{},"21-30":{},"21-32":{},"21-33":{},"21-37":{},"21-39":{},"21-40":{},"21-42":{},"21-44":{},"21-45":{},"21-49":{},"21-50":{},"21-51":{},"21-52":{},"21-53":{},"21-54":{},"21-55":{},"21-62":{},"21-63":{},"21-64":{},"21-71":{},"21-72":{},"21-73":{},"21-80":{},"21-81":{},"21-82":{},"21-93":{},"21-94":{},"21-95":{},"21-96":{},"21-97":{},"21-98":{},"21-110":{},"21-111":{},"21-112":{},"21-119":{},"21-120":{},"21-121":{},"21-122":{},"21-123":{},"21-124":{},"21-125":{},"21-129":{},"21-130":{},"21-131":{},"21-132":{},"21-133":{},"21-134":{},"21-137":{},"21-138":{},"21-139":{},"21-140":{},"21-141":{},"21-142":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-149":{},"21-150":{},"21-151":{},"21-152":{},"21-153":{},"21-154":{},"21-155":{},"21-156":{},"21-158":{},"21-159":{},"21-160":{},"21-161":{},"21-162":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"21-167":{},"21-168":{},"21-172":{},"21-173":{},"21-174":{},"21-175":{},"21-176":{},"22-16":{},"23-54":{},"23-67":{},"23-68":{},"23-69":{},"23-70":{},"23-71":{},"23-72":{},"23-74":{},"23-76":{},"23-78":{},"23-80":{},"23-88":{},"23-89":{},"23-91":{},"23-95":{},"23-96":{},"23-109":{},"23-110":{},"23-111":{},"23-117":{},"23-118":{},"23-119":{},"23-121":{},"23-123":{},"23-127":{},"23-129":{},"23-135":{},"23-141":{},"23-145":{},"23-148":{},"23-152":{},"23-153":{},"23-154":{},"23-161":{},"23-165":{},"23-166":{},"23-167":{},"23-168":{},"23-172":{},"23-176":{},"23-177":{},"23-178":{},"23-179":{},"23-184":{},"23-191":{},"23-192":{},"23-193":{},"23-198":{},"23-200":{},"23-203":{},"23-207":{},"23-221":{},"23-225":{},"23-226":{},"23-227":{},"23-228":{},"23-229":{},"23-230":{},"23-253":{},"23-255":{},"23-269":{},"25-3":{},"25-6":{},"25-7":{},"25-8":{},"25-16":{},"25-17":{},"25-18":{},"25-24":{},"26-4":{},"26-5":{},"26-6":{},"26-11":{},"26-13":{},"26-14":{},"26-15":{},"26-16":{},"26-17":{},"26-18":{},"26-23":{},"26-24":{},"26-25":{},"26-29":{},"26-30":{},"26-39":{},"26-40":{},"26-51":{},"26-52":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-57":{},"26-58":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"26-63":{},"26-70":{},"26-71":{},"26-72":{},"26-73":{},"26-82":{},"26-83":{},"26-84":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-8":{},"27-9":{},"27-10":{},"27-11":{},"27-12":{},"27-13":{},"27-14":{},"27-15":{},"27-16":{},"27-17":{},"27-18":{},"27-19":{},"27-20":{},"27-21":{},"27-22":{},"27-23":{},"27-24":{},"27-25":{},"27-26":{},"27-27":{},"27-28":{},"27-29":{},"27-31":{},"27-32":{},"27-33":{},"27-34":{},"27-35":{},"27-37":{},"27-38":{},"27-39":{},"27-40":{},"27-41":{},"27-42":{},"27-43":{},"27-44":{},"27-45":{},"27-46":{},"27-47":{},"27-48":{},"27-49":{},"27-50":{},"27-51":{},"27-52":{},"27-53":{},"27-54":{},"27-55":{},"27-56":{},"27-57":{},"27-58":{},"27-59":{},"27-60":{},"27-61":{},"27-62":{},"27-63":{},"27-64":{},"27-65":{},"27-66":{},"27-67":{},"27-68":{},"27-69":{},"27-70":{},"27-71":{},"27-72":{},"27-73":{},"27-74":{},"27-75":{},"27-76":{},"27-77":{},"27-78":{},"27-79":{},"27-80":{},"27-81":{},"27-82":{},"27-83":{},"27-84":{},"27-85":{},"27-86":{},"27-87":{},"27-88":{},"27-89":{},"27-90":{},"27-91":{},"27-92":{},"27-93":{},"27-94":{},"27-95":{},"27-96":{},"27-97":{},"27-98":{},"27-99":{},"27-100":{},"27-101":{},"27-108":{},"27-109":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-118":{},"27-119":{},"27-120":{},"27-122":{},"27-123":{},"27-125":{},"27-126":{},"27-127":{},"27-128":{},"27-129":{},"27-130":{},"27-132":{},"27-135":{},"27-136":{},"27-137":{},"27-138":{},"27-139":{},"27-140":{},"27-142":{},"27-143":{},"27-144":{},"27-145":{},"27-147":{},"27-148":{},"27-150":{},"27-152":{},"27-153":{},"27-154":{},"27-155":{},"27-156":{},"27-157":{},"27-158":{},"27-159":{},"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{},"27-172":{},"27-173":{},"27-177":{},"27-182":{},"27-184":{},"27-185":{},"27-186":{},"27-187":{},"27-194":{},"27-195":{},"27-203":{},"27-204":{},"27-205":{},"27-206":{},"27-207":{},"27-210":{},"27-211":{},"27-212":{},"27-213":{},"27-215":{},"27-216":{},"27-217":{},"27-218":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{},"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-248":{},"27-249":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-258":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-266":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{},"27-271":{},"27-272":{},"27-273":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-282":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{},"27-289":{},"27-290":{},"27-291":{},"27-292":{},"27-293":{},"27-294":{},"27-295":{},"27-296":{},"27-297":{},"27-298":{},"27-299":{},"27-300":{},"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{},"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-315":{},"27-316":{},"27-317":{},"27-319":{},"27-320":{},"27-321":{},"27-322":{},"27-323":{},"27-324":{},"27-325":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{},"27-333":{},"27-334":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-341":{},"27-342":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{},"27-349":{},"27-350":{},"27-353":{},"27-354":{},"27-355":{},"27-356":{},"27-357":{},"27-358":{},"27-359":{},"27-360":{},"27-361":{},"27-362":{},"27-363":{},"27-364":{},"27-365":{},"27-366":{},"27-367":{},"27-368":{},"27-369":{},"27-370":{},"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-376":{},"27-379":{},"27-380":{},"27-381":{},"27-384":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-389":{},"27-390":{},"27-393":{},"27-394":{},"27-395":{},"27-396":{},"27-397":{},"27-398":{},"27-399":{},"27-400":{},"27-401":{},"27-402":{},"27-403":{},"27-404":{},"27-405":{},"27-406":{},"27-407":{},"27-408":{},"27-409":{},"27-410":{},"27-411":{},"27-412":{},"27-414":{},"27-415":{},"27-416":{},"27-417":{},"27-419":{},"27-420":{},"27-421":{},"27-422":{},"27-423":{},"27-424":{},"27-425":{},"27-428":{},"27-429":{},"27-430":{},"27-431":{},"27-432":{},"27-433":{},"27-437":{},"27-438":{},"27-439":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-454":{},"27-455":{},"27-456":{},"27-457":{},"27-458":{},"27-459":{},"27-460":{},"27-461":{},"27-462":{},"27-463":{},"27-464":{},"27-465":{},"27-466":{},"27-467":{},"27-468":{},"27-469":{},"27-470":{},"27-471":{},"27-475":{},"27-476":{},"27-477":{},"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-529":{},"27-530":{},"27-531":{},"27-532":{},"27-533":{},"27-534":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{},"27-693":{},"27-694":{},"27-695":{},"27-696":{},"27-697":{},"27-698":{},"27-699":{},"27-700":{},"27-701":{},"27-702":{},"27-703":{},"27-705":{},"27-706":{},"28-16":{},"28-25":{},"28-26":{},"28-27":{},"28-28":{},"28-29":{},"28-30":{},"28-31":{},"28-32":{},"28-33":{},"28-34":{},"28-40":{},"28-48":{},"28-51":{},"28-52":{},"28-59":{},"28-60":{},"29-16":{},"29-26":{},"29-27":{},"29-28":{},"29-29":{},"29-30":{},"29-31":{},"29-32":{},"29-40":{},"29-50":{},"29-52":{},"29-56":{},"29-58":{},"29-59":{},"29-60":{},"29-65":{},"29-70":{},"29-75":{},"29-76":{},"29-83":{},"29-85":{},"29-86":{},"29-99":{},"29-117":{},"29-118":{},"29-119":{},"29-120":{},"29-121":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"29-139":{},"29-140":{},"30-24":{},"30-31":{},"30-39":{},"30-40":{},"30-41":{},"30-42":{},"30-43":{},"30-44":{},"30-45":{},"30-46":{},"30-47":{},"30-48":{},"30-49":{},"30-50":{},"30-51":{},"30-52":{},"30-53":{},"30-54":{},"30-55":{},"30-61":{},"30-62":{},"30-69":{},"30-73":{},"30-74":{},"30-75":{},"30-76":{},"30-77":{},"30-85":{},"30-87":{},"30-88":{},"30-89":{},"30-93":{},"30-97":{},"30-104":{},"31-5":{},"31-6":{},"31-7":{},"31-8":{},"31-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"9":{},"12":{},"14":{},"17":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["interoper",{"_index":1253,"title":{},"name":{},"text":{"11":{},"16":{}},"component":{}}],["interpret",{"_index":1522,"title":{},"name":{},"text":{"14":{},"23":{},"27":{},"28":{},"31":{}},"component":{}}],["intervent",{"_index":2085,"title":{},"name":{},"text":{"20":{}},"component":{}}],["intrins",{"_index":1164,"title":{},"name":{},"text":{"9":{}},"component":{}}],["introduc",{"_index":878,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"23":{},"29":{}},"component":{}}],["introduct",{"_index":1319,"title":{"14-1":{}},"name":{},"text":{"15":{}},"component":{}}],["introductori",{"_index":1586,"title":{},"name":{},"text":{"15":{}},"component":{}}],["introspect",{"_index":1677,"title":{"18-7":{},"27-197":{}},"name":{},"text":{"27":{}},"component":{}}],["intuit",{"_index":3746,"title":{},"name":{},"text":{"27":{}},"component":{}}],["invalid",{"_index":1527,"title":{},"name":{},"text":{"14":{},"25":{},"26":{},"27":{},"30":{},"31":{}},"component":{}}],["invalid_internal_funct",{"_index":3680,"title":{"27-703":{}},"name":{},"text":{"27":{}},"component":{}}],["invalidaccountnonc",{"_index":2591,"title":{"27-196":{}},"name":{},"text":{"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["invalidcontentstyp",{"_index":3302,"title":{"27-131":{}},"name":{},"text":{"27":{}},"component":{}}],["invalidiniti",{"_index":3036,"title":{"26-75":{}},"name":{},"text":{"26":{}},"component":{}}],["invalidshortstr",{"_index":3427,"title":{"27-435":{}},"name":{},"text":{"27":{}},"component":{}}],["invari",{"_index":3947,"title":{},"name":{},"text":{"27":{},"30":{}},"component":{}}],["invers",{"_index":3061,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["invmod",{"_index":3150,"title":{"27-15":{}},"name":{},"text":{"27":{}},"component":{}}],["invmodprim",{"_index":3151,"title":{"27-16":{}},"name":{},"text":{"27":{}},"component":{}}],["invoc",{"_index":2114,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["invok",{"_index":858,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["involv",{"_index":1545,"title":{},"name":{},"text":{"15":{},"18":{},"21":{},"27":{}},"component":{}}],["ipf",{"_index":1023,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["is_not_721_token",{"_index":1772,"title":{},"name":{},"text":{"18":{}},"component":{}}],["isaccessmanagerignor",{"_index":2447,"title":{"23-146":{}},"name":{},"text":{"23":{}},"component":{}}],["isapprovedforal",{"_index":4043,"title":{"28-6":{},"28-22":{},"30-11":{},"30-35":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["isconsumingscheduledop",{"_index":2019,"title":{"20-201":{},"20-211":{}},"name":{},"text":{"20":{}},"component":{}}],["ismemb",{"_index":1979,"title":{"20-113":{},"20-168":{}},"name":{},"text":{},"component":{}}],["ismoduleinstal",{"_index":2300,"title":{},"name":{},"text":{"21":{}},"component":{}}],["ismoduletyp",{"_index":2221,"title":{"21-107":{},"21-115":{}},"name":{},"text":{"21":{}},"component":{}}],["isn’t",{"_index":226,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"17":{},"20":{}},"component":{}}],["isoper",{"_index":2518,"title":{"23-239":{}},"name":{},"text":{"23":{}},"component":{}}],["isoperationdon",{"_index":2521,"title":{"23-242":{}},"name":{},"text":{"23":{}},"component":{}}],["isoperationpend",{"_index":2519,"title":{"23-240":{}},"name":{},"text":{"23":{}},"component":{}}],["isoperationreadi",{"_index":2520,"title":{"23-241":{}},"name":{},"text":{"23":{}},"component":{}}],["issign",{"_index":2203,"title":{"21-87":{}},"name":{},"text":{"21":{}},"component":{}}],["issu",{"_index":362,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"14":{},"15":{},"27":{},"29":{},"30":{}},"component":{}}],["istanbul",{"_index":3871,"title":{},"name":{},"text":{"27":{}},"component":{}}],["istargetclos",{"_index":1970,"title":{"20-106":{},"20-161":{}},"name":{},"text":{"20":{}},"component":{}}],["istrustedforward",{"_index":2931,"title":{"25-5":{},"25-16":{}},"name":{},"text":{"25":{}},"component":{}}],["isvaliderc1271signaturenow",{"_index":3311,"title":{"27-148":{}},"name":{},"text":{"27":{}},"component":{}}],["isvalidsignatur",{"_index":738,"title":{"21-17":{},"24-28":{},"27-134":{}},"name":{},"text":{"2":{},"21":{},"24":{},"27":{}},"component":{}}],["isvalidsignaturenow",{"_index":3310,"title":{"27-147":{}},"name":{},"text":{"27":{}},"component":{}}],["isvalidsignaturewithsend",{"_index":2222,"title":{"21-109":{}},"name":{},"text":{"21":{}},"component":{}}],["item",{"_index":942,"title":{},"name":{},"text":{"6":{},"10":{},"18":{},"27":{}},"component":{}}],["item’",{"_index":1015,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["iter",{"_index":3691,"title":{},"name":{},"text":{"27":{}},"component":{}}],["itm",{"_index":1238,"title":{},"name":{},"text":{"10":{}},"component":{}}],["itransparentupgradeableproxi",{"_index":3011,"title":{"26-34":{}},"name":{},"text":{"26":{}},"component":{}}],["itransparentupgradeableproxy.upgradetoandcal",{"_index":3083,"title":{},"name":{},"text":{"26":{}},"component":{}}],["itself",{"_index":274,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["it’",{"_index":517,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"14":{},"18":{},"20":{},"26":{},"27":{},"29":{}},"component":{}}],["ivot",{"_index":1410,"title":{"23-123":{}},"name":{},"text":{"14":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["ivotes.delegatechang",{"_index":2726,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ivotes.delegatevoteschang",{"_index":2727,"title":{},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["javascript",{"_index":480,"title":{},"name":{},"text":{"1":{},"18":{},"23":{},"27":{}},"component":{}}],["json",{"_index":998,"title":{},"name":{},"text":{"6":{},"10":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["judg",{"_index":867,"title":{},"name":{},"text":{"3":{}},"component":{}}],["judici",{"_index":2141,"title":{},"name":{},"text":{"20":{}},"component":{}}],["jump",{"_index":3128,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["keccak",{"_index":3078,"title":{},"name":{},"text":{"26":{}},"component":{}}],["keccak256",{"_index":202,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["keep",{"_index":454,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"14":{},"15":{},"18":{},"20":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["kept",{"_index":1823,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["key",{"_index":342,"title":{"21-7":{},"27-215":{},"27-216":{},"27-217":{},"27-220":{},"27-221":{},"27-222":{},"27-223":{},"27-224":{},"27-225":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-248":{},"27-249":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-268":{},"27-269":{},"27-270":{},"27-271":{},"27-272":{},"27-273":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-284":{},"27-285":{},"27-286":{},"27-287":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"18":{},"21":{},"23":{},"27":{}},"component":{}}],["keyword",{"_index":1278,"title":{},"name":{},"text":{"12":{}},"component":{}}],["kind",{"_index":853,"title":{"16-2":{}},"name":{},"text":{"3":{},"7":{},"25":{},"26":{}},"component":{}}],["kind]#intern",{"_index":3820,"title":{},"name":{},"text":{"27":{}},"component":{}}],["know",{"_index":471,"title":{},"name":{},"text":{"1":{},"7":{},"18":{},"20":{},"27":{}},"component":{}}],["knowledg",{"_index":2647,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["known",{"_index":249,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"18":{},"20":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["kyc",{"_index":320,"title":{},"name":{},"text":{"1":{}},"component":{}}],["l2",{"_index":1365,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["lab",{"_index":3722,"title":{},"name":{},"text":{"27":{}},"component":{}}],["label",{"_index":513,"title":{"20-114":{},"20-135":{},"20-169":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["labelrol",{"_index":514,"title":{"20-114":{},"20-169":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["lack",{"_index":972,"title":{},"name":{},"text":{"6":{},"10":{},"27":{}},"component":{}}],["languag",{"_index":3703,"title":{},"name":{},"text":{"27":{}},"component":{}}],["larg",{"_index":1425,"title":{},"name":{},"text":{"14":{},"18":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["larger",{"_index":1144,"title":{},"name":{},"text":{"8":{},"20":{},"29":{}},"component":{}}],["largest",{"_index":3710,"title":{},"name":{},"text":{"27":{}},"component":{}}],["last",{"_index":2575,"title":{"27-324":{}},"name":{},"text":{"23":{},"27":{},"29":{}},"component":{}}],["lastli",{"_index":1472,"title":{},"name":{},"text":{"14":{}},"component":{}}],["late",{"_index":2705,"title":{},"name":{},"text":{"23":{}},"component":{}}],["latequorumvoteextens",{"_index":2490,"title":{"23-201":{}},"name":{},"text":{"23":{}},"component":{}}],["latequorumvoteextensionset",{"_index":2496,"title":{"23-205":{}},"name":{},"text":{"23":{}},"component":{}}],["later",{"_index":262,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"18":{},"20":{},"23":{},"27":{}},"component":{}}],["latest",{"_index":1546,"title":{"27-331":{},"27-339":{},"27-347":{}},"name":{},"text":{"15":{},"20":{},"27":{}},"component":{}}],["latestcheckpoint",{"_index":3371,"title":{"27-332":{},"27-340":{},"27-348":{}},"name":{},"text":{"27":{}},"component":{}}],["latter",{"_index":4109,"title":{},"name":{},"text":{"28":{},"30":{},"31":{}},"component":{}}],["layer",{"_index":136,"title":{},"name":{},"text":{"1":{},"2":{},"27":{}},"component":{}}],["layout",{"_index":815,"title":{"3-8":{}},"name":{},"text":{"3":{},"15":{},"17":{},"26":{},"27":{}},"component":{}}],["lead",{"_index":150,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"14":{},"27":{}},"component":{}}],["leaf",{"_index":1750,"title":{"27-152":{},"27-153":{},"27-154":{},"27-155":{},"27-156":{},"27-157":{},"27-158":{},"27-159":{},"27-374":{},"27-375":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["leaf/inn",{"_index":3863,"title":{},"name":{},"text":{"27":{}},"component":{}}],["leafindex",{"_index":1818,"title":{},"name":{},"text":{"18":{}},"component":{}}],["learn",{"_index":1054,"title":{"15-7":{}},"name":{},"text":{"7":{},"10":{},"14":{},"15":{},"16":{},"19":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["leav",{"_index":401,"title":{"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{}},"name":{},"text":{"1":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["leaves.length",{"_index":3859,"title":{},"name":{},"text":{"27":{}},"component":{}}],["left",{"_index":2582,"title":{"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-529":{},"27-530":{},"27-531":{},"27-532":{},"27-533":{},"27-534":{}},"name":{},"text":{"23":{},"27":{}},"component":{}}],["legendari",{"_index":1004,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["len",{"_index":3409,"title":{"27-410":{},"27-411":{},"27-412":{}},"name":{},"text":{"27":{}},"component":{}}],["lend",{"_index":1161,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["length",{"_index":2153,"title":{"27-115":{},"27-218":{},"27-226":{},"27-234":{},"27-242":{},"27-250":{},"27-258":{},"27-266":{},"27-274":{},"27-282":{},"27-292":{},"27-298":{},"27-304":{},"27-316":{},"27-323":{},"27-333":{},"27-341":{},"27-349":{},"27-360":{},"27-369":{},"27-422":{},"27-426":{}},"name":{},"text":{"20":{},"23":{},"24":{},"25":{},"27":{},"28":{},"30":{}},"component":{}}],["less",{"_index":936,"title":{},"name":{},"text":{"6":{},"18":{},"20":{},"23":{},"25":{},"27":{},"29":{}},"component":{}}],["lest",{"_index":43,"title":{},"name":{},"text":{"1":{}},"component":{}}],["let",{"_index":86,"title":{},"name":{},"text":{"1":{}},"component":{}}],["let’",{"_index":234,"title":{},"name":{},"text":{"1":{},"7":{},"14":{}},"component":{}}],["levareg",{"_index":630,"title":{},"name":{},"text":{"2":{}},"component":{}}],["level",{"_index":160,"title":{"27-372":{},"27-373":{}},"name":{},"text":{"1":{},"2":{},"15":{},"18":{},"20":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["leverag",{"_index":595,"title":{},"name":{},"text":{"2":{},"6":{},"10":{},"18":{},"27":{}},"component":{}}],["librari",{"_index":617,"title":{"27-377":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"12":{},"15":{},"17":{},"18":{},"21":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["libsolutil",{"_index":4036,"title":{},"name":{},"text":{"27":{}},"component":{}}],["licens",{"_index":65,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{},"27":{}},"component":{}}],["lifecycl",{"_index":1327,"title":{"14-11":{},"23-272":{}},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["lifo",{"_index":3693,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lift",{"_index":3875,"title":{},"name":{},"text":{"27":{}},"component":{}}],["light",{"_index":2921,"title":{},"name":{},"text":{"24":{}},"component":{}}],["lightweight",{"_index":2048,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["likewis",{"_index":1361,"title":{},"name":{},"text":{"14":{}},"component":{}}],["limit",{"_index":247,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["line",{"_index":1181,"title":{},"name":{},"text":{"9":{},"14":{}},"component":{}}],["linear",{"_index":1194,"title":{},"name":{},"text":{"9":{},"17":{},"22":{}},"component":{}}],["link",{"_index":410,"title":{},"name":{},"text":{"1":{},"2":{},"27":{}},"component":{}}],["liquid",{"_index":1175,"title":{},"name":{},"text":{"9":{}},"component":{}}],["list",{"_index":321,"title":{"24-1":{}},"name":{},"text":{"1":{},"3":{},"14":{},"17":{},"18":{},"27":{},"30":{}},"component":{}}],["liter",{"_index":1063,"title":{},"name":{},"text":{"7":{}},"component":{}}],["littl",{"_index":3726,"title":{},"name":{},"text":{"27":{}},"component":{}}],["live",{"_index":871,"title":{},"name":{},"text":{"3":{},"13":{},"14":{},"23":{}},"component":{}}],["load",{"_index":1838,"title":{"21-152":{}},"name":{},"text":{"18":{},"21":{},"25":{},"27":{}},"component":{}}],["loan",{"_index":2713,"title":{},"name":{},"text":{"23":{},"24":{},"29":{}},"component":{}}],["locat",{"_index":1663,"title":{},"name":{},"text":{"17":{},"26":{},"27":{}},"component":{}}],["lock",{"_index":418,"title":{},"name":{},"text":{"1":{},"6":{},"18":{},"20":{},"22":{},"23":{},"26":{},"27":{},"30":{}},"component":{}}],["log",{"_index":1185,"title":{},"name":{},"text":{"9":{},"14":{},"20":{},"27":{}},"component":{}}],["log10",{"_index":3158,"title":{"27-25":{},"27-26":{}},"name":{},"text":{"27":{}},"component":{}}],["log2",{"_index":3157,"title":{"27-23":{},"27-24":{}},"name":{},"text":{"27":{}},"component":{}}],["log256",{"_index":3159,"title":{"27-27":{},"27-28":{}},"name":{},"text":{"27":{}},"component":{}}],["logic",{"_index":361,"title":{},"name":{},"text":{"1":{},"2":{},"11":{},"14":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["long",{"_index":490,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"17":{},"18":{},"20":{},"27":{},"30":{}},"component":{}}],["longer",{"_index":101,"title":{},"name":{},"text":{"1":{},"12":{},"23":{},"27":{},"30":{}},"component":{}}],["look",{"_index":305,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"10":{},"14":{},"15":{},"26":{},"27":{},"29":{}},"component":{}}],["lookup",{"_index":1512,"title":{},"name":{},"text":{"14":{},"18":{},"23":{},"27":{}},"component":{}}],["lose",{"_index":672,"title":{},"name":{},"text":{"2":{},"9":{},"20":{},"24":{}},"component":{}}],["loss",{"_index":4267,"title":{},"name":{},"text":{"29":{},"30":{}},"component":{}}],["lost",{"_index":3077,"title":{},"name":{},"text":{"26":{},"30":{}},"component":{}}],["lot",{"_index":3051,"title":{},"name":{},"text":{"26":{}},"component":{}}],["low",{"_index":3047,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["lower",{"_index":1722,"title":{},"name":{},"text":{"18":{},"27":{},"29":{}},"component":{}}],["lower_bound",{"_index":3979,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lowerbound",{"_index":3398,"title":{"27-400":{}},"name":{},"text":{"27":{}},"component":{}}],["lowerboundmemori",{"_index":3400,"title":{"27-402":{}},"name":{},"text":{"27":{}},"component":{}}],["lowercas",{"_index":990,"title":{},"name":{},"text":{"6":{}},"component":{}}],["lowerlookup",{"_index":3368,"title":{"27-328":{},"27-336":{},"27-344":{}},"name":{},"text":{"27":{}},"component":{}}],["lt",{"_index":1829,"title":{"27-705":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["m",{"_index":3154,"title":{"27-17":{},"27-18":{},"27-19":{},"27-20":{}},"name":{},"text":{"27":{}},"component":{}}],["machin",{"_index":2668,"title":{},"name":{},"text":{"23":{}},"component":{}}],["made",{"_index":565,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["magic",{"_index":4074,"title":{},"name":{},"text":{"28":{},"30":{}},"component":{}}],["magicvalu",{"_index":2782,"title":{"24-28":{}},"name":{},"text":{},"component":{}}],["magnitud",{"_index":4265,"title":{},"name":{},"text":{"29":{}},"component":{}}],["mail",{"_index":3796,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mailcont",{"_index":3798,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mailto",{"_index":3797,"title":{},"name":{},"text":{"27":{}},"component":{}}],["main",{"_index":1632,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{}}],["mainli",{"_index":1290,"title":{},"name":{},"text":{"12":{}},"component":{}}],["maintain",{"_index":448,"title":{},"name":{},"text":{"1":{},"3":{},"12":{}},"component":{}}],["mainten",{"_index":371,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["major",{"_index":428,"title":{"3-7":{}},"name":{},"text":{"1":{},"3":{},"14":{},"15":{},"27":{}},"component":{}}],["make",{"_index":216,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"11":{},"14":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["makerdao",{"_index":154,"title":{},"name":{},"text":{"1":{}},"component":{}}],["malici",{"_index":3103,"title":{},"name":{},"text":{"26":{}},"component":{}}],["malleabl",{"_index":1724,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["manag",{"_index":17,"title":{"1-9":{},"1-12":{},"23-141":{}},"name":{},"text":{"1":{},"14":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["manager.connect",{"_index":501,"title":{},"name":{},"text":{"1":{}},"component":{}}],["manager.grantrol",{"_index":486,"title":{},"name":{},"text":{"1":{}},"component":{}}],["manager.labelrol",{"_index":515,"title":{},"name":{},"text":{"1":{}},"component":{}}],["manager.settargetclos",{"_index":537,"title":{},"name":{},"text":{"1":{}},"component":{}}],["manager.settargetfunctionrol",{"_index":487,"title":{},"name":{},"text":{"1":{}},"component":{}}],["managerchang",{"_index":2806,"title":{"24-52":{}},"name":{},"text":{"24":{}},"component":{}}],["manager’",{"_index":478,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["mandatori",{"_index":4067,"title":{},"name":{},"text":{"28":{}},"component":{}}],["mani",{"_index":37,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"14":{},"15":{},"23":{},"26":{},"27":{}},"component":{}}],["manipul",{"_index":1810,"title":{},"name":{},"text":{"18":{},"27":{},"29":{}},"component":{}}],["manner",{"_index":1294,"title":{},"name":{},"text":{"12":{},"18":{},"27":{}},"component":{}}],["manual",{"_index":1083,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"26":{}},"component":{}}],["map",{"_index":340,"title":{"27-215":{},"27-216":{},"27-217":{},"27-218":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{},"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-248":{},"27-249":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-258":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-266":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{},"27-271":{},"27-272":{},"27-273":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-282":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{}},"name":{},"text":{"1":{},"16":{},"18":{},"27":{},"29":{}},"component":{}}],["mark",{"_index":2123,"title":{},"name":{},"text":{"20":{},"26":{},"27":{}},"component":{}}],["market",{"_index":1162,"title":{},"name":{},"text":{"9":{}},"component":{}}],["marketplac",{"_index":2890,"title":{},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["massiv",{"_index":930,"title":{},"name":{},"text":{"6":{}},"component":{}}],["master",{"_index":1542,"title":{},"name":{},"text":{"15":{}},"component":{}}],["match",{"_index":2667,"title":{},"name":{},"text":{"23":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["math",{"_index":1569,"title":{"18-8":{},"27-1":{},"27-2":{}},"name":{},"text":{"15":{},"18":{},"27":{},"29":{}},"component":{}}],["math.modexp",{"_index":3728,"title":{},"name":{},"text":{"27":{}},"component":{}}],["math.round",{"_index":3149,"title":{"27-14":{},"27-22":{},"27-24":{},"27-26":{},"27-28":{},"27-29":{},"29-117":{},"29-118":{}},"name":{},"text":{},"component":{}}],["math.rounding.ceil",{"_index":1220,"title":{},"name":{},"text":{"9":{}},"component":{}}],["mathemat",{"_index":1775,"title":{},"name":{},"text":{"18":{}},"component":{}}],["matter",{"_index":1616,"title":{},"name":{},"text":{"16":{}},"component":{}}],["max",{"_index":2657,"title":{"27-9":{},"27-32":{},"29-122":{},"29-123":{},"29-124":{},"29-125":{}},"name":{},"text":{"23":{},"27":{},"29":{},"30":{}},"component":{}}],["maxasset",{"_index":2826,"title":{"24-69":{},"24-75":{}},"name":{},"text":{},"component":{}}],["maxbatch",{"_index":4321,"title":{"30-79":{}},"name":{},"text":{"30":{}},"component":{}}],["maxdeposit",{"_index":2825,"title":{"24-69":{},"29-105":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["maxfeeperga",{"_index":782,"title":{"21-147":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["maxflashloan",{"_index":2815,"title":{"24-59":{},"29-73":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["maximum",{"_index":2080,"title":{},"name":{},"text":{"20":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["maxint256",{"_index":3776,"title":{},"name":{},"text":{"27":{}},"component":{}}],["maxloan",{"_index":4142,"title":{"29-79":{}},"name":{},"text":{"29":{}},"component":{}}],["maxmint",{"_index":2828,"title":{"24-72":{},"29-106":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["maxpriorityfe",{"_index":781,"title":{},"name":{},"text":{"2":{}},"component":{}}],["maxpriorityfeeperga",{"_index":2260,"title":{"21-146":{}},"name":{},"text":{"21":{}},"component":{}}],["maxredeem",{"_index":2833,"title":{"24-78":{},"29-108":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["maxshar",{"_index":2829,"title":{"24-72":{},"24-78":{}},"name":{},"text":{},"component":{}}],["maxwithdraw",{"_index":2831,"title":{"24-75":{},"29-107":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["mc",{"_index":1649,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mc.getaddress",{"_index":1653,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mc.waitfordeploy",{"_index":1651,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mco",{"_index":1639,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mean",{"_index":99,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{}},"component":{}}],["meaningfulli",{"_index":4093,"title":{},"name":{},"text":{"28":{}},"component":{}}],["meant",{"_index":1359,"title":{},"name":{},"text":{"14":{},"23":{},"26":{},"29":{}},"component":{}}],["measur",{"_index":299,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"15":{},"20":{},"23":{},"27":{}},"component":{}}],["mechan",{"_index":276,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"12":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["medium",{"_index":1116,"title":{},"name":{},"text":{"8":{}},"component":{}}],["meet",{"_index":2674,"title":{},"name":{},"text":{"23":{}},"component":{}}],["member",{"_index":351,"title":{},"name":{},"text":{"1":{},"3":{},"20":{},"27":{}},"component":{}}],["members.push",{"_index":353,"title":{},"name":{},"text":{"1":{}},"component":{}}],["membership",{"_index":2068,"title":{},"name":{},"text":{"20":{}},"component":{}}],["member’",{"_index":553,"title":{},"name":{},"text":{"1":{}},"component":{}}],["memori",{"_index":658,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"14":{},"18":{},"20":{},"27":{}},"component":{}}],["mempool",{"_index":601,"title":{},"name":{},"text":{"2":{},"25":{}},"component":{}}],["merkl",{"_index":1675,"title":{"18-6":{},"18-10":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["merkleproof",{"_index":1754,"title":{"27-151":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["merkleproofinvalidmultiproof",{"_index":3322,"title":{"27-168":{}},"name":{},"text":{"27":{}},"component":{}}],["merkleroot",{"_index":3319,"title":{"27-161":{},"27-163":{},"27-165":{},"27-167":{}},"name":{},"text":{},"component":{}}],["merkletre",{"_index":1756,"title":{"27-371":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["merkletree.bytes32pushtre",{"_index":1813,"title":{"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-376":{}},"name":{},"text":{"18":{}},"component":{}}],["messag",{"_index":669,"title":{"27-143":{}},"name":{},"text":{"2":{},"18":{},"25":{},"27":{},"29":{}},"component":{}}],["message:\\n",{"_index":1697,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["message:\\n32",{"_index":3816,"title":{},"name":{},"text":{"27":{}},"component":{}}],["messageenvelopeutil",{"_index":3293,"title":{"27-124":{}},"name":{},"text":{"27":{}},"component":{}}],["messageenvelopeutils.topersonalsignenvelopehash",{"_index":3828,"title":{},"name":{},"text":{"27":{}},"component":{}}],["messageenvelopeutils.totypeddataenvelopehash",{"_index":3827,"title":{},"name":{},"text":{"27":{}},"component":{}}],["messagehash",{"_index":3305,"title":{"27-142":{}},"name":{},"text":{"27":{}},"component":{}}],["messagehashutil",{"_index":1699,"title":{"27-141":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["messagehashutils'",{"_index":1702,"title":{},"name":{},"text":{"18":{}},"component":{}}],["messagehashutils.toethsignedmessagehash",{"_index":3783,"title":{},"name":{},"text":{"27":{}},"component":{}}],["met",{"_index":2905,"title":{},"name":{},"text":{"24":{},"25":{}},"component":{}}],["meta",{"_index":2927,"title":{"25":{}},"name":{},"text":{"24":{},"25":{},"26":{},"27":{}},"component":{}}],["metadata",{"_index":971,"title":{},"name":{},"text":{"6":{},"10":{},"18":{},"29":{},"30":{}},"component":{}}],["metadataupd",{"_index":4379,"title":{},"name":{},"text":{"30":{}},"component":{}}],["metamask",{"_index":3791,"title":{},"name":{},"text":{"27":{}},"component":{}}],["metatx",{"_index":2951,"title":{},"name":{"25":{}},"text":{},"component":{}}],["method",{"_index":438,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{},"10":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["migrat",{"_index":561,"title":{},"name":{},"text":{"1":{},"4":{},"14":{},"22":{}},"component":{}}],["millisecond",{"_index":2082,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mimic",{"_index":3112,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["min",{"_index":3145,"title":{"27-10":{},"27-33":{}},"name":{},"text":{"27":{}},"component":{}}],["mind",{"_index":106,"title":{},"name":{},"text":{"1":{},"2":{},"20":{},"27":{},"28":{}},"component":{}}],["mindelay",{"_index":2517,"title":{"23-236":{},"23-265":{}},"name":{},"text":{"23":{}},"component":{}}],["mindelaychang",{"_index":2534,"title":{"23-263":{}},"name":{},"text":{"23":{}},"component":{}}],["mine",{"_index":2723,"title":{},"name":{},"text":{"23":{}},"component":{}}],["miner",{"_index":1052,"title":{"7-2":{}},"name":{},"text":{"7":{}},"component":{}}],["minim",{"_index":711,"title":{"26-49":{}},"name":{},"text":{"2":{},"9":{},"14":{},"23":{},"24":{},"26":{}},"component":{}}],["minimum",{"_index":16,"title":{"1-8":{}},"name":{},"text":{"1":{},"3":{},"20":{},"23":{},"29":{}},"component":{}}],["minor",{"_index":818,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{}}],["minsetback",{"_index":1969,"title":{"20-105":{},"20-160":{}},"name":{},"text":{"20":{}},"component":{}}],["mint",{"_index":31,"title":{"24-74":{},"29-114":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"9":{},"10":{},"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["minter",{"_index":177,"title":{},"name":{},"text":{"1":{}},"component":{}}],["minter_rol",{"_index":201,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mintercount",{"_index":348,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mintminerreward",{"_index":1096,"title":{},"name":{},"text":{"7":{}},"component":{}}],["minu",{"_index":1659,"title":{},"name":{},"text":{"17":{},"23":{}},"component":{}}],["minut",{"_index":2703,"title":{},"name":{},"text":{"23":{}},"component":{}}],["misbehav",{"_index":363,"title":{},"name":{},"text":{"1":{}},"component":{}}],["misc",{"_index":1680,"title":{"18-12":{}},"name":{},"text":{},"component":{}}],["miscellan",{"_index":3683,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mismatch",{"_index":2580,"title":{},"name":{},"text":{"23":{},"24":{},"29":{}},"component":{}}],["misplac",{"_index":2042,"title":{},"name":{},"text":{"20":{}},"component":{}}],["miss",{"_index":2046,"title":{},"name":{},"text":{"20":{},"26":{},"27":{}},"component":{}}],["missingaccountfund",{"_index":2162,"title":{"21-8":{},"21-11":{}},"name":{},"text":{"21":{}},"component":{}}],["mistak",{"_index":2035,"title":{},"name":{},"text":{"20":{},"23":{},"29":{},"30":{}},"component":{}}],["mistakenli",{"_index":1830,"title":{},"name":{},"text":{"18":{}},"component":{}}],["misunderstood",{"_index":1596,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mit",{"_index":67,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{},"27":{}},"component":{}}],["mitig",{"_index":294,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"29":{}},"component":{}}],["mix",{"_index":1604,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["mixedcas",{"_index":1518,"title":{},"name":{},"text":{"14":{}},"component":{}}],["mjölnir",{"_index":1003,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["mnft",{"_index":1556,"title":{},"name":{},"text":{"15":{}},"component":{}}],["mobil",{"_index":641,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mod",{"_index":3729,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mode",{"_index":523,"title":{"21-22":{},"21-23":{},"21-25":{},"21-50":{},"21-118":{},"21-119":{},"21-120":{},"21-121":{},"21-161":{},"21-162":{}},"name":{},"text":{"1":{},"14":{},"20":{},"21":{},"23":{},"27":{}},"component":{}}],["mode=timestamp",{"_index":1519,"title":{},"name":{},"text":{"14":{}},"component":{}}],["model",{"_index":2686,"title":{},"name":{},"text":{"23":{}},"component":{}}],["modepayload",{"_index":2275,"title":{"21-161":{},"21-162":{}},"name":{},"text":{},"component":{}}],["moder",{"_index":176,"title":{},"name":{},"text":{"1":{}},"component":{}}],["modeselector",{"_index":2274,"title":{"21-161":{},"21-162":{}},"name":{},"text":{},"component":{}}],["modexp",{"_index":3153,"title":{"27-17":{},"27-19":{}},"name":{},"text":{"27":{}},"component":{}}],["modif",{"_index":825,"title":{},"name":{},"text":{"3":{}},"component":{}}],["modifi",{"_index":183,"title":{"20-3":{},"20-31":{},"20-156":{},"20-207":{},"21-3":{},"21-4":{},"21-48":{},"23-53":{},"23-235":{},"26-67":{},"26-68":{},"26-69":{},"26-78":{},"26-79":{},"27-171":{},"27-176":{},"27-180":{},"27-181":{}},"name":{},"text":{"1":{},"3":{},"7":{},"12":{},"14":{},"15":{},"20":{},"21":{},"23":{},"26":{},"27":{}},"component":{}}],["modul",{"_index":576,"title":{"2-6":{},"11-2":{},"21-26":{},"21-27":{},"21-49":{},"21-51":{},"21-52":{},"21-54":{},"21-56":{},"23-104":{}},"name":{},"text":{"2":{},"11":{},"14":{},"20":{},"21":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["modular",{"_index":608,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"18":{},"23":{},"27":{}},"component":{}}],["module_type_valid",{"_index":718,"title":{},"name":{},"text":{"2":{}},"component":{}}],["moduleinitdata",{"_index":723,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["moduleinstal",{"_index":2306,"title":{},"name":{},"text":{"21":{}},"component":{}}],["modules/root/pages/extend",{"_index":1282,"title":{},"name":{},"text":{"12":{}},"component":{}}],["moduletypeid",{"_index":1265,"title":{"21-21":{},"21-26":{},"21-27":{},"21-49":{},"21-51":{},"21-52":{},"21-53":{},"21-107":{},"21-115":{}},"name":{},"text":{"11":{},"21":{}},"component":{}}],["moduleuninstal",{"_index":2307,"title":{},"name":{},"text":{"21":{}},"component":{}}],["modulo",{"_index":3734,"title":{},"name":{},"text":{"27":{}},"component":{}}],["modulu",{"_index":1735,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["moment",{"_index":1333,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"28":{}},"component":{}}],["money",{"_index":1597,"title":{},"name":{},"text":{"16":{}},"component":{}}],["monitor",{"_index":457,"title":{},"name":{},"text":{"1":{}},"component":{}}],["month",{"_index":435,"title":{},"name":{},"text":{"1":{}},"component":{}}],["more",{"_index":186,"title":{"15-7":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["mostli",{"_index":2061,"title":{},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{}}],["motiv",{"_index":1330,"title":{"14-16":{}},"name":{},"text":{},"component":{}}],["move",{"_index":893,"title":{},"name":{},"text":{"5":{},"6":{},"9":{},"23":{},"24":{},"26":{},"29":{},"30":{}},"component":{}}],["msg.data",{"_index":2607,"title":{},"name":{},"text":{"23":{},"25":{},"27":{}},"component":{}}],["msg.data.length",{"_index":2957,"title":{},"name":{},"text":{"25":{}},"component":{}}],["msg.sender",{"_index":213,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["msg.valu",{"_index":2961,"title":{},"name":{},"text":{"25":{},"26":{}},"component":{}}],["msgsender",{"_index":2004,"title":{"20-150":{},"20-153":{}},"name":{},"text":{"20":{}},"component":{}}],["msgvalu",{"_index":2947,"title":{"25-21":{}},"name":{},"text":{"25":{}},"component":{}}],["mtk",{"_index":1395,"title":{},"name":{},"text":{"14":{},"18":{},"26":{}},"component":{}}],["much",{"_index":1601,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"27":{},"31":{}},"component":{}}],["muldiv",{"_index":3147,"title":{"27-13":{},"27-14":{}},"name":{},"text":{"27":{}},"component":{}}],["multi",{"_index":907,"title":{"6-1":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["multical",{"_index":1683,"title":{"18-16":{},"27-472":{},"27-473":{}},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["multierc1271remainingsign",{"_index":2219,"title":{"21-105":{}},"name":{},"text":{"21":{}},"component":{}}],["multierc1271signeralreadyexist",{"_index":2216,"title":{"21-102":{}},"name":{},"text":{"21":{}},"component":{}}],["multierc1271signerdoesnotexist",{"_index":2217,"title":{"21-103":{}},"name":{},"text":{"21":{}},"component":{}}],["multierc1271unreachablethreshold",{"_index":2218,"title":{"21-104":{}},"name":{},"text":{"21":{}},"component":{}}],["multierc1271valid",{"_index":2202,"title":{"21-85":{}},"name":{},"text":{},"component":{}}],["multipl",{"_index":172,"title":{"17-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{}},"component":{}}],["multiproof",{"_index":3856,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multiproofverifi",{"_index":1755,"title":{"27-160":{},"27-162":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["multiproofverifycalldata",{"_index":3320,"title":{"27-164":{},"27-166":{}},"name":{},"text":{"27":{}},"component":{}}],["multisig",{"_index":147,"title":{},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["my_rol",{"_index":2051,"title":{},"name":{},"text":{"20":{}},"component":{}}],["myaccountecdsa",{"_index":634,"title":{},"name":{},"text":{"2":{}},"component":{}}],["myaccountp256",{"_index":649,"title":{},"name":{},"text":{"2":{}},"component":{}}],["myaccountrsa",{"_index":656,"title":{},"name":{},"text":{"2":{}},"component":{}}],["myaddress._supportsallinterfac",{"_index":1767,"title":{},"name":{},"text":{"18":{}},"component":{}}],["myaddress._supportsinterfac",{"_index":1766,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mybuff",{"_index":3928,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mycollect",{"_index":1636,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mycontract",{"_index":72,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{}}],["myerc115holdercontract",{"_index":1047,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mygovernor",{"_index":1444,"title":{},"name":{},"text":{"14":{}},"component":{}}],["myinterfac",{"_index":3882,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mymap",{"_index":3897,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mymodularaccount",{"_index":722,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["mymodularaccountecdsatypedsign",{"_index":734,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mynft",{"_index":1555,"title":{},"name":{},"text":{"15":{}},"component":{}}],["mypack",{"_index":4028,"title":{},"name":{},"text":{"27":{}},"component":{}}],["myset",{"_index":3914,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytoken",{"_index":206,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"26":{}},"component":{}}],["mytoken.getaddress",{"_index":535,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mytoken.getrolememb",{"_index":354,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mytoken.getrolemembercount",{"_index":350,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mytokentimestampbas",{"_index":1514,"title":{},"name":{},"text":{"14":{}},"component":{}}],["mytokenv2",{"_index":3120,"title":{},"name":{},"text":{"26":{}},"component":{}}],["mytokenwrap",{"_index":1399,"title":{},"name":{},"text":{"14":{}},"component":{}}],["mytyp",{"_index":4029,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytype.unwrap",{"_index":4031,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytype.wrap",{"_index":4030,"title":{},"name":{},"text":{"27":{}},"component":{}}],["n",{"_index":660,"title":{"21-42":{},"21-43":{},"21-77":{},"21-80":{},"21-83":{},"27-15":{},"27-35":{}},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["n+1",{"_index":3841,"title":{},"name":{},"text":{"27":{}},"component":{}}],["n/2",{"_index":1723,"title":{},"name":{},"text":{"18":{}},"component":{}}],["naiv",{"_index":1066,"title":{},"name":{},"text":{"7":{}},"component":{}}],["name",{"_index":504,"title":{"21-35":{},"23-4":{},"23-57":{},"24-86":{},"25-12":{},"27-118":{},"27-121":{},"27-130":{},"29-12":{},"29-17":{},"29-40":{},"30-16":{},"30-28":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"14":{},"17":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["name]#++typed_data_envelope_typehash",{"_index":3819,"title":{},"name":{},"text":{"27":{}},"component":{}}],["name_",{"_index":2407,"title":{"23-54":{},"29-16":{},"30-24":{}},"name":{},"text":{"23":{},"29":{},"30":{}},"component":{}}],["namespac",{"_index":1624,"title":{"17-6":{},"27-437":{}},"name":{},"text":{"17":{},"18":{},"27":{}},"component":{}}],["nation",{"_index":1704,"title":{},"name":{},"text":{"18":{}},"component":{}}],["nativ",{"_index":590,"title":{},"name":{},"text":{"2":{},"18":{},"22":{},"25":{},"26":{},"27":{}},"component":{}}],["navig",{"_index":1166,"title":{},"name":{},"text":{"9":{},"14":{}},"component":{}}],["near",{"_index":2357,"title":{},"name":{},"text":{"22":{}},"component":{}}],["nearli",{"_index":4254,"title":{},"name":{},"text":{"29":{}},"component":{}}],["necessari",{"_index":759,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"18":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["necessarili",{"_index":2724,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["need",{"_index":162,"title":{"24-4":{},"24-7":{},"24-20":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"8":{},"14":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["neededrol",{"_index":1927,"title":{"20-28":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["neededtimestamp",{"_index":2457,"title":{"23-157":{}},"name":{},"text":{"23":{}},"component":{}}],["needlessli",{"_index":1559,"title":{},"name":{},"text":{"15":{}},"component":{}}],["negat",{"_index":1311,"title":{},"name":{},"text":{"13":{}},"component":{}}],["neglig",{"_index":1199,"title":{},"name":{},"text":{"9":{}},"component":{}}],["nest",{"_index":679,"title":{},"name":{},"text":{"2":{},"26":{},"27":{}},"component":{}}],["network",{"_index":785,"title":{},"name":{},"text":{"2":{},"14":{},"23":{},"27":{}},"component":{}}],["never",{"_index":870,"title":{},"name":{},"text":{"3":{},"7":{},"20":{},"26":{},"27":{}},"component":{}}],["nevertheless",{"_index":866,"title":{},"name":{},"text":{"3":{}},"component":{}}],["new",{"_index":88,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"10":{},"14":{},"15":{},"17":{},"18":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["newadmin",{"_index":1938,"title":{"20-57":{},"20-60":{},"20-66":{},"20-84":{},"20-88":{},"20-89":{},"26-16":{}},"name":{},"text":{"20":{},"26":{}},"component":{}}],["newadminrol",{"_index":1923,"title":{"20-25":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["newauthor",{"_index":1986,"title":{"20-131":{},"20-195":{},"20-210":{},"20-212":{}},"name":{},"text":{"20":{}},"component":{}}],["newbasedelay",{"_index":2445,"title":{"23-144":{},"23-145":{}},"name":{},"text":{"23":{}},"component":{}}],["newbasedelaysecond",{"_index":2454,"title":{"23-155":{}},"name":{},"text":{"23":{}},"component":{}}],["newbeacon",{"_index":2996,"title":{"26-18":{}},"name":{},"text":{"26":{}},"component":{}}],["newdelay",{"_index":1942,"title":{"20-59":{},"20-63":{},"20-68":{},"20-86":{},"20-94":{},"20-95":{},"20-98":{},"20-120":{},"20-122":{},"20-175":{},"20-180":{},"20-183":{},"20-184":{},"23-254":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["newdur",{"_index":2536,"title":{"23-263":{}},"name":{},"text":{"23":{}},"component":{}}],["newer",{"_index":879,"title":{},"name":{},"text":{"3":{},"27":{}},"component":{}}],["newimplement",{"_index":1864,"title":{"26-14":{},"26-46":{},"26-81":{},"26-84":{}},"name":{},"text":{"18":{},"26":{},"27":{}},"component":{}}],["newimplementation.code.length",{"_index":1865,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["newli",{"_index":1477,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["newmanag",{"_index":2796,"title":{"24-43":{},"24-52":{}},"name":{},"text":{"24":{}},"component":{}}],["newmemb",{"_index":1991,"title":{"20-136":{}},"name":{},"text":{"20":{}},"component":{}}],["newown",{"_index":1910,"title":{"20-8":{},"20-9":{},"20-10":{},"20-15":{},"20-16":{},"20-18":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["newproposalthreshold",{"_index":2478,"title":{"23-190":{},"23-193":{},"23-196":{}},"name":{},"text":{"23":{}},"component":{}}],["newquorumnumer",{"_index":2436,"title":{"23-134":{},"23-135":{},"23-136":{}},"name":{},"text":{"23":{}},"component":{}}],["newroot",{"_index":3384,"title":{"27-374":{},"27-375":{}},"name":{},"text":{},"component":{}}],["newtimelock",{"_index":2464,"title":{"23-169":{},"23-170":{},"23-181":{},"23-182":{}},"name":{},"text":{"23":{}},"component":{}}],["newton’",{"_index":3737,"title":{},"name":{},"text":{"27":{}},"component":{}}],["newuri",{"_index":4052,"title":{"28-29":{}},"name":{},"text":{"28":{}},"component":{}}],["newvalu",{"_index":1834,"title":{"27-358":{},"27-359":{},"27-367":{},"27-368":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["newvot",{"_index":2721,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["newvoteextens",{"_index":2492,"title":{"23-202":{},"23-203":{},"23-205":{}},"name":{},"text":{"23":{}},"component":{}}],["newvotingdelay",{"_index":2474,"title":{"23-188":{},"23-191":{},"23-194":{}},"name":{},"text":{"23":{}},"component":{}}],["newvotingperiod",{"_index":2476,"title":{"23-189":{},"23-192":{},"23-195":{}},"name":{},"text":{"23":{}},"component":{}}],["next",{"_index":399,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"27":{}},"component":{}}],["nft",{"_index":2566,"title":{},"name":{},"text":{"23":{},"24":{},"28":{},"30":{},"31":{}},"component":{}}],["nist",{"_index":1707,"title":{},"name":{},"text":{"18":{}},"component":{}}],["node",{"_index":696,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["nomin",{"_index":2656,"title":{},"name":{},"text":{"23":{}},"component":{}}],["non",{"_index":927,"title":{},"name":{},"text":{"6":{},"10":{},"15":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["nonc",{"_index":771,"title":{"20-126":{},"20-132":{},"20-133":{},"20-134":{},"20-189":{},"23-224":{},"25-19":{},"27-192":{},"27-193":{},"27-195":{},"29-37":{},"29-42":{}},"name":{},"text":{"2":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["none",{"_index":3937,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nonempti",{"_index":3066,"title":{},"name":{},"text":{"26":{}},"component":{}}],["nonetheless",{"_index":4190,"title":{},"name":{},"text":{"29":{}},"component":{}}],["nonexist",{"_index":3912,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nonreentr",{"_index":3324,"title":{"27-171":{},"27-176":{}},"name":{},"text":{"27":{}},"component":{}}],["nonzero",{"_index":2736,"title":{},"name":{},"text":{"23":{}},"component":{}}],["normal",{"_index":2673,"title":{},"name":{},"text":{"23":{},"26":{},"27":{},"30":{}},"component":{}}],["normalth",{"_index":77,"title":{},"name":{},"text":{"1":{}},"component":{}}],["nors",{"_index":1005,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["notdeleg",{"_index":3040,"title":{"26-79":{}},"name":{},"text":{"26":{}},"component":{}}],["note",{"_index":121,"title":{"2-5":{},"8-2":{},"17-4":{}},"name":{},"text":{"1":{},"3":{},"6":{},"10":{},"14":{},"15":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["noth",{"_index":2975,"title":{},"name":{},"text":{"25":{}},"component":{}}],["notic",{"_index":1014,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"17":{}},"component":{}}],["notifi",{"_index":2107,"title":{},"name":{},"text":{"20":{}},"component":{}}],["notiniti",{"_index":3037,"title":{"26-76":{}},"name":{},"text":{"26":{}},"component":{}}],["novel",{"_index":604,"title":{},"name":{},"text":{"2":{},"6":{},"16":{}},"component":{}}],["now",{"_index":420,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"26":{}},"component":{}}],["nowaday",{"_index":1418,"title":{},"name":{},"text":{"14":{}},"component":{}}],["npm",{"_index":888,"title":{"15-3":{}},"name":{},"text":{"4":{},"5":{},"15":{},"17":{},"24":{}},"component":{}}],["num",{"_index":1153,"title":{},"name":{},"text":{"8":{}},"component":{}}],["number",{"_index":298,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"10":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["numcheckpoint",{"_index":4130,"title":{"29-61":{}},"name":{},"text":{"29":{}},"component":{}}],["numer",{"_index":506,"title":{"31-10":{},"31-12":{}},"name":{},"text":{"1":{},"23":{},"27":{},"30":{},"31":{}},"component":{}}],["nutshel",{"_index":1614,"title":{},"name":{},"text":{"16":{}},"component":{}}],["o",{"_index":3896,"title":{},"name":{},"text":{"27":{}},"component":{}}],["obfusc",{"_index":668,"title":{},"name":{},"text":{"2":{}},"component":{}}],["object",{"_index":763,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["observ",{"_index":4212,"title":{},"name":{},"text":{"29":{}},"component":{}}],["obtain",{"_index":986,"title":{},"name":{},"text":{"6":{},"14":{},"27":{},"30":{}},"component":{}}],["occur",{"_index":2903,"title":{},"name":{},"text":{"24":{}},"component":{}}],["occurr",{"_index":2113,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["offchain",{"_index":788,"title":{},"name":{},"text":{"2":{},"14":{},"27":{}},"component":{}}],["offer",{"_index":167,"title":{},"name":{},"text":{"1":{},"14":{},"18":{},"19":{},"25":{}},"component":{}}],["offici",{"_index":1279,"title":{},"name":{},"text":{"12":{}},"component":{}}],["offset",{"_index":1159,"title":{"9-4":{},"27-438":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{}},"name":{},"text":{"9":{},"27":{},"29":{},"30":{}},"component":{}}],["okay",{"_index":2144,"title":{},"name":{},"text":{"20":{}},"component":{}}],["old",{"_index":566,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"24":{},"26":{},"29":{}},"component":{}}],["oldbasedelaysecond",{"_index":2453,"title":{"23-155":{}},"name":{},"text":{"23":{}},"component":{}}],["olddur",{"_index":2535,"title":{"23-263":{}},"name":{},"text":{"23":{}},"component":{}}],["oldest",{"_index":3925,"title":{},"name":{},"text":{"27":{}},"component":{}}],["oldproposalthreshold",{"_index":2487,"title":{"23-196":{}},"name":{},"text":{"23":{}},"component":{}}],["oldquorumnumer",{"_index":2439,"title":{"23-136":{}},"name":{},"text":{"23":{}},"component":{}}],["oldtimelock",{"_index":2466,"title":{"23-170":{},"23-182":{}},"name":{},"text":{"23":{}},"component":{}}],["oldvoteextens",{"_index":2497,"title":{"23-205":{}},"name":{},"text":{"23":{}},"component":{}}],["oldvotingdelay",{"_index":2483,"title":{"23-194":{}},"name":{},"text":{"23":{}},"component":{}}],["oldvotingperiod",{"_index":2485,"title":{"23-195":{}},"name":{},"text":{"23":{}},"component":{}}],["omit",{"_index":1086,"title":{},"name":{},"text":{"7":{}},"component":{}}],["on",{"_index":89,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"8":{},"10":{},"12":{},"14":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["onapprovalreceiv",{"_index":2790,"title":{"24-39":{}},"name":{},"text":{"24":{}},"component":{}}],["onc",{"_index":394,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"14":{},"15":{},"17":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["onchain",{"_index":1531,"title":{},"name":{},"text":{"14":{},"18":{},"23":{}},"component":{}}],["onerc1155batchreceiv",{"_index":1049,"title":{"23-94":{},"28-37":{},"28-57":{}},"name":{},"text":{"6":{},"21":{},"23":{},"28":{}},"component":{}}],["onerc1155receiv",{"_index":1048,"title":{"23-93":{},"28-36":{},"28-56":{}},"name":{},"text":{"6":{},"21":{},"23":{},"28":{}},"component":{}}],["onerc721receiv",{"_index":2296,"title":{"23-92":{},"30-66":{},"30-96":{},"30-102":{}},"name":{},"text":{"21":{},"23":{},"30":{}},"component":{}}],["onflashloan",{"_index":2819,"title":{"24-63":{}},"name":{},"text":{"24":{}},"component":{}}],["oninstal",{"_index":2188,"title":{"21-60":{},"21-69":{},"21-78":{},"21-91":{},"21-116":{}},"name":{},"text":{"21":{}},"component":{}}],["onlin",{"_index":1557,"title":{},"name":{},"text":{"15":{}},"component":{}}],["onlyauthor",{"_index":2009,"title":{"20-156":{}},"name":{},"text":{"20":{}},"component":{}}],["onlyentrypoint",{"_index":2159,"title":{"21-4":{}},"name":{},"text":{"21":{}},"component":{}}],["onlyentrypointorself",{"_index":2158,"title":{"21-3":{}},"name":{},"text":{"21":{}},"component":{}}],["onlygovern",{"_index":2406,"title":{"23-53":{}},"name":{},"text":{"23":{}},"component":{}}],["onlyiniti",{"_index":3031,"title":{"26-69":{}},"name":{},"text":{"26":{}},"component":{}}],["onlyown",{"_index":82,"title":{"20-3":{}},"name":{},"text":{"1":{},"18":{},"20":{},"23":{},"26":{}},"component":{}}],["onlyproxi",{"_index":3039,"title":{"26-78":{}},"name":{},"text":{"26":{}},"component":{}}],["onlyrol",{"_index":182,"title":{"20-31":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["onlyroleoropenrol",{"_index":2516,"title":{"23-235":{}},"name":{},"text":{"23":{}},"component":{}}],["ontransferreceiv",{"_index":2788,"title":{"24-37":{}},"name":{},"text":{"24":{}},"component":{}}],["onuninstal",{"_index":2189,"title":{"21-61":{},"21-70":{},"21-79":{},"21-92":{},"21-117":{}},"name":{},"text":{"21":{}},"component":{}}],["op",{"_index":3866,"title":{},"name":{},"text":{"27":{},"28":{},"30":{}},"component":{}}],["opcod",{"_index":3114,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["open",{"_index":123,"title":{},"name":{},"text":{"1":{},"14":{},"20":{}},"component":{}}],["openzeppelin",{"_index":61,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"25":{},"26":{},"29":{},"30":{}},"component":{}}],["openzeppelin.slot",{"_index":4000,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contract",{"_index":1541,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["openzeppelin/contracts/=lib/openzeppelin",{"_index":1550,"title":{},"name":{},"text":{"15":{}},"component":{}}],["openzeppelin/contracts/access/accesscontrol.sol",{"_index":195,"title":{},"name":{},"text":{"1":{},"12":{},"20":{}},"component":{}}],["openzeppelin/contracts/access/extensions/accesscontroldefaultadminrules.sol",{"_index":2089,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/extensions/accesscontrolenumerable.sol",{"_index":2060,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/extensions/iaccesscontroldefaultadminrules.sol",{"_index":2070,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/extensions/iaccesscontrolenumerable.sol",{"_index":2056,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/iaccesscontrol.sol",{"_index":2038,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/accessmanaged.sol",{"_index":472,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/accessmanager.sol",{"_index":2125,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/authorityutils.sol",{"_index":2155,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/iaccessmanaged.sol",{"_index":2137,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/iaccessmanager.sol",{"_index":2099,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/manager/iauthority.sol",{"_index":2097,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/access/ownable.sol",{"_index":71,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["openzeppelin/contracts/access/ownable2step.sol",{"_index":2034,"title":{},"name":{},"text":{"20":{}},"component":{}}],["openzeppelin/contracts/account/accountbase.sol",{"_index":733,"title":{},"name":{},"text":{"2":{},"21":{}},"component":{}}],["openzeppelin/contracts/account/accountecdsa.sol",{"_index":632,"title":{},"name":{},"text":{"2":{},"21":{}},"component":{}}],["openzeppelin/contracts/account/accounteip7702.sol",{"_index":2327,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/accountp256.sol",{"_index":648,"title":{},"name":{},"text":{"2":{},"21":{}},"component":{}}],["openzeppelin/contracts/account/accountrsa.sol",{"_index":655,"title":{},"name":{},"text":{"2":{},"21":{}},"component":{}}],["openzeppelin/contracts/account/draft",{"_index":720,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["openzeppelin/contracts/account/erc7579/accounterc7579.sol",{"_index":2297,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/erc7579/utils/erc7579utils.sol",{"_index":2337,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/extensions/accounterc7579hooked.sol",{"_index":2328,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/ecdsavalidator.sol",{"_index":2329,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/multierc1271validator.sol",{"_index":2332,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/p256validator.sol",{"_index":2330,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/rsavalidator.sol",{"_index":2331,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/signaturevalidator.sol",{"_index":2333,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/modules/typederc1271executor.sol",{"_index":2336,"title":{},"name":{},"text":{"21":{}},"component":{}}],["openzeppelin/contracts/account/utils/erc4337utils.sol",{"_index":732,"title":{},"name":{},"text":{"2":{},"21":{}},"component":{}}],["openzeppelin/contracts/finance/vestingwallet.sol",{"_index":2352,"title":{},"name":{},"text":{"22":{}},"component":{}}],["openzeppelin/contracts/governance/compatibility/governorcountingsimple.sol",{"_index":1524,"title":{},"name":{},"text":{"14":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorcountingfractional.sol",{"_index":2639,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorcountingsimple.sol",{"_index":1436,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorpreventlatequorum.sol",{"_index":2701,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorsettings.sol",{"_index":2699,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorstorage.sol",{"_index":2708,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governortimelockaccess.sol",{"_index":2672,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governortimelockcompound.sol",{"_index":2695,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governortimelockcontrol.sol",{"_index":1439,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorvotes.sol",{"_index":1437,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/extensions/governorvotesquorumfraction.sol",{"_index":1438,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/governor.sol",{"_index":1435,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/igovernor.sol",{"_index":2556,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/governance/timelockcontroller.sol",{"_index":1440,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["openzeppelin/contracts/governance/utils/ivotes.sol",{"_index":1441,"title":{},"name":{},"text":{"14":{}},"component":{}}],["openzeppelin/contracts/governance/utils/votes.sol",{"_index":2710,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openzeppelin/contracts/interfaces/draft",{"_index":2850,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1271.sol",{"_index":728,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1363.sol",{"_index":2855,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1363receiver.sol",{"_index":2860,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1363spender.sol",{"_index":2862,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc165.sol",{"_index":1443,"title":{},"name":{},"text":{"14":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1820implementer.sol",{"_index":2865,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc1820registry.sol",{"_index":2869,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc2612.sol",{"_index":2883,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc2981.sol",{"_index":2887,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc3156flashborrower.sol",{"_index":2900,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc3156flashlender.sol",{"_index":2897,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc4626.sol",{"_index":2902,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc5267.sol",{"_index":2922,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc5313.sol",{"_index":2920,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc5805.sol",{"_index":2923,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc6372.sol",{"_index":2924,"title":{},"name":{},"text":{"24":{}},"component":{}}],["openzeppelin/contracts/interfaces/ierc7579module.sol",{"_index":719,"title":{},"name":{},"text":{"2":{}},"component":{}}],["openzeppelin/contracts/metatx/erc2771context.sol",{"_index":2954,"title":{},"name":{},"text":{"25":{}},"component":{}}],["openzeppelin/contracts/metatx/erc2771forwarder.sol",{"_index":2958,"title":{},"name":{},"text":{"25":{}},"component":{}}],["openzeppelin/contracts/proxy/beacon/beaconproxy.sol",{"_index":3101,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/beacon/ibeacon.sol",{"_index":3104,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/beacon/upgradeablebeacon.sol",{"_index":3105,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/clones.sol",{"_index":3107,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/erc1967/erc1967proxy.sol",{"_index":3065,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/erc1967/erc1967utils.sol",{"_index":3071,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/proxy.sol",{"_index":3062,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/transparent/proxyadmin.sol",{"_index":3097,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/transparent/transparentupgradeableproxy.sol",{"_index":3082,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/proxy/utils/initializable.sol",{"_index":1264,"title":{},"name":{},"text":{"11":{},"26":{}},"component":{}}],["openzeppelin/contracts/proxy/utils/uupsupgradeable.sol",{"_index":3133,"title":{},"name":{},"text":{"26":{}},"component":{}}],["openzeppelin/contracts/token/common/erc2981.sol",{"_index":4409,"title":{},"name":{},"text":{"31":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/erc1155.sol",{"_index":952,"title":{},"name":{},"text":{"6":{},"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/extensions/erc1155burnable.sol",{"_index":4104,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/extensions/erc1155pausable.sol",{"_index":4098,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/extensions/erc1155supply.sol",{"_index":4105,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/extensions/erc1155uristorage.sol",{"_index":4107,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/extensions/ierc1155metadatauri.sol",{"_index":4076,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/ierc1155.sol",{"_index":4071,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/ierc1155receiver.sol",{"_index":4094,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/utils/erc1155holder.sol",{"_index":1046,"title":{},"name":{},"text":{"6":{},"28":{}},"component":{}}],["openzeppelin/contracts/token/erc1155/utils/erc1155utils.sol",{"_index":4113,"title":{},"name":{},"text":{"28":{}},"component":{}}],["openzeppelin/contracts/token/erc20/erc20.sol",{"_index":197,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"14":{},"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/draft",{"_index":4245,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc1363.sol",{"_index":4249,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20burnable.sol",{"_index":4217,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20capped.sol",{"_index":4222,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20flashmint.sol",{"_index":4241,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20pausable.sol",{"_index":4225,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20permit.sol",{"_index":1392,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20votes.sol",{"_index":1393,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc20wrapper.sol",{"_index":1398,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/erc4626.sol",{"_index":4253,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/ierc20metadata.sol",{"_index":4187,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/extensions/ierc20permit.sol",{"_index":4205,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/ierc20.sol",{"_index":4181,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/utils/erc1363utils.sol",{"_index":4295,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc20/utils/safeerc20.sol",{"_index":4288,"title":{},"name":{},"text":{"29":{}},"component":{}}],["openzeppelin/contracts/token/erc721/erc721.sol",{"_index":1554,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721burnable.sol",{"_index":4360,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721consecutive.sol",{"_index":4362,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721enumerable.sol",{"_index":4352,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721pausable.sol",{"_index":4359,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721royalty.sol",{"_index":4387,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721uristorage.sol",{"_index":1236,"title":{},"name":{},"text":{"10":{},"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721votes.sol",{"_index":4384,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/erc721wrapper.sol",{"_index":4405,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/ierc721enumerable.sol",{"_index":4337,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/extensions/ierc721metadata.sol",{"_index":4335,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/ierc721.sol",{"_index":4333,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/ierc721receiver.sol",{"_index":4357,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/utils/erc721holder.sol",{"_index":4407,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/token/erc721/utils/erc721utils.sol",{"_index":4408,"title":{},"name":{},"text":{"30":{}},"component":{}}],["openzeppelin/contracts/utils/address.sol",{"_index":3966,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/arrays.sol",{"_index":3974,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/base64.sol",{"_index":1886,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/comparators.sol",{"_index":4041,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/context.sol",{"_index":4025,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/create2.sol",{"_index":3962,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/ecdsa.sol",{"_index":3779,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/eip712.sol",{"_index":633,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/erc1271typedsigner.sol",{"_index":729,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/hashes.sol",{"_index":3843,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/merkleproof.sol",{"_index":3846,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/messageenvelopeutils.sol",{"_index":3803,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/messagehashutils.sol",{"_index":3829,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/cryptography/signaturechecker.sol",{"_index":3836,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/introspection/erc165.sol",{"_index":3881,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/introspection/erc165checker.sol",{"_index":3884,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/introspection/ierc165.sol",{"_index":3879,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/math/math.sol",{"_index":3702,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/math/safecast.sol",{"_index":3740,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/math/signedmath.sol",{"_index":3738,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/multicall.sol",{"_index":1899,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/nonces.sol",{"_index":1394,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/packing.sol",{"_index":4027,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/panic.sol",{"_index":4032,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/pausable.sol",{"_index":3873,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/reentrancyguard.sol",{"_index":3868,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/reentrancyguardtransient.sol",{"_index":3872,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/shortstrings.sol",{"_index":3990,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/slotderivation.sol",{"_index":3998,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/storageslot.sol",{"_index":4003,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/strings.sol",{"_index":1885,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/bitmaps.sol",{"_index":3889,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/checkpoints.sol",{"_index":3932,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/circularbuffer.sol",{"_index":3924,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/doubleendedqueue.sol",{"_index":3919,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/enumerablemap.sol",{"_index":3895,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/enumerableset.sol",{"_index":3913,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/heap.sol",{"_index":3941,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts/utils/structs/merkletree.sol",{"_index":3953,"title":{},"name":{},"text":{"27":{}},"component":{}}],["openzeppelin/contracts@v2.5",{"_index":889,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["openzeppelin/openzeppelin",{"_index":1549,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["openzeppelin’",{"_index":713,"title":{},"name":{},"text":{"2":{},"14":{},"27":{}},"component":{}}],["oper",{"_index":14,"title":{"1-6":{},"6-2":{},"23-271":{},"23-272":{},"24-16":{},"24-18":{},"24-23":{},"24-25":{},"24-37":{},"28-5":{},"28-6":{},"28-9":{},"28-10":{},"28-11":{},"28-21":{},"28-22":{},"28-34":{},"28-36":{},"28-37":{},"28-59":{},"28-60":{},"29-139":{},"29-140":{},"30-9":{},"30-10":{},"30-11":{},"30-14":{},"30-34":{},"30-35":{},"30-54":{},"30-66":{},"30-104":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"11":{},"14":{},"16":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["operationcancel",{"_index":1989,"title":{"20-134":{}},"name":{},"text":{"20":{}},"component":{}}],["operationexecut",{"_index":1988,"title":{"20-133":{}},"name":{},"text":{"20":{}},"component":{}}],["operationid",{"_index":1983,"title":{"20-126":{},"20-132":{},"20-133":{},"20-134":{},"20-144":{},"20-145":{},"20-146":{},"20-147":{},"20-189":{},"20-193":{},"23-266":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["operationschedul",{"_index":1987,"title":{"20-132":{}},"name":{},"text":{"20":{}},"component":{}}],["operationst",{"_index":2529,"title":{"23-255":{}},"name":{},"text":{"23":{}},"component":{}}],["operation’",{"_index":2737,"title":{},"name":{},"text":{"23":{}},"component":{}}],["operator’",{"_index":2854,"title":{},"name":{},"text":{"24":{}},"component":{}}],["oppos",{"_index":505,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"30":{}},"component":{}}],["opposedli",{"_index":4292,"title":{},"name":{},"text":{"29":{}},"component":{}}],["opposit",{"_index":3842,"title":{},"name":{},"text":{"27":{}},"component":{}}],["opt",{"_index":1362,"title":{},"name":{},"text":{"14":{},"23":{},"25":{},"29":{}},"component":{}}],["optim",{"_index":1360,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["optimis",{"_index":3938,"title":{},"name":{},"text":{"27":{}},"component":{}}],["option",{"_index":398,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{},"10":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"28":{},"29":{},"30":{}},"component":{}}],["order",{"_index":372,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"17":{},"18":{},"19":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["organiz",{"_index":279,"title":{},"name":{},"text":{"1":{}},"component":{}}],["origin",{"_index":1182,"title":{},"name":{},"text":{"9":{},"12":{},"14":{},"20":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["originalsig",{"_index":2226,"title":{"21-111":{},"27-125":{}},"name":{},"text":{},"component":{}}],["originalsignatur",{"_index":3304,"title":{"27-138":{}},"name":{},"text":{},"component":{}}],["other",{"_index":1228,"title":{},"name":{},"text":{"10":{},"16":{},"27":{}},"component":{}}],["otheraddress",{"_index":1132,"title":{},"name":{},"text":{"8":{}},"component":{}}],["otherwis",{"_index":865,"title":{},"name":{},"text":{"3":{},"11":{},"12":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["out",{"_index":465,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"14":{},"17":{},"18":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["outcom",{"_index":3840,"title":{},"name":{},"text":{"27":{}},"component":{}}],["outgrow",{"_index":2031,"title":{},"name":{},"text":{"20":{}},"component":{}}],["outlin",{"_index":698,"title":{},"name":{},"text":{"2":{}},"component":{}}],["outofrangeaccess",{"_index":3671,"title":{"27-691":{}},"name":{},"text":{"27":{}},"component":{}}],["outoftimerang",{"_index":2257,"title":{"21-141":{}},"name":{},"text":{},"component":{}}],["output",{"_index":3983,"title":{},"name":{},"text":{"27":{}},"component":{}}],["outright",{"_index":1277,"title":{},"name":{},"text":{"12":{}},"component":{}}],["outsid",{"_index":845,"title":{},"name":{},"text":{"3":{},"23":{},"26":{},"30":{}},"component":{}}],["over",{"_index":96,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"14":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["overcom",{"_index":695,"title":{},"name":{},"text":{"2":{}},"component":{}}],["overflow",{"_index":1568,"title":{},"name":{},"text":{"15":{},"18":{},"27":{},"29":{},"30":{}},"component":{}}],["overhead",{"_index":4331,"title":{},"name":{},"text":{"30":{}},"component":{}}],["overlap",{"_index":3942,"title":{},"name":{},"text":{"27":{}},"component":{}}],["overload",{"_index":2067,"title":{},"name":{},"text":{"20":{},"23":{},"27":{},"29":{}},"component":{}}],["overrid",{"_index":726,"title":{"3-4":{},"12-1":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"9":{},"12":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["overridden",{"_index":844,"title":{},"name":{},"text":{"3":{},"12":{},"23":{},"24":{},"26":{},"29":{},"30":{}},"component":{}}],["overrod",{"_index":2084,"title":{},"name":{},"text":{"20":{}},"component":{}}],["overview",{"_index":581,"title":{"2-10":{},"15-1":{},"17-1":{}},"name":{},"text":{"6":{},"10":{},"15":{},"19":{},"26":{},"29":{}},"component":{}}],["overwritten",{"_index":3093,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ow",{"_index":2891,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{}}],["own",{"_index":143,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"14":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["ownabl",{"_index":1,"title":{"1-1":{},"1-13":{},"20-2":{}},"name":{},"text":{"1":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{}},"component":{}}],["ownable.connect",{"_index":563,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ownable.onlyown",{"_index":3136,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ownable.renounceownership",{"_index":2134,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ownable2step",{"_index":115,"title":{"20-13":{}},"name":{},"text":{"1":{}},"component":{}}],["ownableinvalidown",{"_index":1915,"title":{"20-12":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["ownableunauthorizedaccount",{"_index":1914,"title":{"20-11":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["owner",{"_index":53,"title":{"20-5":{},"20-12":{},"20-76":{},"24-11":{},"24-13":{},"24-23":{},"24-39":{},"24-75":{},"24-77":{},"24-78":{},"24-80":{},"24-81":{},"24-82":{},"24-84":{},"27-193":{},"27-194":{},"27-195":{},"28-34":{},"29-6":{},"29-10":{},"29-23":{},"29-30":{},"29-31":{},"29-32":{},"29-36":{},"29-37":{},"29-41":{},"29-42":{},"29-45":{},"29-82":{},"29-83":{},"29-85":{},"29-86":{},"29-107":{},"29-108":{},"29-115":{},"29-116":{},"29-120":{},"29-124":{},"29-125":{},"30-3":{},"30-4":{},"30-11":{},"30-13":{},"30-14":{},"30-21":{},"30-26":{},"30-35":{},"30-41":{},"30-42":{},"30-54":{},"30-58":{},"30-63":{}},"name":{},"text":{"1":{},"2":{},"9":{},"10":{},"14":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["owner'",{"_index":4216,"title":{},"name":{},"text":{"29":{},"30":{}},"component":{}}],["owner/admin/control",{"_index":368,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ownerof",{"_index":4296,"title":{"30-4":{},"30-27":{}},"name":{},"text":{"30":{}},"component":{}}],["ownership",{"_index":0,"title":{"1-1":{}},"name":{},"text":{"1":{},"10":{},"14":{},"16":{},"20":{},"22":{},"23":{},"24":{},"26":{},"30":{}},"component":{}}],["ownership/control",{"_index":421,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ownershiptransf",{"_index":1912,"title":{"20-10":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["ownershiptransferstart",{"_index":1917,"title":{"20-18":{}},"name":{},"text":{"20":{}},"component":{}}],["owner’",{"_index":4349,"title":{},"name":{},"text":{"30":{}},"component":{}}],["p",{"_index":3152,"title":{"27-16":{}},"name":{},"text":{"27":{}},"component":{}}],["p256",{"_index":622,"title":{"18-4":{}},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["p256signerassoci",{"_index":2197,"title":{"21-74":{}},"name":{},"text":{"21":{}},"component":{}}],["p256signerdisassoci",{"_index":2198,"title":{"21-75":{}},"name":{},"text":{"21":{}},"component":{}}],["p256valid",{"_index":2196,"title":{"21-67":{}},"name":{},"text":{},"component":{}}],["pack",{"_index":1681,"title":{"18-13":{},"27-478":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["pack_10_10",{"_index":3491,"title":{"27-511":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_10_12",{"_index":3492,"title":{"27-512":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_10_2",{"_index":3489,"title":{"27-509":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_10_22",{"_index":3493,"title":{"27-513":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_10_6",{"_index":3490,"title":{"27-510":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_10",{"_index":3496,"title":{"27-516":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_12",{"_index":3497,"title":{"27-517":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_16",{"_index":3498,"title":{"27-518":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_20",{"_index":3499,"title":{"27-519":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_4",{"_index":3494,"title":{"27-514":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_12_8",{"_index":3495,"title":{"27-515":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_16_12",{"_index":3503,"title":{"27-523":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_16_16",{"_index":3504,"title":{"27-524":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_16_4",{"_index":3500,"title":{"27-520":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_16_6",{"_index":3501,"title":{"27-521":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_16_8",{"_index":3502,"title":{"27-522":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_1_1",{"_index":3452,"title":{"27-479":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_20_12",{"_index":3508,"title":{"27-528":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_20_2",{"_index":3505,"title":{"27-525":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_20_4",{"_index":3506,"title":{"27-526":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_20_8",{"_index":3507,"title":{"27-527":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_22_10",{"_index":3511,"title":{"27-531":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_22_2",{"_index":3509,"title":{"27-529":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_22_6",{"_index":3510,"title":{"27-530":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_24_4",{"_index":3512,"title":{"27-532":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_24_8",{"_index":3513,"title":{"27-533":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_28_4",{"_index":3514,"title":{"27-534":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_10",{"_index":3460,"title":{"27-484":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_2",{"_index":3454,"title":{"27-480":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_20",{"_index":3461,"title":{"27-485":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_22",{"_index":3463,"title":{"27-486":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_4",{"_index":3455,"title":{"27-481":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_6",{"_index":3457,"title":{"27-482":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_2_8",{"_index":3458,"title":{"27-483":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_12",{"_index":3469,"title":{"27-491":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_16",{"_index":3471,"title":{"27-492":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_2",{"_index":3465,"title":{"27-487":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_20",{"_index":3472,"title":{"27-493":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_24",{"_index":3473,"title":{"27-494":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_28",{"_index":3475,"title":{"27-495":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_4",{"_index":3466,"title":{"27-488":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_6",{"_index":3467,"title":{"27-489":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_4_8",{"_index":3468,"title":{"27-490":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_10",{"_index":3479,"title":{"27-499":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_16",{"_index":3480,"title":{"27-500":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_2",{"_index":3476,"title":{"27-496":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_22",{"_index":3481,"title":{"27-501":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_4",{"_index":3477,"title":{"27-497":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_6_6",{"_index":3478,"title":{"27-498":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_12",{"_index":3485,"title":{"27-505":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_16",{"_index":3486,"title":{"27-506":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_2",{"_index":3482,"title":{"27-502":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_20",{"_index":3487,"title":{"27-507":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_24",{"_index":3488,"title":{"27-508":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_4",{"_index":3483,"title":{"27-503":{}},"name":{},"text":{"27":{}},"component":{}}],["pack_8_8",{"_index":3484,"title":{"27-504":{}},"name":{},"text":{"27":{}},"component":{}}],["packag",{"_index":1625,"title":{},"name":{},"text":{"17":{},"24":{}},"component":{}}],["packeduseroper",{"_index":731,"title":{"21-8":{},"21-9":{},"21-10":{},"21-18":{},"21-32":{},"21-39":{},"21-44":{},"21-108":{},"21-142":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-149":{},"21-150":{},"21-151":{},"21-152":{}},"name":{},"text":{"2":{}},"component":{}}],["packing.extract_32_20",{"_index":1852,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["packing.extract_32_4",{"_index":1853,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["packing.extract_32_8",{"_index":1854,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["packing.pack_20_12",{"_index":1849,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["packing.pack_4_8",{"_index":1847,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["packvalidationdata",{"_index":2251,"title":{"21-138":{},"21-139":{}},"name":{},"text":{"21":{}},"component":{}}],["pad",{"_index":993,"title":{},"name":{},"text":{"6":{},"18":{},"27":{}},"component":{}}],["page",{"_index":824,"title":{},"name":{},"text":{"3":{},"26":{}},"component":{}}],["paid",{"_index":2894,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{}}],["pair",{"_index":2133,"title":{},"name":{},"text":{"20":{},"23":{},"27":{},"30":{}},"component":{}}],["panic",{"_index":2152,"title":{"27-692":{},"27-693":{}},"name":{},"text":{"20":{},"27":{}},"component":{}}],["panic.array_out_of_bound",{"_index":3923,"title":{},"name":{},"text":{"27":{}},"component":{}}],["panic.empty_array_pop",{"_index":3922,"title":{},"name":{},"text":{"27":{}},"component":{}}],["panic.gener",{"_index":4035,"title":{},"name":{},"text":{"27":{}},"component":{}}],["panic.generic.pan",{"_index":4033,"title":{},"name":{},"text":{"27":{}},"component":{}}],["panic.pan",{"_index":4034,"title":{},"name":{},"text":{"27":{}},"component":{}}],["panic.resource_error",{"_index":3921,"title":{},"name":{},"text":{"27":{}},"component":{}}],["param",{"_index":2373,"title":{"23-19":{},"23-27":{},"23-29":{},"23-35":{},"23-70":{},"23-71":{},"23-82":{},"23-85":{},"23-87":{},"23-89":{},"23-119":{},"23-200":{}},"name":{},"text":{"23":{}},"component":{}}],["paramet",{"_index":85,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["params=erc721",{"_index":2565,"title":{},"name":{},"text":{"23":{}},"component":{}}],["params=fract",{"_index":2563,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parent",{"_index":1270,"title":{},"name":{},"text":{"12":{},"17":{},"20":{},"26":{},"27":{},"28":{}},"component":{}}],["parenthes",{"_index":3822,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parent’",{"_index":1276,"title":{},"name":{},"text":{"12":{}},"component":{}}],["pars",{"_index":3810,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parsevalidationdata",{"_index":2248,"title":{"21-137":{}},"name":{},"text":{"21":{}},"component":{}}],["part",{"_index":727,"title":{},"name":{},"text":{"2":{},"9":{},"12":{},"15":{},"18":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["parti",{"_index":1255,"title":{},"name":{},"text":{"11":{},"23":{},"24":{},"27":{}},"component":{}}],["partial",{"_index":2652,"title":{},"name":{},"text":{"23":{}},"component":{}}],["particip",{"_index":316,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"24":{}},"component":{}}],["particular",{"_index":331,"title":{},"name":{},"text":{"1":{},"3":{},"12":{},"14":{},"20":{},"23":{},"24":{},"25":{},"29":{},"30":{}},"component":{}}],["particularli",{"_index":527,"title":{},"name":{},"text":{"1":{},"14":{}},"component":{}}],["partit",{"_index":974,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["partli",{"_index":2353,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pass",{"_index":264,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"30":{}},"component":{}}],["past",{"_index":222,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"23":{},"27":{}},"component":{}}],["patch",{"_index":817,"title":{},"name":{},"text":{"3":{}},"component":{}}],["path",{"_index":2149,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["pattern",{"_index":92,"title":{},"name":{},"text":{"1":{},"7":{},"17":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["paus",{"_index":3331,"title":{"27-183":{},"27-188":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["pausabl",{"_index":3328,"title":{"27-179":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["pausable._paus",{"_index":4100,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["pausable._unpaus",{"_index":4101,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["pay",{"_index":793,"title":{},"name":{},"text":{"2":{},"15":{},"25":{},"27":{},"30":{},"31":{}},"component":{}}],["payabl",{"_index":2937,"title":{"25-15":{},"27-384":{}},"name":{},"text":{"26":{},"27":{}},"component":{}}],["payload",{"_index":2276,"title":{"21-161":{},"21-162":{},"23-247":{},"23-249":{},"23-251":{},"23-252":{},"23-264":{}},"name":{},"text":{"21":{},"23":{},"27":{}},"component":{}}],["paymast",{"_index":579,"title":{"2-9":{},"2-16":{},"21-149":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["paymasteranddata",{"_index":783,"title":{},"name":{},"text":{"2":{}},"component":{}}],["paymasterpostopgaslimit",{"_index":2263,"title":{"21-151":{}},"name":{},"text":{"21":{}},"component":{}}],["paymasterverificationgaslimit",{"_index":2262,"title":{"21-150":{}},"name":{},"text":{"21":{}},"component":{}}],["payment",{"_index":2889,"title":{},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["peak",{"_index":1825,"title":{},"name":{},"text":{"18":{}},"component":{}}],["peek",{"_index":3379,"title":{"27-353":{},"27-362":{}},"name":{},"text":{"27":{}},"component":{}}],["peer",{"_index":1628,"title":{},"name":{},"text":{"17":{}},"component":{}}],["pend",{"_index":901,"title":{},"name":{},"text":{"5":{},"20":{},"22":{},"23":{},"27":{}},"component":{}}],["pendingdefaultadmin",{"_index":1937,"title":{"20-57":{},"20-84":{}},"name":{},"text":{"20":{}},"component":{}}],["pendingdefaultadmin'",{"_index":2075,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pendingdefaultadmindelay",{"_index":1941,"title":{"20-59":{},"20-86":{}},"name":{},"text":{"20":{}},"component":{}}],["pendingdefaultadmindelay'",{"_index":2077,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pendingdelay",{"_index":1978,"title":{"20-112":{},"20-167":{}},"name":{},"text":{},"component":{}}],["pendingown",{"_index":1916,"title":{"20-14":{}},"name":{},"text":{"20":{}},"component":{}}],["peopl",{"_index":424,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"14":{}},"component":{}}],["per",{"_index":1243,"title":{},"name":{},"text":{"10":{},"20":{},"23":{},"24":{},"28":{},"30":{}},"component":{}}],["percent",{"_index":2670,"title":{},"name":{},"text":{"23":{}},"component":{}}],["percentag",{"_index":1416,"title":{},"name":{},"text":{"14":{}},"component":{}}],["perfect",{"_index":3736,"title":{},"name":{},"text":{"27":{}},"component":{}}],["perfectli",{"_index":57,"title":{},"name":{},"text":{"1":{}},"component":{}}],["perform",{"_index":174,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["period",{"_index":1381,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["perman",{"_index":2679,"title":{},"name":{},"text":{"23":{},"30":{}},"component":{}}],["permiss",{"_index":164,"title":{},"name":{},"text":{"1":{},"15":{},"20":{},"23":{},"28":{},"30":{}},"component":{}}],["permissionless",{"_index":703,"title":{},"name":{},"text":{"2":{}},"component":{}}],["permit",{"_index":2885,"title":{"29-36":{},"29-41":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["persist",{"_index":4247,"title":{},"name":{},"text":{"29":{}},"component":{}}],["person",{"_index":3826,"title":{},"name":{},"text":{"27":{}},"component":{}}],["personal_sign",{"_index":3806,"title":{},"name":{},"text":{"27":{}},"component":{}}],["personalsign",{"_index":3815,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pet",{"_index":1600,"title":{},"name":{},"text":{"16":{}},"component":{}}],["phase",{"_index":694,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["phish",{"_index":670,"title":{},"name":{},"text":{"2":{}},"component":{}}],["piec",{"_index":787,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{}}],["pkc",{"_index":1743,"title":{},"name":{},"text":{"18":{}},"component":{}}],["pkcs#1",{"_index":1747,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["pkcs1",{"_index":1739,"title":{},"name":{},"text":{"18":{}},"component":{}}],["pki",{"_index":1729,"title":{},"name":{},"text":{"18":{}},"component":{}}],["place",{"_index":1143,"title":{},"name":{},"text":{"8":{},"12":{},"14":{},"18":{},"19":{},"27":{},"29":{}},"component":{}}],["plain",{"_index":1737,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["plan",{"_index":2683,"title":{},"name":{},"text":{"23":{}},"component":{}}],["platform",{"_index":1587,"title":{},"name":{},"text":{"15":{}},"component":{}}],["player",{"_index":946,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["playeraddress",{"_index":980,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["pleas",{"_index":1232,"title":{},"name":{},"text":{"10":{},"15":{},"18":{},"29":{}},"component":{}}],["plot",{"_index":1184,"title":{},"name":{},"text":{"9":{}},"component":{}}],["plu",{"_index":1606,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["plugin",{"_index":874,"title":{},"name":{},"text":{"3":{},"17":{},"26":{}},"component":{}}],["po",{"_index":2511,"title":{"23-229":{},"27-334":{},"27-342":{},"27-350":{},"27-404":{},"27-405":{},"27-406":{},"27-407":{},"27-408":{},"27-409":{},"27-438":{},"29-62":{}},"name":{},"text":{"23":{},"27":{},"29":{},"30":{}},"component":{}}],["point",{"_index":397,"title":{},"name":{},"text":{"1":{},"9":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"31":{}},"component":{}}],["pointer",{"_index":1855,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["polici",{"_index":2140,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pool",{"_index":2645,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pop",{"_index":1804,"title":{"27-354":{},"27-355":{},"27-363":{},"27-364":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["popback",{"_index":3362,"title":{"27-309":{}},"name":{},"text":{"27":{}},"component":{}}],["popfront",{"_index":3364,"title":{"27-311":{}},"name":{},"text":{"27":{}},"component":{}}],["popular",{"_index":1345,"title":{},"name":{},"text":{"14":{},"18":{},"26":{}},"component":{}}],["pose",{"_index":1142,"title":{},"name":{},"text":{"8":{},"14":{},"28":{}},"component":{}}],["posit",{"_index":2581,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["possibl",{"_index":245,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"14":{},"18":{},"20":{},"22":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["post",{"_index":2059,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["potenti",{"_index":846,"title":{},"name":{},"text":{"3":{},"9":{},"12":{},"17":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"30":{}},"component":{}}],["power",{"_index":338,"title":{},"name":{},"text":{"1":{},"14":{},"16":{},"18":{},"23":{},"29":{}},"component":{}}],["practic",{"_index":253,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"14":{},"15":{},"18":{}},"component":{}}],["pragma",{"_index":68,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{}},"component":{}}],["pre",{"_index":813,"title":{"3-3":{}},"name":{},"text":{"24":{},"27":{},"29":{}},"component":{}}],["precaut",{"_index":2052,"title":{},"name":{},"text":{"20":{}},"component":{}}],["preced",{"_index":4391,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["precis",{"_index":2664,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["precompil",{"_index":1713,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["precondit",{"_index":3886,"title":{},"name":{},"text":{"27":{}},"component":{}}],["predecessor",{"_index":2525,"title":{"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-259":{}},"name":{},"text":{"23":{}},"component":{}}],["predecessorid",{"_index":2541,"title":{"23-267":{}},"name":{},"text":{"23":{}},"component":{}}],["predefin",{"_index":627,"title":{},"name":{},"text":{"2":{},"18":{},"27":{}},"component":{}}],["predict",{"_index":3023,"title":{"26-55":{},"26-56":{},"26-61":{},"26-62":{}},"name":{},"text":{"26":{}},"component":{}}],["predictdeterministicaddress",{"_index":3022,"title":{"26-55":{},"26-56":{}},"name":{},"text":{"26":{}},"component":{}}],["predictdeterministicaddresswithimmutablearg",{"_index":3027,"title":{"26-61":{},"26-62":{}},"name":{},"text":{"26":{}},"component":{}}],["preexist",{"_index":2156,"title":{},"name":{},"text":{"20":{}},"component":{}}],["prefer",{"_index":742,"title":{},"name":{},"text":{"2":{},"23":{},"28":{},"29":{},"30":{}},"component":{}}],["prefix",{"_index":861,"title":{},"name":{},"text":{"3":{},"6":{},"18":{},"27":{}},"component":{}}],["prejudic",{"_index":365,"title":{},"name":{},"text":{"1":{}},"component":{}}],["present",{"_index":640,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["preserv",{"_index":848,"title":{},"name":{},"text":{"3":{},"30":{}},"component":{}}],["prettier",{"_index":1888,"title":{},"name":{},"text":{"18":{}},"component":{}}],["prevent",{"_index":356,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"13":{},"14":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["preverificationga",{"_index":780,"title":{},"name":{},"text":{"2":{}},"component":{}}],["previewdeposit",{"_index":2827,"title":{"24-70":{},"29-109":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["previewmint",{"_index":2830,"title":{"24-73":{},"29-110":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["previewredeem",{"_index":2834,"title":{"24-79":{},"29-112":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["previewwithdraw",{"_index":2832,"title":{"24-76":{},"29-111":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["previou",{"_index":310,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"14":{},"18":{},"20":{},"23":{},"26":{},"27":{},"30":{}},"component":{}}],["previous",{"_index":2074,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["previousadminrol",{"_index":1922,"title":{"20-25":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["previousown",{"_index":1913,"title":{"20-10":{},"20-18":{}},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["previousvot",{"_index":2720,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["price",{"_index":2893,"title":{},"name":{},"text":{"24":{},"29":{},"31":{}},"component":{}}],["prime",{"_index":1731,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["primer",{"_index":1593,"title":{"16-1":{}},"name":{},"text":{},"component":{}}],["primit",{"_index":1366,"title":{},"name":{},"text":{"14":{},"18":{},"22":{},"23":{},"27":{},"30":{}},"component":{}}],["principl",{"_index":250,"title":{},"name":{},"text":{"1":{},"7":{}},"component":{}}],["prior",{"_index":2964,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["prioriti",{"_index":1826,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["privat",{"_index":629,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"10":{},"18":{},"23":{},"27":{}},"component":{}}],["privileg",{"_index":11,"title":{"1-5":{}},"name":{},"text":{"1":{},"20":{},"27":{}},"component":{}}],["probabl",{"_index":1151,"title":{},"name":{},"text":{"8":{},"16":{}},"component":{}}],["problem",{"_index":114,"title":{},"name":{},"text":{"1":{},"2":{},"17":{},"29":{}},"component":{}}],["proce",{"_index":1496,"title":{},"name":{},"text":{"14":{},"27":{}},"component":{}}],["procedur",{"_index":302,"title":{},"name":{},"text":{"1":{}},"component":{}}],["process",{"_index":600,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["processmultiproof",{"_index":3318,"title":{"27-161":{},"27-163":{}},"name":{},"text":{"27":{}},"component":{}}],["processmultiproofcalldata",{"_index":3321,"title":{"27-165":{},"27-167":{}},"name":{},"text":{"27":{}},"component":{}}],["processproof",{"_index":3313,"title":{"27-153":{},"27-155":{}},"name":{},"text":{"27":{}},"component":{}}],["processproofcalldata",{"_index":3316,"title":{"27-157":{},"27-159":{}},"name":{},"text":{"27":{}},"component":{}}],["produc",{"_index":1091,"title":{},"name":{},"text":{"7":{},"14":{},"18":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["product",{"_index":458,"title":{},"name":{},"text":{"1":{},"18":{},"20":{},"25":{},"26":{}},"component":{}}],["profit",{"_index":4261,"title":{},"name":{},"text":{"29":{}},"component":{}}],["program",{"_index":1561,"title":{},"name":{},"text":{"15":{}},"component":{}}],["programmat",{"_index":258,"title":{},"name":{},"text":{"1":{},"28":{}},"component":{}}],["prohibit",{"_index":325,"title":{},"name":{},"text":{"1":{}},"component":{}}],["project",{"_index":149,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"15":{},"18":{},"20":{},"25":{}},"component":{}}],["promin",{"_index":151,"title":{},"name":{},"text":{"1":{}},"component":{}}],["prompt",{"_index":667,"title":{},"name":{},"text":{"2":{}},"component":{}}],["promptli",{"_index":1475,"title":{},"name":{},"text":{"14":{}},"component":{}}],["proof",{"_index":1676,"title":{"18-6":{},"27-152":{},"27-153":{},"27-154":{},"27-155":{},"27-156":{},"27-157":{},"27-158":{},"27-159":{},"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["proof.length",{"_index":3865,"title":{},"name":{},"text":{"27":{}},"component":{}}],["proof[0",{"_index":3858,"title":{},"name":{},"text":{"27":{}},"component":{}}],["proofflag",{"_index":3317,"title":{"27-160":{},"27-161":{},"27-162":{},"27-163":{},"27-164":{},"27-165":{},"27-166":{},"27-167":{}},"name":{},"text":{"27":{}},"component":{}}],["propag",{"_index":4024,"title":{},"name":{},"text":{"27":{}},"component":{}}],["properli",{"_index":2120,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{}},"component":{}}],["properti",{"_index":314,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"18":{},"26":{},"27":{}},"component":{}}],["propos",{"_index":34,"title":{"14-11":{},"14-12":{},"14-14":{},"23-21":{},"23-30":{},"23-44":{},"23-45":{},"23-73":{},"23-74":{},"23-96":{},"23-151":{},"23-207":{},"23-236":{},"23-275":{}},"name":{},"text":{"1":{},"2":{},"9":{},"11":{},"14":{},"20":{},"23":{}},"component":{}}],["proposalcancel",{"_index":2385,"title":{"23-33":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalcount",{"_index":2498,"title":{"23-211":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalcr",{"_index":2379,"title":{"23-30":{}},"name":{},"text":{"23":{}},"component":{}}],["proposaldeadlin",{"_index":2368,"title":{"23-11":{},"23-63":{},"23-199":{}},"name":{},"text":{"23":{}},"component":{}}],["proposaldetail",{"_index":2499,"title":{"23-212":{}},"name":{},"text":{"23":{}},"component":{}}],["proposaldetailsat",{"_index":2500,"title":{"23-213":{}},"name":{},"text":{"23":{}},"component":{}}],["proposaleta",{"_index":2370,"title":{"23-13":{},"23-65":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalexecut",{"_index":2384,"title":{"23-32":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalexecutionplan",{"_index":2450,"title":{"23-149":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalextend",{"_index":2494,"title":{"23-204":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalid",{"_index":1448,"title":{"23-8":{},"23-10":{},"23-11":{},"23-12":{},"23-13":{},"23-14":{},"23-20":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-30":{},"23-31":{},"23-32":{},"23-33":{},"23-34":{},"23-35":{},"23-41":{},"23-42":{},"23-49":{},"23-50":{},"23-60":{},"23-62":{},"23-63":{},"23-64":{},"23-65":{},"23-68":{},"23-69":{},"23-71":{},"23-74":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-107":{},"23-108":{},"23-109":{},"23-110":{},"23-111":{},"23-114":{},"23-115":{},"23-116":{},"23-117":{},"23-118":{},"23-119":{},"23-149":{},"23-150":{},"23-152":{},"23-153":{},"23-157":{},"23-158":{},"23-162":{},"23-165":{},"23-166":{},"23-173":{},"23-176":{},"23-177":{},"23-199":{},"23-200":{},"23-204":{},"23-208":{},"23-209":{},"23-210":{},"23-212":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["proposalid`",{"_index":1369,"title":{},"name":{},"text":{"14":{}},"component":{}}],["proposalneedsqueu",{"_index":1451,"title":{"23-14":{},"23-66":{},"23-150":{},"23-164":{},"23-175":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["proposalpropos",{"_index":2369,"title":{"23-12":{},"23-64":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalqueu",{"_index":2382,"title":{"23-31":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalsnapshot",{"_index":2367,"title":{"23-10":{},"23-62":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalst",{"_index":1449,"title":{"23-95":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["proposalthreshold",{"_index":1447,"title":{"23-9":{},"23-61":{},"23-187":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["proposalthresholdset",{"_index":2486,"title":{"23-196":{}},"name":{},"text":{"23":{}},"component":{}}],["proposalvot",{"_index":2422,"title":{"23-108":{},"23-116":{}},"name":{},"text":{"23":{}},"component":{}}],["proposal’",{"_index":1417,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["proposer_rol",{"_index":388,"title":{"23-256":{}},"name":{},"text":{"1":{},"23":{}},"component":{}}],["proposers/schedul",{"_index":406,"title":{},"name":{},"text":{"1":{}},"component":{}}],["proposit",{"_index":2739,"title":{},"name":{},"text":{"23":{}},"component":{}}],["protect",{"_index":100,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["protocol",{"_index":447,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"14":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["prototyp",{"_index":158,"title":{},"name":{},"text":{"1":{}},"component":{}}],["prove",{"_index":332,"title":{},"name":{},"text":{"1":{},"18":{},"27":{}},"component":{}}],["proven",{"_index":3855,"title":{},"name":{},"text":{"27":{}},"component":{}}],["provid",{"_index":62,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["proxi",{"_index":366,"title":{"26":{},"26-1":{},"26-3":{},"26-26":{},"26-34":{}},"name":{"26":{}},"text":{"1":{},"2":{},"24":{},"25":{},"26":{},"27":{},"30":{}},"component":{}}],["proxiabl",{"_index":2881,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["proxiableuuid",{"_index":2808,"title":{"24-54":{},"26-80":{}},"name":{},"text":{"24":{},"26":{}},"component":{}}],["proxyadmin",{"_index":3009,"title":{"26-32":{}},"name":{},"text":{"26":{}},"component":{}}],["proxydeniedadminaccess",{"_index":3008,"title":{"26-31":{}},"name":{},"text":{"26":{}},"component":{}}],["proxy’",{"_index":3057,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pseudo",{"_index":762,"title":{},"name":{},"text":{"2":{}},"component":{}}],["public",{"_index":78,"title":{"20-5":{},"20-7":{},"20-8":{},"20-14":{},"20-15":{},"20-17":{},"20-32":{},"20-33":{},"20-36":{},"20-37":{},"20-38":{},"20-39":{},"20-43":{},"20-49":{},"20-50":{},"20-51":{},"20-52":{},"20-75":{},"20-76":{},"20-77":{},"20-78":{},"20-79":{},"20-83":{},"20-84":{},"20-85":{},"20-86":{},"20-87":{},"20-88":{},"20-90":{},"20-92":{},"20-94":{},"20-96":{},"20-157":{},"20-158":{},"20-159":{},"20-160":{},"20-161":{},"20-162":{},"20-163":{},"20-164":{},"20-165":{},"20-166":{},"20-167":{},"20-168":{},"20-169":{},"20-170":{},"20-171":{},"20-172":{},"20-173":{},"20-174":{},"20-175":{},"20-181":{},"20-183":{},"20-185":{},"20-187":{},"20-188":{},"20-189":{},"20-190":{},"20-191":{},"20-192":{},"20-194":{},"20-195":{},"20-196":{},"20-197":{},"20-209":{},"20-210":{},"20-211":{},"21-5":{},"21-6":{},"21-7":{},"21-8":{},"21-9":{},"21-17":{},"21-19":{},"21-20":{},"21-21":{},"21-22":{},"21-23":{},"21-26":{},"21-27":{},"21-31":{},"21-35":{},"21-38":{},"21-43":{},"21-59":{},"21-60":{},"21-61":{},"21-68":{},"21-69":{},"21-70":{},"21-77":{},"21-78":{},"21-79":{},"21-86":{},"21-87":{},"21-88":{},"21-89":{},"21-90":{},"21-91":{},"21-92":{},"21-107":{},"21-108":{},"21-109":{},"21-115":{},"21-116":{},"21-117":{},"21-118":{},"22-3":{},"22-5":{},"22-6":{},"22-7":{},"22-8":{},"22-9":{},"22-10":{},"22-11":{},"22-12":{},"22-13":{},"22-14":{},"22-15":{},"23-56":{},"23-57":{},"23-58":{},"23-59":{},"23-60":{},"23-61":{},"23-62":{},"23-63":{},"23-64":{},"23-65":{},"23-66":{},"23-73":{},"23-75":{},"23-77":{},"23-79":{},"23-81":{},"23-82":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-92":{},"23-93":{},"23-94":{},"23-97":{},"23-98":{},"23-99":{},"23-100":{},"23-101":{},"23-102":{},"23-103":{},"23-106":{},"23-107":{},"23-108":{},"23-113":{},"23-114":{},"23-115":{},"23-116":{},"23-124":{},"23-125":{},"23-126":{},"23-130":{},"23-131":{},"23-132":{},"23-133":{},"23-142":{},"23-143":{},"23-144":{},"23-146":{},"23-147":{},"23-149":{},"23-150":{},"23-151":{},"23-162":{},"23-163":{},"23-164":{},"23-173":{},"23-174":{},"23-175":{},"23-180":{},"23-185":{},"23-186":{},"23-187":{},"23-188":{},"23-189":{},"23-190":{},"23-199":{},"23-201":{},"23-202":{},"23-208":{},"23-209":{},"23-210":{},"23-211":{},"23-212":{},"23-213":{},"23-216":{},"23-217":{},"23-218":{},"23-219":{},"23-220":{},"23-222":{},"23-223":{},"23-224":{},"23-236":{},"23-238":{},"23-239":{},"23-240":{},"23-241":{},"23-242":{},"23-243":{},"23-244":{},"23-245":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-250":{},"23-251":{},"23-252":{},"23-256":{},"23-257":{},"23-258":{},"25-4":{},"25-5":{},"25-12":{},"25-13":{},"25-14":{},"25-15":{},"26-10":{},"26-28":{},"26-33":{},"26-34":{},"26-35":{},"26-38":{},"26-44":{},"26-45":{},"26-46":{},"26-81":{},"26-85":{},"27-121":{},"27-134":{},"27-183":{},"27-193":{},"27-201":{},"28-17":{},"28-18":{},"28-19":{},"28-20":{},"28-21":{},"28-22":{},"28-23":{},"28-24":{},"28-42":{},"28-43":{},"28-45":{},"28-46":{},"28-47":{},"28-50":{},"28-55":{},"28-56":{},"28-57":{},"29-17":{},"29-18":{},"29-19":{},"29-20":{},"29-21":{},"29-22":{},"29-23":{},"29-24":{},"29-25":{},"29-41":{},"29-42":{},"29-47":{},"29-48":{},"29-51":{},"29-61":{},"29-62":{},"29-66":{},"29-67":{},"29-68":{},"29-69":{},"29-73":{},"29-74":{},"29-77":{},"29-82":{},"29-84":{},"29-88":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"29-100":{},"29-101":{},"29-102":{},"29-103":{},"29-104":{},"29-105":{},"29-106":{},"29-107":{},"29-108":{},"29-109":{},"29-110":{},"29-111":{},"29-112":{},"29-113":{},"29-114":{},"29-115":{},"29-116":{},"30-25":{},"30-26":{},"30-27":{},"30-28":{},"30-29":{},"30-30":{},"30-32":{},"30-33":{},"30-34":{},"30-35":{},"30-36":{},"30-37":{},"30-38":{},"30-57":{},"30-58":{},"30-59":{},"30-60":{},"30-71":{},"30-83":{},"30-84":{},"30-91":{},"30-94":{},"30-95":{},"30-96":{},"30-98":{},"30-102":{},"31-3":{},"31-4":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["public_rol",{"_index":2017,"title":{"20-197":{}},"name":{},"text":{"20":{}},"component":{}}],["publicli",{"_index":1334,"title":{},"name":{},"text":{"14":{}},"component":{}}],["publish",{"_index":833,"title":{},"name":{},"text":{"3":{},"12":{},"23":{}},"component":{}}],["pure",{"_index":1217,"title":{"27-393":{},"27-395":{},"27-397":{}},"name":{},"text":{"9":{},"12":{},"14":{},"18":{},"27":{}},"component":{}}],["purpos",{"_index":1057,"title":{},"name":{},"text":{"7":{},"8":{},"14":{},"18":{},"20":{},"25":{},"27":{},"29":{}},"component":{}}],["push",{"_index":1811,"title":{"27-321":{},"27-327":{},"27-335":{},"27-343":{},"27-374":{},"27-375":{}},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["pushback",{"_index":3359,"title":{"27-308":{}},"name":{},"text":{"27":{}},"component":{}}],["pushfront",{"_index":3363,"title":{"27-310":{}},"name":{},"text":{"27":{}},"component":{}}],["put",{"_index":1019,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"27":{}},"component":{}}],["queri",{"_index":10,"title":{"1-5":{}},"name":{},"text":{"6":{},"8":{},"10":{},"14":{},"18":{},"20":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["question",{"_index":1303,"title":{"13":{}},"name":{},"text":{},"component":{}}],["queu",{"_index":1497,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["queue",{"_index":1363,"title":{"23-22":{},"23-75":{},"23-208":{}},"name":{},"text":{"14":{},"18":{},"23":{},"27":{}},"component":{}}],["quick",{"_index":157,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["quickstart",{"_index":3847,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quit",{"_index":1059,"title":{},"name":{},"text":{"7":{},"20":{},"27":{}},"component":{}}],["quorum",{"_index":1406,"title":{"23-17":{},"23-101":{},"23-133":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["quorum=bravo",{"_index":2561,"title":{},"name":{},"text":{"23":{}},"component":{}}],["quorum=for",{"_index":2562,"title":{},"name":{},"text":{"23":{}},"component":{}}],["quorumdenomin",{"_index":2434,"title":{"23-132":{},"23-137":{}},"name":{},"text":{"23":{}},"component":{}}],["quorumnumer",{"_index":2433,"title":{"23-130":{},"23-131":{},"23-137":{}},"name":{},"text":{"23":{}},"component":{}}],["quorumnumeratorupd",{"_index":2438,"title":{"23-136":{}},"name":{},"text":{"23":{}},"component":{}}],["quorumnumeratorvalu",{"_index":2432,"title":{"23-129":{}},"name":{},"text":{"23":{}},"component":{}}],["qx",{"_index":650,"title":{"21-37":{},"21-38":{},"21-71":{},"21-74":{}},"name":{},"text":{"2":{},"18":{},"21":{}},"component":{}}],["qy",{"_index":651,"title":{"21-37":{},"21-38":{},"21-71":{},"21-74":{}},"name":{},"text":{"2":{},"18":{},"21":{}},"component":{}}],["r",{"_index":1691,"title":{"23-224":{},"27-110":{},"27-111":{},"27-112":{},"27-113":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-454":{},"27-455":{},"27-456":{},"29-36":{},"29-41":{}},"name":{},"text":{"18":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["race",{"_index":4183,"title":{},"name":{},"text":{"29":{}},"component":{}}],["rais",{"_index":3744,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ran",{"_index":1502,"title":{},"name":{},"text":{"14":{}},"component":{}}],["random",{"_index":2116,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["rang",{"_index":1065,"title":{},"name":{},"text":{"7":{},"12":{},"27":{}},"component":{}}],["rapidli",{"_index":1582,"title":{},"name":{},"text":{"15":{}},"component":{}}],["rare",{"_index":819,"title":{},"name":{},"text":{"3":{}},"component":{}}],["rariti",{"_index":1229,"title":{},"name":{},"text":{"10":{}},"component":{}}],["rate",{"_index":1174,"title":{},"name":{},"text":{"9":{},"29":{}},"component":{}}],["rational",{"_index":4392,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["raw",{"_index":3805,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rbac",{"_index":166,"title":{},"name":{},"text":{"1":{}},"component":{}}],["re",{"_index":1167,"title":{"27-407":{},"27-408":{},"27-409":{}},"name":{},"text":{"9":{},"23":{},"26":{},"27":{}},"component":{}}],["reach",{"_index":1495,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"24":{}},"component":{}}],["react",{"_index":2704,"title":{},"name":{},"text":{"23":{}},"component":{}}],["read",{"_index":1580,"title":{},"name":{},"text":{"15":{},"18":{},"19":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["readabl",{"_index":1481,"title":{},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["readi",{"_index":1489,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"25":{}},"component":{}}],["readm",{"_index":3848,"title":{},"name":{},"text":{"27":{}},"component":{}}],["real",{"_index":1225,"title":{},"name":{},"text":{"10":{},"14":{},"15":{},"26":{}},"component":{}}],["realm",{"_index":3053,"title":{},"name":{},"text":{"26":{}},"component":{}}],["reason",{"_index":58,"title":{"23-26":{},"23-27":{},"23-29":{},"23-34":{},"23-35":{},"23-84":{},"23-85":{},"23-87":{},"23-88":{},"23-89":{},"23-200":{}},"name":{},"text":{"1":{},"3":{},"8":{},"18":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["reassign",{"_index":2094,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rebalanc",{"_index":3952,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rebas",{"_index":2359,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["rebuild",{"_index":3793,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rebuilt",{"_index":3852,"title":{},"name":{},"text":{"27":{}},"component":{}}],["receipt",{"_index":4095,"title":{},"name":{},"text":{"28":{}},"component":{}}],["receiv",{"_index":801,"title":{"21-14":{},"22-4":{},"23-55":{},"23-237":{},"24-6":{},"24-15":{},"24-22":{},"24-57":{},"24-61":{},"24-69":{},"24-71":{},"24-72":{},"24-74":{},"24-77":{},"24-80":{},"24-82":{},"29-77":{},"29-80":{},"29-95":{},"29-96":{},"29-113":{},"29-114":{},"29-115":{},"29-116":{},"29-119":{},"29-120":{},"29-122":{},"29-123":{},"29-141":{},"31-6":{},"31-8":{},"31-11":{},"31-13":{}},"name":{},"text":{"2":{},"6":{},"9":{},"11":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["receive/hold",{"_index":2735,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recent",{"_index":880,"title":{},"name":{},"text":{"3":{},"14":{},"27":{}},"component":{}}],["recipi",{"_index":1028,"title":{"27-384":{}},"name":{},"text":{"6":{},"8":{},"9":{},"14":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["recogn",{"_index":4218,"title":{},"name":{},"text":{"29":{}},"component":{}}],["recommend",{"_index":296,"title":{},"name":{},"text":{"1":{},"3":{},"17":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["reconfigur",{"_index":534,"title":{},"name":{},"text":{"1":{}},"component":{}}],["reconstruct",{"_index":3861,"title":{},"name":{},"text":{"27":{}},"component":{}}],["record",{"_index":2654,"title":{},"name":{},"text":{"23":{},"30":{}},"component":{}}],["recov",{"_index":1468,"title":{"27-109":{},"27-111":{},"27-113":{}},"name":{},"text":{"14":{},"18":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["recoveri",{"_index":607,"title":{},"name":{},"text":{"2":{},"25":{},"27":{}},"component":{}}],["recreat",{"_index":2684,"title":{},"name":{},"text":{"23":{}},"component":{}}],["redeem",{"_index":1172,"title":{"24-80":{},"29-116":{}},"name":{},"text":{"9":{},"24":{},"29":{}},"component":{}}],["redeempt",{"_index":2918,"title":{},"name":{},"text":{"24":{}},"component":{}}],["redempt",{"_index":2919,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reduc",{"_index":932,"title":{},"name":{},"text":{"6":{},"14":{},"18":{},"20":{},"23":{},"27":{},"28":{},"29":{}},"component":{}}],["redund",{"_index":2625,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reentranc",{"_index":3687,"title":{},"name":{},"text":{"27":{},"28":{},"30":{}},"component":{}}],["reentrancyguard",{"_index":3323,"title":{"27-170":{}},"name":{},"text":{"27":{}},"component":{}}],["reentrancyguardreentrantcal",{"_index":3326,"title":{"27-174":{},"27-178":{}},"name":{},"text":{"27":{}},"component":{}}],["reentrancyguardtransi",{"_index":3327,"title":{"27-175":{}},"name":{},"text":{"27":{}},"component":{}}],["reentrant",{"_index":3869,"title":{},"name":{},"text":{"27":{}},"component":{}}],["refer",{"_index":890,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"15":{},"18":{},"20":{},"22":{},"23":{},"26":{},"27":{},"28":{},"30":{}},"component":{}}],["referenc",{"_index":1581,"title":{},"name":{},"text":{"15":{}},"component":{}}],["reflect",{"_index":2907,"title":{},"name":{},"text":{"24":{},"27":{},"29":{}},"component":{}}],["refund",{"_index":794,"title":{},"name":{},"text":{"2":{},"25":{},"27":{}},"component":{}}],["refundreceiv",{"_index":2938,"title":{"25-15":{}},"name":{},"text":{"25":{}},"component":{}}],["refus",{"_index":2698,"title":{},"name":{},"text":{"23":{}},"component":{}}],["regain",{"_index":4365,"title":{},"name":{},"text":{"30":{}},"component":{}}],["regard",{"_index":169,"title":{},"name":{},"text":{"1":{},"10":{},"14":{},"18":{}},"component":{}}],["regardless",{"_index":2087,"title":{},"name":{},"text":{"20":{},"23":{},"24":{}},"component":{}}],["regist",{"_index":1029,"title":{},"name":{},"text":{"6":{},"18":{},"20":{},"23":{},"24":{}},"component":{}}],["registri",{"_index":2870,"title":{},"name":{},"text":{"24":{}},"component":{}}],["regular",{"_index":140,"title":{},"name":{},"text":{"1":{},"2":{},"18":{},"27":{}},"component":{}}],["rehash",{"_index":678,"title":{},"name":{},"text":{"2":{}},"component":{}}],["reiniti",{"_index":3030,"title":{"26-68":{}},"name":{},"text":{"26":{}},"component":{}}],["reinstat",{"_index":3134,"title":{},"name":{},"text":{"26":{}},"component":{}}],["reinterpret",{"_index":3849,"title":{},"name":{},"text":{"27":{}},"component":{}}],["reject",{"_index":2971,"title":{},"name":{},"text":{"25":{},"26":{},"27":{}},"component":{}}],["relat",{"_index":882,"title":{},"name":{},"text":{"4":{},"8":{},"15":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["relationship",{"_index":1591,"title":{},"name":{},"text":{"15":{},"20":{},"29":{}},"component":{}}],["relay",{"_index":2417,"title":{"23-90":{}},"name":{},"text":{"23":{},"25":{},"27":{}},"component":{}}],["releas",{"_index":814,"title":{"3-7":{},"22-8":{},"22-9":{},"22-10":{},"22-11":{},"22-12":{},"22-13":{}},"name":{},"text":{"3":{},"4":{},"5":{},"12":{},"14":{},"15":{},"22":{},"29":{}},"component":{}}],["relev",{"_index":1828,"title":{},"name":{},"text":{"18":{},"20":{},"26":{},"29":{}},"component":{}}],["reli",{"_index":544,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"12":{},"14":{},"23":{},"25":{},"26":{},"28":{},"29":{}},"component":{}}],["reliabl",{"_index":1511,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["relinquish",{"_index":91,"title":{},"name":{},"text":{"1":{}},"component":{}}],["remain",{"_index":693,"title":{"21-105":{}},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"21":{},"23":{},"29":{},"30":{}},"component":{}}],["remaind",{"_index":3706,"title":{},"name":{},"text":{"27":{}},"component":{}}],["remainingweight",{"_index":2429,"title":{"23-120":{}},"name":{},"text":{"23":{}},"component":{}}],["remappings.txt",{"_index":1552,"title":{},"name":{},"text":{"15":{}},"component":{}}],["remco",{"_index":3716,"title":{},"name":{},"text":{"27":{}},"component":{}}],["remedi",{"_index":3689,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rememb",{"_index":1044,"title":{},"name":{},"text":{"6":{}},"component":{}}],["remov",{"_index":97,"title":{"27-216":{},"27-224":{},"27-232":{},"27-240":{},"27-248":{},"27-256":{},"27-264":{},"27-272":{},"27-280":{},"27-290":{},"27-296":{},"27-302":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"12":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["removesign",{"_index":2205,"title":{"21-89":{}},"name":{},"text":{"21":{}},"component":{}}],["render",{"_index":2064,"title":{},"name":{},"text":{"20":{},"26":{},"27":{}},"component":{}}],["renounc",{"_index":400,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{}},"component":{}}],["renounceownership",{"_index":90,"title":{"20-7":{}},"name":{},"text":{"1":{},"20":{},"22":{},"26":{}},"component":{}}],["renouncerol",{"_index":568,"title":{"20-24":{},"20-39":{},"20-79":{},"20-117":{},"20-172":{}},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["reoccur",{"_index":2112,"title":{},"name":{},"text":{"20":{}},"component":{}}],["repeat",{"_index":1806,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["replac",{"_index":902,"title":{"27-358":{},"27-359":{},"27-367":{},"27-368":{}},"name":{},"text":{"5":{},"6":{},"9":{},"12":{},"14":{},"17":{},"18":{},"20":{},"26":{},"27":{},"28":{}},"component":{}}],["replace_10_1",{"_index":3536,"title":{"27-556":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_10_2",{"_index":3538,"title":{"27-558":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_10_4",{"_index":3540,"title":{"27-560":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_10_6",{"_index":3542,"title":{"27-562":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_10_8",{"_index":3544,"title":{"27-564":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_1",{"_index":3546,"title":{"27-566":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_10",{"_index":3556,"title":{"27-576":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_2",{"_index":3548,"title":{"27-568":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_4",{"_index":3550,"title":{"27-570":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_6",{"_index":3552,"title":{"27-572":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_12_8",{"_index":3554,"title":{"27-574":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_1",{"_index":3558,"title":{"27-578":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_10",{"_index":3568,"title":{"27-588":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_12",{"_index":3570,"title":{"27-590":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_2",{"_index":3560,"title":{"27-580":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_4",{"_index":3562,"title":{"27-582":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_6",{"_index":3564,"title":{"27-584":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_16_8",{"_index":3566,"title":{"27-586":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_1",{"_index":3572,"title":{"27-592":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_10",{"_index":3582,"title":{"27-602":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_12",{"_index":3584,"title":{"27-604":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_16",{"_index":3586,"title":{"27-606":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_2",{"_index":3574,"title":{"27-594":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_4",{"_index":3576,"title":{"27-596":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_6",{"_index":3578,"title":{"27-598":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_20_8",{"_index":3580,"title":{"27-600":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_1",{"_index":3588,"title":{"27-608":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_10",{"_index":3598,"title":{"27-618":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_12",{"_index":3600,"title":{"27-620":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_16",{"_index":3602,"title":{"27-622":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_2",{"_index":3590,"title":{"27-610":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_20",{"_index":3604,"title":{"27-624":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_4",{"_index":3592,"title":{"27-612":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_6",{"_index":3594,"title":{"27-614":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_22_8",{"_index":3596,"title":{"27-616":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_1",{"_index":3606,"title":{"27-626":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_10",{"_index":3616,"title":{"27-636":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_12",{"_index":3618,"title":{"27-638":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_16",{"_index":3620,"title":{"27-640":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_2",{"_index":3608,"title":{"27-628":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_20",{"_index":3622,"title":{"27-642":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_22",{"_index":3624,"title":{"27-644":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_4",{"_index":3610,"title":{"27-630":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_6",{"_index":3612,"title":{"27-632":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_24_8",{"_index":3614,"title":{"27-634":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_1",{"_index":3626,"title":{"27-646":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_10",{"_index":3636,"title":{"27-656":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_12",{"_index":3638,"title":{"27-658":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_16",{"_index":3640,"title":{"27-660":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_2",{"_index":3628,"title":{"27-648":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_20",{"_index":3642,"title":{"27-662":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_22",{"_index":3644,"title":{"27-664":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_24",{"_index":3646,"title":{"27-666":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_4",{"_index":3630,"title":{"27-650":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_6",{"_index":3632,"title":{"27-652":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_28_8",{"_index":3634,"title":{"27-654":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_2_1",{"_index":3516,"title":{"27-536":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_1",{"_index":3648,"title":{"27-668":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_10",{"_index":3658,"title":{"27-678":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_12",{"_index":3660,"title":{"27-680":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_16",{"_index":3662,"title":{"27-682":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_2",{"_index":3650,"title":{"27-670":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_20",{"_index":3664,"title":{"27-684":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_22",{"_index":3666,"title":{"27-686":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_24",{"_index":3668,"title":{"27-688":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_28",{"_index":3670,"title":{"27-690":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_4",{"_index":3652,"title":{"27-672":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_6",{"_index":3654,"title":{"27-674":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_32_8",{"_index":3656,"title":{"27-676":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_4_1",{"_index":3518,"title":{"27-538":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_4_2",{"_index":3520,"title":{"27-540":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_6_1",{"_index":3522,"title":{"27-542":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_6_2",{"_index":3524,"title":{"27-544":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_6_4",{"_index":3526,"title":{"27-546":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_8_1",{"_index":3528,"title":{"27-548":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_8_2",{"_index":3530,"title":{"27-550":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_8_4",{"_index":3532,"title":{"27-552":{}},"name":{},"text":{"27":{}},"component":{}}],["replace_8_6",{"_index":3534,"title":{"27-554":{}},"name":{},"text":{"27":{}},"component":{}}],["replay",{"_index":661,"title":{},"name":{},"text":{"2":{},"18":{},"25":{},"27":{},"29":{}},"component":{}}],["replic",{"_index":1631,"title":{},"name":{},"text":{"17":{}},"component":{}}],["report",{"_index":1528,"title":{},"name":{},"text":{"14":{},"15":{},"20":{},"23":{}},"component":{}}],["repositori",{"_index":1627,"title":{},"name":{},"text":{"17":{}},"component":{}}],["repres",{"_index":764,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"10":{},"14":{},"16":{},"20":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["represent",{"_index":1190,"title":{},"name":{},"text":{"9":{},"16":{},"18":{},"23":{},"27":{},"29":{}},"component":{}}],["request",{"_index":683,"title":{"21-118":{},"21-119":{},"21-120":{},"21-121":{},"25-13":{},"25-14":{},"25-15":{},"25-16":{},"25-17":{},"25-18":{}},"name":{},"text":{"2":{},"14":{},"21":{},"24":{},"25":{},"29":{}},"component":{}}],["request.sign",{"_index":2978,"title":{},"name":{},"text":{"25":{}},"component":{}}],["request.signatur",{"_index":2977,"title":{},"name":{},"text":{"25":{}},"component":{}}],["requesteddecreas",{"_index":4163,"title":{"29-131":{},"29-137":{}},"name":{},"text":{"29":{}},"component":{}}],["requestedvalu",{"_index":2946,"title":{"25-21":{}},"name":{},"text":{"25":{}},"component":{}}],["requesthash",{"_index":2233,"title":{"21-122":{}},"name":{},"text":{"21":{}},"component":{}}],["requir",{"_index":117,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"11":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["requiredprefund",{"_index":2265,"title":{"21-153":{}},"name":{},"text":{"21":{}},"component":{}}],["requirevalidrequest",{"_index":2942,"title":{"25-18":{}},"name":{},"text":{"25":{}},"component":{}}],["reschedul",{"_index":2750,"title":{},"name":{},"text":{"23":{}},"component":{}}],["research",{"_index":1067,"title":{},"name":{},"text":{"7":{},"14":{}},"component":{}}],["resembl",{"_index":278,"title":{},"name":{},"text":{"1":{}},"component":{}}],["reserv",{"_index":485,"title":{},"name":{},"text":{"1":{}},"component":{}}],["reset",{"_index":1812,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"24":{},"27":{},"31":{}},"component":{}}],["resolut",{"_index":4023,"title":{},"name":{},"text":{"27":{}},"component":{}}],["resolv",{"_index":857,"title":{},"name":{},"text":{"3":{},"10":{},"26":{},"29":{},"30":{}},"component":{}}],["resourc",{"_index":1630,"title":{},"name":{},"text":{"17":{},"27":{},"30":{}},"component":{}}],["resource_error",{"_index":3679,"title":{"27-702":{}},"name":{},"text":{"27":{}},"component":{}}],["resp",{"_index":2730,"title":{},"name":{},"text":{"23":{}},"component":{}}],["respect",{"_index":1373,"title":{},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["respons",{"_index":521,"title":{},"name":{},"text":{"1":{},"27":{},"30":{}},"component":{}}],["rest",{"_index":1384,"title":{},"name":{},"text":{"14":{}},"component":{}}],["restart",{"_index":2749,"title":{},"name":{},"text":{"23":{}},"component":{}}],["restor",{"_index":3745,"title":{},"name":{},"text":{"27":{}},"component":{}}],["restrict",{"_index":300,"title":{"13-1":{},"20-207":{}},"name":{},"text":{"1":{},"10":{},"14":{},"20":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["result",{"_index":710,"title":{"21-169":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-13":{},"27-18":{},"27-20":{},"27-128":{},"27-130":{},"27-134":{},"27-138":{},"27-438":{},"27-439":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{},"27-473":{},"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-529":{},"27-530":{},"27-531":{},"27-532":{},"27-533":{},"27-534":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{}},"name":{},"text":{"2":{},"3":{},"7":{},"14":{},"17":{},"19":{},"21":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["resultadd",{"_index":1783,"title":{},"name":{},"text":{"18":{}},"component":{}}],["resultdiv",{"_index":1793,"title":{},"name":{},"text":{"18":{}},"component":{}}],["resultmul",{"_index":1790,"title":{},"name":{},"text":{"18":{}},"component":{}}],["resultsub",{"_index":1787,"title":{},"name":{},"text":{"18":{}},"component":{}}],["retain",{"_index":1336,"title":{},"name":{},"text":{"14":{},"26":{}},"component":{}}],["retri",{"_index":4293,"title":{},"name":{},"text":{"29":{}},"component":{}}],["retribut",{"_index":2966,"title":{},"name":{},"text":{"25":{}},"component":{}}],["retriev",{"_index":345,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"23":{},"24":{},"26":{},"30":{},"31":{}},"component":{}}],["return",{"_index":741,"title":{"27-154":{},"27-155":{},"27-158":{},"27-159":{},"27-162":{},"27-163":{},"27-166":{},"27-167":{},"27-355":{},"27-357":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-373":{},"27-375":{},"27-393":{},"27-395":{},"27-397":{}},"name":{},"text":{"2":{},"8":{},"9":{},"10":{},"14":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["returndata",{"_index":2175,"title":{"21-25":{},"21-158":{},"21-159":{},"21-160":{},"27-389":{},"27-390":{}},"name":{},"text":{"27":{}},"component":{}}],["reus",{"_index":1127,"title":{},"name":{},"text":{"8":{},"26":{}},"component":{}}],["reusabl",{"_index":1538,"title":{},"name":{},"text":{"15":{}},"component":{}}],["revalid",{"_index":1300,"title":{},"name":{},"text":{"12":{}},"component":{}}],["revert",{"_index":214,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"12":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["review",{"_index":374,"title":{},"name":{},"text":{"1":{},"12":{},"21":{},"27":{}},"component":{}}],["revoc",{"_index":3839,"title":{},"name":{},"text":{"27":{}},"component":{}}],["revok",{"_index":9,"title":{"1-4":{}},"name":{},"text":{"1":{},"12":{},"14":{},"20":{},"28":{}},"component":{}}],["revokerol",{"_index":269,"title":{"20-23":{},"20-38":{},"20-78":{},"20-116":{},"20-171":{}},"name":{},"text":{"1":{},"12":{},"20":{},"23":{}},"component":{}}],["reward",{"_index":1051,"title":{"7-2":{},"7-3":{}},"name":{},"text":{"7":{}},"component":{}}],["rfc",{"_index":3697,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rfc4648",{"_index":3984,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rfc8017",{"_index":1741,"title":{},"name":{},"text":{"18":{}},"component":{}}],["right",{"_index":381,"title":{"27-479":{},"27-480":{},"27-481":{},"27-482":{},"27-483":{},"27-484":{},"27-485":{},"27-486":{},"27-487":{},"27-488":{},"27-489":{},"27-490":{},"27-491":{},"27-492":{},"27-493":{},"27-494":{},"27-495":{},"27-496":{},"27-497":{},"27-498":{},"27-499":{},"27-500":{},"27-501":{},"27-502":{},"27-503":{},"27-504":{},"27-505":{},"27-506":{},"27-507":{},"27-508":{},"27-509":{},"27-510":{},"27-511":{},"27-512":{},"27-513":{},"27-514":{},"27-515":{},"27-516":{},"27-517":{},"27-518":{},"27-519":{},"27-520":{},"27-521":{},"27-522":{},"27-523":{},"27-524":{},"27-525":{},"27-526":{},"27-527":{},"27-528":{},"27-529":{},"27-530":{},"27-531":{},"27-532":{},"27-533":{},"27-534":{}},"name":{},"text":{"1":{},"8":{},"10":{},"11":{},"16":{},"18":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["rip",{"_index":1711,"title":{},"name":{},"text":{"18":{}},"component":{}}],["risk",{"_index":293,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"24":{},"25":{},"26":{},"28":{},"29":{}},"component":{}}],["riski",{"_index":2689,"title":{},"name":{},"text":{"23":{}},"component":{}}],["roadmap",{"_index":1719,"title":{},"name":{},"text":{"18":{}},"component":{}}],["role",{"_index":2,"title":{"1-2":{},"1-4":{},"1-11":{},"20-20":{},"20-21":{},"20-22":{},"20-23":{},"20-24":{},"20-25":{},"20-26":{},"20-27":{},"20-31":{},"20-33":{},"20-34":{},"20-35":{},"20-36":{},"20-37":{},"20-38":{},"20-39":{},"20-40":{},"20-41":{},"20-42":{},"20-46":{},"20-47":{},"20-50":{},"20-51":{},"20-52":{},"20-53":{},"20-54":{},"20-77":{},"20-78":{},"20-79":{},"20-80":{},"20-81":{},"20-82":{},"23-235":{},"23-273":{}},"name":{},"text":{"1":{},"14":{},"15":{},"20":{},"23":{},"26":{},"28":{}},"component":{}}],["role'",{"_index":2040,"title":{},"name":{},"text":{"20":{}},"component":{}}],["roleadminchang",{"_index":1921,"title":{"20-25":{},"20-138":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["rolegr",{"_index":1924,"title":{"20-26":{},"20-136":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["rolegrantdelaychang",{"_index":1993,"title":{"20-140":{}},"name":{},"text":{"20":{}},"component":{}}],["roleguardianchang",{"_index":1992,"title":{"20-139":{}},"name":{},"text":{"20":{}},"component":{}}],["roleid",{"_index":1973,"title":{"20-109":{},"20-110":{},"20-111":{},"20-112":{},"20-113":{},"20-114":{},"20-115":{},"20-116":{},"20-117":{},"20-118":{},"20-119":{},"20-120":{},"20-121":{},"20-135":{},"20-136":{},"20-137":{},"20-138":{},"20-139":{},"20-140":{},"20-142":{},"20-148":{},"20-150":{},"20-164":{},"20-165":{},"20-166":{},"20-167":{},"20-168":{},"20-169":{},"20-170":{},"20-171":{},"20-172":{},"20-173":{},"20-174":{},"20-175":{},"20-176":{},"20-177":{},"20-178":{},"20-179":{},"20-180":{},"20-181":{},"20-182":{}},"name":{},"text":{"20":{}},"component":{}}],["rolelabel",{"_index":1990,"title":{"20-135":{}},"name":{},"text":{"20":{}},"component":{}}],["rolerevok",{"_index":1925,"title":{"20-27":{},"20-137":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["role’",{"_index":267,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["roll",{"_index":2651,"title":{},"name":{},"text":{"23":{}},"component":{}}],["rollback",{"_index":3060,"title":{},"name":{},"text":{"26":{}},"component":{}}],["rollbackdefaultadmindelay",{"_index":1948,"title":{"20-64":{},"20-96":{}},"name":{},"text":{"20":{}},"component":{}}],["room",{"_index":3931,"title":{},"name":{},"text":{"27":{}},"component":{}}],["root",{"_index":1809,"title":{"27-152":{},"27-154":{},"27-156":{},"27-158":{},"27-160":{},"27-162":{},"27-164":{},"27-166":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["round",{"_index":1195,"title":{"27-14":{},"27-22":{},"27-24":{},"27-26":{},"27-28":{},"27-29":{},"29-117":{},"29-118":{}},"name":{},"text":{"9":{},"27":{},"29":{}},"component":{}}],["rout",{"_index":2676,"title":{},"name":{},"text":{"23":{}},"component":{}}],["royalti",{"_index":2888,"title":{},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["royaltyamount",{"_index":2813,"title":{"24-57":{}},"name":{},"text":{},"component":{}}],["royaltyinfo",{"_index":2811,"title":{"24-57":{},"31-4":{}},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["rpc",{"_index":3070,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["rsa",{"_index":623,"title":{"18-5":{}},"name":{},"text":{"2":{},"18":{},"21":{},"27":{}},"component":{}}],["rsasignerassoci",{"_index":2200,"title":{"21-83":{}},"name":{},"text":{"21":{}},"component":{}}],["rsasignerdisassoci",{"_index":2201,"title":{"21-84":{}},"name":{},"text":{"21":{}},"component":{}}],["rsavalid",{"_index":2199,"title":{"21-76":{}},"name":{},"text":{},"component":{}}],["rule",{"_index":185,"title":{"2-4":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"10":{},"12":{},"14":{},"16":{},"17":{},"20":{},"23":{},"27":{}},"component":{}}],["run",{"_index":148,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"12":{},"23":{},"25":{},"26":{}},"component":{}}],["runtim",{"_index":1758,"title":{},"name":{},"text":{"18":{}},"component":{}}],["rwd",{"_index":1101,"title":{},"name":{},"text":{"7":{}},"component":{}}],["s",{"_index":1693,"title":{"23-224":{},"27-112":{},"27-113":{},"27-116":{},"29-36":{},"29-41":{}},"name":{},"text":{"18":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["safe",{"_index":127,"title":{},"name":{},"text":{"1":{},"3":{},"13":{},"17":{},"18":{},"27":{},"29":{},"30":{}},"component":{}}],["safebatchtransferfrom",{"_index":935,"title":{"28-8":{},"28-24":{}},"name":{},"text":{"6":{},"24":{},"28":{}},"component":{}}],["safecast",{"_index":1798,"title":{"27-36":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["safecastoverflowedintdowncast",{"_index":3287,"title":{"27-104":{}},"name":{},"text":{"27":{}},"component":{}}],["safecastoverflowedinttouint",{"_index":3286,"title":{"27-103":{}},"name":{},"text":{"27":{}},"component":{}}],["safecastoverfloweduintdowncast",{"_index":3285,"title":{"27-102":{}},"name":{},"text":{"27":{}},"component":{}}],["safecastoverfloweduinttoint",{"_index":3288,"title":{"27-105":{}},"name":{},"text":{"27":{}},"component":{}}],["safedecreaseallow",{"_index":4162,"title":{"29-131":{}},"name":{},"text":{"29":{}},"component":{}}],["safeerc20",{"_index":4159,"title":{"29-127":{}},"name":{},"text":{"29":{}},"component":{}}],["safeerc20.safetransf",{"_index":1203,"title":{},"name":{},"text":{"9":{}},"component":{}}],["safeerc20.safetransferfrom",{"_index":4215,"title":{},"name":{},"text":{"29":{}},"component":{}}],["safeerc20faileddecreaseallow",{"_index":4169,"title":{"29-137":{}},"name":{},"text":{"29":{}},"component":{}}],["safeerc20failedoper",{"_index":4168,"title":{"29-136":{}},"name":{},"text":{"29":{}},"component":{}}],["safeincreaseallow",{"_index":4161,"title":{"29-130":{}},"name":{},"text":{"29":{}},"component":{}}],["safer",{"_index":1082,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["safeti",{"_index":876,"title":{},"name":{},"text":{"3":{},"17":{},"27":{}},"component":{}}],["safetransf",{"_index":4160,"title":{"29-128":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["safetransferfrom",{"_index":1026,"title":{"28-7":{},"28-23":{},"29-129":{},"30-5":{},"30-6":{},"30-37":{},"30-38":{}},"name":{},"text":{"6":{},"28":{},"29":{},"30":{}},"component":{}}],["sale",{"_index":2892,"title":{},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["salepric",{"_index":2812,"title":{"24-57":{},"31-4":{}},"name":{},"text":{"24":{},"30":{},"31":{}},"component":{}}],["salt",{"_index":2118,"title":{"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-261":{},"24-86":{},"26-53":{},"26-54":{},"26-55":{},"26-56":{},"26-59":{},"26-60":{},"26-61":{},"26-62":{},"27-121":{},"27-130":{},"27-379":{},"27-380":{},"27-381":{}},"name":{},"text":{"20":{},"23":{},"26":{},"27":{}},"component":{}}],["same",{"_index":271,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"9":{},"12":{},"13":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["satisfi",{"_index":2110,"title":{},"name":{},"text":{"20":{}},"component":{}}],["save",{"_index":931,"title":{},"name":{},"text":{"6":{},"14":{},"23":{},"27":{},"29":{}},"component":{}}],["scale",{"_index":1186,"title":{},"name":{},"text":{"9":{},"23":{}},"component":{}}],["scenario",{"_index":232,"title":{},"name":{},"text":{"1":{},"6":{},"20":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["schedul",{"_index":436,"title":{"20-72":{},"20-84":{},"20-86":{},"20-126":{},"20-132":{},"20-189":{},"23-248":{}},"name":{},"text":{"1":{},"13":{},"20":{},"22":{},"23":{},"29":{}},"component":{}}],["schedulebatch",{"_index":2527,"title":{"23-249":{}},"name":{},"text":{"23":{}},"component":{}}],["schema",{"_index":1012,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["scheme",{"_index":1537,"title":{},"name":{},"text":{"15":{},"18":{},"23":{},"27":{}},"component":{}}],["scope",{"_index":1025,"title":{},"name":{},"text":{"6":{},"10":{},"20":{},"23":{},"26":{}},"component":{}}],["scopelift’",{"_index":2648,"title":{},"name":{},"text":{"23":{}},"component":{}}],["script",{"_index":1644,"title":{},"name":{},"text":{"17":{}},"component":{}}],["scripts/deploy",{"_index":1645,"title":{},"name":{},"text":{"17":{}},"component":{}}],["scripts/foobar.j",{"_index":1902,"title":{},"name":{},"text":{"18":{}},"component":{}}],["seamlessli",{"_index":3837,"title":{},"name":{},"text":{"27":{}},"component":{}}],["search",{"_index":3936,"title":{},"name":{},"text":{"27":{}},"component":{}}],["second",{"_index":1089,"title":{},"name":{},"text":{"7":{},"14":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["secp256k1",{"_index":1672,"title":{"18-3":{}},"name":{},"text":{"18":{},"29":{}},"component":{}}],["secp256r1",{"_index":1673,"title":{"18-4":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["section",{"_index":1107,"title":{},"name":{},"text":{"7":{},"17":{},"24":{},"27":{},"29":{}},"component":{}}],["secur",{"_index":252,"title":{"3-2":{},"9-1":{},"12-3":{},"15-6":{},"23-140":{},"25-11":{},"27-169":{},"29-35":{}},"name":{},"text":{"1":{},"2":{},"3":{},"9":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["security@openzeppelin.org",{"_index":1563,"title":{},"name":{},"text":{"15":{}},"component":{}}],["see",{"_index":800,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"14":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["seem",{"_index":837,"title":{},"name":{},"text":{"3":{},"13":{}},"component":{}}],["seen",{"_index":1111,"title":{},"name":{},"text":{"7":{},"20":{},"23":{},"27":{}},"component":{}}],["select",{"_index":289,"title":{},"name":{},"text":{"1":{},"20":{},"27":{}},"component":{}}],["selector",{"_index":463,"title":{"20-101":{},"20-103":{},"20-107":{},"20-121":{},"20-142":{},"20-151":{},"20-153":{},"20-158":{},"20-162":{},"20-181":{},"20-182":{},"20-215":{},"21-161":{},"21-162":{},"23-146":{},"23-147":{},"23-148":{},"23-156":{}},"name":{},"text":{"1":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["self",{"_index":402,"title":{"21-142":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-149":{},"21-150":{},"21-151":{},"21-152":{},"21-153":{},"21-154":{},"27-319":{},"27-320":{},"27-321":{},"27-322":{},"27-323":{},"27-324":{},"27-325":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{},"27-333":{},"27-334":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-341":{},"27-342":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{},"27-349":{},"27-350":{},"27-353":{},"27-354":{},"27-355":{},"27-356":{},"27-357":{},"27-358":{},"27-359":{},"27-360":{},"27-361":{},"27-362":{},"27-363":{},"27-364":{},"27-365":{},"27-366":{},"27-367":{},"27-368":{},"27-369":{},"27-370":{},"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-376":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{}},"name":{},"text":{"1":{},"14":{},"18":{},"21":{},"23":{},"26":{},"27":{}},"component":{}}],["selfdestruct",{"_index":1317,"title":{},"name":{},"text":{"13":{}},"component":{}}],["sell",{"_index":2354,"title":{},"name":{},"text":{"22":{}},"component":{}}],["seller",{"_index":2896,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{}}],["semant",{"_index":816,"title":{},"name":{},"text":{"3":{},"15":{},"29":{}},"component":{}}],["send",{"_index":908,"title":{"6-4":{}},"name":{},"text":{"8":{},"9":{},"16":{},"18":{},"24":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["sender",{"_index":689,"title":{"20-26":{},"20-27":{},"21-64":{},"21-73":{},"21-82":{},"21-97":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-128":{},"24-4":{},"24-5":{},"24-13":{},"24-14":{},"24-20":{},"24-21":{},"24-81":{},"24-82":{},"29-96":{}},"name":{},"text":{"2":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["sendersepar",{"_index":2224,"title":{"21-111":{}},"name":{},"text":{},"component":{}}],["sender’",{"_index":2732,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sendvalu",{"_index":3389,"title":{"27-384":{}},"name":{},"text":{"27":{}},"component":{}}],["sens",{"_index":433,"title":{},"name":{},"text":{"1":{},"30":{}},"component":{}}],["sensit",{"_index":1471,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"21":{},"27":{}},"component":{}}],["sent",{"_index":1146,"title":{},"name":{},"text":{"8":{},"10":{},"14":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["separ",{"_index":184,"title":{"27-126":{},"27-127":{},"27-128":{}},"name":{},"text":{"1":{},"17":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["sequenc",{"_index":1478,"title":{},"name":{},"text":{"14":{},"21":{},"23":{},"27":{}},"component":{}}],["sequenti",{"_index":1370,"title":{},"name":{},"text":{"14":{},"23":{},"27":{},"30":{}},"component":{}}],["serv",{"_index":1572,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{}}],["server",{"_index":810,"title":{},"name":{},"text":{"2":{}},"component":{}}],["servic",{"_index":1598,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"25":{},"30":{}},"component":{}}],["set",{"_index":84,"title":{"14":{},"2-2":{},"11-1":{},"27-212":{},"27-215":{},"27-223":{},"27-231":{},"27-239":{},"27-247":{},"27-255":{},"27-263":{},"27-271":{},"27-279":{},"27-289":{},"27-290":{},"27-291":{},"27-292":{},"27-293":{},"27-294":{},"27-295":{},"27-296":{},"27-297":{},"27-298":{},"27-299":{},"27-300":{},"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{}},"name":{},"text":{"1":{},"2":{},"11":{},"14":{},"15":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["setaccessmanagerignor",{"_index":2448,"title":{"23-147":{}},"name":{},"text":{"23":{}},"component":{}}],["setapprovalforal",{"_index":4042,"title":{"28-5":{},"28-21":{},"30-9":{},"30-34":{}},"name":{},"text":{"28":{},"30":{}},"component":{}}],["setauthor",{"_index":2018,"title":{"20-200":{},"20-210":{}},"name":{},"text":{"20":{}},"component":{}}],["setback",{"_index":2105,"title":{},"name":{},"text":{"20":{}},"component":{}}],["setbasedelaysecond",{"_index":2444,"title":{"23-144":{}},"name":{},"text":{"23":{}},"component":{}}],["setgrantdelay",{"_index":503,"title":{"20-120":{},"20-175":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["setinterfaceimplement",{"_index":2798,"title":{"24-45":{}},"name":{},"text":{"24":{}},"component":{}}],["setlatequorumvoteextens",{"_index":2491,"title":{"23-202":{}},"name":{},"text":{"23":{}},"component":{}}],["setmanag",{"_index":2795,"title":{"24-43":{}},"name":{},"text":{"24":{}},"component":{}}],["setproposalthreshold",{"_index":2477,"title":{"23-190":{}},"name":{},"text":{"23":{}},"component":{}}],["setroleadmin",{"_index":550,"title":{"20-118":{},"20-173":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["setroleguardian",{"_index":551,"title":{"20-119":{},"20-174":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["settargetadmindelay",{"_index":555,"title":{"20-122":{},"20-183":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["settargetclos",{"_index":557,"title":{"20-123":{},"20-185":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["settargetfunctionrol",{"_index":559,"title":{"20-121":{},"20-181":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["setter",{"_index":2136,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["setthreshold",{"_index":2206,"title":{"21-90":{}},"name":{},"text":{"21":{}},"component":{}}],["setto",{"_index":3344,"title":{"27-211":{}},"name":{},"text":{"27":{}},"component":{}}],["setup",{"_index":624,"title":{"14-7":{},"27-319":{},"27-372":{},"27-373":{}},"name":{},"text":{"2":{},"11":{},"14":{},"18":{},"20":{},"26":{},"27":{}},"component":{}}],["setvalueinnamespac",{"_index":4001,"title":{},"name":{},"text":{"27":{}},"component":{}}],["setvotingdelay",{"_index":2473,"title":{"23-188":{}},"name":{},"text":{"23":{}},"component":{}}],["setvotingperiod",{"_index":2475,"title":{"23-189":{}},"name":{},"text":{"23":{}},"component":{}}],["setwithfallback",{"_index":3995,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sever",{"_index":1577,"title":{},"name":{},"text":{"15":{},"18":{},"23":{}},"component":{}}],["sha256",{"_index":1733,"title":{},"name":{},"text":{"18":{}},"component":{}}],["shape",{"_index":1835,"title":{},"name":{},"text":{"18":{}},"component":{}}],["share",{"_index":766,"title":{"24-67":{},"24-68":{},"24-70":{},"24-71":{},"24-73":{},"24-74":{},"24-76":{},"24-77":{},"24-79":{},"24-80":{},"24-81":{},"24-82":{},"29-104":{},"29-110":{},"29-112":{},"29-114":{},"29-116":{},"29-118":{},"29-119":{},"29-120":{},"29-123":{},"29-125":{}},"name":{},"text":{"2":{},"9":{},"14":{},"16":{},"24":{},"26":{},"29":{}},"component":{}}],["shield",{"_index":958,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["shift",{"_index":1667,"title":{},"name":{},"text":{"17":{},"26":{}},"component":{}}],["shine",{"_index":231,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ship",{"_index":836,"title":{},"name":{},"text":{"3":{}},"component":{}}],["short",{"_index":3699,"title":{},"name":{},"text":{"27":{}},"component":{}}],["shorter",{"_index":1353,"title":{},"name":{},"text":{"14":{},"20":{},"29":{}},"component":{}}],["shortstr",{"_index":3418,"title":{"27-427":{},"27-428":{},"27-429":{},"27-430":{},"27-431":{},"27-432":{},"27-433":{}},"name":{},"text":{"27":{}},"component":{}}],["should’v",{"_index":2076,"title":{},"name":{},"text":{"20":{}},"component":{}}],["show",{"_index":1482,"title":{},"name":{},"text":{"14":{},"17":{},"23":{},"24":{},"29":{}},"component":{}}],["showcas",{"_index":1055,"title":{},"name":{},"text":{"7":{}},"component":{}}],["shown",{"_index":3068,"title":{},"name":{},"text":{"26":{}},"component":{}}],["shut",{"_index":530,"title":{},"name":{},"text":{"1":{}},"component":{}}],["sibl",{"_index":3851,"title":{},"name":{},"text":{"27":{}},"component":{}}],["side",{"_index":1725,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["sidebar",{"_index":1565,"title":{},"name":{},"text":{"15":{}},"component":{}}],["sig_validation_fail",{"_index":2267,"title":{"21-156":{}},"name":{},"text":{"21":{}},"component":{}}],["sig_validation_success",{"_index":2266,"title":{"21-155":{}},"name":{},"text":{"21":{}},"component":{}}],["sign",{"_index":665,"title":{},"name":{},"text":{"2":{},"18":{},"25":{},"27":{},"29":{}},"component":{}}],["signal",{"_index":2044,"title":{},"name":{},"text":{"20":{},"24":{},"30":{},"31":{}},"component":{}}],["signatur",{"_index":573,"title":{"2-3":{},"18-2":{},"18-3":{},"18-4":{},"21-17":{},"21-33":{},"21-40":{},"21-45":{},"21-64":{},"21-73":{},"21-82":{},"21-97":{},"21-98":{},"21-109":{},"21-110":{},"21-111":{},"21-112":{},"21-118":{},"21-119":{},"21-120":{},"21-121":{},"21-122":{},"23-28":{},"23-29":{},"23-30":{},"23-86":{},"23-87":{},"24-28":{},"27-108":{},"27-109":{},"27-125":{},"27-126":{},"27-134":{},"27-135":{},"27-136":{},"27-137":{},"27-138":{},"27-140":{},"27-147":{},"27-148":{}},"name":{},"text":{"2":{},"14":{},"15":{},"18":{},"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["signaturecheck",{"_index":3309,"title":{"27-146":{}},"name":{},"text":{"27":{}},"component":{}}],["signaturevalid",{"_index":2220,"title":{"21-106":{}},"name":{},"text":{"21":{}},"component":{}}],["signature’",{"_index":2973,"title":{},"name":{},"text":{"25":{}},"component":{}}],["signedmath",{"_index":1778,"title":{"27-30":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["signedsafemath",{"_index":906,"title":{},"name":{},"text":{"5":{}},"component":{}}],["signer",{"_index":577,"title":{"2-7":{},"21-18":{},"21-31":{},"21-38":{},"21-43":{},"21-59":{},"21-65":{},"21-68":{},"21-77":{},"21-87":{},"21-88":{},"21-89":{},"21-93":{},"21-94":{},"21-98":{},"21-99":{},"21-100":{},"21-102":{},"21-103":{},"21-104":{},"25-16":{},"25-19":{},"25-20":{},"27-147":{},"27-148":{},"29-45":{}},"name":{},"text":{"2":{},"18":{},"21":{},"23":{},"25":{},"27":{},"29":{}},"component":{}}],["signer_",{"_index":735,"title":{},"name":{},"text":{"2":{}},"component":{}}],["signeraddr",{"_index":2179,"title":{"21-30":{},"21-62":{}},"name":{},"text":{"21":{}},"component":{}}],["signermatch",{"_index":2940,"title":{"25-16":{}},"name":{},"text":{},"component":{}}],["signific",{"_index":292,"title":{},"name":{},"text":{"1":{},"3":{}},"component":{}}],["sigsuccess",{"_index":2252,"title":{"21-139":{}},"name":{},"text":{"21":{}},"component":{}}],["silent",{"_index":3684,"title":{},"name":{},"text":{"27":{}},"component":{}}],["silli",{"_index":1098,"title":{},"name":{},"text":{"7":{}},"component":{}}],["silver",{"_index":955,"title":{},"name":{},"text":{"6":{}},"component":{}}],["similar",{"_index":155,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"18":{},"23":{},"26":{}},"component":{}}],["similarli",{"_index":652,"title":{},"name":{},"text":{"2":{},"9":{},"20":{},"29":{}},"component":{}}],["simpl",{"_index":103,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"14":{},"16":{},"18":{},"23":{},"27":{},"28":{},"29":{}},"component":{}}],["simpler",{"_index":246,"title":{},"name":{},"text":{"1":{},"6":{},"20":{}},"component":{}}],["simpli",{"_index":179,"title":{},"name":{},"text":{"1":{},"6":{},"16":{},"17":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["simplic",{"_index":156,"title":{},"name":{},"text":{"1":{},"6":{},"16":{}},"component":{}}],["simplifi",{"_index":1765,"title":{},"name":{},"text":{"18":{},"24":{}},"component":{}}],["simul",{"_index":2910,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["simultan",{"_index":3854,"title":{},"name":{},"text":{"27":{}},"component":{}}],["singl",{"_index":59,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"11":{},"14":{},"16":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["singleton",{"_index":784,"title":{},"name":{},"text":{"2":{}},"component":{}}],["site",{"_index":3064,"title":{},"name":{},"text":{"26":{}},"component":{}}],["situat",{"_index":1224,"title":{},"name":{},"text":{"10":{}},"component":{}}],["size",{"_index":1736,"title":{"27-319":{}},"name":{},"text":{"18":{},"25":{},"27":{},"30":{}},"component":{}}],["skip",{"_index":2974,"title":{},"name":{},"text":{"25":{},"27":{},"29":{}},"component":{}}],["slash",{"_index":4200,"title":{},"name":{},"text":{"29":{}},"component":{}}],["slippag",{"_index":2908,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["slope",{"_index":1180,"title":{},"name":{},"text":{"9":{}},"component":{}}],["slot",{"_index":1682,"title":{"18-14":{},"26-87":{},"27-437":{},"27-438":{},"27-439":{},"27-440":{},"27-441":{},"27-442":{},"27-443":{},"27-444":{},"27-445":{},"27-446":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-455":{},"27-457":{},"27-458":{},"27-459":{},"27-460":{},"27-461":{},"27-462":{},"27-463":{},"27-464":{},"27-465":{},"27-466":{},"27-467":{},"27-468":{},"27-469":{},"27-470":{},"27-471":{}},"name":{},"text":{"18":{},"24":{},"26":{},"27":{}},"component":{}}],["slotderiv",{"_index":1876,"title":{"27-436":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["small",{"_index":1350,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["smaller",{"_index":2671,"title":{},"name":{},"text":{"23":{}},"component":{}}],["smallest",{"_index":3711,"title":{},"name":{},"text":{"27":{}},"component":{}}],["smart",{"_index":28,"title":{"2-1":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["smoothen",{"_index":426,"title":{},"name":{},"text":{"1":{}},"component":{}}],["snapshot",{"_index":1389,"title":{},"name":{},"text":{"14":{},"23":{}},"component":{}}],["snippet",{"_index":1643,"title":{},"name":{},"text":{"17":{}},"component":{}}],["softwar",{"_index":187,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{}}],["sol",{"_index":840,"title":{},"name":{},"text":{"3":{},"24":{}},"component":{}}],["sole",{"_index":2731,"title":{},"name":{},"text":{"23":{}},"component":{}}],["solhint",{"_index":1516,"title":{},"name":{},"text":{"14":{}},"component":{}}],["solid",{"_index":69,"title":{"3-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{},"20":{},"26":{},"27":{},"30":{}},"component":{}}],["solidity’",{"_index":339,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["solut",{"_index":450,"title":{},"name":{},"text":{"1":{},"16":{},"20":{},"29":{}},"component":{}}],["someon",{"_index":44,"title":{},"name":{},"text":{"1":{},"7":{},"16":{},"18":{},"29":{}},"component":{}}],["someth",{"_index":1000,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"12":{},"16":{}},"component":{}}],["sometim",{"_index":1275,"title":{},"name":{},"text":{"12":{},"14":{},"18":{},"23":{}},"component":{}}],["somewhat",{"_index":1621,"title":{},"name":{},"text":{"16":{}},"component":{}}],["soon",{"_index":2072,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sort",{"_index":2058,"title":{"27-393":{},"27-394":{},"27-395":{},"27-396":{},"27-397":{},"27-398":{}},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{}}],["sound",{"_index":1097,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["sourc",{"_index":1298,"title":{"21-152":{}},"name":{},"text":{"12":{},"14":{},"15":{},"20":{},"21":{},"23":{},"24":{}},"component":{}}],["space",{"_index":152,"title":{},"name":{},"text":{"1":{},"26":{}},"component":{}}],["span",{"_index":3997,"title":{},"name":{},"text":{"27":{}},"component":{}}],["spdx",{"_index":64,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{}},"component":{}}],["special",{"_index":284,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"14":{},"16":{},"17":{},"18":{},"20":{},"24":{},"27":{}},"component":{}}],["specialth",{"_index":81,"title":{},"name":{},"text":{"1":{}},"component":{}}],["specif",{"_index":528,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["specifi",{"_index":208,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"14":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["spend",{"_index":2863,"title":{},"name":{},"text":{"24":{},"28":{},"29":{}},"component":{}}],["spender",{"_index":2761,"title":{"24-7":{},"24-9":{},"24-34":{},"24-35":{},"24-93":{},"29-6":{},"29-7":{},"29-10":{},"29-23":{},"29-24":{},"29-30":{},"29-31":{},"29-32":{},"29-36":{},"29-41":{},"29-82":{},"29-83":{},"29-84":{},"29-85":{},"29-86":{},"29-93":{},"29-94":{},"29-97":{},"29-130":{},"29-131":{},"29-132":{},"29-137":{},"29-140":{},"29-142":{},"30-41":{},"30-42":{}},"name":{},"text":{"24":{},"29":{},"30":{}},"component":{}}],["spender’",{"_index":2853,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["spent",{"_index":4204,"title":{},"name":{},"text":{"29":{}},"component":{}}],["spirit",{"_index":938,"title":{},"name":{},"text":{"6":{}},"component":{}}],["split",{"_index":243,"title":{},"name":{},"text":{"1":{},"10":{},"23":{}},"component":{}}],["sponsor",{"_index":803,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sponsorship",{"_index":594,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sqrt",{"_index":3156,"title":{"27-21":{},"27-22":{}},"name":{},"text":{"27":{}},"component":{}}],["squar",{"_index":3735,"title":{},"name":{},"text":{"27":{}},"component":{}}],["src",{"_index":1907,"title":{},"name":{},"text":{"19":{}},"component":{}}],["sstr",{"_index":3421,"title":{"27-429":{},"27-430":{}},"name":{},"text":{"27":{}},"component":{}}],["stabl",{"_index":864,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{}}],["stack",{"_index":2148,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["stage",{"_index":94,"title":{},"name":{},"text":{"1":{},"14":{}},"component":{}}],["stake",{"_index":1118,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["stakehold",{"_index":1338,"title":{},"name":{},"text":{"14":{}},"component":{}}],["standalon",{"_index":3709,"title":{},"name":{},"text":{"27":{}},"component":{}}],["standard",{"_index":599,"title":{"6-1":{},"16-3":{},"24-1":{}},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["standardnodehash",{"_index":3845,"title":{},"name":{},"text":{"27":{}},"component":{}}],["start",{"_index":626,"title":{"22-5":{}},"name":{},"text":{"2":{},"7":{},"14":{},"19":{},"20":{},"22":{},"23":{},"27":{}},"component":{}}],["starttimestamp",{"_index":2340,"title":{"22-3":{}},"name":{},"text":{"22":{}},"component":{}}],["state",{"_index":691,"title":{"23-8":{},"23-60":{},"23-162":{},"23-173":{}},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"14":{},"17":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["statement",{"_index":1287,"title":{},"name":{},"text":{"12":{},"16":{},"29":{}},"component":{}}],["static",{"_index":1821,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["staticcal",{"_index":3731,"title":{},"name":{},"text":{"27":{}},"component":{}}],["statu",{"_index":2692,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stay",{"_index":1169,"title":{},"name":{},"text":{"9":{},"12":{}},"component":{}}],["steal",{"_index":45,"title":{},"name":{},"text":{"1":{}},"component":{}}],["step",{"_index":301,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["still",{"_index":254,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"8":{},"14":{},"20":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["stolen",{"_index":4255,"title":{},"name":{},"text":{"29":{}},"component":{}}],["stop",{"_index":3874,"title":{},"name":{},"text":{"27":{}},"component":{}}],["storag",{"_index":706,"title":{"3-8":{},"17-6":{},"18-14":{}},"name":{},"text":{"2":{},"3":{},"14":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"30":{},"31":{}},"component":{}}],["storage_encoding_error",{"_index":3676,"title":{"27-699":{}},"name":{},"text":{"27":{}},"component":{}}],["storageslot",{"_index":1858,"title":{"27-447":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["storageslot.addressslot",{"_index":3404,"title":{"27-404":{},"27-448":{}},"name":{},"text":{},"component":{}}],["storageslot.addressslottyp",{"_index":3443,"title":{"27-457":{},"27-462":{},"27-463":{}},"name":{},"text":{},"component":{}}],["storageslot.booleanslot",{"_index":3433,"title":{"27-449":{}},"name":{},"text":{},"component":{}}],["storageslot.booleanslottyp",{"_index":3445,"title":{"27-458":{},"27-464":{},"27-465":{}},"name":{},"text":{},"component":{}}],["storageslot.bytes32slot",{"_index":3405,"title":{"27-405":{},"27-450":{}},"name":{},"text":{},"component":{}}],["storageslot.bytes32slottyp",{"_index":3447,"title":{"27-459":{},"27-466":{},"27-467":{}},"name":{},"text":{},"component":{}}],["storageslot.bytesslot",{"_index":3441,"title":{"27-455":{},"27-456":{}},"name":{},"text":{},"component":{}}],["storageslot.getaddressslot",{"_index":1862,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["storageslot.int256slot",{"_index":3437,"title":{"27-452":{}},"name":{},"text":{},"component":{}}],["storageslot.int256slottyp",{"_index":3451,"title":{"27-461":{},"27-470":{},"27-471":{}},"name":{},"text":{},"component":{}}],["storageslot.stringslot",{"_index":3439,"title":{"27-453":{},"27-454":{}},"name":{},"text":{},"component":{}}],["storageslot.uint256slot",{"_index":3406,"title":{"27-406":{},"27-451":{}},"name":{},"text":{},"component":{}}],["storageslot.uint256slottyp",{"_index":3449,"title":{"27-460":{},"27-468":{},"27-469":{}},"name":{},"text":{},"component":{}}],["store",{"_index":446,"title":{"27-431":{},"27-432":{},"27-433":{},"27-454":{},"27-456":{}},"name":{},"text":{"1":{},"6":{},"10":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["str",{"_index":3420,"title":{"27-428":{},"27-434":{}},"name":{},"text":{"27":{}},"component":{}}],["straightforward",{"_index":191,"title":{},"name":{},"text":{"1":{}},"component":{}}],["strain",{"_index":868,"title":{},"name":{},"text":{"3":{}},"component":{}}],["strength",{"_index":1011,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["stress",{"_index":4372,"title":{},"name":{},"text":{"30":{}},"component":{}}],["strictli",{"_index":2636,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["string",{"_index":736,"title":{"20-114":{},"20-135":{},"20-169":{},"21-19":{},"21-35":{},"23-4":{},"23-5":{},"23-6":{},"23-21":{},"23-26":{},"23-27":{},"23-29":{},"23-30":{},"23-34":{},"23-35":{},"23-54":{},"23-57":{},"23-58":{},"23-73":{},"23-74":{},"23-84":{},"23-85":{},"23-87":{},"23-88":{},"23-89":{},"23-96":{},"23-98":{},"23-106":{},"23-113":{},"23-126":{},"23-151":{},"23-200":{},"23-207":{},"23-217":{},"24-47":{},"24-86":{},"24-91":{},"25-12":{},"26-35":{},"26-85":{},"27-118":{},"27-121":{},"27-122":{},"27-123":{},"27-130":{},"27-414":{},"27-415":{},"27-416":{},"27-417":{},"27-418":{},"27-419":{},"27-420":{},"27-421":{},"27-422":{},"27-423":{},"27-424":{},"27-425":{},"27-428":{},"27-429":{},"27-431":{},"27-432":{},"27-433":{},"27-434":{},"27-437":{},"27-445":{},"27-454":{},"28-12":{},"28-14":{},"28-16":{},"28-18":{},"28-29":{},"28-50":{},"28-51":{},"28-52":{},"29-12":{},"29-13":{},"29-16":{},"29-17":{},"29-18":{},"29-40":{},"30-16":{},"30-17":{},"30-18":{},"30-24":{},"30-28":{},"30-29":{},"30-30":{},"30-31":{},"30-84":{},"30-85":{}},"name":{},"text":{"2":{},"5":{},"6":{},"10":{},"14":{},"18":{},"23":{},"26":{},"27":{}},"component":{}}],["string.concat",{"_index":1891,"title":{},"name":{},"text":{"18":{}},"component":{}}],["stringsinsufficienthexlength",{"_index":3417,"title":{"27-426":{}},"name":{},"text":{"27":{}},"component":{}}],["stringslot",{"_index":4013,"title":{},"name":{},"text":{"27":{}},"component":{}}],["stringtoolong",{"_index":3426,"title":{"27-434":{}},"name":{},"text":{"27":{}},"component":{}}],["struct",{"_index":770,"title":{"3-5":{},"21-8":{},"21-9":{},"21-10":{},"21-18":{},"21-32":{},"21-39":{},"21-44":{},"21-108":{},"21-142":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-149":{},"21-150":{},"21-151":{},"21-152":{},"21-153":{},"21-154":{},"21-167":{},"21-168":{},"23-229":{},"25-13":{},"25-14":{},"25-15":{},"25-16":{},"25-17":{},"25-18":{},"27-210":{},"27-211":{},"27-212":{},"27-213":{},"27-215":{},"27-216":{},"27-217":{},"27-218":{},"27-219":{},"27-220":{},"27-221":{},"27-222":{},"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-248":{},"27-249":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{},"27-258":{},"27-259":{},"27-260":{},"27-261":{},"27-262":{},"27-263":{},"27-264":{},"27-265":{},"27-266":{},"27-267":{},"27-268":{},"27-269":{},"27-270":{},"27-271":{},"27-272":{},"27-273":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-278":{},"27-279":{},"27-280":{},"27-281":{},"27-282":{},"27-283":{},"27-284":{},"27-285":{},"27-286":{},"27-289":{},"27-290":{},"27-291":{},"27-292":{},"27-293":{},"27-294":{},"27-295":{},"27-296":{},"27-297":{},"27-298":{},"27-299":{},"27-300":{},"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{},"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-315":{},"27-316":{},"27-317":{},"27-319":{},"27-320":{},"27-321":{},"27-322":{},"27-323":{},"27-324":{},"27-325":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{},"27-333":{},"27-334":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-341":{},"27-342":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{},"27-349":{},"27-350":{},"27-353":{},"27-354":{},"27-355":{},"27-356":{},"27-357":{},"27-358":{},"27-359":{},"27-360":{},"27-361":{},"27-362":{},"27-363":{},"27-364":{},"27-365":{},"27-366":{},"27-367":{},"27-368":{},"27-369":{},"27-370":{},"27-372":{},"27-373":{},"27-374":{},"27-375":{},"27-376":{},"27-404":{},"27-405":{},"27-406":{},"27-448":{},"27-449":{},"27-450":{},"27-451":{},"27-452":{},"27-453":{},"27-454":{},"27-455":{},"27-456":{},"29-62":{}},"name":{},"text":{"2":{},"3":{},"17":{},"18":{},"27":{}},"component":{}}],["structhash",{"_index":2321,"title":{"27-120":{},"27-145":{}},"name":{},"text":{"21":{},"23":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["structur",{"_index":277,"title":{"18-9":{},"23-271":{},"27-208":{}},"name":{},"text":{"1":{},"15":{},"17":{},"18":{},"27":{},"29":{},"30":{}},"component":{}}],["stuck",{"_index":2980,"title":{},"name":{},"text":{"25":{},"26":{},"28":{}},"component":{}}],["subcal",{"_index":2976,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["subgraph",{"_index":1318,"title":{},"name":{},"text":{"13":{},"18":{}},"component":{}}],["subject",{"_index":373,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"24":{},"29":{}},"component":{}}],["submit",{"_index":2553,"title":{},"name":{},"text":{"23":{},"25":{},"29":{}},"component":{}}],["subpack",{"_index":1846,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["subsequ",{"_index":564,"title":{},"name":{},"text":{"1":{},"15":{},"23":{},"26":{},"30":{}},"component":{}}],["subset",{"_index":843,"title":{},"name":{},"text":{"3":{}},"component":{}}],["substitut",{"_index":4068,"title":{},"name":{},"text":{"28":{}},"component":{}}],["substr",{"_index":4078,"title":{},"name":{},"text":{"28":{}},"component":{}}],["subsystem",{"_index":4201,"title":{},"name":{},"text":{"29":{}},"component":{}}],["subtleti",{"_index":1165,"title":{},"name":{},"text":{"9":{}},"component":{}}],["subtract",{"_index":1607,"title":{},"name":{},"text":{"16":{},"26":{},"27":{}},"component":{}}],["succe",{"_index":1503,"title":{},"name":{},"text":{"14":{},"23":{},"27":{},"29":{}},"component":{}}],["succeed",{"_index":2630,"title":{},"name":{},"text":{"23":{},"27":{},"29":{}},"component":{}}],["succeededadd",{"_index":1782,"title":{},"name":{},"text":{"18":{}},"component":{}}],["succeededdiv",{"_index":1792,"title":{},"name":{},"text":{"18":{}},"component":{}}],["succeededmul",{"_index":1789,"title":{},"name":{},"text":{"18":{}},"component":{}}],["succeededsub",{"_index":1786,"title":{},"name":{},"text":{"18":{}},"component":{}}],["success",{"_index":1246,"title":{"24-93":{},"25-18":{},"25-19":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-18":{},"27-20":{},"27-389":{},"27-390":{}},"name":{},"text":{"10":{},"14":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["successfulli",{"_index":2577,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["such",{"_index":153,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["sudden",{"_index":3086,"title":{},"name":{},"text":{"26":{}},"component":{}}],["suffici",{"_index":431,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["suffix",{"_index":1633,"title":{},"name":{},"text":{"17":{},"25":{}},"component":{}}],["suit",{"_index":1629,"title":{},"name":{},"text":{"17":{}},"component":{}}],["sum",{"_index":2660,"title":{},"name":{},"text":{"23":{},"25":{}},"component":{}}],["super",{"_index":859,"title":{"12-2":{}},"name":{},"text":{"3":{},"7":{},"12":{},"23":{},"30":{}},"component":{}}],["super._approv",{"_index":4203,"title":{},"name":{},"text":{"29":{}},"component":{}}],["super._cancel",{"_index":1461,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super._executeoper",{"_index":1459,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super._executor",{"_index":1463,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super._queueoper",{"_index":1457,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super._spendallow",{"_index":4248,"title":{},"name":{},"text":{"29":{}},"component":{}}],["super._upd",{"_index":1110,"title":{},"name":{},"text":{"7":{},"14":{}},"component":{}}],["super._validateuserop",{"_index":755,"title":{},"name":{},"text":{"2":{}},"component":{}}],["super._withdraw",{"_index":1212,"title":{},"name":{},"text":{"9":{}},"component":{}}],["super.decim",{"_index":1401,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super.nonc",{"_index":1396,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super.proposalneedsqueu",{"_index":1453,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super.revokerol",{"_index":1286,"title":{},"name":{},"text":{"12":{}},"component":{}}],["super.st",{"_index":1450,"title":{},"name":{},"text":{"14":{}},"component":{}}],["super.supportsinterfac",{"_index":3883,"title":{},"name":{},"text":{"27":{}},"component":{}}],["super.uri",{"_index":4111,"title":{},"name":{},"text":{"28":{}},"component":{}}],["supervisor",{"_index":188,"title":{},"name":{},"text":{"1":{}},"component":{}}],["suppli",{"_index":950,"title":{"7":{},"7-1":{}},"name":{"7":{}},"text":{"6":{},"7":{},"8":{},"10":{},"14":{},"23":{},"28":{},"29":{}},"component":{}}],["supply/bal",{"_index":2360,"title":{},"name":{},"text":{"22":{}},"component":{}}],["support",{"_index":318,"title":{"11-3":{},"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-34":{},"23-35":{},"23-71":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-111":{},"23-119":{},"23-200":{}},"name":{},"text":{"1":{},"8":{},"11":{},"13":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["support=bravo",{"_index":2560,"title":{},"name":{},"text":{"23":{}},"component":{}}],["support=bravo&quorum=for",{"_index":2559,"title":{},"name":{},"text":{"23":{}},"component":{}}],["supportsallinterfac",{"_index":3341,"title":{"27-206":{}},"name":{},"text":{"27":{}},"component":{}}],["supportserc165",{"_index":3339,"title":{"27-203":{}},"name":{},"text":{"27":{}},"component":{}}],["supportserc165interfaceuncheck",{"_index":3342,"title":{"27-207":{}},"name":{},"text":{"27":{}},"component":{}}],["supportsexecutionmod",{"_index":2168,"title":{"21-20":{}},"name":{},"text":{"21":{}},"component":{}}],["supportsinterfac",{"_index":1760,"title":{"20-32":{},"20-49":{},"20-75":{},"23-56":{},"23-238":{},"27-199":{},"27-201":{},"27-204":{},"28-17":{},"28-55":{},"29-88":{},"30-25":{},"30-57":{},"30-83":{},"30-91":{},"31-3":{}},"name":{},"text":{"18":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["supportsmodul",{"_index":2170,"title":{"21-21":{}},"name":{},"text":{"21":{}},"component":{}}],["suppos",{"_index":1843,"title":{},"name":{},"text":{"18":{}},"component":{}}],["sure",{"_index":217,"title":{},"name":{},"text":{"1":{},"2":{},"11":{},"14":{},"18":{},"19":{},"20":{},"22":{},"23":{},"27":{},"30":{}},"component":{}}],["surround",{"_index":1603,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sway",{"_index":2702,"title":{},"name":{},"text":{"23":{}},"component":{}}],["switch",{"_index":4099,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["sword",{"_index":957,"title":{},"name":{},"text":{"6":{}},"component":{}}],["symbol",{"_index":1128,"title":{"29-13":{},"29-18":{},"30-17":{},"30-29":{}},"name":{},"text":{"8":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["symbol_",{"_index":4114,"title":{"29-16":{},"30-24":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["sync",{"_index":1084,"title":{},"name":{},"text":{"7":{}},"component":{}}],["syntax",{"_index":1269,"title":{},"name":{},"text":{"12":{}},"component":{}}],["system",{"_index":47,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"14":{},"15":{},"20":{},"22":{},"23":{}},"component":{}}],["tabl",{"_index":1762,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["tag",{"_index":1544,"title":{},"name":{},"text":{"15":{}},"component":{}}],["take",{"_index":304,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"14":{},"15":{},"18":{},"20":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["taken",{"_index":2053,"title":{},"name":{},"text":{"20":{},"26":{},"27":{}},"component":{}}],["talli",{"_index":1326,"title":{"14-6":{}},"name":{},"text":{"14":{}},"component":{}}],["target",{"_index":462,"title":{"20-101":{},"20-103":{},"20-106":{},"20-107":{},"20-108":{},"20-121":{},"20-122":{},"20-123":{},"20-126":{},"20-127":{},"20-128":{},"20-130":{},"20-131":{},"20-132":{},"20-141":{},"20-142":{},"20-143":{},"20-151":{},"20-152":{},"20-153":{},"20-158":{},"20-161":{},"20-162":{},"20-163":{},"20-181":{},"20-182":{},"20-183":{},"20-184":{},"20-185":{},"20-186":{},"20-189":{},"20-190":{},"20-191":{},"20-194":{},"20-195":{},"20-215":{},"21-123":{},"21-124":{},"21-125":{},"21-163":{},"21-164":{},"21-165":{},"21-166":{},"23-7":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-30":{},"23-36":{},"23-59":{},"23-73":{},"23-74":{},"23-75":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-90":{},"23-146":{},"23-147":{},"23-148":{},"23-151":{},"23-152":{},"23-153":{},"23-154":{},"23-156":{},"23-165":{},"23-166":{},"23-167":{},"23-176":{},"23-177":{},"23-178":{},"23-207":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-253":{},"23-259":{},"23-260":{},"23-264":{},"25-23":{},"27-385":{},"27-386":{},"27-387":{},"27-388":{},"27-389":{},"27-391":{}},"name":{},"text":{"1":{},"14":{},"18":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["targetadmindelayupd",{"_index":1996,"title":{"20-143":{}},"name":{},"text":{"20":{}},"component":{}}],["targetclos",{"_index":1994,"title":{"20-141":{}},"name":{},"text":{"20":{}},"component":{}}],["targetfunctionroleupd",{"_index":1995,"title":{"20-142":{}},"name":{},"text":{"20":{}},"component":{}}],["target’",{"_index":2129,"title":{},"name":{},"text":{"20":{}},"component":{}}],["task",{"_index":55,"title":{},"name":{},"text":{"1":{},"23":{},"26":{}},"component":{}}],["teach",{"_index":1566,"title":{},"name":{},"text":{"15":{}},"component":{}}],["team",{"_index":1335,"title":{},"name":{},"text":{"14":{}},"component":{}}],["teamaddress",{"_index":1485,"title":{},"name":{},"text":{"14":{}},"component":{}}],["technic",{"_index":838,"title":{},"name":{},"text":{"3":{},"23":{}},"component":{}}],["techniqu",{"_index":1024,"title":{},"name":{},"text":{"6":{},"10":{},"18":{}},"component":{}}],["technolog",{"_index":1706,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tell",{"_index":1827,"title":{},"name":{},"text":{"18":{}},"component":{}}],["temporari",{"_index":2680,"title":{},"name":{},"text":{"23":{},"24":{},"29":{}},"component":{}}],["temporarili",{"_index":529,"title":{},"name":{},"text":{"1":{}},"component":{}}],["temporaryapprov",{"_index":2839,"title":{"24-93":{},"29-84":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["ten",{"_index":1036,"title":{},"name":{},"text":{"6":{}},"component":{}}],["tend",{"_index":453,"title":{},"name":{},"text":{"1":{},"30":{}},"component":{}}],["term",{"_index":2128,"title":{},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{}}],["terminolog",{"_index":2544,"title":{"23-270":{}},"name":{},"text":{},"component":{}}],["ternari",{"_index":3144,"title":{"27-8":{},"27-31":{}},"name":{},"text":{"27":{}},"component":{}}],["test",{"_index":2030,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"26":{},"27":{}},"component":{}}],["text",{"_index":2872,"title":{},"name":{},"text":{"24":{}},"component":{}}],["th",{"_index":2728,"title":{},"name":{},"text":{"23":{},"27":{},"29":{}},"component":{}}],["that’",{"_index":639,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"12":{},"16":{},"18":{}},"component":{}}],["the`transferfrom",{"_index":4202,"title":{},"name":{},"text":{"29":{}},"component":{}}],["themselv",{"_index":789,"title":{},"name":{},"text":{"2":{},"14":{},"16":{},"24":{},"29":{},"30":{}},"component":{}}],["theorem",{"_index":3727,"title":{},"name":{},"text":{"27":{}},"component":{}}],["thereaft",{"_index":3092,"title":{},"name":{},"text":{"26":{}},"component":{}}],["therebi",{"_index":2033,"title":{},"name":{},"text":{"20":{}},"component":{}}],["therefor",{"_index":39,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"27":{}},"component":{}}],["there’",{"_index":52,"title":{},"name":{},"text":{"1":{},"2":{},"16":{},"20":{},"27":{},"30":{}},"component":{}}],["they’ll",{"_index":2955,"title":{},"name":{},"text":{"25":{}},"component":{}}],["they’r",{"_index":3885,"title":{},"name":{},"text":{"27":{}},"component":{}}],["thing",{"_index":38,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"16":{},"23":{},"26":{}},"component":{}}],["thing\"—i",{"_index":24,"title":{},"name":{},"text":{"1":{}},"component":{}}],["think",{"_index":3087,"title":{},"name":{},"text":{"26":{}},"component":{}}],["third",{"_index":1254,"title":{},"name":{},"text":{"11":{},"23":{},"24":{},"26":{},"27":{}},"component":{}}],["thor'",{"_index":1001,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["thoroughli",{"_index":1571,"title":{},"name":{},"text":{"15":{},"21":{},"27":{}},"component":{}}],["thors_hamm",{"_index":956,"title":{},"name":{},"text":{"6":{}},"component":{}}],["thor’",{"_index":966,"title":{},"name":{},"text":{"6":{}},"component":{}}],["those",{"_index":311,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"12":{},"14":{},"16":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["though",{"_index":488,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"14":{},"15":{},"16":{},"23":{},"24":{},"30":{}},"component":{}}],["thousand",{"_index":1037,"title":{},"name":{},"text":{"6":{}},"component":{}}],["three",{"_index":1490,"title":{},"name":{},"text":{"14":{},"23":{},"28":{}},"component":{}}],["threshold",{"_index":1433,"title":{"21-86":{},"21-101":{},"21-104":{},"23-44":{}},"name":{},"text":{"14":{},"21":{},"23":{}},"component":{}}],["threshold_",{"_index":2207,"title":{"21-90":{},"21-95":{}},"name":{},"text":{"21":{}},"component":{}}],["thresholdchang",{"_index":2215,"title":{"21-101":{}},"name":{},"text":{"21":{}},"component":{}}],["through",{"_index":181,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"14":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["throughput",{"_index":2960,"title":{},"name":{},"text":{"25":{}},"component":{}}],["throw",{"_index":2032,"title":{},"name":{},"text":{"20":{},"27":{},"29":{}},"component":{}}],["thu",{"_index":1465,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["thunder",{"_index":1007,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["time",{"_index":306,"title":{},"name":{},"text":{"1":{},"3":{},"14":{},"16":{},"18":{},"20":{},"22":{},"23":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["timelock",{"_index":380,"title":{"14-10":{},"23-163":{},"23-174":{},"23-233":{}},"name":{},"text":{"1":{},"14":{},"22":{},"23":{},"24":{},"29":{}},"component":{}}],["timelock.contract.methods.grantrol",{"_index":2744,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timelockaddress",{"_index":2462,"title":{"23-161":{},"23-172":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockchang",{"_index":2465,"title":{"23-170":{},"23-182":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockcontrol",{"_index":15,"title":{"1-7":{},"23-161":{},"23-169":{},"23-234":{}},"name":{},"text":{"1":{},"14":{},"23":{}},"component":{}}],["timelockcontroller.operationst",{"_index":2524,"title":{"23-244":{},"23-255":{}},"name":{},"text":{},"component":{}}],["timelockinsufficientdelay",{"_index":2538,"title":{"23-265":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockinvalidoperationlength",{"_index":2537,"title":{"23-264":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockunauthorizedcal",{"_index":2542,"title":{"23-268":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockunexecutedpredecessor",{"_index":2540,"title":{"23-267":{}},"name":{},"text":{"23":{}},"component":{}}],["timelockunexpectedoperationst",{"_index":2539,"title":{"23-266":{}},"name":{},"text":{"23":{}},"component":{}}],["timepoint",{"_index":2106,"title":{"23-17":{},"23-18":{},"23-19":{},"23-70":{},"23-81":{},"23-82":{},"23-101":{},"23-127":{},"23-131":{},"23-133":{},"23-219":{},"23-220":{},"23-232":{}},"name":{},"text":{"20":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["timer",{"_index":2740,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timestamp",{"_index":1329,"title":{"14-15":{},"22-14":{},"22-15":{},"22-16":{}},"name":{},"text":{"14":{},"20":{},"22":{},"23":{},"24":{},"25":{},"29":{}},"component":{}}],["titl",{"_index":1642,"title":{},"name":{},"text":{"17":{}},"component":{}}],["tkn",{"_index":207,"title":{},"name":{},"text":{"1":{}},"component":{}}],["tload",{"_index":1872,"title":{"27-462":{},"27-464":{},"27-466":{},"27-468":{},"27-470":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["toaddress",{"_index":4371,"title":{},"name":{},"text":{"30":{}},"component":{}}],["tochecksumhexstr",{"_index":3416,"title":{"27-424":{}},"name":{},"text":{"27":{}},"component":{}}],["todatawithintendedvalidatorhash",{"_index":3306,"title":{"27-144":{}},"name":{},"text":{"27":{}},"component":{}}],["todeleg",{"_index":2718,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["toethsignedmessagehash",{"_index":1698,"title":{"27-142":{},"27-143":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["togeth",{"_index":1415,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"27":{},"30":{},"31":{}},"component":{}}],["tohexstr",{"_index":3415,"title":{"27-421":{},"27-422":{},"27-423":{}},"name":{},"text":{"27":{}},"component":{}}],["toint104",{"_index":3256,"title":{"27-87":{}},"name":{},"text":{"27":{}},"component":{}}],["toint112",{"_index":3254,"title":{"27-86":{}},"name":{},"text":{"27":{}},"component":{}}],["toint120",{"_index":3252,"title":{"27-85":{}},"name":{},"text":{"27":{}},"component":{}}],["toint128",{"_index":3250,"title":{"27-84":{}},"name":{},"text":{"27":{}},"component":{}}],["toint136",{"_index":3248,"title":{"27-83":{}},"name":{},"text":{"27":{}},"component":{}}],["toint144",{"_index":3246,"title":{"27-82":{}},"name":{},"text":{"27":{}},"component":{}}],["toint152",{"_index":3244,"title":{"27-81":{}},"name":{},"text":{"27":{}},"component":{}}],["toint16",{"_index":3278,"title":{"27-98":{}},"name":{},"text":{"27":{}},"component":{}}],["toint160",{"_index":3242,"title":{"27-80":{}},"name":{},"text":{"27":{}},"component":{}}],["toint168",{"_index":3240,"title":{"27-79":{}},"name":{},"text":{"27":{}},"component":{}}],["toint176",{"_index":3238,"title":{"27-78":{}},"name":{},"text":{"27":{}},"component":{}}],["toint184",{"_index":3236,"title":{"27-77":{}},"name":{},"text":{"27":{}},"component":{}}],["toint192",{"_index":3234,"title":{"27-76":{}},"name":{},"text":{"27":{}},"component":{}}],["toint200",{"_index":3232,"title":{"27-75":{}},"name":{},"text":{"27":{}},"component":{}}],["toint208",{"_index":3230,"title":{"27-74":{}},"name":{},"text":{"27":{}},"component":{}}],["toint216",{"_index":3228,"title":{"27-73":{}},"name":{},"text":{"27":{}},"component":{}}],["toint224",{"_index":3226,"title":{"27-72":{}},"name":{},"text":{"27":{}},"component":{}}],["toint232",{"_index":3224,"title":{"27-71":{}},"name":{},"text":{"27":{}},"component":{}}],["toint24",{"_index":3276,"title":{"27-97":{}},"name":{},"text":{"27":{}},"component":{}}],["toint240",{"_index":3222,"title":{"27-70":{}},"name":{},"text":{"27":{}},"component":{}}],["toint248",{"_index":3219,"title":{"27-69":{}},"name":{},"text":{"27":{}},"component":{}}],["toint256",{"_index":3282,"title":{"27-100":{}},"name":{},"text":{"27":{}},"component":{}}],["toint32",{"_index":3274,"title":{"27-96":{}},"name":{},"text":{"27":{}},"component":{}}],["toint40",{"_index":3272,"title":{"27-95":{}},"name":{},"text":{"27":{}},"component":{}}],["toint48",{"_index":3270,"title":{"27-94":{}},"name":{},"text":{"27":{}},"component":{}}],["toint56",{"_index":3268,"title":{"27-93":{}},"name":{},"text":{"27":{}},"component":{}}],["toint64",{"_index":3266,"title":{"27-92":{}},"name":{},"text":{"27":{}},"component":{}}],["toint72",{"_index":3264,"title":{"27-91":{}},"name":{},"text":{"27":{}},"component":{}}],["toint8",{"_index":3280,"title":{"27-99":{}},"name":{},"text":{"27":{}},"component":{}}],["toint80",{"_index":3262,"title":{"27-90":{}},"name":{},"text":{"27":{}},"component":{}}],["toint88",{"_index":3260,"title":{"27-89":{}},"name":{},"text":{"27":{}},"component":{}}],["toint96",{"_index":3258,"title":{"27-88":{}},"name":{},"text":{"27":{}},"component":{}}],["token",{"_index":32,"title":{"16":{},"31":{},"6-1":{},"6-3":{},"6-4":{},"8-1":{},"10-1":{},"14-8":{},"14-17":{},"16-1":{},"16-2":{},"22-9":{},"22-11":{},"22-13":{},"22-15":{},"22-18":{},"23-124":{},"24-59":{},"24-60":{},"24-61":{},"24-63":{},"29-71":{},"29-73":{},"29-74":{},"29-75":{},"29-77":{},"29-78":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"29-136":{},"30-99":{}},"name":{"16":{}},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["token'",{"_index":536,"title":{},"name":{},"text":{"1":{}},"component":{}}],["token.interface.encodefunctiondata",{"_index":1488,"title":{},"name":{},"text":{"14":{}},"component":{}}],["token.permit",{"_index":4208,"title":{},"name":{},"text":{"29":{}},"component":{}}],["token.safetransf",{"_index":4289,"title":{},"name":{},"text":{"29":{}},"component":{}}],["token.safetransferfrom",{"_index":4211,"title":{},"name":{},"text":{"29":{}},"component":{}}],["token.supportsinterfac",{"_index":1771,"title":{},"name":{},"text":{"18":{}},"component":{}}],["token/erc20",{"_index":897,"title":{},"name":{},"text":{"5":{}},"component":{}}],["tokenaddress",{"_index":1483,"title":{"23-123":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["tokenbyindex",{"_index":4299,"title":{"30-22":{},"30-60":{}},"name":{},"text":{"30":{}},"component":{}}],["tokenid",{"_index":1240,"title":{"24-12":{},"24-13":{},"24-16":{},"24-20":{},"24-57":{},"28-50":{},"28-51":{},"30-4":{},"30-5":{},"30-6":{},"30-7":{},"30-8":{},"30-10":{},"30-12":{},"30-13":{},"30-18":{},"30-27":{},"30-30":{},"30-32":{},"30-33":{},"30-36":{},"30-37":{},"30-38":{},"30-39":{},"30-40":{},"30-41":{},"30-42":{},"30-44":{},"30-45":{},"30-46":{},"30-47":{},"30-48":{},"30-49":{},"30-50":{},"30-51":{},"30-52":{},"30-53":{},"30-55":{},"30-61":{},"30-66":{},"30-69":{},"30-71":{},"30-74":{},"30-76":{},"30-84":{},"30-85":{},"30-87":{},"30-94":{},"30-95":{},"30-96":{},"30-97":{},"30-104":{},"31-4":{},"31-8":{},"31-9":{},"31-12":{},"31-13":{}},"name":{},"text":{"10":{},"18":{},"24":{},"28":{},"30":{},"31":{}},"component":{}}],["tokenid.tostr",{"_index":1892,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tokenofownerbyindex",{"_index":4298,"title":{"30-21":{},"30-58":{}},"name":{},"text":{"30":{}},"component":{}}],["tokenuri",{"_index":1239,"title":{"28-51":{},"30-18":{},"30-30":{},"30-84":{}},"name":{},"text":{"10":{},"18":{},"28":{},"30":{}},"component":{}}],["tokenvest",{"_index":900,"title":{},"name":{},"text":{"5":{}},"component":{}}],["token’",{"_index":1429,"title":{},"name":{},"text":{"14":{},"23":{},"29":{}},"component":{}}],["toler",{"_index":4214,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ton",{"_index":1684,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tool",{"_index":509,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"23":{},"27":{}},"component":{}}],["top",{"_index":392,"title":{},"name":{},"text":{"1":{},"20":{},"25":{},"29":{}},"component":{}}],["topersonalsignenvelopehash",{"_index":3296,"title":{"27-127":{}},"name":{},"text":{"27":{}},"component":{}}],["toshortstr",{"_index":3419,"title":{"27-428":{}},"name":{},"text":{"27":{}},"component":{}}],["toshortstringwithfallback",{"_index":3423,"title":{"27-431":{}},"name":{},"text":{"27":{}},"component":{}}],["tostr",{"_index":3413,"title":{"27-419":{},"27-429":{}},"name":{},"text":{"27":{}},"component":{}}],["tostringsign",{"_index":3414,"title":{"27-420":{}},"name":{},"text":{"27":{}},"component":{}}],["tostringwithfallback",{"_index":3424,"title":{"27-432":{}},"name":{},"text":{"27":{}},"component":{}}],["total",{"_index":130,"title":{},"name":{},"text":{"1":{},"8":{},"14":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["totalalloc",{"_index":2344,"title":{"22-16":{}},"name":{},"text":{"22":{}},"component":{}}],["totalasset",{"_index":2821,"title":{"24-66":{},"29-102":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["totalmanagedasset",{"_index":2822,"title":{"24-66":{}},"name":{},"text":{},"component":{}}],["totalsuppli",{"_index":1073,"title":{"28-45":{},"28-46":{},"29-3":{},"29-20":{},"30-20":{},"30-59":{}},"name":{},"text":{"7":{},"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{}}],["totalweight",{"_index":2413,"title":{"23-71":{},"23-111":{},"23-119":{}},"name":{},"text":{"23":{}},"component":{}}],["totokenid",{"_index":4369,"title":{},"name":{},"text":{"30":{}},"component":{}}],["totypeddataenvelopehash",{"_index":3297,"title":{"27-128":{}},"name":{},"text":{"27":{}},"component":{}}],["totypeddatahash",{"_index":3307,"title":{"27-145":{}},"name":{},"text":{"27":{}},"component":{}}],["touint",{"_index":3283,"title":{"27-101":{}},"name":{},"text":{"27":{}},"component":{}}],["touint104",{"_index":3196,"title":{"27-55":{}},"name":{},"text":{"27":{}},"component":{}}],["touint112",{"_index":3194,"title":{"27-54":{}},"name":{},"text":{"27":{}},"component":{}}],["touint120",{"_index":3192,"title":{"27-53":{}},"name":{},"text":{"27":{}},"component":{}}],["touint128",{"_index":3191,"title":{"27-52":{}},"name":{},"text":{"27":{}},"component":{}}],["touint136",{"_index":3189,"title":{"27-51":{}},"name":{},"text":{"27":{}},"component":{}}],["touint144",{"_index":3187,"title":{"27-50":{}},"name":{},"text":{"27":{}},"component":{}}],["touint152",{"_index":3185,"title":{"27-49":{}},"name":{},"text":{"27":{}},"component":{}}],["touint16",{"_index":3215,"title":{"27-66":{}},"name":{},"text":{"27":{}},"component":{}}],["touint160",{"_index":3183,"title":{"27-48":{}},"name":{},"text":{"27":{}},"component":{}}],["touint168",{"_index":3181,"title":{"27-47":{}},"name":{},"text":{"27":{}},"component":{}}],["touint176",{"_index":3179,"title":{"27-46":{}},"name":{},"text":{"27":{}},"component":{}}],["touint184",{"_index":3177,"title":{"27-45":{}},"name":{},"text":{"27":{}},"component":{}}],["touint192",{"_index":3176,"title":{"27-44":{}},"name":{},"text":{"27":{}},"component":{}}],["touint200",{"_index":3174,"title":{"27-43":{}},"name":{},"text":{"27":{}},"component":{}}],["touint208",{"_index":3172,"title":{"27-42":{}},"name":{},"text":{"27":{}},"component":{}}],["touint216",{"_index":3170,"title":{"27-41":{}},"name":{},"text":{"27":{}},"component":{}}],["touint224",{"_index":3168,"title":{"27-40":{}},"name":{},"text":{"27":{}},"component":{}}],["touint232",{"_index":3166,"title":{"27-39":{}},"name":{},"text":{"27":{}},"component":{}}],["touint24",{"_index":3213,"title":{"27-65":{}},"name":{},"text":{"27":{}},"component":{}}],["touint240",{"_index":3164,"title":{"27-38":{}},"name":{},"text":{"27":{}},"component":{}}],["touint248",{"_index":3162,"title":{"27-37":{}},"name":{},"text":{"27":{}},"component":{}}],["touint256",{"_index":3218,"title":{"27-68":{}},"name":{},"text":{"27":{}},"component":{}}],["touint32",{"_index":3212,"title":{"27-64":{}},"name":{},"text":{"27":{}},"component":{}}],["touint40",{"_index":3210,"title":{"27-63":{}},"name":{},"text":{"27":{}},"component":{}}],["touint48",{"_index":3209,"title":{"27-62":{}},"name":{},"text":{"27":{}},"component":{}}],["touint56",{"_index":3207,"title":{"27-61":{}},"name":{},"text":{"27":{}},"component":{}}],["touint64",{"_index":3206,"title":{"27-60":{}},"name":{},"text":{"27":{}},"component":{}}],["touint72",{"_index":3204,"title":{"27-59":{}},"name":{},"text":{"27":{}},"component":{}}],["touint8",{"_index":3217,"title":{"27-67":{}},"name":{},"text":{"27":{}},"component":{}}],["touint80",{"_index":3202,"title":{"27-58":{}},"name":{},"text":{"27":{}},"component":{}}],["touint88",{"_index":3200,"title":{"27-57":{}},"name":{},"text":{"27":{}},"component":{}}],["touint96",{"_index":3198,"title":{"27-56":{}},"name":{},"text":{"27":{}},"component":{}}],["toward",{"_index":1196,"title":{},"name":{},"text":{"9":{},"14":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["trace",{"_index":3933,"title":{},"name":{},"text":{"27":{}},"component":{}}],["trace160",{"_index":3940,"title":{},"name":{},"text":{"27":{}},"component":{}}],["trace208",{"_index":3939,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["trace224",{"_index":3935,"title":{},"name":{},"text":{"27":{}},"component":{}}],["track",{"_index":455,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"10":{},"14":{},"18":{},"20":{},"23":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["tradabl",{"_index":1567,"title":{},"name":{},"text":{"15":{}},"component":{}}],["trade",{"_index":948,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"28":{},"29":{},"30":{}},"component":{}}],["tradeoff",{"_index":702,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tradit",{"_index":2666,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["transact",{"_index":327,"title":{"25":{}},"name":{},"text":{"1":{},"2":{},"6":{},"10":{},"13":{},"14":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["transfer",{"_index":36,"title":{"29-5":{},"29-9":{},"29-22":{},"30-12":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"10":{},"14":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["transferandcal",{"_index":2784,"title":{"24-30":{},"24-31":{},"29-89":{},"29-90":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["transferandcallrelax",{"_index":4165,"title":{"29-133":{}},"name":{},"text":{"29":{}},"component":{}}],["transferbatch",{"_index":4045,"title":{"28-10":{}},"name":{},"text":{"28":{}},"component":{}}],["transfercalldata",{"_index":1487,"title":{},"name":{},"text":{"14":{}},"component":{}}],["transfererc721",{"_index":1770,"title":{},"name":{},"text":{"18":{}},"component":{}}],["transferfrom",{"_index":1774,"title":{"29-8":{},"29-25":{},"30-7":{},"30-36":{}},"name":{},"text":{"18":{},"24":{},"29":{},"30":{}},"component":{}}],["transferfromandcal",{"_index":2785,"title":{"24-32":{},"24-33":{},"29-91":{},"29-92":{}},"name":{},"text":{"24":{},"29":{}},"component":{}}],["transferfromandcallrelax",{"_index":4166,"title":{"29-134":{}},"name":{},"text":{"29":{}},"component":{}}],["transferownership",{"_index":87,"title":{"20-8":{},"20-15":{}},"name":{},"text":{"1":{},"20":{},"22":{},"26":{}},"component":{}}],["transfersingl",{"_index":4044,"title":{"28-9":{}},"name":{},"text":{"28":{}},"component":{}}],["transform",{"_index":1881,"title":{},"name":{},"text":{"18":{}},"component":{}}],["transient",{"_index":1866,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["transit",{"_index":2748,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transpar",{"_index":2983,"title":{"26-1":{},"26-26":{}},"name":{},"text":{"26":{}},"component":{}}],["transparentupgradeableproxi",{"_index":3005,"title":{"26-27":{}},"name":{},"text":{"26":{}},"component":{}}],["transparentupgradeableproxy._dispatchupgradetoandcal",{"_index":3099,"title":{},"name":{},"text":{"26":{}},"component":{}}],["travers",{"_index":3853,"title":{},"name":{},"text":{"27":{}},"component":{}}],["treasuri",{"_index":1215,"title":{},"name":{},"text":{"9":{},"14":{}},"component":{}}],["treat",{"_index":1839,"title":{},"name":{},"text":{"18":{},"28":{},"30":{}},"component":{}}],["tree",{"_index":1678,"title":{"18-10":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["tree’",{"_index":3961,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tri",{"_index":1062,"title":{},"name":{},"text":{"7":{},"12":{},"18":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["trigger",{"_index":1104,"title":{},"name":{},"text":{"7":{},"23":{},"25":{},"26":{},"27":{},"30":{}},"component":{}}],["trivial",{"_index":1701,"title":{},"name":{},"text":{"18":{},"29":{}},"component":{}}],["true",{"_index":538,"title":{},"name":{},"text":{"1":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["truncat",{"_index":3685,"title":{},"name":{},"text":{"27":{}},"component":{}}],["trust",{"_index":315,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"20":{},"23":{},"25":{},"26":{},"27":{},"30":{}},"component":{}}],["trustedforward",{"_index":2930,"title":{"25-4":{}},"name":{},"text":{"25":{}},"component":{}}],["trustedforwarder_",{"_index":2929,"title":{"25-3":{}},"name":{},"text":{"25":{}},"component":{}}],["trustless",{"_index":1570,"title":{},"name":{},"text":{"15":{}},"component":{}}],["try/catch",{"_index":4213,"title":{},"name":{},"text":{"29":{}},"component":{}}],["tryadd",{"_index":3139,"title":{"27-3":{}},"name":{},"text":{"27":{}},"component":{}}],["trydiv",{"_index":3142,"title":{"27-6":{}},"name":{},"text":{"27":{}},"component":{}}],["tryget",{"_index":3346,"title":{"27-220":{},"27-228":{},"27-236":{},"27-244":{},"27-252":{},"27-260":{},"27-268":{},"27-276":{},"27-284":{}},"name":{},"text":{"27":{}},"component":{}}],["trymod",{"_index":3143,"title":{"27-7":{}},"name":{},"text":{"27":{}},"component":{}}],["trymodexp",{"_index":3155,"title":{"27-18":{},"27-20":{}},"name":{},"text":{"27":{}},"component":{}}],["trymul",{"_index":3141,"title":{"27-5":{}},"name":{},"text":{"27":{}},"component":{}}],["tryoper",{"_index":1780,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tryrecov",{"_index":3289,"title":{"27-108":{},"27-110":{},"27-112":{}},"name":{},"text":{"27":{}},"component":{}}],["trysub",{"_index":3140,"title":{"27-4":{}},"name":{},"text":{"27":{}},"component":{}}],["tryvalidatecontentstyp",{"_index":3299,"title":{"27-129":{}},"name":{},"text":{"27":{}},"component":{}}],["tstore",{"_index":1874,"title":{"27-463":{},"27-465":{},"27-467":{},"27-469":{},"27-471":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["tupl",{"_index":2071,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["turn",{"_index":3058,"title":{},"name":{},"text":{"26":{}},"component":{}}],["tweak",{"_index":1341,"title":{},"name":{},"text":{"14":{}},"component":{}}],["twice",{"_index":1657,"title":{},"name":{},"text":{"17":{},"23":{},"26":{}},"component":{}}],["two",{"_index":414,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"14":{},"16":{},"17":{},"20":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["type",{"_index":341,"title":{"2-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"11":{},"14":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["typed_data_envelope_typehash",{"_index":3809,"title":{},"name":{},"text":{"27":{}},"component":{}}],["typeddataenvelopestructhash",{"_index":3301,"title":{"27-130":{}},"name":{},"text":{"27":{}},"component":{}}],["typeddatasign",{"_index":3823,"title":{},"name":{},"text":{"27":{}},"component":{}}],["typederc1271executor",{"_index":2228,"title":{"21-114":{}},"name":{},"text":{},"component":{}}],["typeid",{"_index":2312,"title":{},"name":{},"text":{"21":{}},"component":{}}],["typic",{"_index":3067,"title":{},"name":{},"text":{"26":{}},"component":{}}],["u",{"_index":3284,"title":{"27-101":{}},"name":{},"text":{},"component":{}}],["udvt",{"_index":1867,"title":{},"name":{},"text":{"18":{}},"component":{}}],["ui",{"_index":1494,"title":{},"name":{},"text":{"14":{},"20":{},"23":{}},"component":{}}],["uint",{"_index":3777,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uint104",{"_index":3197,"title":{"27-55":{}},"name":{},"text":{"27":{}},"component":{}}],["uint112",{"_index":3195,"title":{"27-54":{}},"name":{},"text":{"27":{}},"component":{}}],["uint120",{"_index":3193,"title":{"27-53":{}},"name":{},"text":{"27":{}},"component":{}}],["uint128",{"_index":2643,"title":{"27-52":{},"30-43":{},"30-62":{},"30-89":{}},"name":{},"text":{"23":{},"27":{},"30":{}},"component":{}}],["uint136",{"_index":3190,"title":{"27-51":{}},"name":{},"text":{"27":{}},"component":{}}],["uint144",{"_index":3188,"title":{"27-50":{}},"name":{},"text":{"27":{}},"component":{}}],["uint152",{"_index":3186,"title":{"27-49":{}},"name":{},"text":{"27":{}},"component":{}}],["uint16",{"_index":3216,"title":{"27-66":{}},"name":{},"text":{"27":{}},"component":{}}],["uint160",{"_index":3184,"title":{"27-48":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-347":{},"27-348":{}},"name":{},"text":{"27":{}},"component":{}}],["uint168",{"_index":3182,"title":{"27-47":{}},"name":{},"text":{"27":{}},"component":{}}],["uint176",{"_index":3180,"title":{"27-46":{}},"name":{},"text":{"27":{}},"component":{}}],["uint184",{"_index":3178,"title":{"27-45":{}},"name":{},"text":{"27":{}},"component":{}}],["uint192",{"_index":2161,"title":{"21-7":{},"27-44":{}},"name":{},"text":{"27":{}},"component":{}}],["uint200",{"_index":3175,"title":{"27-43":{}},"name":{},"text":{"27":{}},"component":{}}],["uint208",{"_index":3173,"title":{"27-42":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-339":{},"27-340":{},"27-362":{},"27-363":{},"27-364":{},"27-365":{},"27-366":{},"27-367":{},"27-368":{}},"name":{},"text":{"27":{},"29":{}},"component":{}}],["uint216",{"_index":3171,"title":{"27-41":{}},"name":{},"text":{"27":{}},"component":{}}],["uint224",{"_index":3169,"title":{"27-40":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-331":{},"27-332":{}},"name":{},"text":{"27":{}},"component":{}}],["uint232",{"_index":3167,"title":{"27-39":{}},"name":{},"text":{"27":{}},"component":{}}],["uint24",{"_index":3214,"title":{"27-65":{},"27-369":{}},"name":{},"text":{"27":{}},"component":{}}],["uint240",{"_index":3165,"title":{"27-38":{}},"name":{},"text":{"27":{}},"component":{}}],["uint248",{"_index":3163,"title":{"27-37":{}},"name":{},"text":{"27":{}},"component":{}}],["uint256",{"_index":210,"title":{"20-46":{},"20-47":{},"20-50":{},"20-51":{},"21-6":{},"21-7":{},"21-8":{},"21-10":{},"21-11":{},"21-18":{},"21-21":{},"21-26":{},"21-27":{},"21-32":{},"21-39":{},"21-44":{},"21-49":{},"21-51":{},"21-52":{},"21-53":{},"21-86":{},"21-90":{},"21-95":{},"21-101":{},"21-104":{},"21-105":{},"21-107":{},"21-108":{},"21-115":{},"21-123":{},"21-124":{},"21-137":{},"21-138":{},"21-139":{},"21-140":{},"21-141":{},"21-143":{},"21-144":{},"21-145":{},"21-146":{},"21-147":{},"21-148":{},"21-150":{},"21-151":{},"21-153":{},"21-154":{},"21-155":{},"21-156":{},"21-163":{},"21-164":{},"21-169":{},"22-5":{},"22-6":{},"22-7":{},"22-8":{},"22-9":{},"22-10":{},"22-11":{},"22-14":{},"22-15":{},"22-16":{},"22-17":{},"22-18":{},"23-7":{},"23-8":{},"23-9":{},"23-10":{},"23-11":{},"23-12":{},"23-13":{},"23-14":{},"23-15":{},"23-16":{},"23-17":{},"23-18":{},"23-19":{},"23-20":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-30":{},"23-31":{},"23-32":{},"23-33":{},"23-34":{},"23-35":{},"23-36":{},"23-41":{},"23-42":{},"23-43":{},"23-44":{},"23-49":{},"23-50":{},"23-59":{},"23-60":{},"23-61":{},"23-62":{},"23-63":{},"23-64":{},"23-65":{},"23-66":{},"23-68":{},"23-69":{},"23-70":{},"23-71":{},"23-73":{},"23-74":{},"23-75":{},"23-76":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-81":{},"23-82":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-90":{},"23-92":{},"23-93":{},"23-94":{},"23-99":{},"23-100":{},"23-101":{},"23-107":{},"23-108":{},"23-109":{},"23-110":{},"23-111":{},"23-114":{},"23-115":{},"23-116":{},"23-117":{},"23-118":{},"23-119":{},"23-120":{},"23-127":{},"23-129":{},"23-130":{},"23-131":{},"23-132":{},"23-133":{},"23-134":{},"23-135":{},"23-136":{},"23-137":{},"23-149":{},"23-150":{},"23-151":{},"23-152":{},"23-153":{},"23-154":{},"23-157":{},"23-158":{},"23-162":{},"23-164":{},"23-165":{},"23-166":{},"23-167":{},"23-173":{},"23-175":{},"23-176":{},"23-177":{},"23-178":{},"23-184":{},"23-185":{},"23-186":{},"23-187":{},"23-190":{},"23-193":{},"23-194":{},"23-195":{},"23-196":{},"23-199":{},"23-200":{},"23-204":{},"23-207":{},"23-208":{},"23-209":{},"23-210":{},"23-211":{},"23-212":{},"23-213":{},"23-218":{},"23-219":{},"23-220":{},"23-221":{},"23-224":{},"23-226":{},"23-227":{},"23-230":{},"23-232":{},"23-236":{},"23-243":{},"23-245":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-253":{},"23-254":{},"23-259":{},"23-260":{},"23-263":{},"23-264":{},"23-265":{},"23-269":{},"24-4":{},"24-7":{},"24-12":{},"24-13":{},"24-16":{},"24-20":{},"24-26":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-37":{},"24-39":{},"24-57":{},"24-59":{},"24-60":{},"24-61":{},"24-63":{},"24-66":{},"24-67":{},"24-68":{},"24-69":{},"24-70":{},"24-71":{},"24-72":{},"24-73":{},"24-74":{},"24-75":{},"24-76":{},"24-77":{},"24-78":{},"24-79":{},"24-80":{},"24-81":{},"24-82":{},"24-86":{},"24-93":{},"25-8":{},"25-19":{},"25-21":{},"26-52":{},"26-54":{},"26-58":{},"26-60":{},"27-3":{},"27-4":{},"27-5":{},"27-6":{},"27-7":{},"27-8":{},"27-9":{},"27-10":{},"27-11":{},"27-12":{},"27-13":{},"27-14":{},"27-15":{},"27-16":{},"27-17":{},"27-18":{},"27-21":{},"27-22":{},"27-23":{},"27-24":{},"27-25":{},"27-26":{},"27-27":{},"27-28":{},"27-35":{},"27-37":{},"27-38":{},"27-39":{},"27-40":{},"27-41":{},"27-42":{},"27-43":{},"27-44":{},"27-45":{},"27-46":{},"27-47":{},"27-48":{},"27-49":{},"27-50":{},"27-51":{},"27-52":{},"27-53":{},"27-54":{},"27-55":{},"27-56":{},"27-57":{},"27-58":{},"27-59":{},"27-60":{},"27-61":{},"27-62":{},"27-63":{},"27-64":{},"27-65":{},"27-66":{},"27-67":{},"27-68":{},"27-100":{},"27-101":{},"27-102":{},"27-105":{},"27-115":{},"27-121":{},"27-130":{},"27-193":{},"27-194":{},"27-195":{},"27-196":{},"27-210":{},"27-211":{},"27-212":{},"27-213":{},"27-218":{},"27-219":{},"27-223":{},"27-224":{},"27-225":{},"27-226":{},"27-227":{},"27-228":{},"27-229":{},"27-230":{},"27-231":{},"27-232":{},"27-233":{},"27-234":{},"27-235":{},"27-236":{},"27-237":{},"27-238":{},"27-239":{},"27-240":{},"27-241":{},"27-242":{},"27-243":{},"27-244":{},"27-245":{},"27-246":{},"27-247":{},"27-250":{},"27-251":{},"27-252":{},"27-253":{},"27-258":{},"27-259":{},"27-266":{},"27-267":{},"27-271":{},"27-274":{},"27-275":{},"27-276":{},"27-277":{},"27-282":{},"27-283":{},"27-292":{},"27-293":{},"27-298":{},"27-299":{},"27-301":{},"27-302":{},"27-303":{},"27-304":{},"27-305":{},"27-306":{},"27-314":{},"27-316":{},"27-319":{},"27-322":{},"27-323":{},"27-324":{},"27-333":{},"27-341":{},"27-349":{},"27-353":{},"27-354":{},"27-355":{},"27-356":{},"27-357":{},"27-358":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-374":{},"27-375":{},"27-376":{},"27-379":{},"27-384":{},"27-386":{},"27-393":{},"27-394":{},"27-399":{},"27-400":{},"27-401":{},"27-402":{},"27-403":{},"27-404":{},"27-405":{},"27-406":{},"27-407":{},"27-408":{},"27-409":{},"27-410":{},"27-411":{},"27-412":{},"27-419":{},"27-421":{},"27-422":{},"27-426":{},"27-430":{},"27-433":{},"27-438":{},"27-443":{},"27-468":{},"27-469":{},"27-477":{},"27-693":{},"27-694":{},"27-695":{},"27-696":{},"27-697":{},"27-698":{},"27-699":{},"27-700":{},"27-701":{},"27-702":{},"27-703":{},"27-705":{},"27-706":{},"28-3":{},"28-4":{},"28-7":{},"28-8":{},"28-9":{},"28-10":{},"28-12":{},"28-14":{},"28-18":{},"28-19":{},"28-20":{},"28-23":{},"28-24":{},"28-25":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-32":{},"28-33":{},"28-36":{},"28-37":{},"28-40":{},"28-42":{},"28-43":{},"28-45":{},"28-46":{},"28-47":{},"28-48":{},"28-50":{},"28-51":{},"28-56":{},"28-57":{},"28-59":{},"28-60":{},"29-3":{},"29-4":{},"29-5":{},"29-6":{},"29-7":{},"29-8":{},"29-9":{},"29-10":{},"29-20":{},"29-21":{},"29-22":{},"29-23":{},"29-24":{},"29-25":{},"29-26":{},"29-27":{},"29-28":{},"29-29":{},"29-30":{},"29-31":{},"29-32":{},"29-36":{},"29-37":{},"29-41":{},"29-42":{},"29-44":{},"29-47":{},"29-48":{},"29-50":{},"29-51":{},"29-52":{},"29-53":{},"29-54":{},"29-56":{},"29-58":{},"29-59":{},"29-60":{},"29-63":{},"29-68":{},"29-69":{},"29-70":{},"29-73":{},"29-74":{},"29-75":{},"29-77":{},"29-79":{},"29-82":{},"29-83":{},"29-84":{},"29-85":{},"29-86":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"29-95":{},"29-96":{},"29-97":{},"29-102":{},"29-103":{},"29-104":{},"29-105":{},"29-106":{},"29-107":{},"29-108":{},"29-109":{},"29-110":{},"29-111":{},"29-112":{},"29-113":{},"29-114":{},"29-115":{},"29-116":{},"29-117":{},"29-118":{},"29-119":{},"29-120":{},"29-122":{},"29-123":{},"29-124":{},"29-125":{},"29-128":{},"29-129":{},"29-130":{},"29-131":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"29-137":{},"29-139":{},"29-140":{},"30-3":{},"30-4":{},"30-5":{},"30-6":{},"30-7":{},"30-8":{},"30-10":{},"30-12":{},"30-13":{},"30-18":{},"30-20":{},"30-21":{},"30-22":{},"30-26":{},"30-27":{},"30-30":{},"30-32":{},"30-33":{},"30-36":{},"30-37":{},"30-38":{},"30-39":{},"30-40":{},"30-41":{},"30-42":{},"30-44":{},"30-45":{},"30-46":{},"30-47":{},"30-48":{},"30-49":{},"30-50":{},"30-51":{},"30-52":{},"30-53":{},"30-55":{},"30-58":{},"30-59":{},"30-60":{},"30-61":{},"30-63":{},"30-66":{},"30-69":{},"30-71":{},"30-74":{},"30-76":{},"30-79":{},"30-84":{},"30-85":{},"30-87":{},"30-88":{},"30-94":{},"30-95":{},"30-96":{},"30-97":{},"30-102":{},"30-104":{},"31-4":{},"31-8":{},"31-9":{},"31-10":{},"31-12":{},"31-13":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["uint256/int256",{"_index":3742,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uint256heap",{"_index":1831,"title":{},"name":{},"text":{"18":{}},"component":{}}],["uint256slot",{"_index":4011,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uint256slottyp",{"_index":4018,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uint32",{"_index":1968,"title":{"20-103":{},"20-104":{},"20-105":{},"20-108":{},"20-111":{},"20-112":{},"20-113":{},"20-115":{},"20-120":{},"20-122":{},"20-125":{},"20-126":{},"20-127":{},"20-128":{},"20-132":{},"20-133":{},"20-134":{},"20-136":{},"20-140":{},"20-143":{},"20-158":{},"20-159":{},"20-160":{},"20-163":{},"20-166":{},"20-167":{},"20-168":{},"20-170":{},"20-175":{},"20-176":{},"20-180":{},"20-183":{},"20-184":{},"20-188":{},"20-189":{},"20-190":{},"20-191":{},"20-193":{},"20-204":{},"20-215":{},"23-141":{},"23-143":{},"23-144":{},"23-145":{},"23-149":{},"23-155":{},"23-184":{},"23-189":{},"23-192":{},"23-228":{},"23-229":{},"27-64":{},"27-327":{},"27-328":{},"27-329":{},"27-330":{},"27-332":{},"27-334":{},"27-342":{},"27-350":{},"29-61":{},"29-62":{}},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{}}],["uint40",{"_index":3211,"title":{"27-63":{}},"name":{},"text":{"27":{}},"component":{}}],["uint48",{"_index":1456,"title":{"20-57":{},"20-58":{},"20-59":{},"20-63":{},"20-65":{},"20-66":{},"20-68":{},"20-72":{},"20-74":{},"20-84":{},"20-85":{},"20-86":{},"20-87":{},"20-94":{},"20-95":{},"20-98":{},"20-112":{},"20-124":{},"20-126":{},"20-132":{},"20-136":{},"20-140":{},"20-143":{},"20-167":{},"20-187":{},"20-189":{},"21-137":{},"21-138":{},"21-139":{},"23-76":{},"23-97":{},"23-125":{},"23-152":{},"23-165":{},"23-176":{},"23-184":{},"23-188":{},"23-191":{},"23-198":{},"23-201":{},"23-202":{},"23-203":{},"23-216":{},"23-232":{},"24-90":{},"25-22":{},"27-62":{},"27-335":{},"27-336":{},"27-337":{},"27-338":{},"27-340":{}},"name":{},"text":{"14":{},"23":{},"27":{}},"component":{}}],["uint56",{"_index":3208,"title":{"27-61":{}},"name":{},"text":{"27":{}},"component":{}}],["uint64",{"_index":484,"title":{"20-107":{},"20-109":{},"20-110":{},"20-111":{},"20-112":{},"20-113":{},"20-114":{},"20-115":{},"20-116":{},"20-117":{},"20-118":{},"20-119":{},"20-120":{},"20-121":{},"20-135":{},"20-136":{},"20-137":{},"20-138":{},"20-139":{},"20-140":{},"20-142":{},"20-148":{},"20-150":{},"20-162":{},"20-164":{},"20-165":{},"20-166":{},"20-167":{},"20-168":{},"20-169":{},"20-170":{},"20-171":{},"20-172":{},"20-173":{},"20-174":{},"20-175":{},"20-176":{},"20-177":{},"20-178":{},"20-179":{},"20-180":{},"20-181":{},"20-182":{},"20-196":{},"20-197":{},"22-3":{},"22-14":{},"22-15":{},"22-16":{},"23-204":{},"23-205":{},"26-68":{},"26-72":{},"26-74":{},"27-60":{},"27-360":{}},"name":{},"text":{"1":{},"18":{},"20":{},"27":{}},"component":{}}],["uint72",{"_index":3205,"title":{"27-59":{}},"name":{},"text":{"27":{}},"component":{}}],["uint8",{"_index":1154,"title":{"23-25":{},"23-26":{},"23-27":{},"23-28":{},"23-29":{},"23-34":{},"23-35":{},"23-71":{},"23-83":{},"23-84":{},"23-85":{},"23-86":{},"23-87":{},"23-88":{},"23-89":{},"23-111":{},"23-119":{},"23-121":{},"23-200":{},"23-224":{},"27-67":{},"27-102":{},"27-104":{},"27-112":{},"27-113":{},"27-372":{},"27-373":{},"27-535":{},"27-536":{},"27-537":{},"27-538":{},"27-539":{},"27-540":{},"27-541":{},"27-542":{},"27-543":{},"27-544":{},"27-545":{},"27-546":{},"27-547":{},"27-548":{},"27-549":{},"27-550":{},"27-551":{},"27-552":{},"27-553":{},"27-554":{},"27-555":{},"27-556":{},"27-557":{},"27-558":{},"27-559":{},"27-560":{},"27-561":{},"27-562":{},"27-563":{},"27-564":{},"27-565":{},"27-566":{},"27-567":{},"27-568":{},"27-569":{},"27-570":{},"27-571":{},"27-572":{},"27-573":{},"27-574":{},"27-575":{},"27-576":{},"27-577":{},"27-578":{},"27-579":{},"27-580":{},"27-581":{},"27-582":{},"27-583":{},"27-584":{},"27-585":{},"27-586":{},"27-587":{},"27-588":{},"27-589":{},"27-590":{},"27-591":{},"27-592":{},"27-593":{},"27-594":{},"27-595":{},"27-596":{},"27-597":{},"27-598":{},"27-599":{},"27-600":{},"27-601":{},"27-602":{},"27-603":{},"27-604":{},"27-605":{},"27-606":{},"27-607":{},"27-608":{},"27-609":{},"27-610":{},"27-611":{},"27-612":{},"27-613":{},"27-614":{},"27-615":{},"27-616":{},"27-617":{},"27-618":{},"27-619":{},"27-620":{},"27-621":{},"27-622":{},"27-623":{},"27-624":{},"27-625":{},"27-626":{},"27-627":{},"27-628":{},"27-629":{},"27-630":{},"27-631":{},"27-632":{},"27-633":{},"27-634":{},"27-635":{},"27-636":{},"27-637":{},"27-638":{},"27-639":{},"27-640":{},"27-641":{},"27-642":{},"27-643":{},"27-644":{},"27-645":{},"27-646":{},"27-647":{},"27-648":{},"27-649":{},"27-650":{},"27-651":{},"27-652":{},"27-653":{},"27-654":{},"27-655":{},"27-656":{},"27-657":{},"27-658":{},"27-659":{},"27-660":{},"27-661":{},"27-662":{},"27-663":{},"27-664":{},"27-665":{},"27-666":{},"27-667":{},"27-668":{},"27-669":{},"27-670":{},"27-671":{},"27-672":{},"27-673":{},"27-674":{},"27-675":{},"27-676":{},"27-677":{},"27-678":{},"27-679":{},"27-680":{},"27-681":{},"27-682":{},"27-683":{},"27-684":{},"27-685":{},"27-686":{},"27-687":{},"27-688":{},"27-689":{},"27-690":{},"29-14":{},"29-19":{},"29-36":{},"29-41":{},"29-66":{},"29-100":{},"29-121":{}},"name":{},"text":{"8":{},"14":{},"18":{},"23":{},"27":{},"29":{}},"component":{}}],["uint80",{"_index":3203,"title":{"27-58":{}},"name":{},"text":{"27":{}},"component":{}}],["uint88",{"_index":3201,"title":{"27-57":{}},"name":{},"text":{"27":{}},"component":{}}],["uint96",{"_index":3199,"title":{"27-56":{},"27-343":{},"27-344":{},"27-345":{},"27-346":{},"27-348":{},"30-73":{},"30-75":{},"30-77":{},"31-5":{},"31-6":{},"31-8":{}},"name":{},"text":{"27":{}},"component":{}}],["uintset",{"_index":3918,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uinttoaddressmap",{"_index":3898,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uinttobytes32map",{"_index":3905,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uinttouintmap",{"_index":3902,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uintxx/intxx/bool",{"_index":3741,"title":{},"name":{},"text":{"27":{}},"component":{}}],["umb.com/21/muldiv",{"_index":3719,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unabl",{"_index":2036,"title":{},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{}}],["unambigu",{"_index":2150,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unauthor",{"_index":357,"title":{},"name":{},"text":{"1":{},"26":{},"27":{}},"component":{}}],["unauthorizedtypedexecut",{"_index":2240,"title":{"21-128":{}},"name":{},"text":{"21":{}},"component":{}}],["unavail",{"_index":416,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["unbound",{"_index":2063,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["uncal",{"_index":2065,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["unchang",{"_index":877,"title":{},"name":{},"text":{"3":{}},"component":{}}],["uncheck",{"_index":3747,"title":{},"name":{},"text":{"27":{}},"component":{}}],["undefin",{"_index":3117,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["under",{"_index":335,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"26":{},"27":{}},"component":{}}],["under_overflow",{"_index":3673,"title":{"27-696":{}},"name":{},"text":{"27":{}},"component":{}}],["undercollater",{"_index":4235,"title":{},"name":{},"text":{"29":{}},"component":{}}],["underflow",{"_index":4039,"title":{},"name":{},"text":{"27":{}},"component":{}}],["underli",{"_index":1017,"title":{"29-67":{},"30-98":{}},"name":{},"text":{"6":{},"9":{},"10":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["underlyingtoken",{"_index":4132,"title":{"29-65":{},"30-93":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["underscor",{"_index":860,"title":{},"name":{},"text":{"3":{}},"component":{}}],["understand",{"_index":41,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"12":{},"14":{},"18":{},"30":{}},"component":{}}],["undesir",{"_index":3094,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["unexpect",{"_index":697,"title":{},"name":{},"text":{"2":{},"25":{},"29":{}},"component":{}}],["unfamiliar",{"_index":918,"title":{},"name":{},"text":{"6":{}},"component":{}}],["unfavor",{"_index":2912,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unfortun",{"_index":1140,"title":{},"name":{},"text":{"8":{},"29":{}},"component":{}}],["uniform",{"_index":4336,"title":{},"name":{},"text":{"30":{}},"component":{}}],["uniniti",{"_index":3124,"title":{},"name":{},"text":{"26":{}},"component":{}}],["uninstal",{"_index":2313,"title":{},"name":{},"text":{"21":{}},"component":{}}],["uninstallmodul",{"_index":2177,"title":{"21-27":{}},"name":{},"text":{"21":{}},"component":{}}],["unintend",{"_index":2956,"title":{},"name":{},"text":{"25":{}},"component":{}}],["uniqu",{"_index":944,"title":{},"name":{},"text":{"6":{},"10":{},"16":{},"18":{},"20":{},"23":{},"25":{},"27":{}},"component":{}}],["uniswap",{"_index":3721,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uniswap’",{"_index":3892,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unit",{"_index":1428,"title":{},"name":{},"text":{"14":{},"23":{},"24":{},"29":{},"30":{},"31":{}},"component":{}}],["univers",{"_index":2879,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unknown",{"_index":3877,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unless",{"_index":287,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"20":{},"23":{},"24":{},"26":{},"29":{}},"component":{}}],["unlik",{"_index":309,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"10":{},"12":{},"20":{},"23":{},"27":{}},"component":{}}],["unnecessari",{"_index":3091,"title":{},"name":{},"text":{"26":{}},"component":{}}],["unopinion",{"_index":4070,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["unpack",{"_index":3701,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unpaus",{"_index":3336,"title":{"27-189":{}},"name":{},"text":{"27":{},"28":{},"29":{},"30":{}},"component":{}}],["unpredict",{"_index":1509,"title":{},"name":{},"text":{"14":{}},"component":{}}],["unreach",{"_index":4102,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["unrealist",{"_index":4351,"title":{},"name":{},"text":{"30":{}},"component":{}}],["unreason",{"_index":4373,"title":{},"name":{},"text":{"30":{}},"component":{}}],["unresolv",{"_index":1280,"title":{},"name":{},"text":{"12":{}},"component":{}}],["unrestrict",{"_index":2696,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unsaf",{"_index":1305,"title":{},"name":{},"text":{"13":{},"15":{},"18":{},"26":{},"27":{},"30":{}},"component":{}}],["unsafeaccess",{"_index":3402,"title":{"27-404":{},"27-405":{},"27-406":{}},"name":{},"text":{"27":{}},"component":{}}],["unsafememoryaccess",{"_index":3407,"title":{"27-407":{},"27-408":{},"27-409":{}},"name":{},"text":{"27":{}},"component":{}}],["unsafesetlength",{"_index":3408,"title":{"27-410":{},"27-411":{},"27-412":{}},"name":{},"text":{"27":{}},"component":{}}],["unset",{"_index":2583,"title":{"27-213":{}},"name":{},"text":{"23":{},"27":{}},"component":{}}],["unsign",{"_index":3704,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unsignedaverag",{"_index":1795,"title":{},"name":{},"text":{"18":{}},"component":{}}],["unsignedroundsup",{"_index":3160,"title":{"27-29":{}},"name":{},"text":{"27":{}},"component":{}}],["unspecifi",{"_index":4037,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unspent",{"_index":2659,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unstak",{"_index":1426,"title":{},"name":{},"text":{"14":{}},"component":{}}],["unsuccess",{"_index":2982,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["unsupport",{"_index":3137,"title":{},"name":{},"text":{"26":{},"27":{}},"component":{}}],["until",{"_index":2078,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{}},"component":{}}],["untrust",{"_index":3878,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["unus",{"_index":725,"title":{},"name":{},"text":{"2":{},"11":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["unvest",{"_index":2355,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unwraptypeddataenvelop",{"_index":3294,"title":{"27-125":{}},"name":{},"text":{"27":{}},"component":{}}],["up",{"_index":323,"title":{"14":{},"2-2":{},"7-4":{},"11-1":{}},"name":{},"text":{"1":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["updat",{"_index":429,"title":{},"name":{},"text":{"1":{},"3":{},"12":{},"14":{},"15":{},"20":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["updateauthor",{"_index":556,"title":{"20-131":{},"20-195":{}},"name":{},"text":{"1":{},"20":{}},"component":{}}],["updatedelay",{"_index":439,"title":{"23-254":{}},"name":{},"text":{"1":{},"23":{}},"component":{}}],["updateerc165cach",{"_index":2802,"title":{"24-48":{}},"name":{},"text":{"24":{}},"component":{}}],["updatequorumnumer",{"_index":2435,"title":{"23-134":{}},"name":{},"text":{"23":{}},"component":{}}],["updatetimelock",{"_index":2463,"title":{"23-169":{},"23-181":{}},"name":{},"text":{"23":{}},"component":{}}],["upgrad",{"_index":358,"title":{"17":{},"2-5":{},"26-47":{}},"name":{"17":{}},"text":{"1":{},"2":{},"3":{},"12":{},"14":{},"15":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{},"30":{}},"component":{}}],["upgrade_interface_vers",{"_index":3012,"title":{"26-35":{},"26-85":{}},"name":{},"text":{"26":{}},"component":{}}],["upgradeable/token/erc721/erc721upgradeable.sol",{"_index":1635,"title":{},"name":{},"text":{"17":{}},"component":{}}],["upgradeablebeacon",{"_index":3016,"title":{"26-43":{}},"name":{},"text":{"26":{}},"component":{}}],["upgradeandcal",{"_index":3010,"title":{"26-34":{}},"name":{},"text":{"26":{}},"component":{}}],["upgradebeacontoandcal",{"_index":2995,"title":{"26-18":{}},"name":{},"text":{"26":{}},"component":{}}],["upgrades.deployproxi",{"_index":1650,"title":{},"name":{},"text":{"17":{}},"component":{}}],["upgradeto",{"_index":3018,"title":{"26-46":{}},"name":{},"text":{"26":{}},"component":{}}],["upgradetoandcal",{"_index":2991,"title":{"26-14":{},"26-81":{}},"name":{},"text":{"26":{}},"component":{}}],["upon",{"_index":1295,"title":{},"name":{},"text":{"12":{},"23":{},"30":{}},"component":{}}],["upper",{"_index":3786,"title":{},"name":{},"text":{"27":{}},"component":{}}],["upper_bound",{"_index":3980,"title":{},"name":{},"text":{"27":{}},"component":{}}],["upperbound",{"_index":3399,"title":{"27-401":{}},"name":{},"text":{"27":{}},"component":{}}],["upperboundmemori",{"_index":3401,"title":{"27-403":{}},"name":{},"text":{"27":{}},"component":{}}],["upperlookup",{"_index":3369,"title":{"27-329":{},"27-337":{},"27-345":{}},"name":{},"text":{"27":{}},"component":{}}],["upperlookuprec",{"_index":3370,"title":{"27-330":{},"27-338":{},"27-346":{}},"name":{},"text":{"27":{}},"component":{}}],["uri",{"_index":969,"title":{"28-12":{},"28-14":{},"28-18":{},"28-50":{}},"name":{},"text":{"6":{},"10":{},"18":{},"28":{},"30":{}},"component":{}}],["uri_",{"_index":4047,"title":{"28-16":{}},"name":{},"text":{"28":{}},"component":{}}],["url",{"_index":1883,"title":{},"name":{},"text":{"18":{},"23":{}},"component":{}}],["urlsearchparam",{"_index":2568,"title":{},"name":{},"text":{"23":{}},"component":{}}],["us",{"_index":6,"title":{"17":{},"1-3":{},"1-7":{},"1-10":{},"1-13":{},"1-14":{},"2-7":{},"18-11":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["usag",{"_index":190,"title":{"15-5":{},"17-3":{}},"name":{},"text":{"1":{},"4":{},"8":{},"14":{},"18":{},"20":{},"25":{},"27":{},"30":{}},"component":{}}],["usdt",{"_index":4291,"title":{},"name":{},"text":{"29":{}},"component":{}}],["usedvot",{"_index":2427,"title":{"23-115":{},"23-120":{}},"name":{},"text":{"23":{}},"component":{}}],["useless",{"_index":1064,"title":{},"name":{},"text":{"7":{}},"component":{}}],["user",{"_index":60,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{},"9":{},"14":{},"18":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["userop",{"_index":749,"title":{"21-8":{},"21-9":{},"21-10":{},"21-18":{},"21-32":{},"21-39":{},"21-44":{},"21-108":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["userop.signatur",{"_index":753,"title":{},"name":{},"text":{"2":{}},"component":{}}],["useroper",{"_index":582,"title":{"2-11":{}},"name":{},"text":{"2":{},"11":{},"18":{},"21":{}},"component":{}}],["userophash",{"_index":750,"title":{"21-8":{},"21-10":{},"21-18":{},"21-32":{},"21-39":{},"21-44":{},"21-108":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["user’",{"_index":2569,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["usual",{"_index":1041,"title":{},"name":{},"text":{"6":{},"16":{},"20":{},"26":{},"27":{},"29":{}},"component":{}}],["utf",{"_index":3996,"title":{},"name":{},"text":{"27":{}},"component":{}}],["util",{"_index":675,"title":{"18":{},"27":{},"21-135":{},"23-214":{},"25-9":{},"26-65":{},"28-53":{},"29-126":{},"30-100":{}},"name":{"18":{},"27":{}},"text":{"2":{},"5":{},"12":{},"14":{},"15":{},"18":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["uuid",{"_index":3138,"title":{},"name":{},"text":{"26":{}},"component":{}}],["uup",{"_index":2880,"title":{"26-1":{}},"name":{},"text":{"24":{},"26":{}},"component":{}}],["uupsunauthorizedcallcontext",{"_index":3044,"title":{"26-86":{}},"name":{},"text":{"26":{}},"component":{}}],["uupsunsupportedproxiableuuid",{"_index":3045,"title":{"26-87":{}},"name":{},"text":{"26":{}},"component":{}}],["uupsupgrad",{"_index":3038,"title":{"26-77":{}},"name":{},"text":{"26":{}},"component":{}}],["v",{"_index":1690,"title":{"23-224":{},"27-112":{},"27-113":{},"29-36":{},"29-41":{}},"name":{},"text":{"18":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["v0.6",{"_index":885,"title":{},"name":{},"text":{"4":{}},"component":{}}],["v1",{"_index":1070,"title":{},"name":{},"text":{"7":{}},"component":{}}],["v1.5",{"_index":1748,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["v1_5",{"_index":1740,"title":{},"name":{},"text":{"18":{}},"component":{}}],["v2",{"_index":1075,"title":{},"name":{},"text":{"7":{}},"component":{}}],["v2.5",{"_index":887,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["v2.x",{"_index":891,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["v3.0.0",{"_index":883,"title":{},"name":{},"text":{"4":{},"5":{},"27":{}},"component":{}}],["v3.3.0",{"_index":3915,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v4",{"_index":3789,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v4.5",{"_index":2549,"title":{},"name":{},"text":{"23":{}},"component":{}}],["v4.6",{"_index":2595,"title":{},"name":{},"text":{"23":{}},"component":{}}],["v4.6.0",{"_index":3900,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v4.7.0",{"_index":3903,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v4.9",{"_index":1405,"title":{},"name":{},"text":{"14":{},"29":{}},"component":{}}],["v5",{"_index":3076,"title":{},"name":{},"text":{"26":{}},"component":{}}],["v5.1",{"_index":3957,"title":{},"name":{},"text":{"27":{}},"component":{}}],["v5.1.0",{"_index":3906,"title":{},"name":{},"text":{"27":{}},"component":{}}],["valid",{"_index":575,"title":{"2-4":{},"21-57":{},"27-129":{},"27-144":{}},"name":{},"text":{"2":{},"11":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["validaft",{"_index":2249,"title":{"21-137":{},"21-138":{},"21-139":{}},"name":{},"text":{"21":{}},"component":{}}],["validateuserop",{"_index":688,"title":{"21-8":{},"21-108":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["validationdata",{"_index":797,"title":{"21-18":{},"21-137":{},"21-141":{}},"name":{},"text":{"2":{},"21":{}},"component":{}}],["validationdata1",{"_index":2254,"title":{"21-140":{}},"name":{},"text":{"21":{}},"component":{}}],["validationdata2",{"_index":2255,"title":{"21-140":{}},"name":{},"text":{"21":{}},"component":{}}],["validuntil",{"_index":2250,"title":{"21-137":{},"21-138":{},"21-139":{}},"name":{},"text":{"21":{}},"component":{}}],["valu",{"_index":386,"title":{"21-123":{},"21-124":{},"21-163":{},"21-164":{},"23-7":{},"23-21":{},"23-22":{},"23-23":{},"23-24":{},"23-30":{},"23-36":{},"23-59":{},"23-73":{},"23-74":{},"23-75":{},"23-77":{},"23-78":{},"23-79":{},"23-80":{},"23-90":{},"23-151":{},"23-153":{},"23-154":{},"23-165":{},"23-166":{},"23-167":{},"23-176":{},"23-177":{},"23-178":{},"23-207":{},"23-246":{},"23-247":{},"23-248":{},"23-249":{},"23-251":{},"23-252":{},"23-253":{},"23-259":{},"23-260":{},"23-264":{},"24-30":{},"24-31":{},"24-32":{},"24-33":{},"24-34":{},"24-35":{},"24-37":{},"24-39":{},"24-93":{},"26-52":{},"26-54":{},"26-58":{},"26-60":{},"27-23":{},"27-24":{},"27-25":{},"27-26":{},"27-27":{},"27-28":{},"27-37":{},"27-38":{},"27-39":{},"27-40":{},"27-41":{},"27-42":{},"27-43":{},"27-44":{},"27-45":{},"27-46":{},"27-47":{},"27-48":{},"27-49":{},"27-50":{},"27-51":{},"27-52":{},"27-53":{},"27-54":{},"27-55":{},"27-56":{},"27-57":{},"27-58":{},"27-59":{},"27-60":{},"27-61":{},"27-62":{},"27-63":{},"27-64":{},"27-65":{},"27-66":{},"27-67":{},"27-68":{},"27-69":{},"27-70":{},"27-71":{},"27-72":{},"27-73":{},"27-74":{},"27-75":{},"27-76":{},"27-77":{},"27-78":{},"27-79":{},"27-80":{},"27-81":{},"27-82":{},"27-83":{},"27-84":{},"27-85":{},"27-86":{},"27-87":{},"27-88":{},"27-89":{},"27-90":{},"27-91":{},"27-92":{},"27-93":{},"27-94":{},"27-95":{},"27-96":{},"27-97":{},"27-98":{},"27-99":{},"27-100":{},"27-102":{},"27-103":{},"27-104":{},"27-105":{},"27-211":{},"27-215":{},"27-223":{},"27-231":{},"27-239":{},"27-247":{},"27-255":{},"27-263":{},"27-271":{},"27-279":{},"27-289":{},"27-290":{},"27-291":{},"27-294":{},"27-295":{},"27-296":{},"27-297":{},"27-300":{},"27-301":{},"27-302":{},"27-303":{},"27-306":{},"27-308":{},"27-309":{},"27-310":{},"27-311":{},"27-312":{},"27-313":{},"27-314":{},"27-321":{},"27-325":{},"27-327":{},"27-335":{},"27-343":{},"27-356":{},"27-357":{},"27-365":{},"27-366":{},"27-386":{},"27-419":{},"27-420":{},"27-421":{},"27-422":{},"27-426":{},"27-431":{},"27-432":{},"27-433":{},"27-462":{},"27-463":{},"27-464":{},"27-465":{},"27-466":{},"27-467":{},"27-468":{},"27-469":{},"27-470":{},"27-471":{},"27-536":{},"27-538":{},"27-540":{},"27-542":{},"27-544":{},"27-546":{},"27-548":{},"27-550":{},"27-552":{},"27-554":{},"27-556":{},"27-558":{},"27-560":{},"27-562":{},"27-564":{},"27-566":{},"27-568":{},"27-570":{},"27-572":{},"27-574":{},"27-576":{},"27-578":{},"27-580":{},"27-582":{},"27-584":{},"27-586":{},"27-588":{},"27-590":{},"27-592":{},"27-594":{},"27-596":{},"27-598":{},"27-600":{},"27-602":{},"27-604":{},"27-606":{},"27-608":{},"27-610":{},"27-612":{},"27-614":{},"27-616":{},"27-618":{},"27-620":{},"27-622":{},"27-624":{},"27-626":{},"27-628":{},"27-630":{},"27-632":{},"27-634":{},"27-636":{},"27-638":{},"27-640":{},"27-642":{},"27-644":{},"27-646":{},"27-648":{},"27-650":{},"27-652":{},"27-654":{},"27-656":{},"27-658":{},"27-660":{},"27-662":{},"27-664":{},"27-666":{},"27-668":{},"27-670":{},"27-672":{},"27-674":{},"27-676":{},"27-678":{},"27-680":{},"27-682":{},"27-684":{},"27-686":{},"27-688":{},"27-690":{},"28-7":{},"28-8":{},"28-9":{},"28-10":{},"28-12":{},"28-23":{},"28-24":{},"28-25":{},"28-26":{},"28-27":{},"28-28":{},"28-30":{},"28-31":{},"28-32":{},"28-33":{},"28-36":{},"28-37":{},"28-40":{},"28-42":{},"28-43":{},"28-48":{},"28-59":{},"28-60":{},"29-5":{},"29-7":{},"29-8":{},"29-9":{},"29-10":{},"29-22":{},"29-24":{},"29-25":{},"29-26":{},"29-27":{},"29-28":{},"29-29":{},"29-30":{},"29-31":{},"29-32":{},"29-36":{},"29-41":{},"29-47":{},"29-48":{},"29-52":{},"29-56":{},"29-59":{},"29-68":{},"29-69":{},"29-74":{},"29-75":{},"29-77":{},"29-84":{},"29-85":{},"29-86":{},"29-89":{},"29-90":{},"29-91":{},"29-92":{},"29-93":{},"29-94":{},"29-95":{},"29-96":{},"29-97":{},"29-128":{},"29-129":{},"29-130":{},"29-132":{},"29-133":{},"29-134":{},"29-135":{},"29-139":{},"29-140":{},"30-43":{}},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"10":{},"14":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["valueslength",{"_index":2781,"title":{"24-26":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["vanilla",{"_index":1387,"title":{},"name":{},"text":{"14":{}},"component":{}}],["vari",{"_index":317,"title":{},"name":{},"text":{"1":{},"14":{}},"component":{}}],["variabl",{"_index":873,"title":{},"name":{},"text":{"3":{},"7":{},"17":{},"18":{},"21":{},"23":{},"25":{},"26":{},"27":{}},"component":{}}],["variant",{"_index":116,"title":{},"name":{},"text":{"1":{},"14":{},"17":{},"18":{},"20":{},"25":{},"27":{},"29":{},"30":{}},"component":{}}],["variat",{"_index":2906,"title":{},"name":{},"text":{"24":{}},"component":{}}],["varieti",{"_index":708,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["variou",{"_index":618,"title":{},"name":{},"text":{"2":{},"15":{},"20":{},"23":{},"27":{},"29":{}},"component":{}}],["various",{"_index":4257,"title":{},"name":{},"text":{"29":{}},"component":{}}],["vault",{"_index":1157,"title":{"9-2":{},"9-5":{}},"name":{},"text":{"9":{},"24":{},"29":{}},"component":{}}],["vault/timelock",{"_index":2613,"title":{},"name":{},"text":{"23":{}},"component":{}}],["vault’",{"_index":1168,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["vector",{"_index":671,"title":{},"name":{},"text":{"2":{},"23":{}},"component":{}}],["veri",{"_index":933,"title":{},"name":{},"text":{"6":{},"8":{},"14":{},"15":{},"20":{},"23":{},"27":{},"29":{}},"component":{}}],["verif",{"_index":587,"title":{},"name":{},"text":{"2":{},"15":{},"18":{},"20":{},"21":{},"27":{}},"component":{}}],["verifi",{"_index":1674,"title":{"18-6":{},"25-13":{},"27-152":{},"27-154":{}},"name":{},"text":{"18":{},"25":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["verificationga",{"_index":777,"title":{},"name":{},"text":{"2":{}},"component":{}}],["verificationgaslimit",{"_index":2258,"title":{"21-144":{}},"name":{},"text":{"21":{}},"component":{}}],["verifycalldata",{"_index":3315,"title":{"27-156":{},"27-158":{}},"name":{},"text":{"27":{}},"component":{}}],["verifycallresult",{"_index":3395,"title":{"27-390":{}},"name":{},"text":{"27":{}},"component":{}}],["verifycallresultfromtarget",{"_index":3394,"title":{"27-389":{}},"name":{},"text":{"27":{}},"component":{}}],["verifyingcontract",{"_index":2837,"title":{"24-86":{},"27-121":{},"27-130":{}},"name":{},"text":{"27":{}},"component":{}}],["verifyn",{"_index":1715,"title":{},"name":{},"text":{"18":{}},"component":{}}],["verifysolid",{"_index":1720,"title":{},"name":{},"text":{"18":{}},"component":{}}],["versatil",{"_index":3054,"title":{},"name":{},"text":{"26":{}},"component":{}}],["version",{"_index":737,"title":{"3-9":{},"21-35":{},"23-5":{},"23-58":{},"24-86":{},"26-68":{},"26-74":{},"27-118":{},"27-121":{},"27-130":{}},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"15":{},"17":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["vest",{"_index":2350,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["vestedamount",{"_index":2342,"title":{"22-14":{},"22-15":{}},"name":{},"text":{"22":{}},"component":{}}],["vestingwallet",{"_index":2338,"title":{"22-2":{}},"name":{},"text":{"22":{},"29":{}},"component":{}}],["vet",{"_index":1536,"title":{},"name":{},"text":{"15":{}},"component":{}}],["via",{"_index":552,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"12":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["view",{"_index":740,"title":{"27-154":{},"27-155":{},"27-158":{},"27-159":{},"27-162":{},"27-163":{},"27-166":{},"27-167":{},"27-355":{},"27-357":{},"27-359":{},"27-364":{},"27-366":{},"27-368":{},"27-373":{},"27-375":{}},"name":{},"text":{"2":{},"8":{},"9":{},"14":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["violat",{"_index":705,"title":{},"name":{},"text":{"2":{},"20":{},"27":{}},"component":{}}],["virtual",{"_index":751,"title":{"3-4":{},"9-4":{}},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"8":{},"9":{},"14":{},"16":{},"22":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["visibl",{"_index":1192,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["visual",{"_index":1156,"title":{"9-2":{}},"name":{},"text":{"14":{}},"component":{}}],["volum",{"_index":2959,"title":{},"name":{},"text":{"25":{}},"component":{}}],["voluntarili",{"_index":4393,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["vote",{"_index":33,"title":{"14-13":{},"23-44":{},"23-215":{}},"name":{},"text":{"1":{},"8":{},"10":{},"14":{},"16":{},"23":{},"24":{},"27":{},"29":{},"30":{}},"component":{}}],["vote_type_fract",{"_index":2430,"title":{"23-121":{}},"name":{},"text":{"23":{}},"component":{}}],["votecast",{"_index":2386,"title":{"23-34":{}},"name":{},"text":{"23":{}},"component":{}}],["votecastwithparam",{"_index":2388,"title":{"23-35":{}},"name":{},"text":{"23":{}},"component":{}}],["voteend",{"_index":2381,"title":{"23-30":{}},"name":{},"text":{"23":{}},"component":{}}],["voter",{"_index":1421,"title":{"23-28":{},"23-29":{},"23-34":{},"23-35":{},"23-37":{},"23-51":{},"23-86":{},"23-87":{},"23-120":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["voter’",{"_index":2578,"title":{},"name":{},"text":{"23":{}},"component":{}}],["votes._transfervotingunit",{"_index":4232,"title":{},"name":{},"text":{"29":{}},"component":{}}],["votes.deleg",{"_index":4228,"title":{},"name":{},"text":{"29":{}},"component":{}}],["votes.delegatebysig",{"_index":4229,"title":{},"name":{},"text":{"29":{}},"component":{}}],["votes.getpastvot",{"_index":4231,"title":{},"name":{},"text":{"29":{}},"component":{}}],["votes.getvot",{"_index":4230,"title":{},"name":{},"text":{"29":{}},"component":{}}],["votesexpiredsignatur",{"_index":2722,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"30":{}},"component":{}}],["votestart",{"_index":2380,"title":{"23-30":{}},"name":{},"text":{"23":{}},"component":{}}],["votetyp",{"_index":2638,"title":{},"name":{},"text":{"23":{}},"component":{}}],["voting/blob/e5de2efd1368387b840931f19f3c184c85842761/src/governorcountingfractional.sol",{"_index":2650,"title":{},"name":{},"text":{"23":{}},"component":{}}],["votingdelay",{"_index":1424,"title":{"23-15":{},"23-99":{},"23-185":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["votingdelayset",{"_index":2482,"title":{"23-194":{}},"name":{},"text":{"23":{}},"component":{}}],["votingperiod",{"_index":1427,"title":{"23-16":{},"23-43":{},"23-100":{},"23-186":{}},"name":{},"text":{"14":{},"23":{}},"component":{}}],["votingperiodset",{"_index":2484,"title":{"23-195":{}},"name":{},"text":{"23":{}},"component":{}}],["vs",{"_index":2984,"title":{"26-1":{},"27-110":{},"27-111":{}},"name":{},"text":{"26":{},"27":{}},"component":{}}],["vulner",{"_index":1293,"title":{},"name":{},"text":{"12":{},"27":{},"30":{}},"component":{}}],["wait",{"_index":491,"title":{},"name":{},"text":{"1":{},"20":{},"23":{}},"component":{}}],["walk",{"_index":1476,"title":{},"name":{},"text":{"14":{},"29":{},"30":{}},"component":{}}],["walkthrough",{"_index":2548,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wallet",{"_index":425,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"13":{},"18":{},"22":{},"27":{},"29":{}},"component":{}}],["want",{"_index":163,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"12":{},"14":{},"15":{},"18":{},"20":{},"23":{},"26":{},"27":{},"30":{}},"component":{}}],["warm",{"_index":3894,"title":{},"name":{},"text":{"27":{}},"component":{}}],["wasn’t",{"_index":2122,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["way",{"_index":105,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"12":{},"14":{},"18":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["web3.eth.sign",{"_index":1687,"title":{},"name":{},"text":{"18":{}},"component":{}}],["web3.j",{"_index":3784,"title":{},"name":{},"text":{"27":{}},"component":{}}],["web3j",{"_index":2743,"title":{},"name":{},"text":{"23":{}},"component":{}}],["week",{"_index":434,"title":{},"name":{},"text":{"1":{},"14":{},"20":{}},"component":{}}],["wei",{"_index":2742,"title":{},"name":{},"text":{"23":{},"27":{},"29":{}},"component":{}}],["weight",{"_index":2387,"title":{"23-34":{},"23-35":{}},"name":{},"text":{"23":{}},"component":{}}],["well",{"_index":615,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"14":{},"15":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["we’ll",{"_index":941,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["we’r",{"_index":1126,"title":{},"name":{},"text":{"8":{}},"component":{}}],["we’v",{"_index":939,"title":{},"name":{},"text":{"6":{},"7":{},"10":{}},"component":{}}],["whenev",{"_index":1095,"title":{},"name":{},"text":{"7":{},"10":{},"23":{},"24":{},"25":{},"29":{},"30":{}},"component":{}}],["whennotpaus",{"_index":3329,"title":{"27-180":{}},"name":{},"text":{"27":{}},"component":{}}],["whenpaus",{"_index":3330,"title":{"27-181":{}},"name":{},"text":{"27":{}},"component":{}}],["wherea",{"_index":1260,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["whether",{"_index":558,"title":{},"name":{},"text":{"1":{},"2":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["whichev",{"_index":370,"title":{},"name":{},"text":{"1":{}},"component":{}}],["whilst",{"_index":965,"title":{},"name":{},"text":{"6":{}},"component":{}}],["whitelist",{"_index":1751,"title":{},"name":{},"text":{"18":{},"23":{},"25":{}},"component":{}}],["whoever",{"_index":2753,"title":{},"name":{},"text":{"23":{}},"component":{}}],["whole",{"_index":46,"title":{},"name":{},"text":{"1":{},"8":{}},"component":{}}],["whose",{"_index":2358,"title":{},"name":{},"text":{"22":{},"24":{},"25":{},"27":{}},"component":{}}],["who’",{"_index":2132,"title":{},"name":{},"text":{"20":{}},"component":{}}],["wide",{"_index":597,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"12":{},"18":{},"30":{},"31":{}},"component":{}}],["widespread",{"_index":1619,"title":{},"name":{},"text":{"16":{}},"component":{}}],["will",{"_index":2965,"title":{},"name":{},"text":{"25":{},"29":{}},"component":{}}],["wish",{"_index":2711,"title":{},"name":{},"text":{"23":{},"29":{}},"component":{}}],["withdelay",{"_index":2451,"title":{"23-149":{}},"name":{},"text":{},"component":{}}],["withdraw",{"_index":1183,"title":{"24-77":{},"24-82":{},"29-115":{}},"name":{},"text":{"9":{},"24":{},"29":{},"30":{}},"component":{}}],["withdraw/redeem",{"_index":4287,"title":{},"name":{},"text":{"29":{}},"component":{}}],["withdrawn",{"_index":2917,"title":{},"name":{},"text":{"24":{}},"component":{}}],["withdrawto",{"_index":4134,"title":{"29-69":{},"30-95":{}},"name":{},"text":{"29":{},"30":{}},"component":{}}],["withhook",{"_index":2181,"title":{"21-48":{}},"name":{},"text":{"21":{}},"component":{}}],["within",{"_index":1315,"title":{},"name":{},"text":{"13":{},"20":{},"24":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["without",{"_index":716,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"17":{},"18":{},"20":{},"23":{},"25":{},"26":{},"27":{},"29":{}},"component":{}}],["wizard",{"_index":1301,"title":{"19":{}},"name":{"19":{}},"text":{"12":{},"14":{},"15":{},"23":{}},"component":{}}],["won’t",{"_index":540,"title":{},"name":{},"text":{"1":{},"20":{},"25":{},"26":{},"27":{}},"component":{}}],["word",{"_index":1179,"title":{},"name":{},"text":{"9":{},"27":{}},"component":{}}],["work",{"_index":219,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"8":{},"12":{},"14":{},"18":{},"23":{},"27":{},"30":{}},"component":{}}],["workaround",{"_index":2682,"title":{},"name":{},"text":{"23":{}},"component":{}}],["workflow",{"_index":409,"title":{},"name":{},"text":{"1":{},"20":{},"23":{},"29":{}},"component":{}}],["world",{"_index":27,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{}}],["worri",{"_index":1558,"title":{},"name":{},"text":{"15":{}},"component":{}}],["wors",{"_index":1202,"title":{},"name":{},"text":{"9":{}},"component":{}}],["worst",{"_index":3926,"title":{},"name":{},"text":{"27":{}},"component":{}}],["worth",{"_index":1035,"title":{},"name":{},"text":{"6":{},"7":{},"9":{}},"component":{}}],["wouldn’t",{"_index":228,"title":{},"name":{},"text":{"1":{},"9":{},"26":{}},"component":{}}],["would’v",{"_index":1289,"title":{},"name":{},"text":{"12":{}},"component":{}}],["wrap",{"_index":682,"title":{"7-4":{}},"name":{},"text":{"2":{},"14":{},"18":{},"27":{},"29":{},"30":{}},"component":{}}],["wrappedtoken",{"_index":1400,"title":{},"name":{},"text":{"14":{}},"component":{}}],["wrapper",{"_index":3694,"title":{},"name":{},"text":{"27":{},"29":{},"30":{}},"component":{}}],["wrapper’",{"_index":4236,"title":{},"name":{},"text":{"29":{}},"component":{}}],["wraptypeddataenvelop",{"_index":3295,"title":{"27-126":{}},"name":{},"text":{"27":{}},"component":{}}],["write",{"_index":1079,"title":{},"name":{},"text":{"7":{},"12":{},"14":{},"17":{},"18":{},"26":{},"27":{},"30":{}},"component":{}}],["writeup",{"_index":4188,"title":{},"name":{},"text":{"29":{}},"component":{}}],["written",{"_index":1071,"title":{},"name":{},"text":{"7":{},"23":{},"27":{}},"component":{}}],["wrote",{"_index":1605,"title":{},"name":{},"text":{"16":{}},"component":{}}],["x",{"_index":3148,"title":{"27-13":{},"27-14":{}},"name":{},"text":{"27":{}},"component":{}}],["x.tryadd",{"_index":1784,"title":{},"name":{},"text":{"18":{}},"component":{}}],["x.trydiv",{"_index":1794,"title":{},"name":{},"text":{"18":{}},"component":{}}],["x.trymul",{"_index":1791,"title":{},"name":{},"text":{"18":{}},"component":{}}],["x.trysub",{"_index":1788,"title":{},"name":{},"text":{"18":{}},"component":{}}],["x00",{"_index":3825,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x19\\x00",{"_index":3834,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x19\\x01",{"_index":3813,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x19ethereum",{"_index":1696,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["y",{"_index":1785,"title":{"27-13":{},"27-14":{}},"name":{},"text":{"18":{},"27":{}},"component":{}}],["yield",{"_index":2904,"title":{},"name":{},"text":{"24":{}},"component":{}}],["yourself",{"_index":1139,"title":{},"name":{},"text":{"8":{},"15":{},"23":{}},"component":{}}],["you’d",{"_index":1018,"title":{},"name":{},"text":{"6":{},"10":{},"18":{}},"component":{}}],["you’ll",{"_index":1013,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"18":{}},"component":{}}],["you’r",{"_index":917,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"18":{},"20":{},"27":{}},"component":{}}],["you’v",{"_index":1069,"title":{},"name":{},"text":{"7":{},"16":{}},"component":{}}],["z",{"_index":3824,"title":{},"name":{},"text":{"27":{}},"component":{}}],["z/nz",{"_index":3723,"title":{},"name":{},"text":{"27":{}},"component":{}}],["zero",{"_index":992,"title":{"27-372":{},"27-373":{}},"name":{},"text":{"6":{},"9":{},"14":{},"16":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Access control—that is, \"who is allowed to do this thing\"—is incredibly important in the world of smart contracts. The access control of your contract may govern who can mint tokens, vote on proposals, freeze transfers, and many other things. It is therefore critical to understand how you implement it, lest someone else steals your whole system. The most common and basic form of access control is the concept of ownership: there’s an account that is the owner of a contract and can do administrative tasks on it. This approach is perfectly reasonable for contracts that have a single administrative user. OpenZeppelin Contracts provides Ownable for implementing ownership in your contracts. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\"; contract MyContract is Ownable { constructor(address initialOwner) Ownable(initialOwner) {} function normalThing() public { // anyone can call this normalThing() } function specialThing() public onlyOwner { // only the owner can call specialThing()! } } At deployment, the owner of an Ownable contract is set to the provided initialOwner parameter. Ownable also lets you: transferOwnership from the owner account to a new one, and renounceOwnership for the owner to relinquish this administrative privilege, a common pattern after an initial stage with centralized administration is over. Removing the owner altogether will mean that administrative tasks that are protected by onlyOwner will no longer be callable! Ownable is a simple and effective way to implement access control, but you should be mindful of the dangers associated with transferring the ownership to an incorrect account that can’t interact with this contract anymore. An alternative to this problem is using Ownable2Step; a variant of Ownable that requires the new owner to explicitly accept the ownership transfer by calling acceptOwnership. Note that a contract can also be the owner of another one! This opens the door to using, for example, a Gnosis Safe, an Aragon DAO, or a totally custom contract that you create. In this way, you can use composability to add additional layers of access control complexity to your contracts. Instead of having a single regular Ethereum account (Externally Owned Account, or EOA) as the owner, you could use a 2-of-3 multisig run by your project leads, for example. Prominent projects in the space, such as MakerDAO, use systems similar to this one. While the simplicity of ownership can be useful for simple systems or quick prototyping, different levels of authorization are often needed. You may want for an account to have permission to ban users from a system, but not create new tokens. Role-Based Access Control (RBAC) offers flexibility in this regard. In essence, we will be defining multiple roles, each allowed to perform different sets of actions. An account may have, for example, 'moderator', 'minter' or 'admin' roles, which you will then check for instead of simply using onlyOwner. This check can be enforced through the onlyRole modifier. Separately, you will be able to define rules for how accounts can be granted a role, have it revoked, and more. Most software uses access control systems that are role-based: some users are regular users, some may be supervisors or managers, and a few will often have administrative privileges. OpenZeppelin Contracts provides AccessControl for implementing role-based access control. Its usage is straightforward: for each role that you want to define, you will create a new role identifier that is used to grant, revoke, and check if an account has that role. Here’s a simple example of using AccessControl in an ERC-20 token to define a 'minter' role, which allows accounts that have it create new tokens: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\"; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract AccessControlERC20MintBase is ERC20, AccessControl { // Create a new role identifier for the minter role bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\"); error CallerNotMinter(address caller); constructor(address minter) ERC20(\"MyToken\", \"TKN\") { // Grant the minter role to a specified account _grantRole(MINTER_ROLE, minter); } function mint(address to, uint256 amount) public { // Check that the calling account has the minter role if (!hasRole(MINTER_ROLE, msg.sender)) { revert CallerNotMinter(msg.sender); } _mint(to, amount); } } Make sure you fully understand how AccessControl works before using it on your system, or copy-pasting the examples from this guide. While clear and explicit, this isn’t anything we wouldn’t have been able to achieve with Ownable. Indeed, where AccessControl shines is in scenarios where granular permissions are required, which can be implemented by defining multiple roles. Let’s augment our ERC-20 token example by also defining a 'burner' role, which lets accounts destroy tokens, and by using the onlyRole modifier: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\"; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract AccessControlERC20Mint is ERC20, AccessControl { bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\"); bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\"); constructor(address minter, address burner) ERC20(\"MyToken\", \"TKN\") { _grantRole(MINTER_ROLE, minter); _grantRole(BURNER_ROLE, burner); } function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) { _mint(to, amount); } function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) { _burn(from, amount); } } So clean! By splitting concerns this way, more granular levels of permission may be implemented than were possible with the simpler ownership approach to access control. Limiting what each component of a system is able to do is known as the principle of least privilege, and is a good security practice. Note that each account may still have more than one role, if so desired. The ERC-20 token example above uses _grantRole, an internal function that is useful when programmatically assigning roles (such as during construction). But what if we later want to grant the 'minter' role to additional accounts? By default, accounts with a role cannot grant it or revoke it from other accounts: all having a role does is making the hasRole check pass. To grant and revoke roles dynamically, you will need help from the role’s admin. Every role has an associated admin role, which grants permission to call the grantRole and revokeRole functions. A role can be granted or revoked by using these if the calling account has the corresponding admin role. Multiple roles may have the same admin role to make management easier. A role’s admin can even be the same role itself, which would cause accounts with that role to be able to also grant and revoke it. This mechanism can be used to create complex permissioning structures resembling organizational charts, but it also provides an easy way to manage simpler applications. AccessControl includes a special role, called DEFAULT_ADMIN_ROLE, which acts as the default admin role for all roles. An account with this role will be able to manage any other role, unless _setRoleAdmin is used to select a new admin role. Since it is the admin for all roles by default, and in fact it is also its own admin, this role carries significant risk. To mitigate this risk we provide AccessControlDefaultAdminRules, a recommended extension of AccessControl that adds a number of enforced security measures for this role: the admin is restricted to a single account, with a 2-step transfer procedure with a delay in between steps. Let’s take a look at the ERC-20 token example, this time taking advantage of the default admin role: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\"; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract AccessControlERC20MintMissing is ERC20, AccessControl { bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\"); bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\"); constructor() ERC20(\"MyToken\", \"TKN\") { // Grant the contract deployer the default admin role: it will be able // to grant and revoke any roles _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); } function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) { _mint(to, amount); } function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) { _burn(from, amount); } } Note that, unlike the previous examples, no accounts are granted the 'minter' or 'burner' roles. However, because those roles' admin role is the default admin role, and that role was granted to msg.sender, that same account can call grantRole to give minting or burning permission, and revokeRole to remove it. Dynamic role allocation is often a desirable property, for example in systems where trust in a participant may vary over time. It can also be used to support use cases such as KYC, where the list of role-bearers may not be known up-front, or may be prohibitively expensive to include in a single transaction. Because accounts might grant and revoke roles dynamically, it is not always possible to determine which accounts hold a particular role. This is important as it allows proving certain properties about a system, such as that an administrative account is a multisig or a DAO, or that a certain role has been removed from all users, effectively disabling any associated functionality. Under the hood, AccessControl uses EnumerableSet, a more powerful variant of Solidity’s mapping type, which allows for key enumeration. getRoleMemberCount can be used to retrieve the number of accounts that have a particular role, and getRoleMember can then be called to get the address of each of these accounts. const minterCount = await myToken.getRoleMemberCount(MINTER_ROLE); const members = []; for (let i = 0; i < minterCount; ++i) { members.push(await myToken.getRoleMember(MINTER_ROLE, i)); } Access control is essential to prevent unauthorized access to critical functions. These functions may be used to mint tokens, freeze transfers or perform an upgrade that completely changes the smart contract logic. While Ownable and AccessControl can prevent unauthorized access, they do not address the issue of a misbehaving administrator attacking their own system to the prejudice of their users. This is the issue the TimelockController is addressing. The TimelockController is a proxy that is governed by proposers and executors. When set as the owner/admin/controller of a smart contract, it ensures that whichever maintenance operation is ordered by the proposers is subject to a delay. This delay protects the users of the smart contract by giving them time to review the maintenance operation and exit the system if they consider it is in their best interest to do so. By default, the address that deployed the TimelockController gets administration privileges over the timelock. This role grants the right to assign proposers, executors, and other administrators. The first step in configuring the TimelockController is to assign at least one proposer and one executor. These can be assigned during construction or later by anyone with the administrator role. These roles are not exclusive, meaning an account can have both roles. Roles are managed using the AccessControl interface and the bytes32 values for each role are accessible through the ADMIN_ROLE, PROPOSER_ROLE and EXECUTOR_ROLE constants. There is an additional feature built on top of AccessControl: giving the executor role to address(0) opens access to anyone to execute a proposal once the timelock has expired. This feature, while useful, should be used with caution. At this point, with both a proposer and an executor assigned, the timelock can perform operations. An optional next step is for the deployer to renounce its administrative privileges and leave the timelock self-administered. If the deployer decides to do so, all further maintenance, including assigning new proposers/schedulers or changing the timelock duration will have to follow the timelock workflow. This links the governance of the timelock to the governance of contracts attached to the timelock, and enforce a delay on timelock maintenance operations. If the deployer renounces administrative rights in favour of timelock itself, assigning new proposers or executors will require a timelocked operation. This means that if the accounts in charge of any of these two roles become unavailable, then the entire contract (and any contract it controls) becomes locked indefinitely. With both the proposer and executor roles assigned and the timelock in charge of its own administration, you can now transfer the ownership/control of any contract to the timelock. A recommended configuration is to grant both roles to a secure governance contract such as a DAO or a multisig, and to additionally grant the executor role to a few EOAs held by people in charge of helping with the maintenance operations. These wallets cannot take over control of the timelock but they can help smoothen the workflow. Operations executed by the TimelockController are not subject to a fixed delay but rather a minimum delay. Some major updates might call for a longer delay. For example, if a delay of just a few days might be sufficient for users to audit a minting operation, it makes sense to use a delay of a few weeks, or even a few months, when scheduling a smart contract upgrade. The minimum delay (accessible through the getMinDelay method) can be updated by calling the updateDelay function. Bear in mind that access to this function is only accessible by the timelock itself, meaning this maintenance operation has to go through the timelock itself. For a system of contracts, better integrated role management can be achieved with an AccessManager instance. Instead of managing each contract’s permission separately, AccessManager stores all the permissions in a single contract, making your protocol easier to audit and maintain. Although AccessControl offers a more dynamic solution for adding permissions to your contracts than Ownable, decentralized protocols tend to become more complex after integrating new contract instances and requires you to keep track of permissions separately in each contract. This increases the complexity of permissions management and monitoring across the system. Protocols managing permissions in production systems often require more integrated alternatives to fragmented permissions through multiple AccessControl instances. The AccessManager is designed around the concept of role and target functions: Roles are granted to accounts (addresses) following a many-to-many approach for flexibility. This means that each user can have one or multiple roles and multiple users can have the same role. Access to a restricted target function is limited to one role. A target function is defined by one function selector on one contract (called target). For a call to be authorized, the caller must bear the role that is assigned to the current target function (contract address + function selector). OpenZeppelin Contracts provides AccessManager for managing roles across any number of contracts. The AccessManager itself is a contract that can be deployed and used out of the box. It sets an initial admin in the constructor who will be allowed to perform management operations. In order to restrict access to some functions of your contract, you should inherit from the AccessManaged contract provided along with the manager. This provides the restricted modifier that can be used to protect any externally facing function. Note that you will have to specify the address of the AccessManager instance (initialAuthority) in the constructor so the restricted modifier knows which manager to use for checking permissions. Here’s a simple example of an ERC-20 token that defines a mint function that is restricted by an AccessManager: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccessManaged} from \"@openzeppelin/contracts/access/manager/AccessManaged.sol\"; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract AccessManagedERC20Mint is ERC20, AccessManaged { constructor(address manager) ERC20(\"MyToken\", \"TKN\") AccessManaged(manager) {} // Minting is restricted according to the manager rules for this function. // The function is identified by its selector: 0x40c10f19. // Calculated with bytes4(keccak256('mint(address,uint256)')) function mint(address to, uint256 amount) public restricted { _mint(to, amount); } } Make sure you fully understand how AccessManager works before using it or copy-pasting the examples from this guide. Once the managed contract has been deployed, it is now under the manager’s control. The initial admin can then assign the minter role to an address and also allow the role to call the mint function. For example, this is demonstrated in the following Javascript code using Ethers.js: // const target = ...; // const user = ...; const MINTER = 42n; // Roles are uint64 (0 is reserved for the ADMIN_ROLE) // Grant the minter role with no execution delay await manager.grantRole(MINTER, user, 0); // Allow the minter role to call the function selector // corresponding to the mint function await manager.setTargetFunctionRole( target, ['0x40c10f19'], // bytes4(keccak256('mint(address,uint256)')) MINTER ); Even though each role has its own list of function permissions, each role member (address) has an execution delay that will dictate how long the account should wait to execute a function that requires its role. Delayed operations must have the schedule function called on them first in the AccessManager before they can be executed, either by calling to the target function or using the AccessManager’s execute function. Additionally, roles can have a granting delay that prevents adding members immediately. The AccessManager admins can set this grant delay as follows: const HOUR = 60 * 60; const GRANT_DELAY = 24 * HOUR; const EXECUTION_DELAY = 5 * HOUR; const ACCOUNT = \"0x...\"; await manager.connect(initialAdmin).setGrantDelay(MINTER, GRANT_DELAY); // The role will go into effect after the GRANT_DELAY passes await manager.connect(initialAdmin).grantRole(MINTER, ACCOUNT, EXECUTION_DELAY); Note that roles do not define a name. As opposed to the AccessControl case, roles are identified as numeric values instead of being hardcoded in the contract as bytes32 values. It is still possible to allow for tooling discovery (e.g. for role exploration) using role labeling with the labelRole function. await manager.labelRole(MINTER, \"MINTER\"); Given the admins of the AccessManaged can modify all of its permissions, it’s recommended to keep only a single admin address secured under a multisig or governance layer. To achieve this, it is possible for the initial admin to set up all the required permissions, targets, and functions, assign a new admin, and finally renounce its admin role. For improved incident response coordination, the manager includes a mode where administrators can completely close a target contract. When closed, all calls to restricted target functions in a target contract will revert. Closing and opening contracts don’t alter any of their settings, neither permissions nor delays. Particularly, the roles required for calling specific target functions are not modified. This mode is useful for incident response operations that require temporarily shutting down a contract in order to evaluate emergencies and reconfigure permissions. const target = await myToken.getAddress(); // Token's `restricted` functions closed await manager.setTargetClosed(target, true); // Token's `restricted` functions open await manager.setTargetClosed(target, false); Even if an AccessManager defines permissions for a target function, these won’t be applied if the managed contract instance is not using the restricted modifier for that function, or if its manager is a different one. An important aspect of the AccessControl contract is that roles aren’t granted nor revoked by role members. Instead, it relies on the concept of a role admin for granting and revoking. In the case of the AccessManager, the same rule applies and only the role’s admins are able to call grant and revoke functions. Note that calling these functions will be subject to the execution delay that the executing role admin has. Additionally, the AccessManager stores a guardian as an extra protection for each role. This guardian has the ability to cancel operations that have been scheduled by any role member with an execution delay. Consider that a role will have its initial admin and guardian default to the ADMIN_ROLE (0). Be careful with the members of ADMIN_ROLE, since it acts as the default admin and guardian for every role. A misbehaved guardian can cancel operations at will, affecting the AccessManager’s operation. The AccessManager provides a built-in interface for configuring permission settings that can be accessed by its ADMIN_ROLE members. This configuration interface includes the following functions: Add a label to a role using the labelRole function. Assign the admin and guardian of a role with setRoleAdmin and setRoleGuardian. Set each role’s grant delay via setGrantDelay. As an admin, some actions will require a delay. Similar to each member’s execution delay, some admin operations require waiting for execution and should follow the schedule and execute workflow. More specifically, these delayed functions are those for configuring the settings of a specific target contract. The delay applied to these functions can be adjusted by the manager admins with setTargetAdminDelay. The delayed admin actions are: Updating an AccessManaged contract authority using updateAuthority. Closing or opening a target via setTargetClosed. Changing permissions of whether a role can call a target function with setTargetFunctionRole. Contracts already inheriting from Ownable can migrate to AccessManager by transferring ownership to the manager. After that, all calls to functions with the onlyOwner modifier should be called through the manager’s execute function, even if the caller doesn’t require a delay. await ownable.connect(owner).transferOwnership(accessManager); For systems already using AccessControl, the DEFAULT_ADMIN_ROLE can be granted to the AccessManager after revoking every other role. Subsequent calls should be made through the manager’s execute method, similar to the Ownable case. // Revoke old roles await accessControl.connect(admin).revokeRole(MINTER_ROLE, account); // Grant the admin role to the access manager await accessControl.connect(admin).grantRole(DEFAULT_ADMIN_ROLE, accessManager); await accessControl.connect(admin).renounceRole(DEFAULT_ADMIN_ROLE, admin); ← Backwards Compatibility Account Abstraction →","title":"Access Control","component":"contracts","version":"5.x","name":"access-control","url":"/contracts/5.x/access-control.html","titles":[{"text":"Ownership and Ownable","hash":"ownership-and-ownable","id":1},{"text":"Role-Based Access Control","hash":"role-based-access-control","id":2},{"text":"Using AccessControl","hash":"using-access-control","id":3},{"text":"Granting and Revoking Roles","hash":"granting-and-revoking","id":4},{"text":"Querying Privileged Accounts","hash":"querying-privileged-accounts","id":5},{"text":"Delayed operation","hash":"delayed_operation","id":6},{"text":"Using TimelockController","hash":"using_timelockcontroller","id":7},{"text":"Minimum delay","hash":"minimum_delay","id":8},{"text":"Access Management","hash":"access-management","id":9},{"text":"Using AccessManager","hash":"using_accessmanager","id":10},{"text":"Role Admins and Guardians","hash":"role_admins_and_guardians","id":11},{"text":"Manager configuration","hash":"manager_configuration","id":12},{"text":"Using with Ownable","hash":"using_with_ownable","id":13},{"text":"Using with AccessControl","hash":"using_with_accesscontrol","id":14}]},"2":{"id":2,"text":"Unlike Externally Owned Accounts (EOAs), smart contracts may contain arbitrary verification logic based on authentication mechanisms different to Ethereum’s native ECDSA and have execution advantages such as batching or gas sponsorship. To leverage these properties of smart contracts, the community has widely adopted ERC-4337, a standard to process user operations through an alternative mempool. OpenZeppelin Contracts provides multiple contracts for Account Abstraction following this standard as it enables more flexible and user-friendly interactions with applications. Account Abstraction use cases include wallets in novel contexts (e.g. embedded wallets), more granular configuration of accounts, recovery mechanisms and modularity with standards such as ERC-7579. OpenZeppelin provides an abstract implementation of an AccountBase that implements both interfaces and accepts native currency and common tokens (i.e. ERC-20, ERC-721 and ERC-1155), as well as validating any arbitrary UserOperation. Aside from the AccountBase, the library includes various specialized accounts that implement _validateUserOp with a digital signature verification algorithm such as ECDSA, P256 or RSA To setup an account, you can either bring your own validation logic and start with AccountBase, or import any of the predefined accounts that OpenZeppelin provides and are controlled by a signer. For example, to setup a contract controlled by a regular EVM private key, you can levarege AccountECDSA // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccountECDSA} from \"@openzeppelin/contracts/account/AccountECDSA.sol\"; import {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\"; contract MyAccountECDSA is AccountECDSA { constructor(address owner) AccountECDSA(owner) EIP712(\"MyAccountECDSA\", \"1\") {} } Along with the regular ECDSA verification, the library also provides the AccountP256, which is a widely used elliptic curve verification algorithm that’s present in mobile device security enclaves, FIDO keys, and corporate environments (i.e. public key infrastructure). // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccountP256} from \"@openzeppelin/contracts/account/AccountP256.sol\"; import {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\"; contract MyAccountP256 is AccountP256 { constructor(bytes32 qx, bytes32 qy) AccountP256(qx, qy) EIP712(\"MyAccountP256\", \"1\") {} } Similarly, some government and corporate public key infrastructures use RSA for signature verification. For those cases, the AccountRSA would be a good fit. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccountRSA} from \"@openzeppelin/contracts/account/AccountRSA.sol\"; import {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\"; contract MyAccountRSA is AccountRSA { constructor(bytes memory e, bytes memory n) AccountRSA(e, n) EIP712(\"MyAccountRSA\", \"1\") {} } A common security practice to prevent user operation replayability across smart contract accounts controlled by the same private key (i.e. multiple accounts for the same signer) is to link the signature to the address and chainId. This can be done by asking the user to sign the hash of the user operation along with these values. The problem with this approach is that the user might be prompted by the wallet provider to sign an obfuscated message, which is a phishing vector that may lead to a user losing its assets. To prevent this, each account using a signature verification algorithm inherits from ERC1271TypedSigner, a utility that implements IERC1271 for smart contract signatures with a defensive rehashing mechanism based on a nested EIP-712 approach to wrap the signature request in a context where there’s clearer information for the end user. To process a bundle of UserOperations, bundlers call validateUserOp on each operation sender to check whether the operation can be executed. However, the bundler has no guarantee that the state of the blockchain will remain the same after the validation phase. To overcome this problem, ERC-7562 proposes a set of limitations to EVM code so that bundlers (or node operators) are protected from unexpected state changes. These rules outline the requirements for operations to be processed by the canonical mempool. Although any Account that breaks such rules may still be processed by a private bundler, developers should keep in mind the centralization tradeoffs of relying on private infrastructure instead of permissionless execution. Upgradeable Contracts might easily violate ERC-7562 storage access rules during the validation phase. For example, when upgradeability is present in a module (i.e. an external validator), the account will need to call the proxy and access the implementation address in storage. Modules are a way to extend functionality of an smart account. Given the variety of smart account implementations, a common approach has been to enable a system of modules to which accounts can delegate logic. As a result, the community has proposed ERC-7579 as a minimal generalized approach to smart account modules. OpenZeppelin’s AccountERC7579 is an ERC-7579 compliant implementation that works without a signer, and instead, uses a validator module installed on the account. This validator module might be any of the validators developed by the community or one of the validator modules we provide. To setup a modular Account, start by importing AccountERC7579 and make sure to install a module on its initialization. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {MODULE_TYPE_VALIDATOR} from \"@openzeppelin/contracts/interfaces/IERC7579Module.sol\"; import {AccountERC7579} from \"@openzeppelin/contracts/account/draft-AccountERC7579.sol\"; contract MyModularAccount is AccountERC7579 { constructor(address module, bytes memory moduleInitData) { _installModule(MODULE_TYPE_VALIDATOR, module, moduleInitData); } } An account that doesn’t setup a module on deployment will be unusable if there’s no other execution method enabled on the account. A modular account can use a signer too. It just needs to override _validateUserOp logic to use the signer as part of the validation phase: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {IERC1271} from \"@openzeppelin/contracts/interfaces/IERC1271.sol\"; import {AccountERC7579} from \"@openzeppelin/contracts/account/draft-AccountERC7579.sol\"; import {ERC1271TypedSigner} from \"@openzeppelin/contracts/utils/cryptography/ERC1271TypedSigner.sol\"; import {ERC4337Utils, PackedUserOperation} from \"@openzeppelin/contracts/account/utils/ERC4337Utils.sol\"; import {AccountECDSA} from \"@openzeppelin/contracts/account/AccountECDSA.sol\"; import {AccountBase} from \"@openzeppelin/contracts/account/AccountBase.sol\"; import {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\"; contract MyModularAccountECDSATypedSigner is AccountECDSA, AccountERC7579 { constructor( address signer_, string memory name, string memory version ) AccountECDSA(signer_) EIP712(name, version) {} function isValidSignature( bytes32 hash, bytes calldata signature ) public view override(AccountERC7579, ERC1271TypedSigner) returns (bytes4) { // Prefer signer and fallback to ERC7579 validator return ERC1271TypedSigner.isValidSignature(hash, signature) == IERC1271.isValidSignature.selector ? IERC1271.isValidSignature.selector : AccountERC7579.isValidSignature(hash, signature); } /// @inheritdoc AccountERC7579 function _validateUserOp( PackedUserOperation calldata userOp, bytes32 userOpHash ) internal virtual override(AccountERC7579, AccountECDSA) returns (uint256) { // Prefer signer and fallback to ERC7579 validator if (_validateSignature(userOpHash, userOp.signature)) return ERC4337Utils.SIG_VALIDATION_SUCCESS; return super._validateUserOp(userOp, userOpHash); } function executeUserOp( PackedUserOperation calldata userOp, bytes32 userOpHash ) public override(AccountBase, AccountERC7579) { // Prefer modular execution AccountERC7579.executeUserOp(userOp, userOpHash); } } The ERC-4337 is a detailed specification of how to implement the necessary logic to handle operations without making changes to the protocol level (i.e. the rules of the blockchain itself). This specification defines the following components: An UserOperation is a higher-layer pseudo-transaction object that represents the intent of the account. This shares some similarities with regular EVM transactions like the concept of gasFees or callData but includes fields that enable new capabilities. struct PackedUserOperation { address sender; uint256 nonce; bytes initCode; // concatenation of factory address and factoryData (or empty) bytes callData; bytes32 accountGasLimits; // concatenation of verificationGas (16 bytes) and callGas (16 bytes) uint256 preVerificationGas; bytes32 gasFees; // concatenation of maxPriorityFee (16 bytes) and maxFeePerGas (16 bytes) bytes paymasterAndData; // concatenation of paymaster fields (or empty) bytes signature; } Each UserOperation is executed through a contract known as the EntryPoint. This contract is a singleton deployed across multiple networks at the same address although other custom implementations may be used. The Entrypoint contracts is considered a trusted entity by the account. The bundler is a piece of offchain infrastructure that is in charge of processing an alternative mempool of user operations. Bundlers themselves call the Entrypoint contract’s handleOps function with an array of UserOperations that are executed and included in a block. During the process, the bundler pays for the gas of executing the transaction and gets refunded during the execution phase of the Entrypoint contract. The Account Contract is a type of smart contract implements the logic required to validate an UserOperation in the context of ERC-4337. Any smart contract account should conform with the IAccount interface to validate operations. interface IAccount { function validateUserOp(PackedUserOperation calldata, bytes32, uint256) external returns (uint256 validationData); } Similarly, an Account should have a way to execute these operations by either handling arbitrary calldata on its fallback or implementing the IAccountExecute interface: interface IAccountExecute { function executeUserOp(PackedUserOperation calldata userOp, bytes32 userOpHash) external; } To build your own account, see Smart Accounts. The smart contract accounts are created by a Factory contract defined by the Account developer. This factory receives arbitrary bytes as initData and returns an address where the logic of the account is deployed. To build your own factory, see Account Factory A Paymaster is an optional entity that can sponsor gas fees for Accounts, or allow them to pay for those fees in ERC-20 instead of native currency. This abstracts gas away of the user experience in the same way that computational costs of cloud servers are abstracted away from end-users. To build your own paymaster, see Paymaster. ← Access Control ERC-7579 →","title":"Account Abstraction","component":"contracts","version":"5.x","name":"account-abstraction","url":"/contracts/5.x/account-abstraction.html","titles":[{"text":"Smart Accounts","hash":"smart_accounts","id":1},{"text":"Setting up an account","hash":"setting_up_an_account","id":2},{"text":"EIP712 Typed Signatures","hash":"eip712_typed_signatures","id":3},{"text":"ERC-7562 Validation Rules","hash":"erc_7562_validation_rules","id":4},{"text":"A note on upgradeability","hash":"a_note_on_upgradeability","id":5},{"text":"Modules","hash":"modules","id":6},{"text":"Using with a signer","hash":"using_with_a_signer","id":7},{"text":"Account Factory","hash":"account_factory","id":8},{"text":"Paymaster","hash":"paymaster","id":9},{"text":"ERC-4337 Overview","hash":"erc_4337_overview","id":10},{"text":"UserOperation","hash":"useroperation","id":11},{"text":"Entrypoint","hash":"entrypoint","id":12},{"text":"Bundlers","hash":"bundlers","id":13},{"text":"Account Contract","hash":"account_contract","id":14},{"text":"Factory Contract","hash":"factory_contract","id":15},{"text":"Paymaster Contract","hash":"paymaster_contract","id":16}]},"3":{"id":3,"text":"OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. Patch and minor updates will generally be backwards compatible, with rare exceptions as detailed below. Major updates should be assumed incompatible with previous releases. On this page, we provide details about these guarantees. In backwards compatible releases, all changes should be either additions or modifications to internal implementation details. Most code should continue to compile and behave as expected. The exceptions to this rule are listed below. Infrequently a patch or minor update will remove or change an API in a breaking way, but only if the previous API is considered insecure. These breaking changes will be noted in the changelog and release notes, and published along with a security advisory. ERCs that are not Final can change in incompatible ways. For this reason, we avoid shipping implementations of ERCs before they are Final. Some exceptions are made for ERCs that have been published for a long time and that seem unlikely to change. Breaking changes to the ERC specification are still technically possible in those cases, so these implementations are published in files named draft-*.sol to make that condition explicit. Almost all functions in this library are virtual with some exceptions, but this does not mean that overrides are encouraged. There is a subset of functions that are designed to be overridden. By defining overrides outside of this subset you are potentially relying on internal implementation details. We make efforts to preserve backwards compatibility even in these cases but it is extremely difficult and easy to accidentally break. Caution is advised. Additionally, some minor updates may result in new compilation errors of the kind \"two or more base classes define function with same name and parameter types\" or \"need to specify overridden contract\", due to what Solidity considers ambiguity in inherited functions. This should be resolved by adding an override that invokes the function via super. See Extending Contracts for more about virtual and overrides. Struct members with an underscore prefix should be considered \"private\" and may break in minor versions. Struct data should only be accessed and modified through library functions. The specific error format and data that is included with reverts should not be assumed stable unless otherwise specified. Major releases should be assumed incompatible. Nevertheless, the external interfaces of contracts will remain compatible if they are standardized, or if the maintainers judge that changing them would cause significant strain on the ecosystem. An important aspect that major releases may break is \"upgrade compatibility\", in particular storage layout compatibility. It will never be safe for a live contract to upgrade from one major release to another. Minor and patch updates always preserve storage layout compatibility. This means that a live contract can be upgraded from one minor to another without corrupting the storage layout. In some cases it may be necessary to initialize new state variables when upgrading, although we expect this to be infrequent. We recommend using OpenZeppelin Upgrades Plugins or CLI to ensure storage layout safety of upgrades. The minimum Solidity version required to compile the contracts will remain unchanged in minor and patch updates. New contracts introduced in minor releases may make use of newer Solidity features and require a more recent version of the compiler. ← Using with Upgrades Access Control →","title":"Backwards Compatibility","component":"contracts","version":"5.x","name":"backwards-compatibility","url":"/contracts/5.x/backwards-compatibility.html","titles":[{"text":"API","hash":"api","id":1},{"text":"Security","hash":"security","id":2},{"text":"Draft or Pre-Final ERCs","hash":"draft_or_pre_final_ercs","id":3},{"text":"Virtual & Overrides","hash":"virtual_overrides","id":4},{"text":"Structs","hash":"structs","id":5},{"text":"Errors","hash":"errors","id":6},{"text":"Major Releases","hash":"major_releases","id":7},{"text":"Storage Layout","hash":"storage_layout","id":8},{"text":"Solidity Version","hash":"solidity_version","id":9}]},"4":{"id":4,"text":"All crowdsale-related contracts were removed from the OpenZeppelin Contracts library on the v3.0.0 release due to both a decline in their usage and the complexity associated with migrating them to Solidity v0.6. They are however still available on the v2.5 release of OpenZeppelin Contracts, which you can install by running: $ npm install @openzeppelin/contracts@v2.5 Refer to the v2.x documentation when working with them.","title":"Crowdsales","component":"contracts","version":"5.x","name":"crowdsales","url":"/contracts/5.x/crowdsales.html","titles":[]},"5":{"id":5,"text":"All draft contracts were either moved into a different directory or removed from the OpenZeppelin Contracts library on the v3.0.0 release. ERC20Migrator: removed. ERC20Snapshot: moved to token/ERC20. ERC20Detailed and ERC1046: removed. TokenVesting: removed. Pending a replacement that is being discussed in #1214. Counters: moved to utils. Strings: moved to utils. SignedSafeMath: moved to utils. Removed contracts are still available on the v2.5 release of OpenZeppelin Contracts, which you can install by running: $ npm install @openzeppelin/contracts@v2.5 Refer to the v2.x documentation when working with them.","title":"Drafts","component":"contracts","version":"5.x","name":"drafts","url":"/contracts/5.x/drafts.html","titles":[]},"6":{"id":6,"text":"ERC-1155 is a novel token standard that aims to take the best from previous standards to create a fungibility-agnostic and gas-efficient token contract. ERC-1155 draws ideas from all of ERC-20, ERC-721, and ERC-777. If you’re unfamiliar with those standards, head to their guides before moving on. The distinctive feature of ERC-1155 is that it uses a single smart contract to represent multiple tokens at once. This is why its balanceOf function differs from ERC-20’s and ERC-777’s: it has an additional id argument for the identifier of the token that you want to query the balance of. This is similar to how ERC-721 does things, but in that standard a token id has no concept of balance: each token is non-fungible and exists or doesn’t. The ERC-721 balanceOf function refers to how many different tokens an account has, not how many of each. On the other hand, in ERC-1155 accounts have a distinct balance for each token id, and non-fungible tokens are implemented by simply minting a single one of them. This approach leads to massive gas savings for projects that require multiple tokens. Instead of deploying a new contract for each token type, a single ERC-1155 token contract can hold the entire system state, reducing deployment costs and complexity. Because all state is held in a single contract, it is possible to operate over multiple tokens in a single transaction very efficiently. The standard provides two functions, balanceOfBatch and safeBatchTransferFrom, that make querying multiple balances and transferring multiple tokens simpler and less gas-intensive. In the spirit of the standard, we’ve also included batch operations in the non-standard functions, such as _mintBatch. We’ll use ERC-1155 to track multiple items in our game, which will each have their own unique attributes. We mint all items to the deployer of the contract, which we can later transfer to players. Players are free to keep their tokens or trade them with other people as they see fit, as they would any other asset on the blockchain! For simplicity, we will mint all items in the constructor, but you could add minting functionality to the contract to mint on demand to players. For an overview of minting mechanisms, check out Creating ERC-20 Supply. Here’s what a contract for tokenized items might look like: // contracts/GameItems.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\"; contract GameItems is ERC1155 { uint256 public constant GOLD = 0; uint256 public constant SILVER = 1; uint256 public constant THORS_HAMMER = 2; uint256 public constant SWORD = 3; uint256 public constant SHIELD = 4; constructor() ERC1155(\"https://game.example/api/item/{id}.json\") { _mint(msg.sender, GOLD, 10 ** 18, \"\"); _mint(msg.sender, SILVER, 10 ** 27, \"\"); _mint(msg.sender, THORS_HAMMER, 1, \"\"); _mint(msg.sender, SWORD, 10 ** 9, \"\"); _mint(msg.sender, SHIELD, 10 ** 9, \"\"); } } Note that for our Game Items, Gold is a fungible token whilst Thor’s Hammer is a non-fungible token as we minted only one. The ERC1155 contract includes the optional extension IERC1155MetadataURI. That’s where the uri function comes from: we use it to retrieve the metadata uri. Also note that, unlike ERC-20, ERC-1155 lacks a decimals field, since each token is distinct and cannot be partitioned. Once deployed, we will be able to query the deployer’s balance: > gameItems.balanceOf(deployerAddress,3) 1000000000 We can transfer items to player accounts: > gameItems.safeTransferFrom(deployerAddress, playerAddress, 2, 1, \"0x0\") > gameItems.balanceOf(playerAddress, 2) 1 > gameItems.balanceOf(deployerAddress, 2) 0 We can also batch transfer items to player accounts and get the balance of batches: > gameItems.safeBatchTransferFrom(deployerAddress, playerAddress, [0,1,3,4], [50,100,1,1], \"0x0\") > gameItems.balanceOfBatch([playerAddress,playerAddress,playerAddress,playerAddress,playerAddress], [0,1,2,3,4]) [50,100,1,1,1] The metadata uri can be obtained: > gameItems.uri(2) \"https://game.example/api/item/{id}.json\" The uri can include the string {id} which clients must replace with the actual token ID, in lowercase hexadecimal (with no 0x prefix) and leading zero padded to 64 hex characters. For token ID 2 and uri https://game.example/api/item/{id}.json clients would replace {id} with 0000000000000000000000000000000000000000000000000000000000000002 to retrieve JSON at https://game.example/api/item/0000000000000000000000000000000000000000000000000000000000000002.json. The JSON document for token ID 2 might look something like: { \"name\": \"Thor's hammer\", \"description\": \"Mjölnir, the legendary hammer of the Norse god of thunder.\", \"image\": \"https://game.example/item-id-8u5h2m.png\", \"strength\": 20 } For more information about the metadata JSON Schema, check out the ERC-1155 Metadata URI JSON Schema. You’ll notice that the item’s information is included in the metadata, but that information isn’t on-chain! So a game developer could change the underlying metadata, changing the rules of the game! If you’d like to put all item information on-chain, you can extend ERC-721 to do so (though it will be rather costly) by providing a Base64 Data URI with the JSON schema encoded. You could also leverage IPFS to store the URI information, but these techniques are out of the scope of this overview guide A key difference when using safeTransferFrom is that token transfers to other contracts may revert with the following custom error: ERC1155InvalidReceiver(\"\") This is a good thing! It means that the recipient contract has not registered itself as aware of the ERC-1155 protocol, so transfers to it are disabled to prevent tokens from being locked forever. As an example, the Golem contract currently holds over 350k GNT tokens, worth multiple tens of thousands of dollars, and lacks methods to get them out of there. This has happened to virtually every ERC20-backed project, usually due to user error. In order for our contract to receive ERC-1155 tokens we can inherit from the convenience contract ERC1155Holder which handles the registering for us. Though we need to remember to implement functionality to allow tokens to be transferred out of our contract: // contracts/MyERC115HolderContract.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC1155Holder} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\"; contract MyERC115HolderContract is ERC1155Holder {} We can also implement more complex scenarios using the onERC1155Received and onERC1155BatchReceived functions. ← ERC-721 ERC-4626 →","title":"ERC-1155","component":"contracts","version":"5.x","name":"erc1155","url":"/contracts/5.x/erc1155.html","titles":[{"text":"Multi Token Standard","hash":"multi-token-standard","id":1},{"text":"Batch Operations","hash":"batch-operations","id":2},{"text":"Constructing an ERC-1155 Token Contract","hash":"constructing_an_erc_1155_token_contract","id":3},{"text":"Sending Tokens to Contracts","hash":"sending-to-contracts","id":4}]},"7":{"id":7,"text":"In this guide, you will learn how to create an ERC-20 token with a custom supply mechanism. We will showcase two idiomatic ways to use OpenZeppelin Contracts for this purpose that you will be able to apply to your smart contract development practice. The standard interface implemented by tokens built on Ethereum is called ERC-20, and Contracts includes a widely used implementation of it: the aptly named ERC20 contract. This contract, like the standard itself, is quite simple and bare-bones. In fact, if you try to deploy an instance of ERC20 as-is it will be quite literally useless…​ it will have no supply! What use is a token with no supply? The way that supply is created is not defined in the ERC-20 document. Every token is free to experiment with its own mechanisms, ranging from the most decentralized to the most centralized, from the most naive to the most researched, and more. Let’s say we want a token with a fixed supply of 1000, initially allocated to the account that deploys the contract. If you’ve used Contracts v1, you may have written code like the following: contract ERC20FixedSupply is ERC20 { constructor() { totalSupply += 1000; balances[msg.sender] += 1000; } } Starting with Contracts v2, this pattern is not only discouraged, but disallowed. The variables totalSupply and balances are now private implementation details of ERC20, and you can’t directly write to them. Instead, there is an internal _mint function that will do exactly this: contract ERC20FixedSupply is ERC20 { constructor() ERC20(\"Fixed\", \"FIX\") { _mint(msg.sender, 1000); } } Encapsulating state like this makes it safer to extend contracts. For instance, in the first example we had to manually keep the totalSupply in sync with the modified balances, which is easy to forget. In fact, we omitted something else that is also easily forgotten: the Transfer event that is required by the standard, and which is relied on by some clients. The second example does not have this bug, because the internal _mint function takes care of it. The internal _mint function is the key building block that allows us to write ERC-20 extensions that implement a supply mechanism. The mechanism we will implement is a token reward for the miners that produce Ethereum blocks. In Solidity, we can access the address of the current block’s miner in the global variable block.coinbase. We will mint a token reward to this address whenever someone calls the function mintMinerReward() on our token. The mechanism may sound silly, but you never know what kind of dynamic this might result in, and it’s worth analyzing and experimenting with! contract ERC20WithMinerReward is ERC20 { constructor() ERC20(\"Reward\", \"RWD\") {} function mintMinerReward() public { _mint(block.coinbase, 1000); } } As we can see, _mint makes it super easy to do this correctly. So far our supply mechanism was triggered manually, but ERC20 also allows us to extend the core functionality of the token through the _update function. Adding to the supply mechanism from the previous section, we can use this function to mint a miner reward for every token transfer that is included in the blockchain. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract ERC20WithAutoMinerReward is ERC20 { constructor() ERC20(\"Reward\", \"RWD\") { _mintMinerReward(); } function _mintMinerReward() internal { _mint(block.coinbase, 1000); } function _update(address from, address to, uint256 value) internal virtual override { if (!(from == address(0) && to == block.coinbase)) { _mintMinerReward(); } super._update(from, to, value); } } We’ve seen how to implement a ERC-20 supply mechanism: internally through _mint. Hopefully this has helped you understand how to use OpenZeppelin Contracts and some of the design principles behind it, and you can apply them to your own smart contracts. ← ERC-20 ERC-721 →","title":"Creating ERC-20 Supply","component":"contracts","version":"5.x","name":"erc20-supply","url":"/contracts/5.x/erc20-supply.html","titles":[{"text":"Fixed Supply","hash":"fixed-supply","id":1},{"text":"Rewarding Miners","hash":"rewarding-miners","id":2},{"text":"Automating the Reward","hash":"automating-the-reward","id":3},{"text":"Wrapping Up","hash":"wrapping-up","id":4}]},"8":{"id":8,"text":"An ERC-20 token contract keeps track of fungible tokens: any one token is exactly equal to any other token; no tokens have special rights or behavior associated with them. This makes ERC-20 tokens useful for things like a medium of exchange currency, voting rights, staking, and more. OpenZeppelin Contracts provides many ERC20-related contracts. On the API reference you’ll find detailed information on their properties and usage. Using Contracts, we can easily create our own ERC-20 token contract, which will be used to track Gold (GLD), an internal currency in a hypothetical game. Here’s what our GLD token might look like. // contracts/GLDToken.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; contract GLDToken is ERC20 { constructor(uint256 initialSupply) ERC20(\"Gold\", \"GLD\") { _mint(msg.sender, initialSupply); } } Our contracts are often used via inheritance, and here we’re reusing ERC20 for both the basic standard implementation and the name, symbol, and decimals optional extensions. Additionally, we’re creating an initialSupply of tokens, which will be assigned to the address that deploys the contract. For a more complete discussion of ERC-20 supply mechanisms, see Creating ERC-20 Supply. That’s it! Once deployed, we will be able to query the deployer’s balance: > GLDToken.balanceOf(deployerAddress) 1000000000000000000000 We can also transfer these tokens to other accounts: > GLDToken.transfer(otherAddress, 300000000000000000000) > GLDToken.balanceOf(otherAddress) 300000000000000000000 > GLDToken.balanceOf(deployerAddress) 700000000000000000000 Often, you’ll want to be able to divide your tokens into arbitrary amounts: say, if you own 5 GLD, you may want to send 1.5 GLD to a friend, and keep 3.5 GLD to yourself. Unfortunately, Solidity and the EVM do not support this behavior: only integer (whole) numbers can be used, which poses an issue. You may send 1 or 2 tokens, but not 1.5. To work around this, ERC20 provides a decimals field, which is used to specify how many decimal places a token has. To be able to transfer 1.5 GLD, decimals must be at least 1, since that number has a single decimal place. How can this be achieved? It’s actually very simple: a token contract can use larger integer values, so that a balance of 50 will represent 5 GLD, a transfer of 15 will correspond to 1.5 GLD being sent, and so on. It is important to understand that decimals is only used for display purposes. All arithmetic inside the contract is still performed on integers, and it is the different user interfaces (wallets, exchanges, etc.) that must adjust the displayed values according to decimals. The total token supply and balance of each account are not specified in GLD: you need to divide by 10 ** decimals to get the actual GLD amount. You’ll probably want to use a decimals value of 18, just like Ether and most ERC-20 token contracts in use, unless you have a very special reason not to. When minting tokens or transferring them around, you will be actually sending the number num GLD * (10 ** decimals). By default, ERC20 uses a value of 18 for decimals. To use a different value, you will need to override the decimals() function in your contract. function decimals() public view virtual override returns (uint8) { return 16; } So if you want to send 5 tokens using a token contract with 18 decimals, the method to call will actually be: transfer(recipient, 5 * (10 ** 18)); ← Tokens Creating Supply →","title":"ERC-20","component":"contracts","version":"5.x","name":"erc20","url":"/contracts/5.x/erc20.html","titles":[{"text":"Constructing an ERC-20 Token Contract","hash":"constructing-an-erc20-token-contract","id":1},{"text":"A Note on decimals","hash":"a-note-on-decimals","id":2}]},"9":{"id":9,"text":"ERC-4626 is an extension of ERC-20 that proposes a standard interface for token vaults. This standard interface can be used by widely different contracts (including lending markets, aggregators, and intrinsically interest bearing tokens), which brings a number of subtleties. Navigating these potential issues is essential to implementing a compliant and composable token vault. We provide a base implementation of ERC-4626 that includes a simple vault. This contract is designed in a way that allows developers to easily re-configure the vault’s behavior, with minimal overrides, while staying compliant. In this guide, we will discuss some security considerations that affect ERC-4626. We will also discuss common customizations of the vault. In exchange for the assets deposited into an ERC-4626 vault, a user receives shares. These shares can later be burned to redeem the corresponding underlying assets. The number of shares a user gets depends on the amount of assets they put in and on the exchange rate of the vault. This exchange rate is defined by the current liquidity held by the vault. If a vault has 100 tokens to back 200 shares, then each share is worth 0.5 assets. If a vault has 200 tokens to back 100 shares, then each share is worth 2.0 assets. In other words, the exchange rate can be defined as the slope of the line that passes through the origin and the current number of assets and shares in the vault. Deposits and withdrawals move the vault in this line. When plotted in log-log scale, the rate is defined similarly, but appears differently (because the point (0,0) is infinitely far away). Rates are represented by \"diagonal\" lines with different offsets. In such a representation, widely different rates can be clearly visible in the same graph. This wouldn’t be the case in linear scale. When depositing tokens, the number of shares a user gets is rounded towards zero. This rounding takes away value from the user in favor or the vault (i.e. in favor of all the current share holders). This rounding is often negligible because of the amount at stake. If you deposit 1e9 shares worth of tokens, the rounding will have you lose at most 0.0000001% of your deposit. However if you deposit 10 shares worth of tokens, you could lose 10% of your deposit. Even worse, if you deposit 0 && recipient != address(this)) { SafeERC20.safeTransfer(IERC20(asset()), recipient, fee); } } /// @dev Send exit fee to {_exitFeeRecipient}. See {IERC4626-_deposit}. function _withdraw( address caller, address receiver, address owner, uint256 assets, uint256 shares ) internal virtual override { uint256 fee = _feeOnRaw(assets, _exitFeeBasisPoints()); address recipient = _exitFeeRecipient(); super._withdraw(caller, receiver, owner, assets, shares); if (fee > 0 && recipient != address(this)) { SafeERC20.safeTransfer(IERC20(asset()), recipient, fee); } } // === Fee configuration === function _entryFeeBasisPoints() internal view virtual returns (uint256) { return 0; // replace with e.g. 100 for 1% } function _exitFeeBasisPoints() internal view virtual returns (uint256) { return 0; // replace with e.g. 100 for 1% } function _entryFeeRecipient() internal view virtual returns (address) { return address(0); // replace with e.g. a treasury address } function _exitFeeRecipient() internal view virtual returns (address) { return address(0); // replace with e.g. a treasury address } // === Fee operations === /// @dev Calculates the fees that should be added to an amount `assets` that does not already include fees. /// Used in {IERC4626-mint} and {IERC4626-withdraw} operations. function _feeOnRaw(uint256 assets, uint256 feeBasisPoints) private pure returns (uint256) { return assets.mulDiv(feeBasisPoints, _BASIS_POINT_SCALE, Math.Rounding.Ceil); } /// @dev Calculates the fee part of an amount `assets` that already includes fees. /// Used in {IERC4626-deposit} and {IERC4626-redeem} operations. function _feeOnTotal(uint256 assets, uint256 feeBasisPoints) private pure returns (uint256) { return assets.mulDiv(feeBasisPoints, feeBasisPoints + _BASIS_POINT_SCALE, Math.Rounding.Ceil); } } ← ERC-1155 Governance →","title":"ERC-4626","component":"contracts","version":"5.x","name":"erc4626","url":"/contracts/5.x/erc4626.html","titles":[{"text":"Security concern: Inflation attack","hash":"inflation-attack","id":1},{"text":"Visualizing the vault","hash":"visualizing_the_vault","id":2},{"text":"The attack","hash":"the_attack","id":3},{"text":"Defending with a virtual offset","hash":"defending_with_a_virtual_offset","id":4},{"text":"Custom behavior: Adding fees to the vault","hash":"fees","id":5}]},"10":{"id":10,"text":"We’ve discussed how you can make a fungible token using ERC-20, but what if not all tokens are alike? This comes up in situations like real estate, voting rights, or collectibles, where some items are valued more than others, due to their usefulness, rarity, etc. ERC-721 is a standard for representing ownership of non-fungible tokens, that is, where each token is unique. ERC-721 is a more complex standard than ERC-20, with multiple optional extensions, and is split across a number of contracts. The OpenZeppelin Contracts provide flexibility regarding how these are combined, along with custom useful extensions. Check out the API Reference to learn more about these. We’ll use ERC-721 to track items in our game, which will each have their own unique attributes. Whenever one is to be awarded to a player, it will be minted and sent to them. Players are free to keep their token or trade it with other people as they see fit, as they would any other asset on the blockchain! Please note any account can call awardItem to mint items. To restrict what accounts can mint items we can add Access Control. Here’s what a contract for tokenized items might look like: // contracts/GameItem.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC721URIStorage, ERC721} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\"; contract GameItem is ERC721URIStorage { uint256 private _nextTokenId; constructor() ERC721(\"GameItem\", \"ITM\") {} function awardItem(address player, string memory tokenURI) public returns (uint256) { uint256 tokenId = _nextTokenId++; _mint(player, tokenId); _setTokenURI(tokenId, tokenURI); return tokenId; } } The ERC721URIStorage contract is an implementation of ERC-721 that includes the metadata standard extensions (IERC721Metadata) as well as a mechanism for per-token metadata. That’s where the _setTokenURI method comes from: we use it to store an item’s metadata. Also note that, unlike ERC-20, ERC-721 lacks a decimals field, since each token is distinct and cannot be partitioned. New items can be created: > gameItem.awardItem(playerAddress, \"https://game.example/item-id-8u5h2m.json\") Transaction successful. Transaction hash: 0x... Events emitted: - Transfer(0x0000000000000000000000000000000000000000, playerAddress, 7) And the owner and metadata of each item queried: > gameItem.ownerOf(7) playerAddress > gameItem.tokenURI(7) \"https://game.example/item-id-8u5h2m.json\" This tokenURI should resolve to a JSON document that might look something like: { \"name\": \"Thor's hammer\", \"description\": \"Mjölnir, the legendary hammer of the Norse god of thunder.\", \"image\": \"https://game.example/item-id-8u5h2m.png\", \"strength\": 20 } For more information about the tokenURI metadata JSON Schema, check out the ERC-721 specification. You’ll notice that the item’s information is included in the metadata, but that information isn’t on-chain! So a game developer could change the underlying metadata, changing the rules of the game! If you’d like to put all item information on-chain, you can extend ERC-721 to do so (though it will be rather costly) by providing a Base64 Data URI with the JSON schema encoded. You could also leverage IPFS to store the tokenURI information, but these techniques are out of the scope of this overview guide. ← Creating Supply ERC-1155 →","title":"ERC-721","component":"contracts","version":"5.x","name":"erc721","url":"/contracts/5.x/erc721.html","titles":[{"text":"Constructing an ERC-721 Token Contract","hash":"constructing_an_erc_721_token_contract","id":1}]},"11":{"id":11,"text":"The ERC-7579 is a proposal for standardizing smart accounts and modules to ensure interoperability across implementations. The standard defines a set of interfaces for smart accounts that enable developers to delegate logic to third-party smart contracts (or modules). Modules are categorized in the following 4 types: Validators: Modules to which the smart account delegates the validation of an UserOperation. Executors: Contracts that are allowed to execute calls on behalf of the smart account. Fallback Handler: A module that extends the fallback function of a smart account. Hooks: Contracts that receive a call before and after the execution of a smart account. OpenZeppelin provides an implementation of an AccountERC7579 that extends from our AccountBase contract and is compliant with this standard. The account includes support for single or batched calls as well as delegatecall. As for modules, it supports installing Validators, Executors and Fallback Handlers, whereas Hooks can be added as an extension with AccountERC7579Hooked Considering accounts should be deployed by a factory, setting up a modular ERC-7579 account requires an initializer (e.g. setUp) function. This function should be called by the factory when the account is deployed and should install a module: // contracts/MyModularAccount.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {Initializable} from \"@openzeppelin/contracts/proxy/utils/Initializable.sol\"; import {AccountERC7579} from \"@openzeppelin/contracts/account/draft-AccountERC7579.sol\"; contract MyModularAccount is AccountERC7579 { // Make the account initializable and install a validator module function setUp(uint256 moduleTypeId, address module, bytes memory moduleInitData) public initializer { _installModule(moduleTypeId, module, moduleInitData); } } The account developers must make sure the validator installed is enough to operate the account. Otherwise, the account might be unusable after deployment. The AccountERC7579 comes with built-in support for Validators, Executors and Fallback Handlers. They can be installed right away into the account ← Account Abstraction Tokens →","title":"ERC-7579","component":"contracts","version":"5.x","name":"erc7579","url":"/contracts/5.x/erc7579.html","titles":[{"text":"Setting up an ERC-7579 Account","hash":"setting_up_an_erc_7579_account","id":1},{"text":"Installing modules","hash":"installing_modules","id":2},{"text":"Supporting hooks","hash":"supporting_hooks","id":3}]},"12":{"id":12,"text":"Most of the OpenZeppelin Contracts are expected to be used via inheritance: you will inherit from them when writing your own contracts. This is the commonly found is syntax, like in contract MyToken is ERC20. Unlike contracts, Solidity librarys are not inherited from and instead rely on the using for syntax. OpenZeppelin Contracts has some librarys: most are in the Utils directory. Inheritance is often used to add the parent contract’s functionality to your own contract, but that’s not all it can do. You can also change how some parts of the parent behave using overrides. For example, imagine you want to change AccessControl so that revokeRole can no longer be called. This can be achieved using overrides: // contracts/AccessControlModified.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\"; contract AccessControlModified is AccessControl { error AccessControlNonRevokable(); // Override the revokeRole function function revokeRole(bytes32, address) public pure override { revert AccessControlNonRevokable(); } } The old revokeRole is then replaced by our override, and any calls to it will immediately revert. We cannot remove the function from the contract, but reverting on all calls is good enough. Sometimes you want to extend a parent’s behavior, instead of outright changing it to something else. This is where super comes in. The super keyword will let you call functions defined in a parent contract, even if they are overridden. This mechanism can be used to add additional checks to a function, emit events, or otherwise add functionality as you see fit. For more information on how overrides work, head over to the official Solidity documentation. Here is a modified version of AccessControl where revokeRole cannot be used to revoke the DEFAULT_ADMIN_ROLE: Unresolved include directive in modules/ROOT/pages/extending-contracts.adoc - include::api:example$access-control/AccessControlNonRevokableAdmin.sol[] The super.revokeRole statement at the end will invoke AccessControl's original version of revokeRole, the same code that would’ve run if there were no overrides in place. The same rule is implemented and extended in AccessControlDefaultAdminRules, an extension that also adds enforced security measures for the DEFAULT_ADMIN_ROLE. The maintainers of OpenZeppelin Contracts are mainly concerned with the correctness and security of the code as published in the library, and the combinations of base contracts with the official extensions from the library. Custom overrides, and those of hooks in particular, may break some important assumptions and introduce vulnerabilities in otherwise secure code. While we try to ensure the contracts remain secure in the face of a wide range of potential customizations, this is done in a best-effort manner. While we try to document all important assumptions, this should not be relied upon. Custom overrides should be carefully reviewed and checked against the source code of the contract they are customizing so as to fully understand their impact and guarantee their security. The way functions interact internally should not be assumed to stay stable across releases of the library. For example, a function that is used in one context in a particular release may not be used in the same context in the next release. Contracts that override functions should revalidate their assumptions when updating the version of OpenZeppelin Contracts they are built on. ← Wizard Using with Upgrades →","title":"Extending Contracts","component":"contracts","version":"5.x","name":"extending-contracts","url":"/contracts/5.x/extending-contracts.html","titles":[{"text":"Overriding","hash":"overriding","id":1},{"text":"Calling super","hash":"calling_super","id":2},{"text":"Security","hash":"security","id":3}]},"13":{"id":13,"text":"When calling external addresses from your contract it is unsafe to assume that an address is an externally-owned account (EOA) and not a contract. Attempting to prevent calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract constructor. Although checking that the address has code, address.code.length > 0, may seem to differentiate contracts from EOAs, it can only say that an address is currently a contract, and its negation (that an address is not currently a contract) does not imply that the address is an EOA. Some counterexamples are: address of a contract in construction address where a contract will be created address where a contract lived, but was destroyed Furthermore, an address will be considered a contract within the same transaction where it is scheduled for destruction by SELFDESTRUCT, which only has an effect at the end of the entire transaction. ← Subgraphs Access →","title":"Frequently Asked Questions","component":"contracts","version":"5.x","name":"faq","url":"/contracts/5.x/faq.html","titles":[{"text":"Can I restrict a function to EOAs only?","hash":"can_i_restrict_a_function_to_eoas_only","id":1}]},"14":{"id":14,"text":"In this guide we will learn how OpenZeppelin’s Governor contract works, how to set it up, and how to use it to create proposals, vote for them, and execute them, using tools provided by Ethers.js and Tally. Find detailed contract documentation at Governance API. Decentralized protocols are in constant evolution from the moment they are publicly released. Often, the initial team retains control of this evolution in the first stages, but eventually delegates it to a community of stakeholders. The process by which this community makes decisions is called on-chain governance, and it has become a central component of decentralized protocols, fueling varied decisions such as parameter tweaking, smart contract upgrades, integrations with other protocols, treasury management, grants, etc. This governance protocol is generally implemented in a special-purpose contract called “Governor”. The GovernorAlpha and GovernorBravo contracts designed by Compound have been very successful and popular so far, with the downside that projects with different requirements have had to fork the code to customize it for their needs, which can pose a high risk of introducing security issues. For OpenZeppelin Contracts, we set out to build a modular system of Governor contracts so that forking is not needed, and different requirements can be accommodated by writing small modules using Solidity inheritance. You will find the most common requirements out of the box in OpenZeppelin Contracts, but writing additional ones is simple, and we will be adding new features as requested by the community in future releases. Additionally, the design of OpenZeppelin Governor requires minimal use of storage and results in more gas efficient operation. OpenZeppelin’s Governor system was designed with a concern for compatibility with existing systems that were based on Compound’s GovernorAlpha and GovernorBravo. Because of this, you will find that many modules are presented in two variants, one of which is built for compatibility with those systems. The ERC-20 extension to keep track of votes and vote delegation is one such case. The shorter one is the more generic version because it can support token supplies greater than 2^96, while the “Comp” variant is limited in that regard, but exactly fits the interface of the COMP token that is used by GovernorAlpha and Bravo. Both contract variants share the same events, so they are fully compatible when looking at events only. An OpenZeppelin Governor contract is not interface-compatible with Compound’s GovernorAlpha or Bravo. Even though events are fully compatible, proposal lifecycle functions (creation, execution, etc.) have different signatures that are meant to optimize storage use. Other functions from GovernorAlpha and Bravo are likewise not available. It’s possible to opt in some Bravo-like behavior by inheriting from the GovernorStorage module. This module provides proposal enumerability and alternate versions of the queue, execute and cancel function that only take the proposal id. This module reduces the calldata needed by some operations in exchange for an increased the storage footprint. This might be a good trade-off for some L2 chains. It also provides primitives for indexer-free frontends. Note that even with the use of this module, one important difference with Compound’s GovernorBravo is the way that `proposalId`s are calculated. Governor uses the hash of the proposal parameters with the purpose of keeping its data off-chain by event indexing, while the original Bravo implementation uses sequential `proposalId`s. When using a timelock with your Governor contract, you can use either OpenZeppelin’s TimelockController or Compound’s Timelock. Based on the choice of timelock, you should choose the corresponding Governor module: GovernorTimelockControl or GovernorTimelockCompound respectively. This allows you to migrate an existing GovernorAlpha instance to an OpenZeppelin-based Governor without changing the timelock in use. Tally is a full-fledged application for user owned on-chain governance. It comprises a voting dashboard, proposal creation wizard, real time research and analysis, and educational content. For all of these options, the Governor will be compatible with Tally: users will be able to create proposals, see voting periods and delays following IERC6372, visualize voting power and advocates, navigate proposals, and cast votes. For proposal creation in particular, projects can also use Defender Transaction Proposals as an alternative interface. In the rest of this guide, we will focus on a fresh deploy of the vanilla OpenZeppelin Governor features without concern for compatibility with GovernorAlpha or Bravo. The voting power of each account in our governance setup will be determined by an ERC-20 token. The token has to implement the ERC20Votes extension. This extension will keep track of historical balances so that voting power is retrieved from past snapshots rather than current balance, which is an important protection that prevents double voting. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; import {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\"; import {ERC20Votes} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\"; import {Nonces} from \"@openzeppelin/contracts/utils/Nonces.sol\"; contract MyToken is ERC20, ERC20Permit, ERC20Votes { constructor() ERC20(\"MyToken\", \"MTK\") ERC20Permit(\"MyToken\") {} // The functions below are overrides required by Solidity. function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) { super._update(from, to, amount); } function nonces(address owner) public view virtual override(ERC20Permit, Nonces) returns (uint256) { return super.nonces(owner); } } If your project already has a live token that does not include ERC20Votes and is not upgradeable, you can wrap it in a governance token by using ERC20Wrapper. This will allow token holders to participate in governance by wrapping their tokens 1-to-1. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {IERC20, ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; import {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\"; import {ERC20Votes} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\"; import {ERC20Wrapper} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Wrapper.sol\"; import {Nonces} from \"@openzeppelin/contracts/utils/Nonces.sol\"; contract MyTokenWrapped is ERC20, ERC20Permit, ERC20Votes, ERC20Wrapper { constructor( IERC20 wrappedToken ) ERC20(\"MyTokenWrapped\", \"MTK\") ERC20Permit(\"MyTokenWrapped\") ERC20Wrapper(wrappedToken) {} // The functions below are overrides required by Solidity. function decimals() public view override(ERC20, ERC20Wrapper) returns (uint8) { return super.decimals(); } function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) { super._update(from, to, amount); } function nonces(address owner) public view virtual override(ERC20Permit, Nonces) returns (uint256) { return super.nonces(owner); } } The only other source of voting power available in OpenZeppelin Contracts currently is ERC721Votes. ERC-721 tokens that don’t provide this functionality can be wrapped into a voting tokens using a combination of ERC721Votes and ERC721Wrapper. The internal clock used by the token to store voting balances will dictate the operating mode of the Governor contract attached to it. By default, block numbers are used. Since v4.9, developers can override the IERC6372 clock to use timestamps instead of block numbers. Initially, we will build a Governor without a timelock. The core logic is given by the Governor contract, but we still need to choose: 1) how voting power is determined, 2) how many votes are needed for quorum, 3) what options people have when casting a vote and how those votes are counted, and 4) what type of token should be used to vote. Each of these aspects is customizable by writing your own module, or more easily choosing one from OpenZeppelin Contracts. For 1) we will use the GovernorVotes module, which hooks to an IVotes instance to determine the voting power of an account based on the token balance they hold when a proposal becomes active. This module requires as a constructor parameter the address of the token. This module also discovers the clock mode (ERC-6372) used by the token and applies it to the Governor. For 2) we will use GovernorVotesQuorumFraction which works together with ERC20Votes to define quorum as a percentage of the total supply at the block a proposal’s voting power is retrieved. This requires a constructor parameter to set the percentage. Most Governors nowadays use 4%, so we will initialize the module with parameter 4 (this indicates the percentage, resulting in 4%). For 3) we will use GovernorCountingSimple, a module that offers 3 options to voters: For, Against, and Abstain, and where only For and Abstain votes are counted towards quorum. Besides these modules, Governor itself has some parameters we must set. votingDelay: How long after a proposal is created should voting power be fixed. A large voting delay gives users time to unstake tokens if necessary. votingPeriod: How long does a proposal remain open to votes. These parameters are specified in the unit defined in the token’s clock. Assuming the token uses block numbers, and assuming block time of around 12 seconds, we will have set votingDelay = 1 day = 7200 blocks, and votingPeriod = 1 week = 50400 blocks. We can optionally set a proposal threshold as well. This restricts proposal creation to accounts who have enough voting power. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {IGovernor, Governor} from \"@openzeppelin/contracts/governance/Governor.sol\"; import {GovernorCountingSimple} from \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\"; import {GovernorVotes} from \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\"; import {GovernorVotesQuorumFraction} from \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\"; import {GovernorTimelockControl} from \"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\"; import {TimelockController} from \"@openzeppelin/contracts/governance/TimelockController.sol\"; import {IVotes} from \"@openzeppelin/contracts/governance/utils/IVotes.sol\"; import {IERC165} from \"@openzeppelin/contracts/interfaces/IERC165.sol\"; contract MyGovernor is Governor, GovernorCountingSimple, GovernorVotes, GovernorVotesQuorumFraction, GovernorTimelockControl { constructor( IVotes _token, TimelockController _timelock ) Governor(\"MyGovernor\") GovernorVotes(_token) GovernorVotesQuorumFraction(4) GovernorTimelockControl(_timelock) {} function votingDelay() public pure override returns (uint256) { return 7200; // 1 day } function votingPeriod() public pure override returns (uint256) { return 50400; // 1 week } function proposalThreshold() public pure override returns (uint256) { return 0; } // The functions below are overrides required by Solidity. function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) { return super.state(proposalId); } function proposalNeedsQueuing( uint256 proposalId ) public view virtual override(Governor, GovernorTimelockControl) returns (bool) { return super.proposalNeedsQueuing(proposalId); } function _queueOperations( uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash ) internal override(Governor, GovernorTimelockControl) returns (uint48) { return super._queueOperations(proposalId, targets, values, calldatas, descriptionHash); } function _executeOperations( uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash ) internal override(Governor, GovernorTimelockControl) { super._executeOperations(proposalId, targets, values, calldatas, descriptionHash); } function _cancel( address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash ) internal override(Governor, GovernorTimelockControl) returns (uint256) { return super._cancel(targets, values, calldatas, descriptionHash); } function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) { return super._executor(); } } It is good practice to add a timelock to governance decisions. This allows users to exit the system if they disagree with a decision before it is executed. We will use OpenZeppelin’s TimelockController in combination with the GovernorTimelockControl module. When using a timelock, it is the timelock that will execute proposals and thus the timelock that should hold any funds, ownership, and access control roles. Before version 4.5 there was no way to recover funds in the Governor contract when using a timelock! Before version 4.3, when using the Compound Timelock, ETH in the timelock was not easily accessible. TimelockController uses an AccessControl setup that we need to understand in order to set up roles. The Proposer role is in charge of queueing operations: this is the role the Governor instance should be granted, and it should likely be the only proposer in the system. The Executor role is in charge of executing already available operations: we can assign this role to the special zero address to allow anyone to execute (if operations can be particularly time sensitive, the Governor should be made Executor instead). Lastly, there is the Admin role, which can grant and revoke the two previous roles: this is a very sensitive role that will be granted automatically to the timelock itself, and optionally to a second account, which can be used for ease of setup but should promptly renounce the role. Let’s walk through how to create and execute a proposal on our newly deployed Governor. A proposal is a sequence of actions that the Governor contract will perform if it passes. Each action consists of a target address, calldata encoding a function call, and an amount of ETH to include. Additionally, a proposal includes a human-readable description. Let’s say we want to create a proposal to give a team a grant, in the form of ERC-20 tokens from the governance treasury. This proposal will consist of a single action where the target is the ERC-20 token, calldata is the encoded function call transfer(, ), and with 0 ETH attached. Generally a proposal will be created with the help of an interface such as Tally or Defender Proposals. Here we will show how to create the proposal using Ethers.js. First we get all the parameters necessary for the proposal action. const tokenAddress = ...; const token = await ethers.getContractAt(‘ERC20’, tokenAddress); const teamAddress = ...; const grantAmount = ...; const transferCalldata = token.interface.encodeFunctionData(‘transfer’, [teamAddress, grantAmount]); Now we are ready to call the propose function of the Governor. Note that we don’t pass in one array of actions, but instead three arrays corresponding to the list of targets, the list of values, and the list of calldatas. In this case it’s a single action, so it’s simple: await governor.propose( [tokenAddress], [0], [transferCalldata], “Proposal #1: Give grant to team”, ); This will create a new proposal, with a proposal id that is obtained by hashing together the proposal data, and which will also be found in an event in the logs of the transaction. Once a proposal is active, delegates can cast their vote. Note that it is delegates who carry voting power: if a token holder wants to participate, they can set a trusted representative as their delegate, or they can become a delegate themselves by self-delegating their voting power. Votes are cast by interacting with the Governor contract through the castVote family of functions. Voters would generally invoke this from a governance UI such as Tally. Once the voting period is over, if quorum was reached (enough voting power participated) and the majority voted in favor, the proposal is considered successful and can proceed to be executed. Once a proposal passes, it can be queued and executed from the same place you voted. We will see now how to do this manually using Ethers.js. If a timelock was set up, the first step to execution is queueing. You will notice that both the queue and execute functions require passing in the entire proposal parameters, as opposed to just the proposal id. This is necessary because this data is not stored on chain, as a measure to save gas. Note that these parameters can always be found in the events emitted by the contract. The only parameter that is not sent in its entirety is the description, since this is only needed in its hashed form to compute the proposal id. To queue, we call the queue function: const descriptionHash = ethers.utils.id(“Proposal #1: Give grant to team”); await governor.queue( [tokenAddress], [0], [transferCalldata], descriptionHash, ); This will cause the Governor to interact with the timelock contract and queue the actions for execution after the required delay. After enough time has passed (according to the timelock parameters), the proposal can be executed. If there was no timelock to begin with, this step can be ran immediately after the proposal succeeds. await governor.execute( [tokenAddress], [0], [transferCalldata], descriptionHash, ); Executing the proposal will transfer the ERC-20 tokens to the chosen recipient. To wrap up: we set up a system where a treasury is controlled by the collective decision of the token holders of a project, and all actions are executed via proposals enforced by on-chain votes. It is sometimes difficult to deal with durations expressed in number of blocks because of inconsistent or unpredictable time between blocks. This is particularly true of some L2 networks where blocks are produced based on blockchain usage. Using number of blocks can also lead to the governance rules being affected by network upgrades that modify the expected time between blocks. The difficulty of replacing block numbers with timestamps is that the Governor and the token must both use the same format when querying past votes. If a token is designed around block numbers, it is not possible for a Governor to reliably do timestamp based lookups. Therefore, designing a timestamp based voting system starts with the token. Since v4.9, all voting contracts (including ERC20Votes and ERC721Votes) rely on IERC6372 for clock management. In order to change from operating with block numbers to operating with timestamps, all that is required is to override the clock() and CLOCK_MODE() functions. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; import {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\"; import {ERC20Votes} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\"; import {Nonces} from \"@openzeppelin/contracts/utils/Nonces.sol\"; contract MyTokenTimestampBased is ERC20, ERC20Permit, ERC20Votes { constructor() ERC20(\"MyTokenTimestampBased\", \"MTK\") ERC20Permit(\"MyTokenTimestampBased\") {} // Overrides IERC6372 functions to make the token & governor timestamp-based function clock() public view override returns (uint48) { return uint48(block.timestamp); } // solhint-disable-next-line func-name-mixedcase function CLOCK_MODE() public pure override returns (string memory) { return \"mode=timestamp\"; } // The functions below are overrides required by Solidity. function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) { super._update(from, to, amount); } function nonces(address owner) public view virtual override(ERC20Permit, Nonces) returns (uint256) { return super.nonces(owner); } } The Governor will automatically detect the clock mode used by the token and adapt to it. There is no need to override anything in the Governor contract. However, the clock mode does affect how some values are interpreted. It is therefore necessary to set the votingDelay() and votingPeriod() accordingly. // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {Governor} from \"@openzeppelin/contracts/governance/Governor.sol\"; import {GovernorCountingSimple} from \"@openzeppelin/contracts/governance/compatibility/GovernorCountingSimple.sol\"; import {GovernorVotes} from \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\"; import {GovernorVotesQuorumFraction} from \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\"; import {GovernorTimelockControl} from \"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\"; import {TimelockController} from \"@openzeppelin/contracts/governance/TimelockController.sol\"; import {IVotes} from \"@openzeppelin/contracts/governance/utils/IVotes.sol\"; contract MyGovernor is Governor, GovernorCountingSimple, GovernorVotes, GovernorVotesQuorumFraction, GovernorTimelockControl { constructor(IVotes _token, TimelockController _timelock) Governor(\"MyGovernor\") GovernorVotes(_token) GovernorVotesQuorumFraction(4) GovernorTimelockControl(_timelock) {} function votingDelay() public pure virtual override returns (uint256) { return 1 days; } function votingPeriod() public pure virtual override returns (uint256) { return 1 weeks; } function proposalThreshold() public pure virtual override returns (uint256) { return 0; } // ... } Timestamp based voting is a recent feature that was formalized in ERC-6372 and ERC-5805, and introduced in v4.9. At the time this feature is released, some governance tooling may not support it yet. Users can expect invalid reporting of deadlines & durations if the tool is not able to interpret the ERC6372 clock. This invalid reporting by offchain tools does not affect the onchain security and functionality of the governance contract. Governors with timestamp support (v4.9 and above) are compatible with old tokens (before v4.9) and will operate in \"block number\" mode (which is the mode all old tokens operate on). On the other hand, old Governor instances (before v4.9) are not compatible with new tokens operating using timestamps. If you update your token code to use timestamps, make sure to also update your Governor code. ← ERC-4626 Utilities →","title":"How to set up on-chain governance","component":"contracts","version":"5.x","name":"governance","url":"/contracts/5.x/governance.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Compatibility","hash":"compatibility","id":2},{"text":"ERC20Votes & ERC20VotesComp","hash":"erc20votes_erc20votescomp","id":3},{"text":"Governor & GovernorStorage","hash":"governor_governorstorage","id":4},{"text":"GovernorTimelockControl & GovernorTimelockCompound","hash":"governortimelockcontrol_governortimelockcompound","id":5},{"text":"Tally","hash":"tally","id":6},{"text":"Setup","hash":"setup","id":7},{"text":"Token","hash":"token","id":8},{"text":"Governor","hash":"governor","id":9},{"text":"Timelock","hash":"timelock","id":10},{"text":"Proposal Lifecycle","hash":"proposal_lifecycle","id":11},{"text":"Create a Proposal","hash":"create_a_proposal","id":12},{"text":"Cast a Vote","hash":"cast_a_vote","id":13},{"text":"Execute the Proposal","hash":"execute_the_proposal","id":14},{"text":"Timestamp based governance","hash":"timestamp_based_governance","id":15},{"text":"Motivation","hash":"motivation","id":16},{"text":"Token","hash":"token_2","id":17},{"text":"Governor","hash":"governor_2","id":18},{"text":"Disclaimer","hash":"disclaimer","id":19}]},"15":{"id":15,"text":"A library for secure smart contract development. Build on a solid foundation of community-vetted code. Implementations of standards like ERC20 and ERC721. Flexible role-based permissioning scheme. Reusable Solidity components to build custom contracts and complex decentralized systems. OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. For upgradeable contracts, the storage layout of different major versions should be assumed incompatible, for example, it is unsafe to upgrade from 4.9.3 to 5.0.0. Learn more at Backwards Compatibility. $ npm install @openzeppelin/contracts When installing via git, it is a common error to use the master branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the master branch does not guarantee. Foundry installs the latest version initially, but subsequent forge update commands will use the master branch. $ forge install OpenZeppelin/openzeppelin-contracts Add @openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/ in remappings.txt. Once installed, you can use the contracts in the library by importing them: // contracts/MyNFT.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; contract MyNFT is ERC721 { constructor() ERC721(\"MyNFT\", \"MNFT\") {} } If you’re new to smart contract development, head to Developing Smart Contracts to learn about creating a new project and compiling your contracts. To keep your system secure, you should always use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don’t need to worry about it needlessly increasing gas costs. Please report any security issues you find via our bug bounty program on Immunefi or directly to security@openzeppelin.org. The Security Center contains more details about the secure development process. The guides in the sidebar will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides: Access Control: decide who can perform each of the actions on your system. Tokens: create tradable assets or collectibles, like the well known ERC20 and ERC721 standards. Utilities: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems. The full API is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts' development in the community forum. Finally, you may want to take a look at the guides on our blog, which cover several common use cases and good practices. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve. The Hitchhiker’s Guide to Smart Contracts in Ethereum will help you get an overview of the various tools available for smart contract development, and help you set up your environment. A Gentle Introduction to Ethereum Programming, Part 1 provides very useful information on an introductory level, including many basic concepts from the Ethereum platform. For a more in-depth dive, you may read the guide Designing the architecture for your Ethereum application, which discusses how to better structure your application and its relationship to the real world. Wizard →","title":"Contracts","component":"contracts","version":"5.x","name":"index","url":"/contracts/5.x/index.html","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Installation","hash":"install","id":2},{"text":"Hardhat (npm)","hash":"hardhat_npm","id":3},{"text":"Foundry (git)","hash":"foundry_git","id":4},{"text":"Usage","hash":"usage","id":5},{"text":"Security","hash":"security","id":6},{"text":"Learn More","hash":"next-steps","id":7}]},"16":{"id":16,"text":"Ah, the \"token\": blockchain’s most powerful and most misunderstood tool. A token is a representation of something in the blockchain. This something can be money, time, services, shares in a company, a virtual pet, anything. By representing things as tokens, we can allow smart contracts to interact with them, exchange them, create or destroy them. Much of the confusion surrounding tokens comes from two concepts getting mixed up: token contracts and the actual tokens. A token contract is simply an Ethereum smart contract. \"Sending tokens\" actually means \"calling a method on a smart contract that someone wrote and deployed\". At the end of the day, a token contract is not much more than a mapping of addresses to balances, plus some methods to add and subtract from those balances. It is these balances that represent the tokens themselves. Someone \"has tokens\" when their balance in the token contract is non-zero. That’s it! These balances could be considered money, experience points in a game, deeds of ownership, or voting rights, and each of these tokens would be stored in different token contracts. Note that there’s a big difference between having two voting rights and two deeds of ownership: each vote is equal to all others, but houses usually are not! This is called fungibility. Fungible goods are equivalent and interchangeable, like Ether, fiat currencies, and voting rights. Non-fungible goods are unique and distinct, like deeds of ownership, or collectibles. In a nutshell, when dealing with non-fungibles (like your house) you care about which ones you have, while in fungible assets (like your bank account statement) what matters is how much you have. Even though the concept of a token is simple, they have a variety of complexities in the implementation. Because everything in Ethereum is just a smart contract, and there are no rules about what smart contracts have to do, the community has developed a variety of standards (called EIPs or ERCs) for documenting how a contract can interoperate with other contracts. You’ve probably heard of the ERC-20 or ERC-721 token standards, and that’s why you’re here. Head to our specialized guides to learn more about these: ERC-20: the most widespread token standard for fungible assets, albeit somewhat limited by its simplicity. ERC-721: the de-facto solution for non-fungible tokens, often used for collectibles and games. ERC-1155: a novel standard for multi-tokens, allowing for a single contract to represent multiple fungible and non-fungible tokens, along with batched operations for increased gas efficiency. ← ERC-7579 ERC-20 →","title":"Tokens","component":"contracts","version":"5.x","name":"tokens","url":"/contracts/5.x/tokens.html","titles":[{"text":"But First, Coffee a Primer on Token Contracts","hash":"but_first_coffee_a_primer_on_token_contracts","id":1},{"text":"Different Kinds of Tokens","hash":"different-kinds-of-tokens","id":2},{"text":"Standards","hash":"standards","id":3}]},"17":{"id":17,"text":"If your contract is going to be deployed with upgradeability, such as using the OpenZeppelin Upgrades Plugins, you will need to use the Upgradeable variant of OpenZeppelin Contracts. This variant is available as a separate package called @openzeppelin/contracts-upgradeable, which is hosted in the repository OpenZeppelin/openzeppelin-contracts-upgradeable. It uses @openzeppelin/contracts as a peer dependency. It follows all of the rules for Writing Upgradeable Contracts: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions. OpenZeppelin provides a full suite of tools for deploying and securing upgradeable smart contracts. Check out the full list of resources. $ npm install @openzeppelin/contracts-upgradeable @openzeppelin/contracts The Upgradeable package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix Upgradeable. -import {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; +import {ERC721Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\"; -contract MyCollectible is ERC721 { +contract MyCollectible is ERC721Upgradeable { Interfaces and libraries are not included in the Upgradeable package, but are instead imported from the main OpenZeppelin Contracts package. Constructors are replaced by internal initializer functions following the naming convention __{ContractName}_init. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend. - constructor() ERC721(\"MyCollectible\", \"MCO\") public { + function initialize() initializer public { + __ERC721_init(\"MyCollectible\", \"MCO\"); } Use with multiple inheritance requires special attention. See the section below titled Multiple Inheritance. Once this contract is set up and compiled, you can deploy it using the Upgrades Plugins. The following snippet shows an example deployment script using Hardhat. // scripts/deploy-my-collectible.js const { ethers, upgrades } = require(\"hardhat\"); async function main() { const MyCollectible = await ethers.getContractFactory(\"MyCollectible\"); const mc = await upgrades.deployProxy(MyCollectible); await mc.waitForDeployment(); console.log(\"MyCollectible deployed to:\", await mc.getAddress()); } main(); Initializer functions are not linearized by the compiler like constructors. Because of this, each __{ContractName}_init function embeds the linearized calls to all parent initializers. As a consequence, calling two of these init functions can potentially initialize the same contract twice. The function __{ContractName}_init_unchained found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins. You may notice that contracts use a struct with the @custom:storage-location erc7201: annotation to store the contract’s state variables. This follows the ERC-7201: Namespaced Storage Layout pattern, where each contract has its own storage layout in a namespace that is separate from other contracts in the inheritance chain. Without namespaced storage, it isn’t safe to simply add a state variable because it \"shifts down\" all of the state variables below in the inheritance chain. This makes the storage layouts incompatible, as explained in Writing Upgradeable Contracts. The namespaced storage pattern used in the Upgradeable package allows us to freely add new state variables in the future without compromising the storage compatibility with existing deployments. It also allows changing the inheritance order with no impact on the resulting storage layout, as long as all inherited contracts use namespaced storage. ← Extending Contracts Backwards Compatibility →","title":"Using with Upgrades","component":"contracts","version":"5.x","name":"upgradeable","url":"/contracts/5.x/upgradeable.html","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Installation","hash":"installation","id":2},{"text":"Usage","hash":"usage","id":3},{"text":"Further Notes","hash":"further_notes","id":4},{"text":"Multiple Inheritance","hash":"multiple-inheritance","id":5},{"text":"Namespaced Storage","hash":"namespaced_storage","id":6}]},"18":{"id":18,"text":"The OpenZeppelin Contracts provide a ton of useful utilities that you can use in your project. For a complete list, check out the API Reference. Here are some of the more popular ones. At a high level, signatures are a set of cryptographic algorithms that allow for a signer to prove himself owner of a private key used to authorize a piece of information (generally a transaction or UserOperation). Natively, the EVM supports the Elliptic Curve Digital Signature Algorithm (ECDSA) using the secp256k1 curve, however other signature algorithms such as P256 and RSA are supported. ECDSA provides functions for recovering and managing Ethereum account ECDSA signatures. These are often generated via web3.eth.sign, and are a 65 byte array (of type bytes in Solidity) arranged the following way: [[v (1)], [r (32)], [s (32)]]. The data signer can be recovered with ECDSA.recover, and its address compared to verify the signature. Most wallets will hash the data to sign and add the prefix \\x19Ethereum Signed Message:\\n, so when attempting to recover the signer of an Ethereum signed message hash, you’ll want to use toEthSignedMessageHash. using ECDSA for bytes32; using MessageHashUtils for bytes32; function _verify(bytes32 data, bytes memory signature, address account) internal pure returns (bool) { return data .toEthSignedMessageHash() .recover(signature) == account; } Getting signature verification right is not trivial: make sure you fully read and understand MessageHashUtils's and ECDSA's documentation. P256, also known as secp256r1, is one of the most used signature schemes. P256 signatures are standardized by the National Institute of Standards and Technology (NIST) and it’s widely available in consumer hardware and software. These signatures are different from regular Ethereum Signatures (secp256k1) in that they use a different elliptic curve to perform operations but have similar security guarantees. using P256 for bytes32; function _verify( bytes32 data, bytes32 r, bytes32 s, bytes32 qx, bytes32 qy ) internal pure returns (bool) { return data.verify(data, r, s, qx, qy); } By default, the verify function will try calling the (RIP-7212 precompile at address 0x100 and will fallback to an implementation in Solidity if not available. We encourage you to use verifyNative if you know the precompile is available on the chain you’re working on and on any other chain on which you intend to use the same bytecode in the future. In case of any doubts regarding the implementation roadmap of the native precompile P256 of potential future target chains, please consider using verifySolidity. using P256 for bytes32; function _verify( bytes32 data, bytes32 r, bytes32 s, bytes32 qx, bytes32 qy ) internal pure returns (bool) { // Will only call the precompile at address(0x100) return data.verifyNative(data, r, s, qx, qy); } The P256 library only allows for s values in the lower order of the curve (i.e. s ⇐ N/2) to prevent malleability. In case your tooling produces signatures in both sides of the curve, consider flipping the s value to keep compatibility. RSA a public-key cryptosystem that was popularized by corporate and governmental public key infrastructures (PKIs) and DNSSEC. This cryptosystem consists of using a private key that’s the product of 2 large prime numbers. The message is signed by applying a modular exponentiation to its hash (commonly SHA256), where both the exponent and modulus compose the public key of the signer. RSA signatures are known for being less efficient than elliptic curve signatures given the size of the keys, which are big compared to ECDSA keys with the same security level. Using plain RSA is considered unsafe, this is why the implementation uses the EMSA-PKCS1-v1_5 encoding method from RFC8017 to include padding to the signature. To verify a signature using RSA, you can leverage the RSA library that exposes a method for verifying RSA with the PKCS 1.5 standard: using RSA for bytes32; function _verify( bytes32 data, bytes memory signature, bytes memory e, bytes memory n ) internal pure returns (bool) { return data.pkcs1(signature, e, n); } Always use keys of at least 2048 bits. Additionally, be aware that PKCS#1 v1.5 allows for replayability due to the possibility of arbitrary optional parameters. To prevent replay attacks, consider including an onchain nonce or unique identifier in the message. Developers can build a Merkle Tree off-chain, which allows for verifying that an element (leaf) is part of a set by using a Merkle Proof. This technique is widely used for creating whitelists (e.g. for airdrops) and other advanced use cases. OpenZeppelin Contracts provides a JavaScript library for building trees off-chain and generating proofs. MerkleProof provides: verify - can prove that some value is part of a Merkle tree. multiProofVerify - can prove multiple values are part of a Merkle tree. For an on-chain Merkle Tree, see the MerkleTree library. In Solidity, it’s frequently helpful to know whether or not a contract supports an interface you’d like to use. ERC-165 is a standard that helps do runtime interface detection. Contracts provide helpers both for implementing ERC-165 in your contracts and querying other contracts: IERC165 — this is the ERC-165 interface that defines supportsInterface. When implementing ERC-165, you’ll conform to this interface. ERC165 — inherit this contract if you’d like to support interface detection using a lookup table in contract storage. You can register interfaces using _registerInterface(bytes4): check out example usage as part of the ERC-721 implementation. ERC165Checker — ERC165Checker simplifies the process of checking whether or not a contract supports an interface you care about. include with using ERC165Checker for address; myAddress._supportsInterface(bytes4) myAddress._supportsAllInterfaces(bytes4[]) contract MyContract { using ERC165Checker for address; bytes4 private InterfaceId_ERC721 = 0x80ac58cd; /** * @dev transfer an ERC-721 token from this contract to someone else */ function transferERC721( address token, address to, uint256 tokenId ) public { require(token.supportsInterface(InterfaceId_ERC721), \"IS_NOT_721_TOKEN\"); IERC721(token).transferFrom(address(this), to, tokenId); } } Although Solidity already provides math operators (i.e. +, -, etc.), Contracts includes Math; a set of utilities for dealing with mathematical operators, with support for extra operations (eg. average) and SignedMath; a library specialized in signed math operations. Include these contracts with using Math for uint256 or using SignedMath for int256 and then use their functions in your code: contract MyContract { using Math for uint256; using SignedMath for int256; function tryOperations(uint256 a, uint256 b) internal pure { (bool succeededAdd, uint256 resultAdd) = x.tryAdd(y); (bool succeededSub, uint256 resultSub) = x.trySub(y); (bool succeededMul, uint256 resultMul) = x.tryMul(y); (bool succeededDiv, uint256 resultDiv) = x.tryDiv(y); // ... } function unsignedAverage(int256 a, int256 b) { int256 avg = a.average(b); // ... } } Easy! While working with different data types that might require casting, you can use SafeCast for type casting with added overflow checks. Some use cases require more powerful data structures than arrays and mappings offered natively in Solidity. Contracts provides these libraries for enhanced data structure management: BitMaps: Store packed booleans in storage. Checkpoints: Checkpoint values with built-in lookups. DoubleEndedQueue: Store items in a queue with pop() and queue() constant time operations. EnumerableSet: A set with enumeration capabilities. EnumerableMap: A mapping variant with enumeration capabilities. MerkleTree: An on-chain Merkle Tree with helper functions. Heap: A The Enumerable* structures are similar to mappings in that they store and remove elements in constant time and don’t allow for repeated entries, but they also support enumeration, which means you can easily query all stored entries both on and off-chain. Building an on-chain Merkle Tree allows developers to keep track of the history of roots in a decentralized manner. For these cases, the MerkleTree includes a predefined structure with functions to manipulate the tree (e.g. pushing values or resetting the tree). The Merkle Tree does not keep track of the roots purposely, so that developers can choose their tracking mechanism. Setting up and using a Merkle Tree in Solidity is as simple as follows: Functions are exposed without access control for demonstration purposes using MerkleTree for MerkleTree.Bytes32PushTree; MerkleTree.Bytes32PushTree private _tree; function setup(uint8 _depth, bytes32 _zero) public /* onlyOwner */ { root = _tree.setup(_depth, _zero); } function push(bytes32 leaf) public /* onlyOwner */ { (uint256 leafIndex, bytes32 currentRoot) = _tree.push(leaf); // Store the new root. } The library also supports custom hashing functions, which can be passed as an extra parameter to the push and setup functions. Using custom hashing functions is a sensitive operation. After setup, it requires to keep using the same hashing function for every new value pushed to the tree to avoid corrupting the tree. For this reason, it’s a good practice to keep your hashing function static in your implementation contract as follows: using MerkleTree for MerkleTree.Bytes32PushTree; MerkleTree.Bytes32PushTree private _tree; function setup(uint8 _depth, bytes32 _zero) public /* onlyOwner */ { root = _tree.setup(_depth, _zero, _hashFn); } function push(bytes32 leaf) public /* onlyOwner */ { (uint256 leafIndex, bytes32 currentRoot) = _tree.push(leaf, _hashFn); // Store the new root. } function _hashFn(bytes32 a, bytes32 b) internal view returns(bytes32) { // Custom hash function implementation // Kept as an internal implementation detail to // guarantee the same function is always used } A binary heap is a data structure that always store the most important element at its peak and it can be used as a priority queue. To define what is most important in a heap, these frequently take comparator functions that tell the binary heap whether a value has more relevance than another. OpenZeppelin Contracts implements a Heap data structure with the properties of a binary heap. The heap uses the lt function by default but allows to customize its comparator. When using a custom comparator, it’s recommended to wrap your function to avoid the possibility of mistakenly using a different comparator function: function pop(Uint256Heap storage self) internal returns (uint256) { return pop(self, Comparators.gt); } function insert(Uint256Heap storage self, uint256 value) internal { insert(self, value, Comparators.gt); } function replace(Uint256Heap storage self, uint256 newValue) internal returns (uint256) { return replace(self, newValue, Comparators.gt); } The storage in the EVM is shaped in chunks of 32 bytes, each of this chunks is known as slot, and can hold multiple values together as long as these values don’t exceed its size. These properties of the storage allow for a technique known as packing, that consists of placing values together on a single storage slot to reduce the costs associated to reading and writing to multiple slots instead of just one. Commonly, developers pack values using structs that place values together so they fit better in storage. However, this approach requires to load such struct from either calldata or memory. Although sometimes necessary, it may be useful to pack values in a single slot and treat it as a packed value without involving calldata or memory. The Packing library is a set of utilities for packing values that fit in 32 bytes. The library includes 3 main functionalities: Packing 2 bytesXX values Extracting a packed bytesXX value from a bytesYY Replacing a packed bytesXX value from a bytesYY With these primitives, one can build custom functions to create custom packed types. For example, suppose you need to pack an address of 20 bytes with a bytes4 selector and an uint64 time period: function _pack(address account, bytes4 selector, uint64 period) external pure returns (bytes32) { bytes12 subpack = Packing.pack_4_8(selector, bytes8(period)); return Packing.pack_20_12(bytes20(account), subpack); } function _unpack(bytes32 pack) external pure returns (address, bytes4, uint64) { return ( address(Packing.extract_32_20(pack, 0)), Packing.extract_32_4(pack, 20), uint64(Packing.extract_32_8(pack, 24)) ); } Solidity allocates a storage pointer for each variable declared in a contract. However, there are cases when it’s required to access storage pointers that can’t be derived by using regular Solidity. For those cases, the StorageSlot library allows for manipulating storage slots directly. bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc; function _getImplementation() internal view returns (address) { return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value; } function _setImplementation(address newImplementation) internal { require(newImplementation.code.length > 0); StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation; } The StorageSlot library also supports transient storage through user defined value types (UDVTs), which enables the same value types as in Solidity. bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542; function _getTransientLock() internal view returns (bool) { return _LOCK_SLOT.asBoolean().tload(); } function _setTransientLock(bool lock) internal { _LOCK_SLOT.asBoolean().tstore(lock); } Manipulating storage slots directly is an advanced practice. Developers MUST make sure that the storage pointer is not colliding with other variables. One of the most common use cases for writing directly to storage slots is ERC-7201 for namespaced storage, which is guaranteed to not collide with other storage slots derived by Solidity. Users can leverage this standard using the SlotDerivation library. using SlotDerivation for bytes32; string private constant _NAMESPACE = \"\" // eg. example.main function erc7201Pointer() internal view returns (bytes32) { return _NAMESPACE.erc7201Slot(); } Base64 util allows you to transform bytes32 data into its Base64 string representation. This is especially useful for building URL-safe tokenURIs for both ERC-721 or ERC-1155. This library provides a clever way to serve URL-safe Data URI compliant strings to serve on-chain data structures. Here is an example to send JSON Metadata through a Base64 Data URI using an ERC-721: // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; import {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\"; import {Base64} from \"@openzeppelin/contracts/utils/Base64.sol\"; contract Base64NFT is ERC721 { using Strings for uint256; constructor() ERC721(\"Base64NFT\", \"MTK\") {} // ... function tokenURI(uint256 tokenId) public pure override returns (string memory) { // Equivalent to: // { // \"name\": \"Base64NFT #1\", // // Replace with extra ERC-721 Metadata properties // } // prettier-ignore string memory dataURI = string.concat(\"{\\\"name\\\": \\\"Base64NFT #\", tokenId.toString(), \"\\\"}\"); return string.concat(\"data:application/json;base64,\", Base64.encode(bytes(dataURI))); } } The Multicall abstract contract comes with a multicall function that bundles together multiple calls in a single external call. With it, external accounts may perform atomic operations comprising several function calls. This is not only useful for EOAs to make multiple calls in a single transaction, it’s also a way to revert a previous call if a later one fails. Consider this dummy contract: // contracts/Box.sol // SPDX-License-Identifier: MIT pragma solidity ^0.8.20; import {Multicall} from \"@openzeppelin/contracts/utils/Multicall.sol\"; contract Box is Multicall { function foo() public { // ... } function bar() public { // ... } } This is how to call the multicall function using Ethers.js, allowing foo and bar to be called in a single transaction: // scripts/foobar.js const instance = await ethers.deployContract(\"Box\"); await instance.multicall([ instance.interface.encodeFunctionData(\"foo\"), instance.interface.encodeFunctionData(\"bar\") ]); ← Governance Subgraphs →","title":"Utilities","component":"contracts","version":"5.x","name":"utilities","url":"/contracts/5.x/utilities.html","titles":[{"text":"Cryptography","hash":"cryptography","id":1},{"text":"Checking Signatures On-Chain","hash":"checking_signatures_on_chain","id":2},{"text":"Ethereum Signatures (secp256k1)","hash":"ethereum_signatures_secp256k1","id":3},{"text":"P256 Signatures (secp256r1)","hash":"p256_signatures_secp256r1","id":4},{"text":"RSA","hash":"rsa","id":5},{"text":"Verifying Merkle Proofs","hash":"verifying_merkle_proofs","id":6},{"text":"Introspection","hash":"introspection","id":7},{"text":"Math","hash":"math","id":8},{"text":"Structures","hash":"structures","id":9},{"text":"Building a Merkle Tree","hash":"building_a_merkle_tree","id":10},{"text":"Using a Heap","hash":"using_a_heap","id":11},{"text":"Misc","hash":"misc","id":12},{"text":"Packing","hash":"packing","id":13},{"text":"Storage Slots","hash":"storage_slots","id":14},{"text":"Base64","hash":"base64","id":15},{"text":"Multicall","hash":"multicall","id":16}]},"19":{"id":19,"text":"Not sure where to start? Use the interactive generator below to bootstrap your contract and learn about the components offered in OpenZeppelin Contracts. Place the resulting contract in your contracts or src directory in order to compile it with a tool like Hardhat or Foundry. Consider reading our guide on Developing Smart Contracts for more guidance! ← Overview Extending Contracts →","title":"Contracts Wizard","component":"contracts","version":"5.x","name":"wizard","url":"/contracts/5.x/wizard.html","titles":[]},"20":{"id":20,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/access This directory provides ways to restrict who can access the functions of a contract or when they can do it. AccessManager is a full-fledged access control solution for smart contract systems. Allows creating and assigning multiple hierarchical roles with execution delays for each account across various contracts. AccessManaged delegates its access control to an authority that dictates the permissions of the managed contract. It’s compatible with an AccessManager as an authority. AccessControl provides a per-contract role based access control mechanism. Multiple hierarchical roles can be created and assigned each to multiple accounts within the same instance. Ownable is a simpler mechanism with a single owner \"role\" that can be assigned to a single account. This simpler mechanism can be useful for quick tests but projects with production concerns are likely to outgrow it. import \"@openzeppelin/contracts/access/Ownable.sol\"; Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with transferOwnership. This module is used through inheritance. It will make available the modifier onlyOwner, which can be applied to your functions to restrict their use to the owner. Modifiers onlyOwner() Functions constructor(initialOwner) owner() _checkOwner() renounceOwnership() transferOwnership(newOwner) _transferOwnership(newOwner) Events OwnershipTransferred(previousOwner, newOwner) Errors OwnableUnauthorizedAccount(account) OwnableInvalidOwner(owner) Throws if called by any account other than the owner. Initializes the contract setting the address provided by the deployer as the initial owner. Returns the address of the current owner. Throws if the sender is not the owner. Leaves the contract without owner. It will not be possible to call onlyOwner functions. Can only be called by the current owner. Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner. Transfers ownership of the contract to a new account (newOwner). Can only be called by the current owner. Transfers ownership of the contract to a new account (newOwner). Internal function without access restriction. The caller account is not authorized to perform an operation. The owner is not a valid owner account. (eg. address(0)) import \"@openzeppelin/contracts/access/Ownable2Step.sol\"; Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the Ownable contract includes a two-step mechanism to transfer ownership, where the new owner must call acceptOwnership in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for Ownable. This can later be changed with transferOwnership and acceptOwnership. This module is used through inheritance. It will make available all functions from parent (Ownable). Functions pendingOwner() transferOwnership(newOwner) _transferOwnership(newOwner) acceptOwnership() Ownable owner() _checkOwner() renounceOwnership() Events OwnershipTransferStarted(previousOwner, newOwner) Ownable OwnershipTransferred(previousOwner, newOwner) Errors Ownable OwnableUnauthorizedAccount(account) OwnableInvalidOwner(owner) Returns the address of the pending owner. Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Transfers ownership of the contract to a new account (newOwner) and deletes any pending owner. Internal function without access restriction. The new owner accepts the ownership transfer. import \"@openzeppelin/contracts/access/IAccessControl.sol\"; External interface of AccessControl declared to support ERC-165 detection. Functions hasRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) Events RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Returns true if account has been granted role. Returns the admin role that controls role. See grantRole and revokeRole. To change a role’s admin, use AccessControl._setRoleAdmin. Grants role to account. If account had not been already granted role, emits a RoleGranted event. Requirements: the caller must have role's admin role. Revokes role from account. If account had been granted role, emits a RoleRevoked event. Requirements: the caller must have role's admin role. Revokes role from the calling account. Roles are often managed via grantRole and revokeRole: this function’s purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted role, emits a RoleRevoked event. Requirements: the caller must be callerConfirmation. Emitted when newAdminRole is set as role's admin role, replacing previousAdminRole DEFAULT_ADMIN_ROLE is the starting admin for all roles, despite RoleAdminChanged not being emitted signaling this. Emitted when account is granted role. sender is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal AccessControl._grantRole. Emitted when account is revoked role. sender is the account that originated the contract call: - if using revokeRole, it is the admin role bearer - if using renounceRole, it is the role bearer (i.e. account) The account is missing a role. The caller of a function is not the expected one. Don’t confuse with AccessControlUnauthorizedAccount. import \"@openzeppelin/contracts/access/AccessControl.sol\"; Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn’t allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see AccessControlEnumerable. Roles are referred to by their bytes32 identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using public constant hash digests: bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); Roles can be used to represent a set of permissions. To restrict access to a function call, use hasRole: function foo() public { require(hasRole(MY_ROLE, msg.sender)); ... } Roles can be granted and revoked dynamically via the grantRole and revokeRole functions. Each role has an associated admin role, and only accounts that have a role’s admin role can call grantRole and revokeRole. By default, the admin role for all roles is DEFAULT_ADMIN_ROLE, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using _setRoleAdmin. The DEFAULT_ADMIN_ROLE is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using AccessControlDefaultAdminRules to enforce additional security measures for this role. Modifiers onlyRole(role) Functions supportsInterface(interfaceId) hasRole(role, account) _checkRole(role) _checkRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) _setRoleAdmin(role, adminRole) _grantRole(role, account) _revokeRole(role, account) DEFAULT_ADMIN_ROLE() Events IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Modifier that checks that an account has a specific role. Reverts with an AccessControlUnauthorizedAccount error including the required role. See IERC165.supportsInterface. Returns true if account has been granted role. Reverts with an AccessControlUnauthorizedAccount error if _msgSender() is missing role. Overriding this function changes the behavior of the onlyRole modifier. Reverts with an AccessControlUnauthorizedAccount error if account is missing role. Returns the admin role that controls role. See grantRole and revokeRole. To change a role’s admin, use _setRoleAdmin. Grants role to account. If account had not been already granted role, emits a RoleGranted event. Requirements: the caller must have role's admin role. May emit a RoleGranted event. Revokes role from account. If account had been granted role, emits a RoleRevoked event. Requirements: the caller must have role's admin role. May emit a RoleRevoked event. Revokes role from the calling account. Roles are often managed via grantRole and revokeRole: this function’s purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked role, emits a RoleRevoked event. Requirements: the caller must be callerConfirmation. May emit a RoleRevoked event. Sets adminRole as role's admin role. Emits a RoleAdminChanged event. Attempts to grant role to account and returns a boolean indicating if role was granted. Internal function without access restriction. May emit a RoleGranted event. Attempts to revoke role to account and returns a boolean indicating if role was revoked. Internal function without access restriction. May emit a RoleRevoked event. import \"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\"; External interface of AccessControlEnumerable declared to support ERC-165 detection. Functions getRoleMember(role, index) getRoleMemberCount(role) IAccessControl hasRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) Events IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Returns one of the accounts that have role. index must be a value between 0 and getRoleMemberCount, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. When using getRoleMember and getRoleMemberCount, make sure you perform all queries on the same block. See the following forum post for more information. Returns the number of accounts that have role. Can be used together with getRoleMember to enumerate all bearers of a role. import \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\"; Extension of AccessControl that allows enumerating the members of each role. Functions supportsInterface(interfaceId) getRoleMember(role, index) getRoleMemberCount(role) getRoleMembers(role) _grantRole(role, account) _revokeRole(role, account) AccessControl hasRole(role, account) _checkRole(role) _checkRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) _setRoleAdmin(role, adminRole) DEFAULT_ADMIN_ROLE() Events IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() See IERC165.supportsInterface. Returns one of the accounts that have role. index must be a value between 0 and getRoleMemberCount, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. When using getRoleMember and getRoleMemberCount, make sure you perform all queries on the same block. See the following forum post for more information. Returns the number of accounts that have role. Can be used together with getRoleMember to enumerate all bearers of a role. Return all accounts that have role This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block. Overload AccessControl._grantRole to track enumerable memberships Overload AccessControl._revokeRole to track enumerable memberships import \"@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol\"; External interface of AccessControlDefaultAdminRules declared to support ERC-165 detection. Functions defaultAdmin() pendingDefaultAdmin() defaultAdminDelay() pendingDefaultAdminDelay() beginDefaultAdminTransfer(newAdmin) cancelDefaultAdminTransfer() acceptDefaultAdminTransfer() changeDefaultAdminDelay(newDelay) rollbackDefaultAdminDelay() defaultAdminDelayIncreaseWait() IAccessControl hasRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) Events DefaultAdminTransferScheduled(newAdmin, acceptSchedule) DefaultAdminTransferCanceled() DefaultAdminDelayChangeScheduled(newDelay, effectSchedule) DefaultAdminDelayChangeCanceled() IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors AccessControlInvalidDefaultAdmin(defaultAdmin) AccessControlEnforcedDefaultAdminRules() AccessControlEnforcedDefaultAdminDelay(schedule) IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Returns the address of the current DEFAULT_ADMIN_ROLE holder. Returns a tuple of a newAdmin and an accept schedule. After the schedule passes, the newAdmin will be able to accept the defaultAdmin role by calling acceptDefaultAdminTransfer, completing the role transfer. A zero value only in acceptSchedule indicates no pending admin transfer. A zero address newAdmin means that defaultAdmin is being renounced. Returns the delay required to schedule the acceptance of a defaultAdmin transfer started. This delay will be added to the current timestamp when calling beginDefaultAdminTransfer to set the acceptance schedule. If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See changeDefaultAdminDelay. Returns a tuple of newDelay and an effect schedule. After the schedule passes, the newDelay will get into effect immediately for every new defaultAdmin transfer started with beginDefaultAdminTransfer. A zero value only in effectSchedule indicates no pending delay change. A zero value only for newDelay means that the next defaultAdminDelay will be zero after the effect schedule. Starts a defaultAdmin transfer by setting a pendingDefaultAdmin scheduled for acceptance after the current timestamp plus a defaultAdminDelay. Requirements: Only can be called by the current defaultAdmin. Emits a DefaultAdminRoleChangeStarted event. Cancels a defaultAdmin transfer previously started with beginDefaultAdminTransfer. A pendingDefaultAdmin not yet accepted can also be cancelled with this function. Requirements: Only can be called by the current defaultAdmin. May emit a DefaultAdminTransferCanceled event. Completes a defaultAdmin transfer previously started with beginDefaultAdminTransfer. After calling the function: DEFAULT_ADMIN_ROLE should be granted to the caller. DEFAULT_ADMIN_ROLE should be revoked from the previous holder. pendingDefaultAdmin should be reset to zero values. Requirements: Only can be called by the pendingDefaultAdmin's newAdmin. The pendingDefaultAdmin's acceptSchedule should’ve passed. Initiates a defaultAdminDelay update by setting a pendingDefaultAdminDelay scheduled for getting into effect after the current timestamp plus a defaultAdminDelay. This function guarantees that any call to beginDefaultAdminTransfer done between the timestamp this method is called and the pendingDefaultAdminDelay effect schedule will use the current defaultAdminDelay set before calling. The pendingDefaultAdminDelay's effect schedule is defined in a way that waiting until the schedule and then calling beginDefaultAdminTransfer with the new delay will take at least the same as another defaultAdmin complete transfer (including acceptance). The schedule is designed for two scenarios: When the delay is changed for a larger one the schedule is block.timestamp + newDelay capped by defaultAdminDelayIncreaseWait. When the delay is changed for a shorter one, the schedule is block.timestamp + (current delay - new delay). A pendingDefaultAdminDelay that never got into effect will be canceled in favor of a new scheduled change. Requirements: Only can be called by the current defaultAdmin. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event. Cancels a scheduled defaultAdminDelay change. Requirements: Only can be called by the current defaultAdmin. May emit a DefaultAdminDelayChangeCanceled event. Maximum time in seconds for an increase to defaultAdminDelay (that is scheduled using changeDefaultAdminDelay) to take effect. Default to 5 days. When the defaultAdminDelay is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom defaultAdminDelay increase scheduling. Make sure to add a reasonable amount of time while overriding this value, otherwise, there’s a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds). Emitted when a defaultAdmin transfer is started, setting newAdmin as the next address to become the defaultAdmin by calling acceptDefaultAdminTransfer only after acceptSchedule passes. Emitted when a pendingDefaultAdmin is reset if it was never accepted, regardless of its schedule. Emitted when a defaultAdminDelay change is started, setting newDelay as the next delay to be applied between default admin transfer after effectSchedule has passed. Emitted when a pendingDefaultAdminDelay is reset if its schedule didn’t pass. The new default admin is not a valid default admin. At least one of the following rules was violated: The DEFAULT_ADMIN_ROLE must only be managed by itself. The DEFAULT_ADMIN_ROLE must only be held by one account at the time. Any DEFAULT_ADMIN_ROLE transfer must be in two delayed steps. The delay for transferring the default admin delay is enforced and the operation must wait until schedule. schedule can be 0 indicating there’s no transfer scheduled. import \"@openzeppelin/contracts/access/extensions/AccessControlDefaultAdminRules.sol\"; Extension of AccessControl that allows specifying special rules to manage the DEFAULT_ADMIN_ROLE holder, which is a sensitive role with special permissions over other roles that may potentially have privileged rights in the system. If a specific role doesn’t have an admin role assigned, the holder of the DEFAULT_ADMIN_ROLE will have the ability to grant it and revoke it. This contract implements the following risk mitigations on top of AccessControl: Only one account holds the DEFAULT_ADMIN_ROLE since deployment until it’s potentially renounced. Enforces a 2-step process to transfer the DEFAULT_ADMIN_ROLE to another account. Enforces a configurable delay between the two steps, with the ability to cancel before the transfer is accepted. The delay can be changed by scheduling, see changeDefaultAdminDelay. It is not possible to use another role to manage the DEFAULT_ADMIN_ROLE. Example usage: contract MyToken is AccessControlDefaultAdminRules { constructor() AccessControlDefaultAdminRules( 3 days, msg.sender // Explicit initial `DEFAULT_ADMIN_ROLE` holder ) {} } Functions constructor(initialDelay, initialDefaultAdmin) supportsInterface(interfaceId) owner() grantRole(role, account) revokeRole(role, account) renounceRole(role, account) _grantRole(role, account) _revokeRole(role, account) _setRoleAdmin(role, adminRole) defaultAdmin() pendingDefaultAdmin() defaultAdminDelay() pendingDefaultAdminDelay() defaultAdminDelayIncreaseWait() beginDefaultAdminTransfer(newAdmin) _beginDefaultAdminTransfer(newAdmin) cancelDefaultAdminTransfer() _cancelDefaultAdminTransfer() acceptDefaultAdminTransfer() _acceptDefaultAdminTransfer() changeDefaultAdminDelay(newDelay) _changeDefaultAdminDelay(newDelay) rollbackDefaultAdminDelay() _rollbackDefaultAdminDelay() _delayChangeWait(newDelay) AccessControl hasRole(role, account) _checkRole(role) _checkRole(role, account) getRoleAdmin(role) DEFAULT_ADMIN_ROLE() Events IAccessControlDefaultAdminRules DefaultAdminTransferScheduled(newAdmin, acceptSchedule) DefaultAdminTransferCanceled() DefaultAdminDelayChangeScheduled(newDelay, effectSchedule) DefaultAdminDelayChangeCanceled() IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors IAccessControlDefaultAdminRules AccessControlInvalidDefaultAdmin(defaultAdmin) AccessControlEnforcedDefaultAdminRules() AccessControlEnforcedDefaultAdminDelay(schedule) IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Sets the initial values for defaultAdminDelay and defaultAdmin address. See IERC165.supportsInterface. See IERC5313.owner. See AccessControl.grantRole. Reverts for DEFAULT_ADMIN_ROLE. See AccessControl.revokeRole. Reverts for DEFAULT_ADMIN_ROLE. See AccessControl.renounceRole. For the DEFAULT_ADMIN_ROLE, it only allows renouncing in two steps by first calling beginDefaultAdminTransfer to the address(0), so it’s required that the pendingDefaultAdmin schedule has also passed when calling this function. After its execution, it will not be possible to call onlyRole(DEFAULT_ADMIN_ROLE) functions. Renouncing DEFAULT_ADMIN_ROLE will leave the contract without a defaultAdmin, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role. See AccessControl._grantRole. For DEFAULT_ADMIN_ROLE, it only allows granting if there isn’t already a defaultAdmin or if the role has been previously renounced. Exposing this function through another mechanism may make the DEFAULT_ADMIN_ROLE assignable again. Make sure to guarantee this is the expected behavior in your implementation. See AccessControl._revokeRole. See AccessControl._setRoleAdmin. Reverts for DEFAULT_ADMIN_ROLE. Returns the address of the current DEFAULT_ADMIN_ROLE holder. Returns a tuple of a newAdmin and an accept schedule. After the schedule passes, the newAdmin will be able to accept the defaultAdmin role by calling acceptDefaultAdminTransfer, completing the role transfer. A zero value only in acceptSchedule indicates no pending admin transfer. A zero address newAdmin means that defaultAdmin is being renounced. Returns the delay required to schedule the acceptance of a defaultAdmin transfer started. This delay will be added to the current timestamp when calling beginDefaultAdminTransfer to set the acceptance schedule. If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See changeDefaultAdminDelay. Returns a tuple of newDelay and an effect schedule. After the schedule passes, the newDelay will get into effect immediately for every new defaultAdmin transfer started with beginDefaultAdminTransfer. A zero value only in effectSchedule indicates no pending delay change. A zero value only for newDelay means that the next defaultAdminDelay will be zero after the effect schedule. Maximum time in seconds for an increase to defaultAdminDelay (that is scheduled using changeDefaultAdminDelay) to take effect. Default to 5 days. When the defaultAdminDelay is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom defaultAdminDelay increase scheduling. Make sure to add a reasonable amount of time while overriding this value, otherwise, there’s a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds). Starts a defaultAdmin transfer by setting a pendingDefaultAdmin scheduled for acceptance after the current timestamp plus a defaultAdminDelay. Requirements: Only can be called by the current defaultAdmin. Emits a DefaultAdminRoleChangeStarted event. See beginDefaultAdminTransfer. Internal function without access restriction. Cancels a defaultAdmin transfer previously started with beginDefaultAdminTransfer. A pendingDefaultAdmin not yet accepted can also be cancelled with this function. Requirements: Only can be called by the current defaultAdmin. May emit a DefaultAdminTransferCanceled event. See cancelDefaultAdminTransfer. Internal function without access restriction. Completes a defaultAdmin transfer previously started with beginDefaultAdminTransfer. After calling the function: DEFAULT_ADMIN_ROLE should be granted to the caller. DEFAULT_ADMIN_ROLE should be revoked from the previous holder. pendingDefaultAdmin should be reset to zero values. Requirements: Only can be called by the pendingDefaultAdmin's newAdmin. The pendingDefaultAdmin's acceptSchedule should’ve passed. See acceptDefaultAdminTransfer. Internal function without access restriction. Initiates a defaultAdminDelay update by setting a pendingDefaultAdminDelay scheduled for getting into effect after the current timestamp plus a defaultAdminDelay. This function guarantees that any call to beginDefaultAdminTransfer done between the timestamp this method is called and the pendingDefaultAdminDelay effect schedule will use the current defaultAdminDelay set before calling. The pendingDefaultAdminDelay's effect schedule is defined in a way that waiting until the schedule and then calling beginDefaultAdminTransfer with the new delay will take at least the same as another defaultAdmin complete transfer (including acceptance). The schedule is designed for two scenarios: When the delay is changed for a larger one the schedule is block.timestamp + newDelay capped by defaultAdminDelayIncreaseWait. When the delay is changed for a shorter one, the schedule is block.timestamp + (current delay - new delay). A pendingDefaultAdminDelay that never got into effect will be canceled in favor of a new scheduled change. Requirements: Only can be called by the current defaultAdmin. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event. See changeDefaultAdminDelay. Internal function without access restriction. Cancels a scheduled defaultAdminDelay change. Requirements: Only can be called by the current defaultAdmin. May emit a DefaultAdminDelayChangeCanceled event. See rollbackDefaultAdminDelay. Internal function without access restriction. Returns the amount of seconds to wait after the newDelay will become the new defaultAdminDelay. The value returned guarantees that if the delay is reduced, it will go into effect after a wait that honors the previously set delay. See defaultAdminDelayIncreaseWait. import \"@openzeppelin/contracts/access/manager/IAuthority.sol\"; Standard interface for permissioning originally defined in Dappsys. Functions canCall(caller, target, selector) Returns true if the caller can invoke on a target the function identified by a function selector. import \"@openzeppelin/contracts/access/manager/IAccessManager.sol\"; Functions canCall(caller, target, selector) expiration() minSetback() isTargetClosed(target) getTargetFunctionRole(target, selector) getTargetAdminDelay(target) getRoleAdmin(roleId) getRoleGuardian(roleId) getRoleGrantDelay(roleId) getAccess(roleId, account) hasRole(roleId, account) labelRole(roleId, label) grantRole(roleId, account, executionDelay) revokeRole(roleId, account) renounceRole(roleId, callerConfirmation) setRoleAdmin(roleId, admin) setRoleGuardian(roleId, guardian) setGrantDelay(roleId, newDelay) setTargetFunctionRole(target, selectors, roleId) setTargetAdminDelay(target, newDelay) setTargetClosed(target, closed) getSchedule(id) getNonce(id) schedule(target, data, when) execute(target, data) cancel(caller, target, data) consumeScheduledOp(caller, data) hashOperation(caller, target, data) updateAuthority(target, newAuthority) Events OperationScheduled(operationId, nonce, schedule, caller, target, data) OperationExecuted(operationId, nonce) OperationCanceled(operationId, nonce) RoleLabel(roleId, label) RoleGranted(roleId, account, delay, since, newMember) RoleRevoked(roleId, account) RoleAdminChanged(roleId, admin) RoleGuardianChanged(roleId, guardian) RoleGrantDelayChanged(roleId, delay, since) TargetClosed(target, closed) TargetFunctionRoleUpdated(target, selector, roleId) TargetAdminDelayUpdated(target, delay, since) Errors AccessManagerAlreadyScheduled(operationId) AccessManagerNotScheduled(operationId) AccessManagerNotReady(operationId) AccessManagerExpired(operationId) AccessManagerLockedRole(roleId) AccessManagerBadConfirmation() AccessManagerUnauthorizedAccount(msgsender, roleId) AccessManagerUnauthorizedCall(caller, target, selector) AccessManagerUnauthorizedConsume(target) AccessManagerUnauthorizedCancel(msgsender, caller, target, selector) AccessManagerInvalidInitialAdmin(initialAdmin) Check if an address (caller) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the schedule & execute workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If immediate is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. The IAuthority interface does not include the uint32 delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. This function does not report the permissions of the admin functions in the manager itself. These are defined by the AccessManager documentation. Expiration delay for scheduled proposals. Defaults to 1 week. Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage. Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via revokeRole in the case event of an accidental increase). Defaults to 5 days. Get whether the contract is closed disabling any access. Otherwise role permissions are applied. When the manager itself is closed, admin functions are still accessible to avoid locking the contract. Get the role required to call a function. Get the admin delay for a target contract. Changes to contract configuration are subject to this delay. Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role. Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role. Get the role current grant delay. Its value may change at any point without an event emitted following a call to setGrantDelay. Changes to this value, including effect timepoint are notified in advance by the RoleGrantDelayChanged event. Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled. Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. getAccess can provide more details. Give a label to a role, for improved role discoverability by UIs. Requirements: the caller must be a global admin Emits a RoleLabel event. Add account to roleId, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see cancel). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: the caller must be an admin for the role (see getRoleAdmin) granted role must not be the PUBLIC_ROLE Emits a RoleGranted event. Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: the caller must be an admin for the role (see getRoleAdmin) revoked role must not be the PUBLIC_ROLE Emits a RoleRevoked event if the account had the role. Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: the caller must be callerConfirmation. Emits a RoleRevoked event if the account had the role. Change admin role for a given role. Requirements: the caller must be a global admin Emits a RoleAdminChanged event Change guardian role for a given role. Requirements: the caller must be a global admin Emits a RoleGuardianChanged event Update the delay for granting a roleId. Requirements: the caller must be a global admin Emits a RoleGrantDelayChanged event. Set the role required to call functions identified by the selectors in the target contract. Requirements: the caller must be a global admin Emits a TargetFunctionRoleUpdated event per selector. Set the delay for changing the configuration of a given target contract. Requirements: the caller must be a global admin Emits a TargetAdminDelayUpdated event. Set the closed flag for a contract. Closing the manager itself won’t disable access to admin methods to avoid locking the contract. Requirements: the caller must be a global admin Emits a TargetClosed event. Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled. Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled. Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the operationId that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned nonce can be used to uniquely identify this scheduled operation from other occurrences of the same operationId in invocations of execute and cancel. Emits a OperationScheduled event. It is not possible to concurrently schedule more than one operation with the same target and data. If this is necessary, a random byte can be appended to data to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding. Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn’t previously scheduled (if the caller doesn’t have an execution delay). Emits an OperationExecuted event only if the call was scheduled and delayed. Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a OperationCanceled event. Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an OperationExecuted event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a OperationExecuted event. Hashing function for delayed operations. Changes the authority of a target managed by this manager instance. Requirements: the caller must be a global admin A delayed operation was scheduled. A scheduled operation was executed. A scheduled operation was canceled. Informational labelling for a roleId. Emitted when account is granted roleId. The meaning of the since argument depends on the newMember argument. If the role is granted to a new member, the since argument indicates when the account becomes a member of the role, otherwise it indicates the execution delay for this account and roleId is updated. Emitted when account membership or roleId is revoked. Unlike granting, revoking is instantaneous. Role acting as admin over a given roleId is updated. Role acting as guardian over a given roleId is updated. Grant delay for a given roleId will be updated to delay when since is reached. Target mode is updated (true = closed, false = open). Role required to invoke selector on target is updated to roleId. Admin delay for a given target will be updated to delay when since is reached. import \"@openzeppelin/contracts/access/manager/AccessManager.sol\"; AccessManager is a central contract to store the permissions of a system. A smart contract under the control of an AccessManager instance is known as a target, and will inherit from the AccessManaged contract, be connected to this contract as its manager and implement the AccessManaged.restricted modifier on a set of functions selected to be permissioned. Note that any function without this setup won’t be effectively restricted. The restriction rules for such functions are defined in terms of \"roles\" identified by an uint64 and scoped by target (address) and function selectors (bytes4). These roles are stored in this contract and can be configured by admins (ADMIN_ROLE members) after a delay (see getTargetAdminDelay). For each target contract, admins can configure the following without any delay: The target’s AccessManaged.authority via updateAuthority. Close or open a target via setTargetClosed keeping the permissions intact. The roles that are allowed (or disallowed) to call a given function (identified by its selector) through setTargetFunctionRole. By default every address is member of the PUBLIC_ROLE and every target function is restricted to the ADMIN_ROLE until configured otherwise. Additionally, each role has the following configuration options restricted to this manager’s admins: A role’s admin role via setRoleAdmin who can grant or revoke roles. A role’s guardian role via setRoleGuardian who’s allowed to cancel operations. A delay in which a role takes effect after being granted through setGrantDelay. A delay of any target’s admin action via setTargetAdminDelay. A role label for discoverability purposes with labelRole. Any account can be added and removed into any number of these roles by using the grantRole and revokeRole functions restricted to each role’s admin (see getRoleAdmin). Since all the permissions of the managed system can be modified by the admins of this instance, it is expected that they will be highly secured (e.g., a multisig or a well-configured DAO). This contract implements a form of the IAuthority interface, but canCall has additional return data so it doesn’t inherit IAuthority. It is however compatible with the IAuthority interface since the first 32 bytes of the return data are a boolean as expected by that interface. Systems that implement other access control mechanisms (for example using Ownable) can be paired with an AccessManager by transferring permissions (ownership in the case of Ownable) directly to the AccessManager. Users will be able to interact with these contracts through the execute function, following the access rules registered in the AccessManager. Keep in mind that in that context, the msg.sender seen by restricted functions will be AccessManager itself. When granting permissions over an Ownable or AccessControl contract to an AccessManager, be very mindful of the danger associated with functions such as Ownable.renounceOwnership or AccessControl.renounceRole. Modifiers onlyAuthorized() Functions constructor(initialAdmin) canCall(caller, target, selector) expiration() minSetback() isTargetClosed(target) getTargetFunctionRole(target, selector) getTargetAdminDelay(target) getRoleAdmin(roleId) getRoleGuardian(roleId) getRoleGrantDelay(roleId) getAccess(roleId, account) hasRole(roleId, account) labelRole(roleId, label) grantRole(roleId, account, executionDelay) revokeRole(roleId, account) renounceRole(roleId, callerConfirmation) setRoleAdmin(roleId, admin) setRoleGuardian(roleId, guardian) setGrantDelay(roleId, newDelay) _grantRole(roleId, account, grantDelay, executionDelay) _revokeRole(roleId, account) _setRoleAdmin(roleId, admin) _setRoleGuardian(roleId, guardian) _setGrantDelay(roleId, newDelay) setTargetFunctionRole(target, selectors, roleId) _setTargetFunctionRole(target, selector, roleId) setTargetAdminDelay(target, newDelay) _setTargetAdminDelay(target, newDelay) setTargetClosed(target, closed) _setTargetClosed(target, closed) getSchedule(id) getNonce(id) schedule(target, data, when) execute(target, data) cancel(caller, target, data) consumeScheduledOp(caller, data) _consumeScheduledOp(operationId) hashOperation(caller, target, data) updateAuthority(target, newAuthority) ADMIN_ROLE() PUBLIC_ROLE() Multicall multicall(data) Events IAccessManager OperationScheduled(operationId, nonce, schedule, caller, target, data) OperationExecuted(operationId, nonce) OperationCanceled(operationId, nonce) RoleLabel(roleId, label) RoleGranted(roleId, account, delay, since, newMember) RoleRevoked(roleId, account) RoleAdminChanged(roleId, admin) RoleGuardianChanged(roleId, guardian) RoleGrantDelayChanged(roleId, delay, since) TargetClosed(target, closed) TargetFunctionRoleUpdated(target, selector, roleId) TargetAdminDelayUpdated(target, delay, since) Errors IAccessManager AccessManagerAlreadyScheduled(operationId) AccessManagerNotScheduled(operationId) AccessManagerNotReady(operationId) AccessManagerExpired(operationId) AccessManagerLockedRole(roleId) AccessManagerBadConfirmation() AccessManagerUnauthorizedAccount(msgsender, roleId) AccessManagerUnauthorizedCall(caller, target, selector) AccessManagerUnauthorizedConsume(target) AccessManagerUnauthorizedCancel(msgsender, caller, target, selector) AccessManagerInvalidInitialAdmin(initialAdmin) Check that the caller is authorized to perform the operation. See AccessManager description for a detailed breakdown of the authorization logic. Check if an address (caller) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the schedule & execute workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If immediate is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. The IAuthority interface does not include the uint32 delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. This function does not report the permissions of the admin functions in the manager itself. These are defined by the AccessManager documentation. Expiration delay for scheduled proposals. Defaults to 1 week. Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage. Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via revokeRole in the case event of an accidental increase). Defaults to 5 days. Get whether the contract is closed disabling any access. Otherwise role permissions are applied. When the manager itself is closed, admin functions are still accessible to avoid locking the contract. Get the role required to call a function. Get the admin delay for a target contract. Changes to contract configuration are subject to this delay. Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role. Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role. Get the role current grant delay. Its value may change at any point without an event emitted following a call to setGrantDelay. Changes to this value, including effect timepoint are notified in advance by the RoleGrantDelayChanged event. Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled. Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. getAccess can provide more details. Give a label to a role, for improved role discoverability by UIs. Requirements: the caller must be a global admin Emits a RoleLabel event. Add account to roleId, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see cancel). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: the caller must be an admin for the role (see getRoleAdmin) granted role must not be the PUBLIC_ROLE Emits a RoleGranted event. Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: the caller must be an admin for the role (see getRoleAdmin) revoked role must not be the PUBLIC_ROLE Emits a RoleRevoked event if the account had the role. Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: the caller must be callerConfirmation. Emits a RoleRevoked event if the account had the role. Change admin role for a given role. Requirements: the caller must be a global admin Emits a RoleAdminChanged event Change guardian role for a given role. Requirements: the caller must be a global admin Emits a RoleGuardianChanged event Update the delay for granting a roleId. Requirements: the caller must be a global admin Emits a RoleGrantDelayChanged event. Internal version of grantRole without access control. Returns true if the role was newly granted. Emits a RoleGranted event. Internal version of revokeRole without access control. This logic is also used by renounceRole. Returns true if the role was previously granted. Emits a RoleRevoked event if the account had the role. Internal version of setRoleAdmin without access control. Emits a RoleAdminChanged event. Setting the admin role as the PUBLIC_ROLE is allowed, but it will effectively allow anyone to set grant or revoke such role. Internal version of setRoleGuardian without access control. Emits a RoleGuardianChanged event. Setting the guardian role as the PUBLIC_ROLE is allowed, but it will effectively allow anyone to cancel any scheduled operation for such role. Internal version of setGrantDelay without access control. Emits a RoleGrantDelayChanged event. Set the role required to call functions identified by the selectors in the target contract. Requirements: the caller must be a global admin Emits a TargetFunctionRoleUpdated event per selector. Internal version of setTargetFunctionRole without access control. Emits a TargetFunctionRoleUpdated event. Set the delay for changing the configuration of a given target contract. Requirements: the caller must be a global admin Emits a TargetAdminDelayUpdated event. Internal version of setTargetAdminDelay without access control. Emits a TargetAdminDelayUpdated event. Set the closed flag for a contract. Closing the manager itself won’t disable access to admin methods to avoid locking the contract. Requirements: the caller must be a global admin Emits a TargetClosed event. Set the closed flag for a contract. This is an internal setter with no access restrictions. Emits a TargetClosed event. Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled. Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled. Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the operationId that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned nonce can be used to uniquely identify this scheduled operation from other occurrences of the same operationId in invocations of execute and cancel. Emits a OperationScheduled event. It is not possible to concurrently schedule more than one operation with the same target and data. If this is necessary, a random byte can be appended to data to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding. Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn’t previously scheduled (if the caller doesn’t have an execution delay). Emits an OperationExecuted event only if the call was scheduled and delayed. Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a OperationCanceled event. Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an OperationExecuted event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a OperationExecuted event. Internal variant of consumeScheduledOp that operates on bytes32 operationId. Returns the nonce of the scheduled operation that is consumed. Hashing function for delayed operations. Changes the authority of a target managed by this manager instance. Requirements: the caller must be a global admin The identifier of the admin role. Required to perform most configuration operations including other roles' management and target restrictions. The identifier of the public role. Automatically granted to all addresses with no delay. import \"@openzeppelin/contracts/access/manager/IAccessManaged.sol\"; Functions authority() setAuthority() isConsumingScheduledOp() Events AuthorityUpdated(authority) Errors AccessManagedUnauthorized(caller) AccessManagedRequiredDelay(caller, delay) AccessManagedInvalidAuthority(authority) Returns the current authority. Transfers control to a new authority. The caller must be the current authority. Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls. Authority that manages this contract was updated. import \"@openzeppelin/contracts/access/manager/AccessManaged.sol\"; This contract module makes available a restricted modifier. Functions decorated with this modifier will be permissioned according to an \"authority\": a contract like AccessManager that follows the IAuthority interface, implementing a policy that allows certain callers to access certain functions. The restricted modifier should never be used on internal functions, judiciously used in public functions, and ideally only used in external functions. See restricted. Modifiers restricted() Functions constructor(initialAuthority) authority() setAuthority(newAuthority) isConsumingScheduledOp() _setAuthority(newAuthority) _checkCanCall(caller, data) Events IAccessManaged AuthorityUpdated(authority) Errors IAccessManaged AccessManagedUnauthorized(caller) AccessManagedRequiredDelay(caller, delay) AccessManagedInvalidAuthority(authority) Restricts access to a function as defined by the connected Authority for this contract and the caller and selector of the function that entered the contract. In general, this modifier should only be used on external functions. It is okay to use it on public functions that are used as external entry points and are not called internally. Unless you know what you’re doing, it should never be used on internal functions. Failure to follow these rules can have critical security implications! This is because the permissions are determined by the function that entered the contract, i.e. the function at the bottom of the call stack, and not the function where the modifier is visible in the source code. Avoid adding this modifier to the receive() function or the fallback(). These functions are the only execution paths where a function selector cannot be unambiguously determined from the calldata since the selector defaults to 0x00000000 in the receive() function and similarly in the fallback() function if no calldata is provided. (See _checkCanCall). The receive() function will always panic whereas the fallback() may panic depending on the calldata length. Initializes the contract connected to an initial authority. Returns the current authority. Transfers control to a new authority. The caller must be the current authority. Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls. Transfers control to a new authority. Internal function with no access restriction. Allows bypassing the permissions set by the current authority. Reverts if the caller is not allowed to call the function identified by a selector. Panics if the calldata is less than 4 bytes long. import \"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\"; Functions canCallWithDelay(authority, caller, target, selector) Since AccessManager implements an extended IAuthority interface, invoking canCall with backwards compatibility for the preexisting IAuthority interface requires special care to avoid reverting on insufficient return data. This helper function takes care of invoking canCall in a backwards compatible way without reverting. ← FAQ Account →","title":"Access Control","component":"contracts","version":"5.x","name":"access","url":"/contracts/5.x/api/access.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"Ownable ","hash":"Ownable","id":2},{"text":"onlyOwner() modifier","hash":"Ownable-onlyOwner--","id":3},{"text":"constructor(address initialOwner) internal","hash":"Ownable-constructor-address-","id":4},{"text":"owner() → address public","hash":"Ownable-owner--","id":5},{"text":"_checkOwner() internal","hash":"Ownable-_checkOwner--","id":6},{"text":"renounceOwnership() public","hash":"Ownable-renounceOwnership--","id":7},{"text":"transferOwnership(address newOwner) public","hash":"Ownable-transferOwnership-address-","id":8},{"text":"_transferOwnership(address newOwner) internal","hash":"Ownable-_transferOwnership-address-","id":9},{"text":"OwnershipTransferred(address indexed previousOwner, address indexed newOwner) event","hash":"Ownable-OwnershipTransferred-address-address-","id":10},{"text":"OwnableUnauthorizedAccount(address account) error","hash":"Ownable-OwnableUnauthorizedAccount-address-","id":11},{"text":"OwnableInvalidOwner(address owner) error","hash":"Ownable-OwnableInvalidOwner-address-","id":12},{"text":"Ownable2Step ","hash":"Ownable2Step","id":13},{"text":"pendingOwner() → address public","hash":"Ownable2Step-pendingOwner--","id":14},{"text":"transferOwnership(address newOwner) public","hash":"Ownable2Step-transferOwnership-address-","id":15},{"text":"_transferOwnership(address newOwner) internal","hash":"Ownable2Step-_transferOwnership-address-","id":16},{"text":"acceptOwnership() public","hash":"Ownable2Step-acceptOwnership--","id":17},{"text":"OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner) event","hash":"Ownable2Step-OwnershipTransferStarted-address-address-","id":18},{"text":"IAccessControl ","hash":"IAccessControl","id":19},{"text":"hasRole(bytes32 role, address account) → bool external","hash":"IAccessControl-hasRole-bytes32-address-","id":20},{"text":"getRoleAdmin(bytes32 role) → bytes32 external","hash":"IAccessControl-getRoleAdmin-bytes32-","id":21},{"text":"grantRole(bytes32 role, address account) external","hash":"IAccessControl-grantRole-bytes32-address-","id":22},{"text":"revokeRole(bytes32 role, address account) external","hash":"IAccessControl-revokeRole-bytes32-address-","id":23},{"text":"renounceRole(bytes32 role, address callerConfirmation) external","hash":"IAccessControl-renounceRole-bytes32-address-","id":24},{"text":"RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole) event","hash":"IAccessControl-RoleAdminChanged-bytes32-bytes32-bytes32-","id":25},{"text":"RoleGranted(bytes32 indexed role, address indexed account, address indexed sender) event","hash":"IAccessControl-RoleGranted-bytes32-address-address-","id":26},{"text":"RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender) event","hash":"IAccessControl-RoleRevoked-bytes32-address-address-","id":27},{"text":"AccessControlUnauthorizedAccount(address account, bytes32 neededRole) error","hash":"IAccessControl-AccessControlUnauthorizedAccount-address-bytes32-","id":28},{"text":"AccessControlBadConfirmation() error","hash":"IAccessControl-AccessControlBadConfirmation--","id":29},{"text":"AccessControl ","hash":"AccessControl","id":30},{"text":"onlyRole(bytes32 role) modifier","hash":"AccessControl-onlyRole-bytes32-","id":31},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"AccessControl-supportsInterface-bytes4-","id":32},{"text":"hasRole(bytes32 role, address account) → bool public","hash":"AccessControl-hasRole-bytes32-address-","id":33},{"text":"_checkRole(bytes32 role) internal","hash":"AccessControl-_checkRole-bytes32-","id":34},{"text":"_checkRole(bytes32 role, address account) internal","hash":"AccessControl-_checkRole-bytes32-address-","id":35},{"text":"getRoleAdmin(bytes32 role) → bytes32 public","hash":"AccessControl-getRoleAdmin-bytes32-","id":36},{"text":"grantRole(bytes32 role, address account) public","hash":"AccessControl-grantRole-bytes32-address-","id":37},{"text":"revokeRole(bytes32 role, address account) public","hash":"AccessControl-revokeRole-bytes32-address-","id":38},{"text":"renounceRole(bytes32 role, address callerConfirmation) public","hash":"AccessControl-renounceRole-bytes32-address-","id":39},{"text":"_setRoleAdmin(bytes32 role, bytes32 adminRole) internal","hash":"AccessControl-_setRoleAdmin-bytes32-bytes32-","id":40},{"text":"_grantRole(bytes32 role, address account) → bool internal","hash":"AccessControl-_grantRole-bytes32-address-","id":41},{"text":"_revokeRole(bytes32 role, address account) → bool internal","hash":"AccessControl-_revokeRole-bytes32-address-","id":42},{"text":"DEFAULT_ADMIN_ROLE() → bytes32 public","hash":"AccessControl-DEFAULT_ADMIN_ROLE-bytes32","id":43},{"text":"Extensions","hash":"extensions","id":44},{"text":"IAccessControlEnumerable ","hash":"IAccessControlEnumerable","id":45},{"text":"getRoleMember(bytes32 role, uint256 index) → address external","hash":"IAccessControlEnumerable-getRoleMember-bytes32-uint256-","id":46},{"text":"getRoleMemberCount(bytes32 role) → uint256 external","hash":"IAccessControlEnumerable-getRoleMemberCount-bytes32-","id":47},{"text":"AccessControlEnumerable ","hash":"AccessControlEnumerable","id":48},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"AccessControlEnumerable-supportsInterface-bytes4-","id":49},{"text":"getRoleMember(bytes32 role, uint256 index) → address public","hash":"AccessControlEnumerable-getRoleMember-bytes32-uint256-","id":50},{"text":"getRoleMemberCount(bytes32 role) → uint256 public","hash":"AccessControlEnumerable-getRoleMemberCount-bytes32-","id":51},{"text":"getRoleMembers(bytes32 role) → address[] public","hash":"AccessControlEnumerable-getRoleMembers-bytes32-","id":52},{"text":"_grantRole(bytes32 role, address account) → bool internal","hash":"AccessControlEnumerable-_grantRole-bytes32-address-","id":53},{"text":"_revokeRole(bytes32 role, address account) → bool internal","hash":"AccessControlEnumerable-_revokeRole-bytes32-address-","id":54},{"text":"IAccessControlDefaultAdminRules ","hash":"IAccessControlDefaultAdminRules","id":55},{"text":"defaultAdmin() → address external","hash":"IAccessControlDefaultAdminRules-defaultAdmin--","id":56},{"text":"pendingDefaultAdmin() → address newAdmin, uint48 acceptSchedule external","hash":"IAccessControlDefaultAdminRules-pendingDefaultAdmin--","id":57},{"text":"defaultAdminDelay() → uint48 external","hash":"IAccessControlDefaultAdminRules-defaultAdminDelay--","id":58},{"text":"pendingDefaultAdminDelay() → uint48 newDelay, uint48 effectSchedule external","hash":"IAccessControlDefaultAdminRules-pendingDefaultAdminDelay--","id":59},{"text":"beginDefaultAdminTransfer(address newAdmin) external","hash":"IAccessControlDefaultAdminRules-beginDefaultAdminTransfer-address-","id":60},{"text":"cancelDefaultAdminTransfer() external","hash":"IAccessControlDefaultAdminRules-cancelDefaultAdminTransfer--","id":61},{"text":"acceptDefaultAdminTransfer() external","hash":"IAccessControlDefaultAdminRules-acceptDefaultAdminTransfer--","id":62},{"text":"changeDefaultAdminDelay(uint48 newDelay) external","hash":"IAccessControlDefaultAdminRules-changeDefaultAdminDelay-uint48-","id":63},{"text":"rollbackDefaultAdminDelay() external","hash":"IAccessControlDefaultAdminRules-rollbackDefaultAdminDelay--","id":64},{"text":"defaultAdminDelayIncreaseWait() → uint48 external","hash":"IAccessControlDefaultAdminRules-defaultAdminDelayIncreaseWait--","id":65},{"text":"DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule) event","hash":"IAccessControlDefaultAdminRules-DefaultAdminTransferScheduled-address-uint48-","id":66},{"text":"DefaultAdminTransferCanceled() event","hash":"IAccessControlDefaultAdminRules-DefaultAdminTransferCanceled--","id":67},{"text":"DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule) event","hash":"IAccessControlDefaultAdminRules-DefaultAdminDelayChangeScheduled-uint48-uint48-","id":68},{"text":"DefaultAdminDelayChangeCanceled() event","hash":"IAccessControlDefaultAdminRules-DefaultAdminDelayChangeCanceled--","id":69},{"text":"AccessControlInvalidDefaultAdmin(address defaultAdmin) error","hash":"IAccessControlDefaultAdminRules-AccessControlInvalidDefaultAdmin-address-","id":70},{"text":"AccessControlEnforcedDefaultAdminRules() error","hash":"IAccessControlDefaultAdminRules-AccessControlEnforcedDefaultAdminRules--","id":71},{"text":"AccessControlEnforcedDefaultAdminDelay(uint48 schedule) error","hash":"IAccessControlDefaultAdminRules-AccessControlEnforcedDefaultAdminDelay-uint48-","id":72},{"text":"AccessControlDefaultAdminRules ","hash":"AccessControlDefaultAdminRules","id":73},{"text":"constructor(uint48 initialDelay, address initialDefaultAdmin) internal","hash":"AccessControlDefaultAdminRules-constructor-uint48-address-","id":74},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"AccessControlDefaultAdminRules-supportsInterface-bytes4-","id":75},{"text":"owner() → address public","hash":"AccessControlDefaultAdminRules-owner--","id":76},{"text":"grantRole(bytes32 role, address account) public","hash":"AccessControlDefaultAdminRules-grantRole-bytes32-address-","id":77},{"text":"revokeRole(bytes32 role, address account) public","hash":"AccessControlDefaultAdminRules-revokeRole-bytes32-address-","id":78},{"text":"renounceRole(bytes32 role, address account) public","hash":"AccessControlDefaultAdminRules-renounceRole-bytes32-address-","id":79},{"text":"_grantRole(bytes32 role, address account) → bool internal","hash":"AccessControlDefaultAdminRules-_grantRole-bytes32-address-","id":80},{"text":"_revokeRole(bytes32 role, address account) → bool internal","hash":"AccessControlDefaultAdminRules-_revokeRole-bytes32-address-","id":81},{"text":"_setRoleAdmin(bytes32 role, bytes32 adminRole) internal","hash":"AccessControlDefaultAdminRules-_setRoleAdmin-bytes32-bytes32-","id":82},{"text":"defaultAdmin() → address public","hash":"AccessControlDefaultAdminRules-defaultAdmin--","id":83},{"text":"pendingDefaultAdmin() → address newAdmin, uint48 schedule public","hash":"AccessControlDefaultAdminRules-pendingDefaultAdmin--","id":84},{"text":"defaultAdminDelay() → uint48 public","hash":"AccessControlDefaultAdminRules-defaultAdminDelay--","id":85},{"text":"pendingDefaultAdminDelay() → uint48 newDelay, uint48 schedule public","hash":"AccessControlDefaultAdminRules-pendingDefaultAdminDelay--","id":86},{"text":"defaultAdminDelayIncreaseWait() → uint48 public","hash":"AccessControlDefaultAdminRules-defaultAdminDelayIncreaseWait--","id":87},{"text":"beginDefaultAdminTransfer(address newAdmin) public","hash":"AccessControlDefaultAdminRules-beginDefaultAdminTransfer-address-","id":88},{"text":"_beginDefaultAdminTransfer(address newAdmin) internal","hash":"AccessControlDefaultAdminRules-_beginDefaultAdminTransfer-address-","id":89},{"text":"cancelDefaultAdminTransfer() public","hash":"AccessControlDefaultAdminRules-cancelDefaultAdminTransfer--","id":90},{"text":"_cancelDefaultAdminTransfer() internal","hash":"AccessControlDefaultAdminRules-_cancelDefaultAdminTransfer--","id":91},{"text":"acceptDefaultAdminTransfer() public","hash":"AccessControlDefaultAdminRules-acceptDefaultAdminTransfer--","id":92},{"text":"_acceptDefaultAdminTransfer() internal","hash":"AccessControlDefaultAdminRules-_acceptDefaultAdminTransfer--","id":93},{"text":"changeDefaultAdminDelay(uint48 newDelay) public","hash":"AccessControlDefaultAdminRules-changeDefaultAdminDelay-uint48-","id":94},{"text":"_changeDefaultAdminDelay(uint48 newDelay) internal","hash":"AccessControlDefaultAdminRules-_changeDefaultAdminDelay-uint48-","id":95},{"text":"rollbackDefaultAdminDelay() public","hash":"AccessControlDefaultAdminRules-rollbackDefaultAdminDelay--","id":96},{"text":"_rollbackDefaultAdminDelay() internal","hash":"AccessControlDefaultAdminRules-_rollbackDefaultAdminDelay--","id":97},{"text":"_delayChangeWait(uint48 newDelay) → uint48 internal","hash":"AccessControlDefaultAdminRules-_delayChangeWait-uint48-","id":98},{"text":"AccessManager","hash":"accessmanager","id":99},{"text":"IAuthority ","hash":"IAuthority","id":100},{"text":"canCall(address caller, address target, bytes4 selector) → bool allowed external","hash":"IAuthority-canCall-address-address-bytes4-","id":101},{"text":"IAccessManager ","hash":"IAccessManager","id":102},{"text":"canCall(address caller, address target, bytes4 selector) → bool allowed, uint32 delay external","hash":"IAccessManager-canCall-address-address-bytes4-","id":103},{"text":"expiration() → uint32 external","hash":"IAccessManager-expiration--","id":104},{"text":"minSetback() → uint32 external","hash":"IAccessManager-minSetback--","id":105},{"text":"isTargetClosed(address target) → bool external","hash":"IAccessManager-isTargetClosed-address-","id":106},{"text":"getTargetFunctionRole(address target, bytes4 selector) → uint64 external","hash":"IAccessManager-getTargetFunctionRole-address-bytes4-","id":107},{"text":"getTargetAdminDelay(address target) → uint32 external","hash":"IAccessManager-getTargetAdminDelay-address-","id":108},{"text":"getRoleAdmin(uint64 roleId) → uint64 external","hash":"IAccessManager-getRoleAdmin-uint64-","id":109},{"text":"getRoleGuardian(uint64 roleId) → uint64 external","hash":"IAccessManager-getRoleGuardian-uint64-","id":110},{"text":"getRoleGrantDelay(uint64 roleId) → uint32 external","hash":"IAccessManager-getRoleGrantDelay-uint64-","id":111},{"text":"getAccess(uint64 roleId, address account) → uint48 since, uint32 currentDelay, uint32 pendingDelay, uint48 effect external","hash":"IAccessManager-getAccess-uint64-address-","id":112},{"text":"hasRole(uint64 roleId, address account) → bool isMember, uint32 executionDelay external","hash":"IAccessManager-hasRole-uint64-address-","id":113},{"text":"labelRole(uint64 roleId, string label) external","hash":"IAccessManager-labelRole-uint64-string-","id":114},{"text":"grantRole(uint64 roleId, address account, uint32 executionDelay) external","hash":"IAccessManager-grantRole-uint64-address-uint32-","id":115},{"text":"revokeRole(uint64 roleId, address account) external","hash":"IAccessManager-revokeRole-uint64-address-","id":116},{"text":"renounceRole(uint64 roleId, address callerConfirmation) external","hash":"IAccessManager-renounceRole-uint64-address-","id":117},{"text":"setRoleAdmin(uint64 roleId, uint64 admin) external","hash":"IAccessManager-setRoleAdmin-uint64-uint64-","id":118},{"text":"setRoleGuardian(uint64 roleId, uint64 guardian) external","hash":"IAccessManager-setRoleGuardian-uint64-uint64-","id":119},{"text":"setGrantDelay(uint64 roleId, uint32 newDelay) external","hash":"IAccessManager-setGrantDelay-uint64-uint32-","id":120},{"text":"setTargetFunctionRole(address target, bytes4[] selectors, uint64 roleId) external","hash":"IAccessManager-setTargetFunctionRole-address-bytes4---uint64-","id":121},{"text":"setTargetAdminDelay(address target, uint32 newDelay) external","hash":"IAccessManager-setTargetAdminDelay-address-uint32-","id":122},{"text":"setTargetClosed(address target, bool closed) external","hash":"IAccessManager-setTargetClosed-address-bool-","id":123},{"text":"getSchedule(bytes32 id) → uint48 external","hash":"IAccessManager-getSchedule-bytes32-","id":124},{"text":"getNonce(bytes32 id) → uint32 external","hash":"IAccessManager-getNonce-bytes32-","id":125},{"text":"schedule(address target, bytes data, uint48 when) → bytes32 operationId, uint32 nonce external","hash":"IAccessManager-schedule-address-bytes-uint48-","id":126},{"text":"execute(address target, bytes data) → uint32 external","hash":"IAccessManager-execute-address-bytes-","id":127},{"text":"cancel(address caller, address target, bytes data) → uint32 external","hash":"IAccessManager-cancel-address-address-bytes-","id":128},{"text":"consumeScheduledOp(address caller, bytes data) external","hash":"IAccessManager-consumeScheduledOp-address-bytes-","id":129},{"text":"hashOperation(address caller, address target, bytes data) → bytes32 external","hash":"IAccessManager-hashOperation-address-address-bytes-","id":130},{"text":"updateAuthority(address target, address newAuthority) external","hash":"IAccessManager-updateAuthority-address-address-","id":131},{"text":"OperationScheduled(bytes32 indexed operationId, uint32 indexed nonce, uint48 schedule, address caller, address target, bytes data) event","hash":"IAccessManager-OperationScheduled-bytes32-uint32-uint48-address-address-bytes-","id":132},{"text":"OperationExecuted(bytes32 indexed operationId, uint32 indexed nonce) event","hash":"IAccessManager-OperationExecuted-bytes32-uint32-","id":133},{"text":"OperationCanceled(bytes32 indexed operationId, uint32 indexed nonce) event","hash":"IAccessManager-OperationCanceled-bytes32-uint32-","id":134},{"text":"RoleLabel(uint64 indexed roleId, string label) event","hash":"IAccessManager-RoleLabel-uint64-string-","id":135},{"text":"RoleGranted(uint64 indexed roleId, address indexed account, uint32 delay, uint48 since, bool newMember) event","hash":"IAccessManager-RoleGranted-uint64-address-uint32-uint48-bool-","id":136},{"text":"RoleRevoked(uint64 indexed roleId, address indexed account) event","hash":"IAccessManager-RoleRevoked-uint64-address-","id":137},{"text":"RoleAdminChanged(uint64 indexed roleId, uint64 indexed admin) event","hash":"IAccessManager-RoleAdminChanged-uint64-uint64-","id":138},{"text":"RoleGuardianChanged(uint64 indexed roleId, uint64 indexed guardian) event","hash":"IAccessManager-RoleGuardianChanged-uint64-uint64-","id":139},{"text":"RoleGrantDelayChanged(uint64 indexed roleId, uint32 delay, uint48 since) event","hash":"IAccessManager-RoleGrantDelayChanged-uint64-uint32-uint48-","id":140},{"text":"TargetClosed(address indexed target, bool closed) event","hash":"IAccessManager-TargetClosed-address-bool-","id":141},{"text":"TargetFunctionRoleUpdated(address indexed target, bytes4 selector, uint64 indexed roleId) event","hash":"IAccessManager-TargetFunctionRoleUpdated-address-bytes4-uint64-","id":142},{"text":"TargetAdminDelayUpdated(address indexed target, uint32 delay, uint48 since) event","hash":"IAccessManager-TargetAdminDelayUpdated-address-uint32-uint48-","id":143},{"text":"AccessManagerAlreadyScheduled(bytes32 operationId) error","hash":"IAccessManager-AccessManagerAlreadyScheduled-bytes32-","id":144},{"text":"AccessManagerNotScheduled(bytes32 operationId) error","hash":"IAccessManager-AccessManagerNotScheduled-bytes32-","id":145},{"text":"AccessManagerNotReady(bytes32 operationId) error","hash":"IAccessManager-AccessManagerNotReady-bytes32-","id":146},{"text":"AccessManagerExpired(bytes32 operationId) error","hash":"IAccessManager-AccessManagerExpired-bytes32-","id":147},{"text":"AccessManagerLockedRole(uint64 roleId) error","hash":"IAccessManager-AccessManagerLockedRole-uint64-","id":148},{"text":"AccessManagerBadConfirmation() error","hash":"IAccessManager-AccessManagerBadConfirmation--","id":149},{"text":"AccessManagerUnauthorizedAccount(address msgsender, uint64 roleId) error","hash":"IAccessManager-AccessManagerUnauthorizedAccount-address-uint64-","id":150},{"text":"AccessManagerUnauthorizedCall(address caller, address target, bytes4 selector) error","hash":"IAccessManager-AccessManagerUnauthorizedCall-address-address-bytes4-","id":151},{"text":"AccessManagerUnauthorizedConsume(address target) error","hash":"IAccessManager-AccessManagerUnauthorizedConsume-address-","id":152},{"text":"AccessManagerUnauthorizedCancel(address msgsender, address caller, address target, bytes4 selector) error","hash":"IAccessManager-AccessManagerUnauthorizedCancel-address-address-address-bytes4-","id":153},{"text":"AccessManagerInvalidInitialAdmin(address initialAdmin) error","hash":"IAccessManager-AccessManagerInvalidInitialAdmin-address-","id":154},{"text":"AccessManager ","hash":"AccessManager","id":155},{"text":"onlyAuthorized() modifier","hash":"AccessManager-onlyAuthorized--","id":156},{"text":"constructor(address initialAdmin) public","hash":"AccessManager-constructor-address-","id":157},{"text":"canCall(address caller, address target, bytes4 selector) → bool immediate, uint32 delay public","hash":"AccessManager-canCall-address-address-bytes4-","id":158},{"text":"expiration() → uint32 public","hash":"AccessManager-expiration--","id":159},{"text":"minSetback() → uint32 public","hash":"AccessManager-minSetback--","id":160},{"text":"isTargetClosed(address target) → bool public","hash":"AccessManager-isTargetClosed-address-","id":161},{"text":"getTargetFunctionRole(address target, bytes4 selector) → uint64 public","hash":"AccessManager-getTargetFunctionRole-address-bytes4-","id":162},{"text":"getTargetAdminDelay(address target) → uint32 public","hash":"AccessManager-getTargetAdminDelay-address-","id":163},{"text":"getRoleAdmin(uint64 roleId) → uint64 public","hash":"AccessManager-getRoleAdmin-uint64-","id":164},{"text":"getRoleGuardian(uint64 roleId) → uint64 public","hash":"AccessManager-getRoleGuardian-uint64-","id":165},{"text":"getRoleGrantDelay(uint64 roleId) → uint32 public","hash":"AccessManager-getRoleGrantDelay-uint64-","id":166},{"text":"getAccess(uint64 roleId, address account) → uint48 since, uint32 currentDelay, uint32 pendingDelay, uint48 effect public","hash":"AccessManager-getAccess-uint64-address-","id":167},{"text":"hasRole(uint64 roleId, address account) → bool isMember, uint32 executionDelay public","hash":"AccessManager-hasRole-uint64-address-","id":168},{"text":"labelRole(uint64 roleId, string label) public","hash":"AccessManager-labelRole-uint64-string-","id":169},{"text":"grantRole(uint64 roleId, address account, uint32 executionDelay) public","hash":"AccessManager-grantRole-uint64-address-uint32-","id":170},{"text":"revokeRole(uint64 roleId, address account) public","hash":"AccessManager-revokeRole-uint64-address-","id":171},{"text":"renounceRole(uint64 roleId, address callerConfirmation) public","hash":"AccessManager-renounceRole-uint64-address-","id":172},{"text":"setRoleAdmin(uint64 roleId, uint64 admin) public","hash":"AccessManager-setRoleAdmin-uint64-uint64-","id":173},{"text":"setRoleGuardian(uint64 roleId, uint64 guardian) public","hash":"AccessManager-setRoleGuardian-uint64-uint64-","id":174},{"text":"setGrantDelay(uint64 roleId, uint32 newDelay) public","hash":"AccessManager-setGrantDelay-uint64-uint32-","id":175},{"text":"_grantRole(uint64 roleId, address account, uint32 grantDelay, uint32 executionDelay) → bool internal","hash":"AccessManager-_grantRole-uint64-address-uint32-uint32-","id":176},{"text":"_revokeRole(uint64 roleId, address account) → bool internal","hash":"AccessManager-_revokeRole-uint64-address-","id":177},{"text":"_setRoleAdmin(uint64 roleId, uint64 admin) internal","hash":"AccessManager-_setRoleAdmin-uint64-uint64-","id":178},{"text":"_setRoleGuardian(uint64 roleId, uint64 guardian) internal","hash":"AccessManager-_setRoleGuardian-uint64-uint64-","id":179},{"text":"_setGrantDelay(uint64 roleId, uint32 newDelay) internal","hash":"AccessManager-_setGrantDelay-uint64-uint32-","id":180},{"text":"setTargetFunctionRole(address target, bytes4[] selectors, uint64 roleId) public","hash":"AccessManager-setTargetFunctionRole-address-bytes4---uint64-","id":181},{"text":"_setTargetFunctionRole(address target, bytes4 selector, uint64 roleId) internal","hash":"AccessManager-_setTargetFunctionRole-address-bytes4-uint64-","id":182},{"text":"setTargetAdminDelay(address target, uint32 newDelay) public","hash":"AccessManager-setTargetAdminDelay-address-uint32-","id":183},{"text":"_setTargetAdminDelay(address target, uint32 newDelay) internal","hash":"AccessManager-_setTargetAdminDelay-address-uint32-","id":184},{"text":"setTargetClosed(address target, bool closed) public","hash":"AccessManager-setTargetClosed-address-bool-","id":185},{"text":"_setTargetClosed(address target, bool closed) internal","hash":"AccessManager-_setTargetClosed-address-bool-","id":186},{"text":"getSchedule(bytes32 id) → uint48 public","hash":"AccessManager-getSchedule-bytes32-","id":187},{"text":"getNonce(bytes32 id) → uint32 public","hash":"AccessManager-getNonce-bytes32-","id":188},{"text":"schedule(address target, bytes data, uint48 when) → bytes32 operationId, uint32 nonce public","hash":"AccessManager-schedule-address-bytes-uint48-","id":189},{"text":"execute(address target, bytes data) → uint32 public","hash":"AccessManager-execute-address-bytes-","id":190},{"text":"cancel(address caller, address target, bytes data) → uint32 public","hash":"AccessManager-cancel-address-address-bytes-","id":191},{"text":"consumeScheduledOp(address caller, bytes data) public","hash":"AccessManager-consumeScheduledOp-address-bytes-","id":192},{"text":"_consumeScheduledOp(bytes32 operationId) → uint32 internal","hash":"AccessManager-_consumeScheduledOp-bytes32-","id":193},{"text":"hashOperation(address caller, address target, bytes data) → bytes32 public","hash":"AccessManager-hashOperation-address-address-bytes-","id":194},{"text":"updateAuthority(address target, address newAuthority) public","hash":"AccessManager-updateAuthority-address-address-","id":195},{"text":"ADMIN_ROLE() → uint64 public","hash":"AccessManager-ADMIN_ROLE-uint64","id":196},{"text":"PUBLIC_ROLE() → uint64 public","hash":"AccessManager-PUBLIC_ROLE-uint64","id":197},{"text":"IAccessManaged ","hash":"IAccessManaged","id":198},{"text":"authority() → address external","hash":"IAccessManaged-authority--","id":199},{"text":"setAuthority(address) external","hash":"IAccessManaged-setAuthority-address-","id":200},{"text":"isConsumingScheduledOp() → bytes4 external","hash":"IAccessManaged-isConsumingScheduledOp--","id":201},{"text":"AuthorityUpdated(address authority) event","hash":"IAccessManaged-AuthorityUpdated-address-","id":202},{"text":"AccessManagedUnauthorized(address caller) error","hash":"IAccessManaged-AccessManagedUnauthorized-address-","id":203},{"text":"AccessManagedRequiredDelay(address caller, uint32 delay) error","hash":"IAccessManaged-AccessManagedRequiredDelay-address-uint32-","id":204},{"text":"AccessManagedInvalidAuthority(address authority) error","hash":"IAccessManaged-AccessManagedInvalidAuthority-address-","id":205},{"text":"AccessManaged ","hash":"AccessManaged","id":206},{"text":"restricted() modifier","hash":"AccessManaged-restricted--","id":207},{"text":"constructor(address initialAuthority) internal","hash":"AccessManaged-constructor-address-","id":208},{"text":"authority() → address public","hash":"AccessManaged-authority--","id":209},{"text":"setAuthority(address newAuthority) public","hash":"AccessManaged-setAuthority-address-","id":210},{"text":"isConsumingScheduledOp() → bytes4 public","hash":"AccessManaged-isConsumingScheduledOp--","id":211},{"text":"_setAuthority(address newAuthority) internal","hash":"AccessManaged-_setAuthority-address-","id":212},{"text":"_checkCanCall(address caller, bytes data) internal","hash":"AccessManaged-_checkCanCall-address-bytes-","id":213},{"text":"AuthorityUtils ","hash":"AuthorityUtils","id":214},{"text":"canCallWithDelay(address authority, address caller, address target, bytes4 selector) → bool immediate, uint32 delay internal","hash":"AuthorityUtils-canCallWithDelay-address-address-address-bytes4-","id":215}]},"21":{"id":21,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/account This directory includes contracts to build accounts for ERC-4337. import \"@openzeppelin/contracts/account/AccountBase.sol\"; Modifiers onlyEntryPointOrSelf() onlyEntryPoint() Functions entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _validateUserOp(userOp, userOpHash) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) Errors AccountEntryPointRestricted() Return the account nonce for the canonical sequence. Return the account nonce for a given sequence (key). Receive Ether. import \"@openzeppelin/contracts/account/ERC7579/AccountERC7579.sol\"; Functions isValidSignature(hash, signature) _validateUserOp(userOp, userOpHash) accountId() supportsExecutionMode(encodedMode) supportsModule(moduleTypeId) execute(mode, executionCalldata) executeFromExecutor(mode, executionCalldata) _supportsExecutionMode(encodedMode) _execute(mode, executionCalldata) installModule(moduleTypeId, module, initData) uninstallModule(moduleTypeId, module, deInitData) fallback() ERC7579ModuleConfig _supportsModule(moduleTypeId) _fallbackHandler(selector) _installModule(moduleTypeId, module, initData) _uninstallModule(moduleTypeId, module, deInitData) isModuleInstalled(moduleTypeId, module, additionalContext) _isModuleInstalled(moduleTypeId, module, additionalContext) _installFallback(module, selector) _uninstallFallback(module, selector) _checkModule(moduleTypeId) AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC721Holder onERC721Received(, , , ) ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) Events IERC7579ModuleConfig ModuleInstalled(moduleTypeId, module) ModuleUninstalled(moduleTypeId, module) Errors ERC7579ModuleConfig ERC7579MismatchedModuleTypeId(moduleTypeId, module) ERC7579UninstalledModule(moduleTypeId, module) ERC7579AlreadyInstalledModule(moduleTypeId, module) ERC7579UnsupportedModuleType(moduleTypeId) AccountBase AccountEntryPointRestricted() Should return whether the signature provided is valid for the provided data Returns the account id of the smart account Function to check if the account supports a certain execution mode (see above) Function to check if the account supports a certain module typeId Executes a transaction on behalf of the account. Executes a transaction on behalf of the account. This function is intended to be called by Executor Modules Installs a Module of a certain type on the smart account Uninstalls a Module of a certain type on the smart account import \"@openzeppelin/contracts/account/AccountECDSA.sol\"; Functions constructor(signerAddr) signer() _validateUserOp(userOp, userOpHash) _validateSignature(hash, signature) AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) ERC1271TypedSigner isValidSignature(hash, signature) _isValidSignature(hash, signature) _isValidTypedDataEnvelopeSignature(hash, signature) _isValidPersonalSigEnvelopeSignature(hash, signature) _typedDataEnvelopeHash(signature) _personalSigEnvelopeHash(hash) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Errors AccountBase AccountEntryPointRestricted() Signature validation algorithm. Implementing a signature validation algorithm is a security-sensitive operation as it involves cryptographic verification. It is important to review and test thoroughly before deployment. Consider using one of the signature verification libraries (ECDSA, P256 or RSA). import \"@openzeppelin/contracts/account/AccountEIP7702.sol\"; Functions constructor(name, version) AccountECDSA signer() _validateUserOp(userOp, userOpHash) _validateSignature(hash, signature) AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) ERC1271TypedSigner isValidSignature(hash, signature) _isValidSignature(hash, signature) _isValidTypedDataEnvelopeSignature(hash, signature) _isValidPersonalSigEnvelopeSignature(hash, signature) _typedDataEnvelopeHash(signature) _personalSigEnvelopeHash(hash) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Errors AccountBase AccountEntryPointRestricted() import \"@openzeppelin/contracts/account/AccountP256.sol\"; Functions constructor(qx, qy) signer() _validateUserOp(userOp, userOpHash) _validateSignature(hash, signature) AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) ERC1271TypedSigner isValidSignature(hash, signature) _isValidSignature(hash, signature) _isValidTypedDataEnvelopeSignature(hash, signature) _isValidPersonalSigEnvelopeSignature(hash, signature) _typedDataEnvelopeHash(signature) _personalSigEnvelopeHash(hash) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Errors AccountBase AccountEntryPointRestricted() Signature validation algorithm. Implementing a signature validation algorithm is a security-sensitive operation as it involves cryptographic verification. It is important to review and test thoroughly before deployment. Consider using one of the signature verification libraries (ECDSA, P256 or RSA). import \"@openzeppelin/contracts/account/AccountRSA.sol\"; Functions constructor(e, n) signer() _validateUserOp(userOp, userOpHash) _validateSignature(hash, signature) AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) executeUserOp(userOp, ) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) ERC1271TypedSigner isValidSignature(hash, signature) _isValidSignature(hash, signature) _isValidTypedDataEnvelopeSignature(hash, signature) _isValidPersonalSigEnvelopeSignature(hash, signature) _typedDataEnvelopeHash(signature) _personalSigEnvelopeHash(hash) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Errors AccountBase AccountEntryPointRestricted() Signature validation algorithm. Implementing a signature validation algorithm is a security-sensitive operation as it involves cryptographic verification. It is important to review and test thoroughly before deployment. Consider using one of the signature verification libraries (ECDSA, P256 or RSA). import \"@openzeppelin/contracts/account/extensions/AccountERC7579Hooked.sol\"; Modifiers withHook() Functions _isModuleInstalled(moduleTypeId, module, data) _execute(mode, executionCalldata) _installModule(moduleTypeId, module, initData) _uninstallModule(moduleTypeId, module, deInitData) _supportsModule(moduleTypeId) _isHookInstalled(module) _fallback() AccountERC7579 isValidSignature(hash, signature) accountId() supportsExecutionMode(encodedMode) supportsModule(moduleTypeId) execute(mode, executionCalldata) executeFromExecutor(mode, executionCalldata) isModuleInstalled(moduleTypeId, module, additionalContext) installModule(moduleTypeId, module, initData) uninstallModule(moduleTypeId, module, deInitData) executeUserOp(userOp, ) _validateUserOp(userOp, userOpHash) _supportsExecutionMode(encodedMode) _installFallback(module, selector) _uninstallFallback(module, selector) _checkModule(moduleTypeId, module) _fallbackHandler(selector) fallback() AccountBase entryPoint() getNonce() getNonce(key) validateUserOp(userOp, userOpHash, missingAccountFunds) _payPrefund(missingAccountFunds) _checkEntryPoint() _checkEntryPointOrSelf() receive() ERC1155Holder supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) Events IERC7579ModuleConfig ModuleInstalled(moduleTypeId, module) ModuleUninstalled(moduleTypeId, module) Errors AccountBase AccountEntryPointRestricted() import \"@openzeppelin/contracts/account/modules/ECDSAValidator.sol\"; Functions signer(account) onInstall(data) onUninstall(data) _onInstall(account, signerAddr) _onUninstall(account) _isValidSignatureWithSender(sender, envelopeHash, signature) SignatureValidator isModuleType(moduleTypeId) validateUserOp(userOp, userOpHash) isValidSignatureWithSender(sender, hash, signature) _unwrapTypedDataEnvelopeForSender(sender, signature) _validateSignatureWithSender(sender, envelopeHash, signature) Events ECDSASignerAssociated(account, signer) ECDSASignerDisassociated(account) This function is called by the smart account during installation of the module This function is called by the smart account during uninstallation of the module import \"@openzeppelin/contracts/account/modules/P256Validator.sol\"; Functions signer(account) onInstall(data) onUninstall(data) _onInstall(account, qx, qy) _onUninstall(account) _isValidSignatureWithSender(sender, envelopeHash, signature) SignatureValidator isModuleType(moduleTypeId) validateUserOp(userOp, userOpHash) isValidSignatureWithSender(sender, hash, signature) _unwrapTypedDataEnvelopeForSender(sender, signature) _validateSignatureWithSender(sender, envelopeHash, signature) Events P256SignerAssociated(account, qx, qy) P256SignerDisassociated(account) This function is called by the smart account during installation of the module This function is called by the smart account during uninstallation of the module import \"@openzeppelin/contracts/account/modules/RSAValidator.sol\"; Functions signer(account) onInstall(data) onUninstall(data) _onInstall(account, e, n) _onUninstall(account) _isValidSignatureWithSender(sender, envelopeHash, signature) SignatureValidator isModuleType(moduleTypeId) validateUserOp(userOp, userOpHash) isValidSignatureWithSender(sender, hash, signature) _unwrapTypedDataEnvelopeForSender(sender, signature) _validateSignatureWithSender(sender, envelopeHash, signature) Events RSASignerAssociated(account, e, n) RSASignerDisassociated(account) This function is called by the smart account during installation of the module This function is called by the smart account during uninstallation of the module import \"@openzeppelin/contracts/account/modules/MultiERC1271Validator.sol\"; Functions threshold(account) isSigner(account, signer) addSigners(signers) removeSigners(signers) setThreshold(threshold_) onInstall(data) onUninstall(data) _addERC1271Signers(account, signers) _removeSigners(account, signers) _setThreshold(account, threshold_) _validateThreshold(account) _isValidSignatureWithSender(sender, envelopeHash, signature) _decodePackedSignatures(signature) SignatureValidator isModuleType(moduleTypeId) validateUserOp(userOp, userOpHash) isValidSignatureWithSender(sender, hash, signature) _unwrapTypedDataEnvelopeForSender(sender, signature) _validateSignatureWithSender(sender, envelopeHash, signature) Events ERC1271SignersAdded(account, signers) ERC1271SignersRemoved(account, signers) ThresholdChanged(account, threshold) Errors MultiERC1271SignerAlreadyExists(account, signer) MultiERC1271SignerDoesNotExist(account, signer) MultiERC1271UnreachableThreshold(account, signers, threshold) MultiERC1271RemainingSigners(account, remaining) This function is called by the smart account during installation of the module This function is called by the smart account during uninstallation of the module import \"@openzeppelin/contracts/account/modules/SignatureValidator.sol\"; Functions isModuleType(moduleTypeId) validateUserOp(userOp, userOpHash) isValidSignatureWithSender(sender, hash, signature) _isValidSignatureWithSender(sender, hash, signature) _unwrapTypedDataEnvelopeForSender(sender, signature) _validateSignatureWithSender(sender, envelopeHash, signature) IERC7579Module onInstall(data) onUninstall(data) Returns boolean value if module is a certain type Validates a UserOperation Validates a signature using ERC-1271 import \"@openzeppelin/contracts/account/modules/TypedERC1271Executor.sol\"; Functions isModuleType(moduleTypeId) onInstall() onUninstall() execute(account, mode, request, signature) _single(mode, account, request, signature) _batch(mode, account, request, signature) _delegate(mode, account, request, signature) _isValidExecuteRequest(account, requestHash, signature, contentsType) _singleStructHash(account, target, value, data) _batchStructHash(account, targets, values, calldatas) _delegateStructHash(account, target, data) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events ERC7579TypedExecutorInstalled(account) ERC7579TypedExecutorUninstalled(account) IERC5267 EIP712DomainChanged() Errors UnauthorizedTypedExecution(callType, account, sender) Internal Variables bytes constant _EXECUTE_REQUEST_SINGLE_TYPENAME bytes constant _EXECUTE_REQUEST_BATCH_TYPENAME bytes constant _EXECUTE_REQUEST_DELEGATECALL_TYPENAME bytes32 constant _EXECUTE_REQUEST_SINGLE_TYPEHASH bytes32 constant _EXECUTE_REQUEST_BATCH_TYPEHASH bytes32 constant _EXECUTE_REQUEST_DELEGATECALL_TYPEHASH Returns boolean value if module is a certain type This function is called by the smart account during installation of the module This function is called by the smart account during uninstallation of the module import \"@openzeppelin/contracts/account/utils/ERC4337Utils.sol\"; Functions parseValidationData(validationData) packValidationData(aggregator, validAfter, validUntil) packValidationData(sigSuccess, validAfter, validUntil) combineValidationData(validationData1, validationData2) getValidationData(validationData) hash(self) hash(self, entrypoint, chainid) verificationGasLimit(self) callGasLimit(self) maxPriorityFeePerGas(self) maxFeePerGas(self) gasPrice(self) paymaster(self) paymasterVerificationGasLimit(self) paymasterPostOpGasLimit(self) load(self, source) requiredPrefund(self) gasPrice(self) Internal Variables uint256 constant SIG_VALIDATION_SUCCESS uint256 constant SIG_VALIDATION_FAILED import \"@openzeppelin/contracts/account/ERC7579/utils/ERC7579Utils.sol\"; Functions execSingle(execType, executionCalldata) execBatch(execType, executionCalldata) execDelegateCall(execType, executionCalldata) encodeMode(callType, execType, selector, payload) decodeMode(mode) encodeSingle(target, value, callData) decodeSingle(executionCalldata) encodeDelegate(target, callData) decodeDelegate(executionCalldata) encodeBatch(executionBatch) decodeBatch(executionCalldata) Events ERC7579TryExecuteFail(batchExecutionIndex, result) Errors ERC7579UnsupportedCallType(callType) ERC7579UnsupportedExecType(execType) Internal Variables CallType constant CALLTYPE_SINGLE CallType constant CALLTYPE_BATCH CallType constant CALLTYPE_DELEGATECALL ExecType constant EXECTYPE_DEFAULT ExecType constant EXECTYPE_TRY ← Access Common (Tokens) →","title":"Account","component":"contracts","version":"5.x","name":"account","url":"/contracts/5.x/api/account.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"AccountBase ","hash":"AccountBase","id":2},{"text":"onlyEntryPointOrSelf() modifier","hash":"AccountBase-onlyEntryPointOrSelf--","id":3},{"text":"onlyEntryPoint() modifier","hash":"AccountBase-onlyEntryPoint--","id":4},{"text":"entryPoint() → contract IEntryPoint public","hash":"AccountBase-entryPoint--","id":5},{"text":"getNonce() → uint256 public","hash":"AccountBase-getNonce--","id":6},{"text":"getNonce(uint192 key) → uint256 public","hash":"AccountBase-getNonce-uint192-","id":7},{"text":"validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash, uint256 missingAccountFunds) → uint256 public","hash":"AccountBase-validateUserOp-struct-PackedUserOperation-bytes32-uint256-","id":8},{"text":"executeUserOp(struct PackedUserOperation userOp, bytes32) public","hash":"AccountBase-executeUserOp-struct-PackedUserOperation-bytes32-","id":9},{"text":"_validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → uint256 internal","hash":"AccountBase-_validateUserOp-struct-PackedUserOperation-bytes32-","id":10},{"text":"_payPrefund(uint256 missingAccountFunds) internal","hash":"AccountBase-_payPrefund-uint256-","id":11},{"text":"_checkEntryPoint() internal","hash":"AccountBase-_checkEntryPoint--","id":12},{"text":"_checkEntryPointOrSelf() internal","hash":"AccountBase-_checkEntryPointOrSelf--","id":13},{"text":"receive() external","hash":"AccountBase-receive--","id":14},{"text":"AccountEntryPointRestricted() error","hash":"AccountBase-AccountEntryPointRestricted--","id":15},{"text":"AccountERC7579 ","hash":"AccountERC7579","id":16},{"text":"isValidSignature(bytes32 hash, bytes signature) → bytes4 public","hash":"AccountERC7579-isValidSignature-bytes32-bytes-","id":17},{"text":"_validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → address signer, uint256 validationData internal","hash":"AccountERC7579-_validateUserOp-struct-PackedUserOperation-bytes32-","id":18},{"text":"accountId() → string public","hash":"AccountERC7579-accountId--","id":19},{"text":"supportsExecutionMode(bytes32 encodedMode) → bool public","hash":"AccountERC7579-supportsExecutionMode-bytes32-","id":20},{"text":"supportsModule(uint256 moduleTypeId) → bool public","hash":"AccountERC7579-supportsModule-uint256-","id":21},{"text":"execute(bytes32 mode, bytes executionCalldata) public","hash":"AccountERC7579-execute-bytes32-bytes-","id":22},{"text":"executeFromExecutor(bytes32 mode, bytes executionCalldata) → bytes[] public","hash":"AccountERC7579-executeFromExecutor-bytes32-bytes-","id":23},{"text":"_supportsExecutionMode(bytes32 encodedMode) → bool internal","hash":"AccountERC7579-_supportsExecutionMode-bytes32-","id":24},{"text":"_execute(Mode mode, bytes executionCalldata) → bytes[] returnData internal","hash":"AccountERC7579-_execute-Mode-bytes-","id":25},{"text":"installModule(uint256 moduleTypeId, address module, bytes initData) public","hash":"AccountERC7579-installModule-uint256-address-bytes-","id":26},{"text":"uninstallModule(uint256 moduleTypeId, address module, bytes deInitData) public","hash":"AccountERC7579-uninstallModule-uint256-address-bytes-","id":27},{"text":"fallback() external","hash":"AccountERC7579-fallback--","id":28},{"text":"AccountECDSA ","hash":"AccountECDSA","id":29},{"text":"constructor(address signerAddr) internal","hash":"AccountECDSA-constructor-address-","id":30},{"text":"signer() → address public","hash":"AccountECDSA-signer--","id":31},{"text":"_validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → uint256 internal","hash":"AccountECDSA-_validateUserOp-struct-PackedUserOperation-bytes32-","id":32},{"text":"_validateSignature(bytes32 hash, bytes signature) → bool internal","hash":"AccountECDSA-_validateSignature-bytes32-bytes-","id":33},{"text":"AccountEIP7702 ","hash":"AccountEIP7702","id":34},{"text":"constructor(string name, string version) public","hash":"AccountEIP7702-constructor-string-string-","id":35},{"text":"AccountP256 ","hash":"AccountP256","id":36},{"text":"constructor(bytes32 qx, bytes32 qy) internal","hash":"AccountP256-constructor-bytes32-bytes32-","id":37},{"text":"signer() → bytes32 qx, bytes32 qy public","hash":"AccountP256-signer--","id":38},{"text":"_validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → uint256 internal","hash":"AccountP256-_validateUserOp-struct-PackedUserOperation-bytes32-","id":39},{"text":"_validateSignature(bytes32 hash, bytes signature) → bool internal","hash":"AccountP256-_validateSignature-bytes32-bytes-","id":40},{"text":"AccountRSA ","hash":"AccountRSA","id":41},{"text":"constructor(bytes e, bytes n) internal","hash":"AccountRSA-constructor-bytes-bytes-","id":42},{"text":"signer() → bytes e, bytes n public","hash":"AccountRSA-signer--","id":43},{"text":"_validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → uint256 internal","hash":"AccountRSA-_validateUserOp-struct-PackedUserOperation-bytes32-","id":44},{"text":"_validateSignature(bytes32 hash, bytes signature) → bool internal","hash":"AccountRSA-_validateSignature-bytes32-bytes-","id":45},{"text":"Extensions","hash":"extensions","id":46},{"text":"AccountERC7579Hooked ","hash":"AccountERC7579Hooked","id":47},{"text":"withHook() modifier","hash":"AccountERC7579Hooked-withHook--","id":48},{"text":"_isModuleInstalled(uint256 moduleTypeId, address module, bytes data) → bool internal","hash":"AccountERC7579Hooked-_isModuleInstalled-uint256-address-bytes-","id":49},{"text":"_execute(Mode mode, bytes executionCalldata) → bytes[] internal","hash":"AccountERC7579Hooked-_execute-Mode-bytes-","id":50},{"text":"_installModule(uint256 moduleTypeId, address module, bytes initData) internal","hash":"AccountERC7579Hooked-_installModule-uint256-address-bytes-","id":51},{"text":"_uninstallModule(uint256 moduleTypeId, address module, bytes deInitData) internal","hash":"AccountERC7579Hooked-_uninstallModule-uint256-address-bytes-","id":52},{"text":"_supportsModule(uint256 moduleTypeId) → bool internal","hash":"AccountERC7579Hooked-_supportsModule-uint256-","id":53},{"text":"_isHookInstalled(address module) → bool internal","hash":"AccountERC7579Hooked-_isHookInstalled-address-","id":54},{"text":"_fallback() internal","hash":"AccountERC7579Hooked-_fallback--","id":55},{"text":"Modules","hash":"modules","id":56},{"text":"Validators","hash":"validators","id":57},{"text":"ECDSAValidator ","hash":"ECDSAValidator","id":58},{"text":"signer(address account) → address public","hash":"ECDSAValidator-signer-address-","id":59},{"text":"onInstall(bytes data) public","hash":"ECDSAValidator-onInstall-bytes-","id":60},{"text":"onUninstall(bytes data) public","hash":"ECDSAValidator-onUninstall-bytes-","id":61},{"text":"_onInstall(address account, address signerAddr) internal","hash":"ECDSAValidator-_onInstall-address-address-","id":62},{"text":"_onUninstall(address account) internal","hash":"ECDSAValidator-_onUninstall-address-","id":63},{"text":"_isValidSignatureWithSender(address sender, bytes32 envelopeHash, bytes signature) → bool internal","hash":"ECDSAValidator-_isValidSignatureWithSender-address-bytes32-bytes-","id":64},{"text":"ECDSASignerAssociated(address indexed account, address indexed signer) event","hash":"ECDSAValidator-ECDSASignerAssociated-address-address-","id":65},{"text":"ECDSASignerDisassociated(address indexed account) event","hash":"ECDSAValidator-ECDSASignerDisassociated-address-","id":66},{"text":"P256Validator ","hash":"P256Validator","id":67},{"text":"signer(address account) → bytes32, bytes32 public","hash":"P256Validator-signer-address-","id":68},{"text":"onInstall(bytes data) public","hash":"P256Validator-onInstall-bytes-","id":69},{"text":"onUninstall(bytes data) public","hash":"P256Validator-onUninstall-bytes-","id":70},{"text":"_onInstall(address account, bytes32 qx, bytes32 qy) internal","hash":"P256Validator-_onInstall-address-bytes32-bytes32-","id":71},{"text":"_onUninstall(address account) internal","hash":"P256Validator-_onUninstall-address-","id":72},{"text":"_isValidSignatureWithSender(address sender, bytes32 envelopeHash, bytes signature) → bool internal","hash":"P256Validator-_isValidSignatureWithSender-address-bytes32-bytes-","id":73},{"text":"P256SignerAssociated(address indexed account, bytes32 qx, bytes32 qy) event","hash":"P256Validator-P256SignerAssociated-address-bytes32-bytes32-","id":74},{"text":"P256SignerDisassociated(address indexed account) event","hash":"P256Validator-P256SignerDisassociated-address-","id":75},{"text":"RSAValidator ","hash":"RSAValidator","id":76},{"text":"signer(address account) → bytes e, bytes n public","hash":"RSAValidator-signer-address-","id":77},{"text":"onInstall(bytes data) public","hash":"RSAValidator-onInstall-bytes-","id":78},{"text":"onUninstall(bytes data) public","hash":"RSAValidator-onUninstall-bytes-","id":79},{"text":"_onInstall(address account, bytes e, bytes n) internal","hash":"RSAValidator-_onInstall-address-bytes-bytes-","id":80},{"text":"_onUninstall(address account) internal","hash":"RSAValidator-_onUninstall-address-","id":81},{"text":"_isValidSignatureWithSender(address sender, bytes32 envelopeHash, bytes signature) → bool internal","hash":"RSAValidator-_isValidSignatureWithSender-address-bytes32-bytes-","id":82},{"text":"RSASignerAssociated(address indexed account, bytes e, bytes n) event","hash":"RSAValidator-RSASignerAssociated-address-bytes-bytes-","id":83},{"text":"RSASignerDisassociated(address indexed account) event","hash":"RSAValidator-RSASignerDisassociated-address-","id":84},{"text":"MultiERC1271Validator ","hash":"MultiERC1271Validator","id":85},{"text":"threshold(address account) → uint256 public","hash":"MultiERC1271Validator-threshold-address-","id":86},{"text":"isSigner(address account, address signer) → bool public","hash":"MultiERC1271Validator-isSigner-address-address-","id":87},{"text":"addSigners(address[] signers) public","hash":"MultiERC1271Validator-addSigners-address---","id":88},{"text":"removeSigners(address[] signers) public","hash":"MultiERC1271Validator-removeSigners-address---","id":89},{"text":"setThreshold(uint256 threshold_) public","hash":"MultiERC1271Validator-setThreshold-uint256-","id":90},{"text":"onInstall(bytes data) public","hash":"MultiERC1271Validator-onInstall-bytes-","id":91},{"text":"onUninstall(bytes data) public","hash":"MultiERC1271Validator-onUninstall-bytes-","id":92},{"text":"_addERC1271Signers(address account, address[] signers) internal","hash":"MultiERC1271Validator-_addERC1271Signers-address-address---","id":93},{"text":"_removeSigners(address account, address[] signers) internal","hash":"MultiERC1271Validator-_removeSigners-address-address---","id":94},{"text":"_setThreshold(address account, uint256 threshold_) internal","hash":"MultiERC1271Validator-_setThreshold-address-uint256-","id":95},{"text":"_validateThreshold(address account) internal","hash":"MultiERC1271Validator-_validateThreshold-address-","id":96},{"text":"_isValidSignatureWithSender(address sender, bytes32 envelopeHash, bytes signature) → bool internal","hash":"MultiERC1271Validator-_isValidSignatureWithSender-address-bytes32-bytes-","id":97},{"text":"_decodePackedSignatures(bytes signature) → address[] signers, bytes[] signatures internal","hash":"MultiERC1271Validator-_decodePackedSignatures-bytes-","id":98},{"text":"ERC1271SignersAdded(address indexed account, address[] indexed signers) event","hash":"MultiERC1271Validator-ERC1271SignersAdded-address-address---","id":99},{"text":"ERC1271SignersRemoved(address indexed account, address[] indexed signers) event","hash":"MultiERC1271Validator-ERC1271SignersRemoved-address-address---","id":100},{"text":"ThresholdChanged(address indexed account, uint256 threshold) event","hash":"MultiERC1271Validator-ThresholdChanged-address-uint256-","id":101},{"text":"MultiERC1271SignerAlreadyExists(address account, address signer) error","hash":"MultiERC1271Validator-MultiERC1271SignerAlreadyExists-address-address-","id":102},{"text":"MultiERC1271SignerDoesNotExist(address account, address signer) error","hash":"MultiERC1271Validator-MultiERC1271SignerDoesNotExist-address-address-","id":103},{"text":"MultiERC1271UnreachableThreshold(address account, uint256 signers, uint256 threshold) error","hash":"MultiERC1271Validator-MultiERC1271UnreachableThreshold-address-uint256-uint256-","id":104},{"text":"MultiERC1271RemainingSigners(address account, uint256 remaining) error","hash":"MultiERC1271Validator-MultiERC1271RemainingSigners-address-uint256-","id":105},{"text":"SignatureValidator ","hash":"SignatureValidator","id":106},{"text":"isModuleType(uint256 moduleTypeId) → bool public","hash":"SignatureValidator-isModuleType-uint256-","id":107},{"text":"validateUserOp(struct PackedUserOperation userOp, bytes32 userOpHash) → uint256 public","hash":"SignatureValidator-validateUserOp-struct-PackedUserOperation-bytes32-","id":108},{"text":"isValidSignatureWithSender(address sender, bytes32 hash, bytes signature) → bytes4 public","hash":"SignatureValidator-isValidSignatureWithSender-address-bytes32-bytes-","id":109},{"text":"_isValidSignatureWithSender(address sender, bytes32 hash, bytes signature) → bool internal","hash":"SignatureValidator-_isValidSignatureWithSender-address-bytes32-bytes-","id":110},{"text":"_unwrapTypedDataEnvelopeForSender(address sender, bytes signature) → bytes32 senderSeparator, bytes32 appSeparator, bytes32 envelopeHash, bytes originalSig internal","hash":"SignatureValidator-_unwrapTypedDataEnvelopeForSender-address-bytes-","id":111},{"text":"_validateSignatureWithSender(address sender, bytes32 envelopeHash, bytes signature) → bool internal","hash":"SignatureValidator-_validateSignatureWithSender-address-bytes32-bytes-","id":112},{"text":"Executors","hash":"executors","id":113},{"text":"TypedERC1271Executor ","hash":"TypedERC1271Executor","id":114},{"text":"isModuleType(uint256 moduleTypeId) → bool public","hash":"TypedERC1271Executor-isModuleType-uint256-","id":115},{"text":"onInstall(bytes) public","hash":"TypedERC1271Executor-onInstall-bytes-","id":116},{"text":"onUninstall(bytes) public","hash":"TypedERC1271Executor-onUninstall-bytes-","id":117},{"text":"execute(address account, Mode mode, bytes request, bytes signature) public","hash":"TypedERC1271Executor-execute-address-Mode-bytes-bytes-","id":118},{"text":"_single(Mode mode, address account, bytes request, bytes signature) internal","hash":"TypedERC1271Executor-_single-Mode-address-bytes-bytes-","id":119},{"text":"_batch(Mode mode, address account, bytes request, bytes signature) internal","hash":"TypedERC1271Executor-_batch-Mode-address-bytes-bytes-","id":120},{"text":"_delegate(Mode mode, address account, bytes request, bytes signature) internal","hash":"TypedERC1271Executor-_delegate-Mode-address-bytes-bytes-","id":121},{"text":"_isValidExecuteRequest(address account, bytes32 requestHash, bytes signature, bytes contentsType) → bool internal","hash":"TypedERC1271Executor-_isValidExecuteRequest-address-bytes32-bytes-bytes-","id":122},{"text":"_singleStructHash(address account, address target, uint256 value, bytes data) → bytes32 internal","hash":"TypedERC1271Executor-_singleStructHash-address-address-uint256-bytes-","id":123},{"text":"_batchStructHash(address account, address[] targets, uint256[] values, bytes[] calldatas) → bytes32 internal","hash":"TypedERC1271Executor-_batchStructHash-address-address---uint256---bytes---","id":124},{"text":"_delegateStructHash(address account, address target, bytes data) → bytes32 internal","hash":"TypedERC1271Executor-_delegateStructHash-address-address-bytes-","id":125},{"text":"ERC7579TypedExecutorInstalled(address indexed account) event","hash":"TypedERC1271Executor-ERC7579TypedExecutorInstalled-address-","id":126},{"text":"ERC7579TypedExecutorUninstalled(address indexed account) event","hash":"TypedERC1271Executor-ERC7579TypedExecutorUninstalled-address-","id":127},{"text":"UnauthorizedTypedExecution(CallType callType, address account, address sender) error","hash":"TypedERC1271Executor-UnauthorizedTypedExecution-CallType-address-address-","id":128},{"text":"bytes _EXECUTE_REQUEST_SINGLE_TYPENAME internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_SINGLE_TYPENAME-bytes","id":129},{"text":"bytes _EXECUTE_REQUEST_BATCH_TYPENAME internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_BATCH_TYPENAME-bytes","id":130},{"text":"bytes _EXECUTE_REQUEST_DELEGATECALL_TYPENAME internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_DELEGATECALL_TYPENAME-bytes","id":131},{"text":"bytes32 _EXECUTE_REQUEST_SINGLE_TYPEHASH internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_SINGLE_TYPEHASH-bytes32","id":132},{"text":"bytes32 _EXECUTE_REQUEST_BATCH_TYPEHASH internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_BATCH_TYPEHASH-bytes32","id":133},{"text":"bytes32 _EXECUTE_REQUEST_DELEGATECALL_TYPEHASH internal constant","hash":"TypedERC1271Executor-_EXECUTE_REQUEST_DELEGATECALL_TYPEHASH-bytes32","id":134},{"text":"Utilities","hash":"utilities","id":135},{"text":"ERC4337Utils ","hash":"ERC4337Utils","id":136},{"text":"parseValidationData(uint256 validationData) → address aggregator, uint48 validAfter, uint48 validUntil internal","hash":"ERC4337Utils-parseValidationData-uint256-","id":137},{"text":"packValidationData(address aggregator, uint48 validAfter, uint48 validUntil) → uint256 internal","hash":"ERC4337Utils-packValidationData-address-uint48-uint48-","id":138},{"text":"packValidationData(bool sigSuccess, uint48 validAfter, uint48 validUntil) → uint256 internal","hash":"ERC4337Utils-packValidationData-bool-uint48-uint48-","id":139},{"text":"combineValidationData(uint256 validationData1, uint256 validationData2) → uint256 internal","hash":"ERC4337Utils-combineValidationData-uint256-uint256-","id":140},{"text":"getValidationData(uint256 validationData) → address aggregator, bool outOfTimeRange internal","hash":"ERC4337Utils-getValidationData-uint256-","id":141},{"text":"hash(struct PackedUserOperation self) → bytes32 internal","hash":"ERC4337Utils-hash-struct-PackedUserOperation-","id":142},{"text":"hash(struct PackedUserOperation self, address entrypoint, uint256 chainid) → bytes32 internal","hash":"ERC4337Utils-hash-struct-PackedUserOperation-address-uint256-","id":143},{"text":"verificationGasLimit(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-verificationGasLimit-struct-PackedUserOperation-","id":144},{"text":"callGasLimit(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-callGasLimit-struct-PackedUserOperation-","id":145},{"text":"maxPriorityFeePerGas(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-maxPriorityFeePerGas-struct-PackedUserOperation-","id":146},{"text":"maxFeePerGas(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-maxFeePerGas-struct-PackedUserOperation-","id":147},{"text":"gasPrice(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-gasPrice-struct-PackedUserOperation-","id":148},{"text":"paymaster(struct PackedUserOperation self) → address internal","hash":"ERC4337Utils-paymaster-struct-PackedUserOperation-","id":149},{"text":"paymasterVerificationGasLimit(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-paymasterVerificationGasLimit-struct-PackedUserOperation-","id":150},{"text":"paymasterPostOpGasLimit(struct PackedUserOperation self) → uint256 internal","hash":"ERC4337Utils-paymasterPostOpGasLimit-struct-PackedUserOperation-","id":151},{"text":"load(struct ERC4337Utils.UserOpInfo self, struct PackedUserOperation source) internal","hash":"ERC4337Utils-load-struct-ERC4337Utils-UserOpInfo-struct-PackedUserOperation-","id":152},{"text":"requiredPrefund(struct ERC4337Utils.UserOpInfo self) → uint256 internal","hash":"ERC4337Utils-requiredPrefund-struct-ERC4337Utils-UserOpInfo-","id":153},{"text":"gasPrice(struct ERC4337Utils.UserOpInfo self) → uint256 internal","hash":"ERC4337Utils-gasPrice-struct-ERC4337Utils-UserOpInfo-","id":154},{"text":"uint256 SIG_VALIDATION_SUCCESS internal constant","hash":"ERC4337Utils-SIG_VALIDATION_SUCCESS-uint256","id":155},{"text":"uint256 SIG_VALIDATION_FAILED internal constant","hash":"ERC4337Utils-SIG_VALIDATION_FAILED-uint256","id":156},{"text":"ERC7579Utils ","hash":"ERC7579Utils","id":157},{"text":"execSingle(ExecType execType, bytes executionCalldata) → bytes[] returnData internal","hash":"ERC7579Utils-execSingle-ExecType-bytes-","id":158},{"text":"execBatch(ExecType execType, bytes executionCalldata) → bytes[] returnData internal","hash":"ERC7579Utils-execBatch-ExecType-bytes-","id":159},{"text":"execDelegateCall(ExecType execType, bytes executionCalldata) → bytes[] returnData internal","hash":"ERC7579Utils-execDelegateCall-ExecType-bytes-","id":160},{"text":"encodeMode(CallType callType, ExecType execType, ModeSelector selector, ModePayload payload) → Mode mode internal","hash":"ERC7579Utils-encodeMode-CallType-ExecType-ModeSelector-ModePayload-","id":161},{"text":"decodeMode(Mode mode) → CallType callType, ExecType execType, ModeSelector selector, ModePayload payload internal","hash":"ERC7579Utils-decodeMode-Mode-","id":162},{"text":"encodeSingle(address target, uint256 value, bytes callData) → bytes executionCalldata internal","hash":"ERC7579Utils-encodeSingle-address-uint256-bytes-","id":163},{"text":"decodeSingle(bytes executionCalldata) → address target, uint256 value, bytes callData internal","hash":"ERC7579Utils-decodeSingle-bytes-","id":164},{"text":"encodeDelegate(address target, bytes callData) → bytes executionCalldata internal","hash":"ERC7579Utils-encodeDelegate-address-bytes-","id":165},{"text":"decodeDelegate(bytes executionCalldata) → address target, bytes callData internal","hash":"ERC7579Utils-decodeDelegate-bytes-","id":166},{"text":"encodeBatch(struct Execution[] executionBatch) → bytes executionCalldata internal","hash":"ERC7579Utils-encodeBatch-struct-Execution---","id":167},{"text":"decodeBatch(bytes executionCalldata) → struct Execution[] executionBatch internal","hash":"ERC7579Utils-decodeBatch-bytes-","id":168},{"text":"ERC7579TryExecuteFail(uint256 batchExecutionIndex, bytes result) event","hash":"ERC7579Utils-ERC7579TryExecuteFail-uint256-bytes-","id":169},{"text":"ERC7579UnsupportedCallType(CallType callType) error","hash":"ERC7579Utils-ERC7579UnsupportedCallType-CallType-","id":170},{"text":"ERC7579UnsupportedExecType(ExecType execType) error","hash":"ERC7579Utils-ERC7579UnsupportedExecType-ExecType-","id":171},{"text":"CallType CALLTYPE_SINGLE internal constant","hash":"ERC7579Utils-CALLTYPE_SINGLE-CallType","id":172},{"text":"CallType CALLTYPE_BATCH internal constant","hash":"ERC7579Utils-CALLTYPE_BATCH-CallType","id":173},{"text":"CallType CALLTYPE_DELEGATECALL internal constant","hash":"ERC7579Utils-CALLTYPE_DELEGATECALL-CallType","id":174},{"text":"ExecType EXECTYPE_DEFAULT internal constant","hash":"ERC7579Utils-EXECTYPE_DEFAULT-ExecType","id":175},{"text":"ExecType EXECTYPE_TRY internal constant","hash":"ERC7579Utils-EXECTYPE_TRY-ExecType","id":176}]},"22":{"id":22,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/finance This directory includes primitives for financial systems: VestingWallet handles the vesting of Ether and ERC-20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given, customizable, vesting schedule. import \"@openzeppelin/contracts/finance/VestingWallet.sol\"; A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for a beneficiary until a specified time. Since the wallet is Ownable, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended. Functions constructor(beneficiary, startTimestamp, durationSeconds) receive() start() duration() end() released() released(token) releasable() releasable(token) release() release(token) vestedAmount(timestamp) vestedAmount(token, timestamp) _vestingSchedule(totalAllocation, timestamp) Ownable owner() _checkOwner() renounceOwnership() transferOwnership(newOwner) _transferOwnership(newOwner) Events EtherReleased(amount) ERC20Released(token, amount) Ownable OwnershipTransferred(previousOwner, newOwner) Errors Ownable OwnableUnauthorizedAccount(account) OwnableInvalidOwner(owner) Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the vesting duration of the vesting wallet. The contract should be able to receive Eth. Getter for the start timestamp. Getter for the vesting duration. Getter for the end timestamp. Amount of eth already released Amount of token already released Getter for the amount of releasable eth. Getter for the amount of releasable token tokens. token should be the address of an IERC20 contract. Release the native token (ether) that have already vested. Emits a EtherReleased event. Release the tokens that have already vested. Emits a ERC20Released event. Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve. Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve. Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for an asset given its total historical allocation. ← ERC 1155 Governance →","title":"Finance","component":"contracts","version":"5.x","name":"finance","url":"/contracts/5.x/api/finance.html","titles":[{"text":"Contracts","hash":"contracts","id":1},{"text":"VestingWallet ","hash":"VestingWallet","id":2},{"text":"constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) public","hash":"VestingWallet-constructor-address-uint64-uint64-","id":3},{"text":"receive() external","hash":"VestingWallet-receive--","id":4},{"text":"start() → uint256 public","hash":"VestingWallet-start--","id":5},{"text":"duration() → uint256 public","hash":"VestingWallet-duration--","id":6},{"text":"end() → uint256 public","hash":"VestingWallet-end--","id":7},{"text":"released() → uint256 public","hash":"VestingWallet-released--","id":8},{"text":"released(address token) → uint256 public","hash":"VestingWallet-released-address-","id":9},{"text":"releasable() → uint256 public","hash":"VestingWallet-releasable--","id":10},{"text":"releasable(address token) → uint256 public","hash":"VestingWallet-releasable-address-","id":11},{"text":"release() public","hash":"VestingWallet-release--","id":12},{"text":"release(address token) public","hash":"VestingWallet-release-address-","id":13},{"text":"vestedAmount(uint64 timestamp) → uint256 public","hash":"VestingWallet-vestedAmount-uint64-","id":14},{"text":"vestedAmount(address token, uint64 timestamp) → uint256 public","hash":"VestingWallet-vestedAmount-address-uint64-","id":15},{"text":"_vestingSchedule(uint256 totalAllocation, uint64 timestamp) → uint256 internal","hash":"VestingWallet-_vestingSchedule-uint256-uint64-","id":16},{"text":"EtherReleased(uint256 amount) event","hash":"VestingWallet-EtherReleased-uint256-","id":17},{"text":"ERC20Released(address indexed token, uint256 amount) event","hash":"VestingWallet-ERC20Released-address-uint256-","id":18}]},"23":{"id":23,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/governance This directory includes primitives for on-chain governance. This modular system of Governor contracts allows the deployment on-chain voting protocols similar to Compound’s Governor Alpha & Bravo and beyond, through the ability to easily customize multiple aspects of the protocol. For a guided experience, set up your Governor contract using Contracts Wizard. For a written walkthrough, check out our guide on How to set up on-chain governance. Governor: The core contract that contains all the logic and primitives. It is abstract and requires choosing one of each of the modules below, or custom ones. Votes modules determine the source of voting power, and sometimes quorum number. GovernorVotes: Extracts voting weight from an ERC20Votes, or since v4.5 an ERC721Votes token. GovernorVotesQuorumFraction: Combines with GovernorVotes to set the quorum as a fraction of the total token supply. Counting modules determine valid voting options. GovernorCountingSimple: Simple voting mechanism with 3 voting options: Against, For and Abstain. GovernorCountingFractional: A more modular voting system that allows a user to vote with only part of its voting power, and to split that weight arbitrarily between the 3 different options (Against, For and Abstain). Timelock extensions add a delay for governance decisions to be executed. The workflow is extended to require a queue step before execution. With these modules, proposals are executed by the external timelock contract, thus it is the timelock that has to hold the assets that are being governed. GovernorTimelockAccess: Connects with an instance of an AccessManager. This allows restrictions (and delays) enforced by the manager to be considered by the Governor and integrated into the AccessManager’s \"schedule + execute\" workflow. GovernorTimelockControl: Connects with an instance of TimelockController. Allows multiple proposers and executors, in addition to the Governor itself. GovernorTimelockCompound: Connects with an instance of Compound’s Timelock contract. Other extensions can customize the behavior or interface in multiple ways. GovernorStorage: Stores the proposal details onchain and provides enumerability of the proposals. This can be useful for some L2 chains where storage is cheap compared to calldata. GovernorSettings: Manages some of the settings (voting delay, voting period duration, and proposal threshold) in a way that can be updated through a governance proposal, without requiring an upgrade. GovernorPreventLateQuorum: Ensures there is a minimum voting period after quorum is reached as a security protection against large voters. In addition to modules and extensions, the core contract requires a few virtual functions to be implemented to your particular specifications: votingDelay(): Delay (in ERC-6372 clock) since the proposal is submitted until voting power is fixed and voting starts. This can be used to enforce a delay after a proposal is published for users to buy tokens, or delegate their votes. votingPeriod(): Delay (in ERC-6372 clock) since the proposal starts until voting ends. quorum(uint256 timepoint): Quorum required for a proposal to be successful. This function includes a timepoint argument (see ERC-6372) so the quorum can adapt through time, for example, to follow a token’s totalSupply. Functions of the Governor contract do not include access control. If you want to restrict access, you should add these checks by overloading the particular functions. Among these, Governor._cancel is internal by default, and you will have to expose it (with the right access control mechanism) yourself if this function is needed. import \"@openzeppelin/contracts/governance/IGovernor.sol\"; Interface of the Governor core. Functions name() version() COUNTING_MODE() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing(proposalId) votingDelay() votingPeriod() quorum(timepoint) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) hasVoted(proposalId, account) propose(targets, values, calldatas, description) queue(targets, values, calldatas, descriptionHash) execute(targets, values, calldatas, descriptionHash) cancel(targets, values, calldatas, descriptionHash) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) IERC6372 clock() CLOCK_MODE() IERC165 supportsInterface(interfaceId) Events ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) Errors GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Name of the governor instance (used in building the EIP-712 domain separator). Version of the governor instance (used in building the EIP-712 domain separator). Default: \"1\" A description of the possible support values for castVote and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example support=bravo&quorum=for,abstain. There are 2 standard keys: support and quorum. support=bravo refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in GovernorBravo. quorum=bravo means that only For votes are counted towards quorum. quorum=for,abstain means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded params, it should include this under a params key with a unique name that describes the behavior. For example: params=fractional might refer to a scheme where votes are divided fractionally between for/against/abstain. params=erc721 might refer to a scheme where specific NFTs are delegated to vote. The string can be decoded by the standard URLSearchParams JavaScript class. Hashing function used to (re)build the proposal id from the proposal details.. Current state of a proposal, following Compound’s convention The number of votes required in order for a voter to become a proposer. Timepoint used to retrieve user’s votes and quorum. If using block number (as per Compound’s Comp), the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the beginning of the following block. Timepoint at which votes close. If using block number, votes close at the end of this block, so it is possible to cast a vote during this block. The account that created a proposal. The time when a queued proposal becomes executable (\"ETA\"). Unlike proposalSnapshot and proposalDeadline, this doesn’t use the governor clock, and instead relies on the executor’s clock which may be different. In most cases this will be a timestamp. Whether a proposal needs to be queued before execution. Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see ERC-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts. While this interface returns a uint256, timepoints are stored as uint48 following the ERC-6372 clock type. Consequently this value must fit in a uint48 (when added to the current clock). See IERC6372.clock. Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see ERC-6372) this contract uses. The votingDelay can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay. This value is stored when the proposal is submitted so that possible changes to the value do not affect proposals that have already been submitted. The type used to save it is a uint32. Consequently, while this interface returns a uint256, the value it returns should fit in a uint32. Minimum number of cast voted required for a proposal to be successful. The timepoint parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see ERC20Votes). Voting power of an account at a specific timepoint. Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or multiple), ERC20Votes tokens. Voting power of an account at a specific timepoint given additional encoded parameters. Returns whether account has cast a vote on proposalId. Create a new proposal. Vote start after a delay specified by IGovernor.votingDelay and lasts for a duration specified by IGovernor.votingPeriod. Emits a ProposalCreated event. The state of the Governor and targets may change between the proposal creation and its execution. This may be the result of third party actions on the targeted contracts, or other governor proposals. For example, the balance of this contract could be updated or its access control permissions may be modified, possibly compromising the proposal’s ability to execute successfully (e.g. the governor doesn’t have enough value to cover a proposal with multiple transfers). Queue a proposal. Some governors require this step to be performed before execution can happen. If queuing is not necessary, this function may revert. Queuing a proposal requires the quorum to be reached, the vote to be successful, and the deadline to be reached. Emits a ProposalQueued event. Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the deadline to be reached. Depending on the governor it might also be required that the proposal was queued and that some delay passed. Emits a ProposalExecuted event. Some modules can modify the requirements for execution, for example by adding an additional timelock. Cancel a proposal. A proposal is cancellable by the proposer, but only while it is Pending state, i.e. before the vote starts. Emits a ProposalCanceled event. Cast a vote Emits a VoteCast event. Cast a vote with a reason Emits a VoteCast event. Cast a vote with a reason and additional encoded parameters Emits a VoteCast or VoteCastWithParams event depending on the length of params. Cast a vote using the voter’s signature, including ERC-1271 signature support. Emits a VoteCast event. Cast a vote with a reason and additional encoded parameters using the voter’s signature, including ERC-1271 signature support. Emits a VoteCast or VoteCastWithParams event depending on the length of params. Emitted when a proposal is created. Emitted when a proposal is queued. Emitted when a proposal is executed. Emitted when a proposal is canceled. Emitted when a vote is cast without params. Note: support values should be seen as buckets. Their interpretation depends on the voting module used. Emitted when a vote is cast with params. Note: support values should be seen as buckets. Their interpretation depends on the voting module used. params are additional encoded parameters. Their interpretation also depends on the voting module used. Empty proposal or a mismatch between the parameters length for a proposal call. The vote was already cast. Token deposits are disabled in this contract. The account is not a proposer. The account is not the governance executor. The proposalId doesn’t exist. The current state of a proposal is not the required for performing an operation. The expectedStates is a bitmap with the bits enabled for each ProposalState enum position counting from right to left. If expectedState is bytes32(0), the proposal is expected to not be in any state (i.e. not exist). This is the case when a proposal that is expected to be unset is already initiated (the proposal is duplicated). See Governor._encodeStateBitmap. The voting period set is not a valid period. The proposer does not have the required votes to create a proposal. The proposer is not allowed to create a proposal. The vote type used is not valid for the corresponding counting module. The provided params buffer is not supported by the counting module. Queue operation is not implemented for this governor. Execute should be called directly. The proposal hasn’t been queued yet. The proposal has already been queued. The provided signature is not valid for the expected voter. If the voter is a contract, the signature is not valid using IERC1271.isValidSignature. import \"@openzeppelin/contracts/governance/Governor.sol\"; Core of the governance system, designed to be extended through various modules. This contract is abstract and requires several functions to be implemented in various modules: A counting module must implement quorum, _quorumReached, _voteSucceeded and _countVote A voting module must implement _getVotes Additionally, votingPeriod must also be implemented Modifiers onlyGovernance() Functions constructor(name_) receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Restricts a function so it can only be executed through governance proposals. For example, governance parameter setters in GovernorSettings are protected using this modifier. The governance executing address may be different from the Governor’s own address, for example it could be a timelock. This can be customized by modules by overriding _executor. The executor is only able to invoke these functions during the execution of the governor’s execute function, and not under any other circumstances. Thus, for example, additional timelock proposers are not able to change governance parameters without going through the governance protocol (since v4.6). Sets the value for name and version Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract) See IERC165.supportsInterface. See IGovernor.name. See IGovernor.version. See IGovernor.hashProposal. The proposal id is produced by hashing the ABI encoded targets array, the values array, the calldatas array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the ProposalCreated event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts. See IGovernor.state. See IGovernor.proposalThreshold. See IGovernor.proposalSnapshot. See IGovernor.proposalDeadline. See IGovernor.proposalProposer. See IGovernor.proposalEta. See IGovernor.proposalNeedsQueuing. Reverts if the msg.sender is not the executor. In case the executor is not this contract itself, the function reverts if msg.data is not whitelisted as a result of an execute operation. See onlyGovernance. Amount of votes already cast passes the threshold limit. Is the proposal successful or not. Get the voting weight of account at a specific timepoint, for a vote as described by params. Register a vote for proposalId by account with a given support, voting weight and voting params. Note: Support is generic and can represent various things depending on the voting system used. Default additional encoded parameters used by castVote methods that don’t include them Note: Should be overridden by specific implementations to use an appropriate value, the meaning of the additional params, in the context of that implementation See IGovernor.propose. This function has opt-in frontrunning protection, described in _isValidDescriptionForProposer. Internal propose mechanism. Can be overridden to add more logic on proposal creation. Emits a IGovernor.ProposalCreated event. See IGovernor.queue. Internal queuing mechanism. Can be overridden (without a super call) to modify the way queuing is performed (for example adding a vault/timelock). This is empty by default, and must be overridden to implement queuing. This function returns a timestamp that describes the expected ETA for execution. If the returned value is 0 (which is the default value), the core will consider queueing did not succeed, and the public queue function will revert. Calling this function directly will NOT check the current state of the proposal, or emit the ProposalQueued event. Queuing a proposal should be done using queue. See IGovernor.execute. Internal execution mechanism. Can be overridden (without a super call) to modify the way execution is performed (for example adding a vault/timelock). Calling this function directly will NOT check the current state of the proposal, set the executed flag to true or emit the ProposalExecuted event. Executing a proposal should be done using execute or {_execute}. See IGovernor.cancel. Internal cancel mechanism with minimal restrictions. A proposal can be cancelled in any state other than Canceled, Expired, or Executed. Once cancelled a proposal can’t be re-submitted. Emits a IGovernor.ProposalCanceled event. See IGovernor.getVotes. See IGovernor.getVotesWithParams. See IGovernor.castVote. See IGovernor.castVoteWithReason. See IGovernor.castVoteWithReasonAndParams. See IGovernor.castVoteBySig. See IGovernor.castVoteWithReasonAndParamsBySig. Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve voting weight using IGovernor.getVotes and call the _countVote internal function. Uses the _defaultParams(). Emits a IGovernor.VoteCast event. Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve voting weight using IGovernor.getVotes and call the _countVote internal function. Emits a IGovernor.VoteCast event. Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of relay is redundant. Address through which the governor executes action. Will be overloaded by module that execute actions through another contract such as a timelock. See IERC721Receiver.onERC721Received. Receiving tokens is disabled if the governance executor is other than the governor itself (eg. when using with a timelock). See IERC1155Receiver.onERC1155Received. Receiving tokens is disabled if the governance executor is other than the governor itself (eg. when using with a timelock). See IERC1155Receiver.onERC1155BatchReceived. Receiving tokens is disabled if the governance executor is other than the governor itself (eg. when using with a timelock). Encodes a ProposalState into a bytes32 representation where each bit enabled corresponds to the underlying position in the ProposalState enum. For example: 0x000…​10000 ^^------ …​ ^----- Succeeded ^---- Defeated ^--- Canceled ^-- Active ^- Pending Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting). Description of the clock Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see ERC-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts. While this interface returns a uint256, timepoints are stored as uint48 following the ERC-6372 clock type. Consequently this value must fit in a uint48 (when added to the current clock). See IERC6372.clock. Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see ERC-6372) this contract uses. The votingDelay can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay. This value is stored when the proposal is submitted so that possible changes to the value do not affect proposals that have already been submitted. The type used to save it is a uint32. Consequently, while this interface returns a uint256, the value it returns should fit in a uint32. Minimum number of cast voted required for a proposal to be successful. The timepoint parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see ERC20Votes). import \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\"; Extension of Governor for simple, 3 options, vote counting. Functions COUNTING_MODE() hasVoted(proposalId, account) proposalVotes(proposalId) _quorumReached(proposalId) _voteSucceeded(proposalId) _countVote(proposalId, account, support, totalWeight, ) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _getVotes(account, timepoint, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) See IGovernor.COUNTING_MODE. See IGovernor.hasVoted. Accessor to the internal vote counts. See Governor._quorumReached. See Governor._voteSucceeded. In this module, the forVotes must be strictly over the againstVotes. See Governor._countVote. In this module, the support follows the VoteType enum (from Governor Bravo). import \"@openzeppelin/contracts/governance/extensions/GovernorCountingFractional.sol\"; Extension of Governor for fractional voting. Similar to GovernorCountingSimple, this contract is a votes counting module for Governor that supports 3 options: Against, For, Abstain. Additionally, it includes a fourth option: Fractional, which allows voters to split their voting power amongst the other 3 options. Votes cast with the Fractional support must be accompanied by a params argument that is three packed uint128 values representing the weight the delegate assigns to Against, For, and Abstain respectively. For those votes cast for the other 3 options, the params argument must be empty. This is mostly useful when the delegate is a contract that implements its own rules for voting. These delegate-contracts can cast fractional votes according to the preferences of multiple entities delegating their voting power. Some example use cases include: Voting from tokens that are held by a DeFi pool Voting from an L2 with tokens held by a bridge Voting privately from a shielded pool using zero knowledge proofs. Based on ScopeLift’s GovernorCountingFractional[https://github.com/ScopeLift/flexible-voting/blob/e5de2efd1368387b840931f19f3c184c85842761/src/GovernorCountingFractional.sol] Functions COUNTING_MODE() hasVoted(proposalId, account) usedVotes(proposalId, account) proposalVotes(proposalId) _quorumReached(proposalId) _voteSucceeded(proposalId) _countVote(proposalId, account, support, totalWeight, params) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _getVotes(account, timepoint, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors GovernorExceedRemainingWeight(voter, usedVotes, remainingWeight) IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Internal Variables uint8 constant VOTE_TYPE_FRACTIONAL See IGovernor.COUNTING_MODE. See IGovernor.hasVoted. Get the number of votes already cast by account for a proposal with proposalId. Useful for integrations that allow delegates to cast rolling, partial votes. Get current distribution of votes for a given proposal. See Governor._quorumReached. See Governor._voteSucceeded. In this module, forVotes must be > againstVotes. See Governor._countVote. Function that records the delegate’s votes. Executing this function consumes (part of) the delegate’s weight on the proposal. This weight can be distributed amongst the 3 options (Against, For, Abstain) by specifying a fractional support. This counting module supports two vote casting modes: nominal and fractional. Nominal: A nominal vote is cast by setting support to one of the 3 bravo options (Against, For, Abstain). Fractional: A fractional vote is cast by setting support to type(uint8).max (255). Casting a nominal vote requires params to be empty and consumes the delegate’s full remaining weight on the proposal for the specified support option. This is similar to the GovernorCountingSimple module and follows the VoteType enum from Governor Bravo. As a consequence, no vote weight remains unspent so no further voting is possible (for this proposalId and this account). Casting a fractional vote consumes a fraction of the delegate’s remaining weight on the proposal according to the weights the delegate assigns to each support option (Against, For, Abstain respectively). The sum total of the three decoded vote weights must be less than or equal to the delegate’s remaining weight on the proposal (i.e. their checkpointed total weight minus votes already cast on the proposal). This format can be produced using: abi.encodePacked(uint128(againstVotes), uint128(forVotes), uint128(abstainVotes)) Consider that fractional voting restricts the number of casted vote (in each category) to 128 bits. Depending on how many decimals the underlying token has, a single voter may require to split their vote into multiple vote operations. For precision higher than ~30 decimals, large token holders may require an potentially large number of calls to cast all their votes. The voter has the possibility to cast all the remaining votes in a single operation using the traditional \"bravo\" vote. A fractional vote params uses more votes than are available for that user. import \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\"; Extension of Governor for voting weight extraction from an ERC20Votes token, or since v4.5 an ERC721Votes token. Functions constructor(tokenAddress) token() clock() CLOCK_MODE() _getVotes(account, timepoint, ) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) The token that voting power is sourced from. Clock (as specified in ERC-6372) is set to match the token’s clock. Fallback to block numbers if the token does not implement ERC-6372. Machine-readable description of the clock as specified in ERC-6372. import \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\"; Extension of Governor for voting weight extraction from an ERC20Votes token and a quorum expressed as a fraction of the total supply. Functions constructor(quorumNumeratorValue) quorumNumerator() quorumNumerator(timepoint) quorumDenominator() quorum(timepoint) updateQuorumNumerator(newQuorumNumerator) _updateQuorumNumerator(newQuorumNumerator) GovernorVotes token() clock() CLOCK_MODE() _getVotes(account, timepoint, ) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) votingDelay() votingPeriod() BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events QuorumNumeratorUpdated(oldQuorumNumerator, newQuorumNumerator) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors GovernorInvalidQuorumFraction(quorumNumerator, quorumDenominator) IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Initialize quorum as a fraction of the token’s total supply. The fraction is specified as numerator / denominator. By default the denominator is 100, so quorum is specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be customized by overriding quorumDenominator. Returns the current quorum numerator. See quorumDenominator. Returns the quorum numerator at a specific timepoint. See quorumDenominator. Returns the quorum denominator. Defaults to 100, but may be overridden. Returns the quorum for a timepoint, in terms of number of votes: supply * numerator / denominator. Changes the quorum numerator. Emits a QuorumNumeratorUpdated event. Requirements: Must be called through a governance proposal. New numerator must be smaller or equal to the denominator. Changes the quorum numerator. Emits a QuorumNumeratorUpdated event. Requirements: New numerator must be smaller or equal to the denominator. The quorum set is not a valid fraction. import \"@openzeppelin/contracts/governance/extensions/GovernorTimelockAccess.sol\"; This module connects a Governor instance to an accessManager instance, allowing the governor to make calls that are delay-restricted by the manager using the normal queue workflow. An optional base delay is applied to operations that are not delayed externally by the manager. Execution of a proposal will be delayed as much as necessary to meet the required delays of all of its operations. This extension allows the governor to hold and use its own assets and permissions, unlike GovernorTimelockControl and GovernorTimelockCompound, where the timelock is a separate contract that must be the one to hold assets and permissions. Operations that are delay-restricted by the manager, however, will be executed through the AccessManager.execute function. Some operations may be cancelable in the AccessManager by the admin or a set of guardians, depending on the restricted function being invoked. Since proposals are atomic, the cancellation by a guardian of a single operation in a proposal will cause all of the proposal to become unable to execute. Consider proposing cancellable operations separately. By default, function calls will be routed through the associated AccessManager whenever it claims the target function to be restricted by it. However, admins may configure the manager to make that claim for functions that a governor would want to call directly (e.g., token transfers) in an attempt to deny it access to those functions. To mitigate this attack vector, the governor is able to ignore the restrictions claimed by the AccessManager using setAccessManagerIgnored. While permanent denial of service is mitigated, temporary DoS may still be technically possible. All of the governor’s own functions (e.g., setBaseDelaySeconds) ignore the AccessManager by default. AccessManager does not support scheduling more than one operation with the same target and calldata at the same time. See AccessManager.schedule for a workaround. Functions constructor(manager, initialBaseDelay) accessManager() baseDelaySeconds() setBaseDelaySeconds(newBaseDelay) _setBaseDelaySeconds(newBaseDelay) isAccessManagerIgnored(target, selector) setAccessManagerIgnored(target, selectors, ignored) _setAccessManagerIgnored(target, selector, ignored) proposalExecutionPlan(proposalId) proposalNeedsQueuing(proposalId) propose(targets, values, calldatas, description) _queueOperations(proposalId, targets, , calldatas, ) _executeOperations(proposalId, targets, values, calldatas, ) _cancel(targets, values, calldatas, descriptionHash) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) execute(targets, values, calldatas, descriptionHash) cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events BaseDelaySet(oldBaseDelaySeconds, newBaseDelaySeconds) AccessManagerIgnoredSet(target, selector, ignored) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors GovernorUnmetDelay(proposalId, neededTimestamp) GovernorMismatchedNonce(proposalId, expectedNonce, actualNonce) GovernorLockedIgnore() IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Initialize the governor with an accessManager and initial base delay. Returns the accessManager instance associated to this governor. Base delay that will be applied to all function calls. Some may be further delayed by their associated AccessManager authority; in this case the final delay will be the maximum of the base delay and the one demanded by the authority. Execution delays are processed by the AccessManager contracts, and according to that contract are expressed in seconds. Therefore, the base delay is also in seconds, regardless of the governor’s clock mode. Change the value of baseDelaySeconds. This operation can only be invoked through a governance proposal. Change the value of baseDelaySeconds. Internal function without access control. Check if restrictions from the associated accessManager are ignored for a target function. Returns true when the target function will be invoked directly regardless of AccessManager settings for the function. See setAccessManagerIgnored and Security Considerations above. Configure whether restrictions from the associated accessManager are ignored for a target function. See Security Considerations above. Internal version of setAccessManagerIgnored without access restriction. Public accessor to check the execution plan, including the number of seconds that the proposal will be delayed since queuing, an array indicating which of the proposal actions will be executed indirectly through the associated accessManager, and another indicating which will be scheduled in queue. Note that those that must be scheduled are cancellable by AccessManager guardians. See IGovernor.proposalNeedsQueuing. See IGovernor.propose Mechanism to queue a proposal, potentially scheduling some of its operations in the AccessManager. The execution delay is chosen based on the delay information retrieved in propose. This value may be off if the delay was updated since proposal creation. In this case, the proposal needs to be recreated. Mechanism to execute a proposal, potentially going through AccessManager.execute for delayed operations. See {IGovernor-_cancel} import \"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\"; Extension of Governor that binds the execution process to an instance of TimelockController. This adds a delay, enforced by the TimelockController to all successful proposal (in addition to the voting duration). The Governor needs the proposer (and ideally the executor and canceller) roles for the Governor to work properly. Using this model means the proposal will be operated by the TimelockController and not by the Governor. Thus, the assets and permissions must be attached to the TimelockController. Any asset sent to the Governor will be inaccessible from a proposal, unless executed via Governor.relay. Setting up the TimelockController to have additional proposers or cancellers besides the governor is very risky, as it grants them the ability to: 1) execute operations as the timelock, and thus possibly performing operations or accessing funds that are expected to only be accessible through a vote, and 2) block governance proposals that have been approved by the voters, effectively executing a Denial of Service attack. Functions constructor(timelockAddress) state(proposalId) timelock() proposalNeedsQueuing() _queueOperations(proposalId, targets, values, calldatas, descriptionHash) _executeOperations(proposalId, targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) _executor() updateTimelock(newTimelock) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) execute(targets, values, calldatas, descriptionHash) cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events TimelockChange(oldTimelock, newTimelock) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Set the timelock. Overridden version of the Governor.state function that considers the status reported by the timelock. Public accessor to check the address of the timelock See IGovernor.proposalNeedsQueuing. Function to queue a proposal to the timelock. Overridden version of the Governor._executeOperations function that runs the already queued proposal through the timelock. Overridden version of the Governor._cancel function to cancel the timelocked proposal if it has already been queued. Address through which the governor executes action. In this case, the timelock. Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. It is not recommended to change the timelock while there are other queued governance proposals. Emitted when the timelock controller used for proposal execution is modified. import \"@openzeppelin/contracts/governance/extensions/GovernorTimelockCompound.sol\"; Extension of Governor that binds the execution process to a Compound Timelock. This adds a delay, enforced by the external timelock to all successful proposal (in addition to the voting duration). The Governor needs to be the admin of the timelock for any operation to be performed. A public, unrestricted, GovernorTimelockCompound.acceptAdmin is available to accept ownership of the timelock. Using this model means the proposal will be operated by the TimelockController and not by the Governor. Thus, the assets and permissions must be attached to the TimelockController. Any asset sent to the Governor will be inaccessible from a proposal, unless executed via Governor.relay. Functions constructor(timelockAddress) state(proposalId) timelock() proposalNeedsQueuing() _queueOperations(proposalId, targets, values, calldatas, ) _executeOperations(proposalId, targets, values, calldatas, ) _cancel(targets, values, calldatas, descriptionHash) _executor() __acceptAdmin() updateTimelock(newTimelock) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) execute(targets, values, calldatas, descriptionHash) cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events TimelockChange(oldTimelock, newTimelock) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Set the timelock. Overridden version of the Governor.state function with added support for the Expired state. Public accessor to check the address of the timelock See IGovernor.proposalNeedsQueuing. Function to queue a proposal to the timelock. Overridden version of the Governor._executeOperations function that run the already queued proposal through the timelock. Overridden version of the Governor._cancel function to cancel the timelocked proposal if it has already been queued. Address through which the governor executes action. In this case, the timelock. Accept admin right over the timelock. Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. For security reasons, the timelock must be handed over to another admin before setting up a new one. The two operations (hand over the timelock) and do the update can be batched in a single proposal. Note that if the timelock admin has been handed over in a previous operation, we refuse updates made through the timelock if admin of the timelock has already been accepted and the operation is executed outside the scope of governance. It is not recommended to change the timelock while there are other queued governance proposals. Emitted when the timelock controller used for proposal execution is modified. import \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\"; Extension of Governor for settings updatable through governance. Functions constructor(initialVotingDelay, initialVotingPeriod, initialProposalThreshold) votingDelay() votingPeriod() proposalThreshold() setVotingDelay(newVotingDelay) setVotingPeriod(newVotingPeriod) setProposalThreshold(newProposalThreshold) _setVotingDelay(newVotingDelay) _setVotingPeriod(newVotingPeriod) _setProposalThreshold(newProposalThreshold) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events VotingDelaySet(oldVotingDelay, newVotingDelay) VotingPeriodSet(oldVotingPeriod, newVotingPeriod) ProposalThresholdSet(oldProposalThreshold, newProposalThreshold) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Initialize the governance parameters. See IGovernor.votingDelay. See IGovernor.votingPeriod. See Governor.proposalThreshold. Update the voting delay. This operation can only be performed through a governance proposal. Emits a VotingDelaySet event. Update the voting period. This operation can only be performed through a governance proposal. Emits a VotingPeriodSet event. Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a ProposalThresholdSet event. Internal setter for the voting delay. Emits a VotingDelaySet event. Internal setter for the voting period. Emits a VotingPeriodSet event. Internal setter for the proposal threshold. Emits a ProposalThresholdSet event. import \"@openzeppelin/contracts/governance/extensions/GovernorPreventLateQuorum.sol\"; A module that ensures there is a minimum voting period after quorum is reached. This prevents a large voter from swaying a vote and triggering quorum at the last minute, by ensuring there is always time for other voters to react and try to oppose the decision. If a vote causes quorum to be reached, the proposal’s voting period may be extended so that it does not end before at least a specified time has passed (the \"vote extension\" parameter). This parameter can be set through a governance proposal. Functions constructor(initialVoteExtension) proposalDeadline(proposalId) _castVote(proposalId, account, support, reason, params) lateQuorumVoteExtension() setLateQuorumVoteExtension(newVoteExtension) _setLateQuorumVoteExtension(newVoteExtension) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) _propose(targets, values, calldatas, description, proposer) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events ProposalExtended(proposalId, extendedDeadline) LateQuorumVoteExtensionSet(oldVoteExtension, newVoteExtension) IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Initializes the vote extension parameter: the time in either number of blocks or seconds (depending on the governor clock mode) that is required to pass since the moment a proposal reaches quorum until its voting period ends. If necessary the voting period will be extended beyond the one set during proposal creation. Returns the proposal deadline, which may have been extended beyond that set at proposal creation, if the proposal reached quorum late in the voting period. See Governor.proposalDeadline. Casts a vote and detects if it caused quorum to be reached, potentially extending the voting period. See Governor._castVote. May emit a ProposalExtended event. Returns the current value of the vote extension parameter: the number of blocks that are required to pass from the time a proposal reaches quorum until its voting period ends. Changes the lateQuorumVoteExtension. This operation can only be performed by the governance executor, generally through a governance proposal. Emits a LateQuorumVoteExtensionSet event. Changes the lateQuorumVoteExtension. This is an internal function that can be exposed in a public function like setLateQuorumVoteExtension if another access control mechanism is needed. Emits a LateQuorumVoteExtensionSet event. Emitted when a proposal deadline is pushed back due to reaching quorum late in its voting period. Emitted when the lateQuorumVoteExtension parameter is changed. import \"@openzeppelin/contracts/governance/extensions/GovernorStorage.sol\"; Extension of Governor that implements storage of proposal details. This modules also provides primitives for the enumerability of proposals. Use cases for this module include: - UIs that explore the proposal state without relying on event indexing. - Using only the proposalId as an argument in the Governor.queue and Governor.execute functions for L2 chains where storage is cheap compared to calldata. Functions _propose(targets, values, calldatas, description, proposer) queue(proposalId) execute(proposalId) cancel(proposalId) proposalCount() proposalDetails(proposalId) proposalDetailsAt(index) Governor receive() supportsInterface(interfaceId) name() version() hashProposal(targets, values, calldatas, descriptionHash) state(proposalId) proposalThreshold() proposalSnapshot(proposalId) proposalDeadline(proposalId) proposalProposer(proposalId) proposalEta(proposalId) proposalNeedsQueuing() _checkGovernance() _quorumReached(proposalId) _voteSucceeded(proposalId) _getVotes(account, timepoint, params) _countVote(proposalId, account, support, totalWeight, params) _defaultParams() propose(targets, values, calldatas, description) queue(targets, values, calldatas, descriptionHash) _queueOperations(, , , , ) execute(targets, values, calldatas, descriptionHash) _executeOperations(, targets, values, calldatas, ) cancel(targets, values, calldatas, descriptionHash) _cancel(targets, values, calldatas, descriptionHash) getVotes(account, timepoint) getVotesWithParams(account, timepoint, params) castVote(proposalId, support) castVoteWithReason(proposalId, support, reason) castVoteWithReasonAndParams(proposalId, support, reason, params) castVoteBySig(proposalId, support, voter, signature) castVoteWithReasonAndParamsBySig(proposalId, support, voter, reason, params, signature) _castVote(proposalId, account, support, reason) _castVote(proposalId, account, support, reason, params) relay(target, value, data) _executor() onERC721Received(, , , ) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) _encodeStateBitmap(proposalState) _isValidDescriptionForProposer(proposer, description) clock() CLOCK_MODE() votingDelay() votingPeriod() quorum(timepoint) BALLOT_TYPEHASH() EXTENDED_BALLOT_TYPEHASH() IGovernor COUNTING_MODE() hasVoted(proposalId, account) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IGovernor ProposalCreated(proposalId, proposer, targets, values, signatures, calldatas, voteStart, voteEnd, description) ProposalQueued(proposalId, etaSeconds) ProposalExecuted(proposalId) ProposalCanceled(proposalId) VoteCast(voter, proposalId, support, weight, reason) VoteCastWithParams(voter, proposalId, support, weight, reason, params) IERC5267 EIP712DomainChanged() Errors IGovernor GovernorInvalidProposalLength(targets, calldatas, values) GovernorAlreadyCastVote(voter) GovernorDisabledDeposit() GovernorOnlyProposer(account) GovernorOnlyExecutor(account) GovernorNonexistentProposal(proposalId) GovernorUnexpectedProposalState(proposalId, current, expectedStates) GovernorInvalidVotingPeriod(votingPeriod) GovernorInsufficientProposerVotes(proposer, votes, threshold) GovernorRestrictedProposer(proposer) GovernorInvalidVoteType() GovernorInvalidVoteParams() GovernorQueueNotImplemented() GovernorNotQueuedProposal(proposalId) GovernorAlreadyQueuedProposal(proposalId) GovernorInvalidSignature(voter) Nonces InvalidAccountNonce(account, currentNonce) Hook into the proposing mechanism Version of {IGovernorTimelock-queue} with only proposalId as an argument. Version of IGovernor.execute with only proposalId as an argument. ProposalId version of IGovernor.cancel. Returns the number of stored proposals. Returns the details of a proposalId. Reverts if proposalId is not a known proposal. Returns the details (including the proposalId) of a proposal given its sequential index. import \"@openzeppelin/contracts/governance/utils/Votes.sol\"; This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units must be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see ERC721Votes. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement _getVotingUnits (for example, make it return ERC721.balanceOf), and can use _transferVotingUnits to track a change in the distribution of those units (in the previous example, it would be included in ERC721._update). Functions clock() CLOCK_MODE() getVotes(account) getPastVotes(account, timepoint) getPastTotalSupply(timepoint) _getTotalSupply() delegates(account) delegate(delegatee) delegateBySig(delegatee, nonce, expiry, v, r, s) _delegate(account, delegatee) _transferVotingUnits(from, to, amount) _moveDelegateVotes(from, to, amount) _numCheckpoints(account) _checkpoints(account, pos) _getVotingUnits() Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IVotes DelegateChanged(delegator, fromDelegate, toDelegate) DelegateVotesChanged(delegate, previousVotes, newVotes) IERC5267 EIP712DomainChanged() Errors ERC6372InconsistentClock() ERC5805FutureLookup(timepoint, clock) IVotes VotesExpiredSignature(expiry) Nonces InvalidAccountNonce(account, currentNonce) Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case CLOCK_MODE should be overridden as well to match. Machine-readable description of the clock as specified in ERC-6372. Returns the current amount of votes that account has. Returns the amount of votes that account had at a specific moment in the past. If the clock() is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: timepoint must be in the past. If operating using block numbers, the block must be already mined. Returns the total supply of votes available at a specific moment in the past. If the clock() is configured to use block numbers, this will return the value at the end of the corresponding block. This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: timepoint must be in the past. If operating using block numbers, the block must be already mined. Returns the current total supply of votes. Returns the delegate that account has chosen. Delegates votes from the sender to delegatee. Delegates votes from signer to delegatee. Delegate all of account’s voting units to `delegatee. Emits events IVotes.DelegateChanged and IVotes.DelegateVotesChanged. Transfers, mints, or burns voting units. To register a mint, from should be zero. To register a burn, to should be zero. Total supply of voting units will be adjusted with mints and burns. Moves delegated votes from one delegate to another. Get number of checkpoints for account. Get the pos-th checkpoint for account. Must return the voting units held by an account. The clock was incorrectly modified. Lookup to future votes is not available. In a governance system, the TimelockController contract is in charge of introducing a delay between a proposal and its execution. It can be used with or without a Governor. import \"@openzeppelin/contracts/governance/TimelockController.sol\"; Contract module which acts as a timelocked controller. When set as the owner of an Ownable smart contract, it enforces a timelock on all onlyOwner maintenance operations. This gives time for users of the controlled contract to exit before a potentially dangerous maintenance operation is applied. By default, this contract is self administered, meaning administration tasks have to go through the timelock process. The proposer (resp executor) role is in charge of proposing (resp executing) operations. A common use case is to position this TimelockController as the owner of a smart contract, with a multisig or a DAO as the sole proposer. Modifiers onlyRoleOrOpenRole(role) Functions constructor(minDelay, proposers, executors, admin) receive() supportsInterface(interfaceId) isOperation(id) isOperationPending(id) isOperationReady(id) isOperationDone(id) getTimestamp(id) getOperationState(id) getMinDelay() hashOperation(target, value, data, predecessor, salt) hashOperationBatch(targets, values, payloads, predecessor, salt) schedule(target, value, data, predecessor, salt, delay) scheduleBatch(targets, values, payloads, predecessor, salt, delay) cancel(id) execute(target, value, payload, predecessor, salt) executeBatch(targets, values, payloads, predecessor, salt) _execute(target, value, data) updateDelay(newDelay) _encodeStateBitmap(operationState) PROPOSER_ROLE() EXECUTOR_ROLE() CANCELLER_ROLE() ERC1155Holder onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) ERC721Holder onERC721Received(, , , ) AccessControl hasRole(role, account) _checkRole(role) _checkRole(role, account) getRoleAdmin(role) grantRole(role, account) revokeRole(role, account) renounceRole(role, callerConfirmation) _setRoleAdmin(role, adminRole) _grantRole(role, account) _revokeRole(role, account) DEFAULT_ADMIN_ROLE() Events CallScheduled(id, index, target, value, data, predecessor, delay) CallExecuted(id, index, target, value, data) CallSalt(id, salt) Cancelled(id) MinDelayChange(oldDuration, newDuration) IAccessControl RoleAdminChanged(role, previousAdminRole, newAdminRole) RoleGranted(role, account, sender) RoleRevoked(role, account, sender) Errors TimelockInvalidOperationLength(targets, payloads, values) TimelockInsufficientDelay(delay, minDelay) TimelockUnexpectedOperationState(operationId, expectedStates) TimelockUnexecutedPredecessor(predecessorId) TimelockUnauthorizedCaller(caller) IAccessControl AccessControlUnauthorizedAccount(account, neededRole) AccessControlBadConfirmation() Internal Variables uint256 constant _DONE_TIMESTAMP Modifier to make a function callable only by a certain role. In addition to checking the sender’s role, address(0) 's role is also considered. Granting a role to address(0) is equivalent to enabling this role for everyone. Initializes the contract with the following parameters: minDelay: initial minimum delay in seconds for operations proposers: accounts to be granted proposer and canceller roles executors: accounts to be granted executor role admin: optional account to be granted admin role; disable with zero address The optional admin can aid with initial configuration of roles after deployment without being subject to delay, but this role should be subsequently renounced in favor of administration through timelocked proposals. Previous versions of this contract would assign this admin to the deployer automatically and should be renounced as well. Contract might receive/hold ETH as part of the maintenance process. See IERC165.supportsInterface. Returns whether an id corresponds to a registered operation. This includes both Waiting, Ready, and Done operations. Returns whether an operation is pending or not. Note that a \"pending\" operation may also be \"ready\". Returns whether an operation is ready for execution. Note that a \"ready\" operation is also \"pending\". Returns whether an operation is done or not. Returns the timestamp at which an operation becomes ready (0 for unset operations, 1 for done operations). Returns operation state. Returns the minimum delay in seconds for an operation to become valid. This value can be changed by executing an operation that calls updateDelay. Returns the identifier of an operation containing a single transaction. Returns the identifier of an operation containing a batch of transactions. Schedule an operation containing a single transaction. Emits CallSalt if salt is nonzero, and CallScheduled. Requirements: the caller must have the 'proposer' role. Schedule an operation containing a batch of transactions. Emits CallSalt if salt is nonzero, and one CallScheduled event per transaction in the batch. Requirements: the caller must have the 'proposer' role. Cancel an operation. Requirements: the caller must have the 'canceller' role. Execute an (ready) operation containing a single transaction. Emits a CallExecuted event. Requirements: the caller must have the 'executor' role. Execute an (ready) operation containing a batch of transactions. Emits one CallExecuted event per transaction in the batch. Requirements: the caller must have the 'executor' role. Execute an operation’s call. Changes the minimum timelock duration for future operations. Emits a MinDelayChange event. Requirements: the caller must be the timelock itself. This can only be achieved by scheduling and later executing an operation where the timelock is the target and the data is the ABI-encoded call to this function. Encodes a OperationState into a bytes32 representation where each bit enabled corresponds to the underlying position in the OperationState enum. For example: 0x000…​1000 ^^----- …​ ^---- Done ^--- Ready ^-- Waiting ^- Unset Emitted when a call is scheduled as part of operation id. Emitted when a call is performed as part of operation id. Emitted when new proposal is scheduled with non-zero salt. Emitted when operation id is cancelled. Emitted when the minimum delay for future operations is modified. Mismatch between the parameters length for an operation call. The schedule operation doesn’t meet the minimum delay. The current state of an operation is not as required. The expectedStates is a bitmap with the bits enabled for each OperationState enum position counting from right to left. See _encodeStateBitmap. The predecessor to an operation not yet done. The caller account is not authorized. Operation: A transaction (or a set of transactions) that is the subject of the timelock. It has to be scheduled by a proposer and executed by an executor. The timelock enforces a minimum delay between the proposition and the execution (see operation lifecycle). If the operation contains multiple transactions (batch mode), they are executed atomically. Operations are identified by the hash of their content. Operation status: Unset: An operation that is not part of the timelock mechanism. Waiting: An operation that has been scheduled, before the timer expires. Ready: An operation that has been scheduled, after the timer expires. Pending: An operation that is either waiting or ready. Done: An operation that has been executed. Predecessor: An (optional) dependency between operations. An operation can depend on another operation (its predecessor), forcing the execution order of these two operations. Role: Admin: An address (smart contract or EOA) that is in charge of granting the roles of Proposer and Executor. Proposer: An address (smart contract or EOA) that is in charge of scheduling (and cancelling) operations. Executor: An address (smart contract or EOA) that is in charge of executing operations once the timelock has expired. This role can be given to the zero address to allow anyone to execute operations. Operation executed by the TimelockController can contain one or multiple subsequent calls. Depending on whether you need to multiple calls to be executed atomically, you can either use simple or batched operations. Both operations contain: Target, the address of the smart contract that the timelock should operate on. Value, in wei, that should be sent with the transaction. Most of the time this will be 0. Ether can be deposited before-end or passed along when executing the transaction. Data, containing the encoded function selector and parameters of the call. This can be produced using a number of tools. For example, a maintenance operation granting role ROLE to ACCOUNT can be encoded using web3js as follows: const data = timelock.contract.methods.grantRole(ROLE, ACCOUNT).encodeABI() Predecessor, that specifies a dependency between operations. This dependency is optional. Use bytes32(0) if the operation does not have any dependency. Salt, used to disambiguate two otherwise identical operations. This can be any random value. In the case of batched operations, target, value and data are specified as arrays, which must be of the same length. Timelocked operations are identified by a unique id (their hash) and follow a specific lifecycle: Unset → Pending → Pending + Ready → Done By calling schedule (or scheduleBatch), a proposer moves the operation from the Unset to the Pending state. This starts a timer that must be longer than the minimum delay. The timer expires at a timestamp accessible through the getTimestamp method. Once the timer expires, the operation automatically gets the Ready state. At this point, it can be executed. By calling execute (or executeBatch), an executor triggers the operation’s underlying transactions and moves it to the Done state. If the operation has a predecessor, it has to be in the Done state for this transition to succeed. cancel allows proposers to cancel any Pending operation. This resets the operation to the Unset state. It is thus possible for a proposer to re-schedule an operation that has been cancelled. In this case, the timer restarts when the operation is rescheduled. Operations status can be queried using the functions: isOperationPending(bytes32) isOperationReady(bytes32) isOperationDone(bytes32) The admins are in charge of managing proposers and executors. For the timelock to be self-governed, this role should only be given to the timelock itself. Upon deployment, the admin role can be granted to any address (in addition to the timelock itself). After further configuration and testing, this optional admin should renounce its role such that all further maintenance operations have to go through the timelock process. The proposers are in charge of scheduling (and cancelling) operations. This is a critical role, that should be given to governing entities. This could be an EOA, a multisig, or a DAO. Proposer fight: Having multiple proposers, while providing redundancy in case one becomes unavailable, can be dangerous. As proposer have their say on all operations, they could cancel operations they disagree with, including operations to remove them for the proposers. This role is identified by the PROPOSER_ROLE value: 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 The executors are in charge of executing the operations scheduled by the proposers once the timelock expires. Logic dictates that multisig or DAO that are proposers should also be executors in order to guarantee operations that have been scheduled will eventually be executed. However, having additional executors can reduce the cost (the executing transaction does not require validation by the multisig or DAO that proposed it), while ensuring whoever is in charge of execution cannot trigger actions that have not been scheduled by the proposers. Alternatively, it is possible to allow any address to execute a proposal once the timelock has expired by granting the executor role to the zero address. This role is identified by the EXECUTOR_ROLE value: 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 A live contract without at least one proposer and one executor is locked. Make sure these roles are filled by reliable entities before the deployer renounces its administrative rights in favour of the timelock contract itself. See the AccessControl documentation to learn more about role management. ← Finance Interfaces →","title":"Governance","component":"contracts","version":"5.x","name":"governance","url":"/contracts/5.x/api/governance.html","titles":[{"text":"Governor","hash":"governor","id":1},{"text":"Core","hash":"core","id":2},{"text":"IGovernor ","hash":"IGovernor","id":3},{"text":"name() → string external","hash":"IGovernor-name--","id":4},{"text":"version() → string external","hash":"IGovernor-version--","id":5},{"text":"COUNTING_MODE() → string external","hash":"IGovernor-COUNTING_MODE--","id":6},{"text":"hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 external","hash":"IGovernor-hashProposal-address---uint256---bytes---bytes32-","id":7},{"text":"state(uint256 proposalId) → enum IGovernor.ProposalState external","hash":"IGovernor-state-uint256-","id":8},{"text":"proposalThreshold() → uint256 external","hash":"IGovernor-proposalThreshold--","id":9},{"text":"proposalSnapshot(uint256 proposalId) → uint256 external","hash":"IGovernor-proposalSnapshot-uint256-","id":10},{"text":"proposalDeadline(uint256 proposalId) → uint256 external","hash":"IGovernor-proposalDeadline-uint256-","id":11},{"text":"proposalProposer(uint256 proposalId) → address external","hash":"IGovernor-proposalProposer-uint256-","id":12},{"text":"proposalEta(uint256 proposalId) → uint256 external","hash":"IGovernor-proposalEta-uint256-","id":13},{"text":"proposalNeedsQueuing(uint256 proposalId) → bool external","hash":"IGovernor-proposalNeedsQueuing-uint256-","id":14},{"text":"votingDelay() → uint256 external","hash":"IGovernor-votingDelay--","id":15},{"text":"votingPeriod() → uint256 external","hash":"IGovernor-votingPeriod--","id":16},{"text":"quorum(uint256 timepoint) → uint256 external","hash":"IGovernor-quorum-uint256-","id":17},{"text":"getVotes(address account, uint256 timepoint) → uint256 external","hash":"IGovernor-getVotes-address-uint256-","id":18},{"text":"getVotesWithParams(address account, uint256 timepoint, bytes params) → uint256 external","hash":"IGovernor-getVotesWithParams-address-uint256-bytes-","id":19},{"text":"hasVoted(uint256 proposalId, address account) → bool external","hash":"IGovernor-hasVoted-uint256-address-","id":20},{"text":"propose(address[] targets, uint256[] values, bytes[] calldatas, string description) → uint256 proposalId external","hash":"IGovernor-propose-address---uint256---bytes---string-","id":21},{"text":"queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 proposalId external","hash":"IGovernor-queue-address---uint256---bytes---bytes32-","id":22},{"text":"execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 proposalId external","hash":"IGovernor-execute-address---uint256---bytes---bytes32-","id":23},{"text":"cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 proposalId external","hash":"IGovernor-cancel-address---uint256---bytes---bytes32-","id":24},{"text":"castVote(uint256 proposalId, uint8 support) → uint256 balance external","hash":"IGovernor-castVote-uint256-uint8-","id":25},{"text":"castVoteWithReason(uint256 proposalId, uint8 support, string reason) → uint256 balance external","hash":"IGovernor-castVoteWithReason-uint256-uint8-string-","id":26},{"text":"castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) → uint256 balance external","hash":"IGovernor-castVoteWithReasonAndParams-uint256-uint8-string-bytes-","id":27},{"text":"castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) → uint256 balance external","hash":"IGovernor-castVoteBySig-uint256-uint8-address-bytes-","id":28},{"text":"castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) → uint256 balance external","hash":"IGovernor-castVoteWithReasonAndParamsBySig-uint256-uint8-address-string-bytes-bytes-","id":29},{"text":"ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description) event","hash":"IGovernor-ProposalCreated-uint256-address-address---uint256---string---bytes---uint256-uint256-string-","id":30},{"text":"ProposalQueued(uint256 proposalId, uint256 etaSeconds) event","hash":"IGovernor-ProposalQueued-uint256-uint256-","id":31},{"text":"ProposalExecuted(uint256 proposalId) event","hash":"IGovernor-ProposalExecuted-uint256-","id":32},{"text":"ProposalCanceled(uint256 proposalId) event","hash":"IGovernor-ProposalCanceled-uint256-","id":33},{"text":"VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason) event","hash":"IGovernor-VoteCast-address-uint256-uint8-uint256-string-","id":34},{"text":"VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params) event","hash":"IGovernor-VoteCastWithParams-address-uint256-uint8-uint256-string-bytes-","id":35},{"text":"GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values) error","hash":"IGovernor-GovernorInvalidProposalLength-uint256-uint256-uint256-","id":36},{"text":"GovernorAlreadyCastVote(address voter) error","hash":"IGovernor-GovernorAlreadyCastVote-address-","id":37},{"text":"GovernorDisabledDeposit() error","hash":"IGovernor-GovernorDisabledDeposit--","id":38},{"text":"GovernorOnlyProposer(address account) error","hash":"IGovernor-GovernorOnlyProposer-address-","id":39},{"text":"GovernorOnlyExecutor(address account) error","hash":"IGovernor-GovernorOnlyExecutor-address-","id":40},{"text":"GovernorNonexistentProposal(uint256 proposalId) error","hash":"IGovernor-GovernorNonexistentProposal-uint256-","id":41},{"text":"GovernorUnexpectedProposalState(uint256 proposalId, enum IGovernor.ProposalState current, bytes32 expectedStates) error","hash":"IGovernor-GovernorUnexpectedProposalState-uint256-enum-IGovernor-ProposalState-bytes32-","id":42},{"text":"GovernorInvalidVotingPeriod(uint256 votingPeriod) error","hash":"IGovernor-GovernorInvalidVotingPeriod-uint256-","id":43},{"text":"GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold) error","hash":"IGovernor-GovernorInsufficientProposerVotes-address-uint256-uint256-","id":44},{"text":"GovernorRestrictedProposer(address proposer) error","hash":"IGovernor-GovernorRestrictedProposer-address-","id":45},{"text":"GovernorInvalidVoteType() error","hash":"IGovernor-GovernorInvalidVoteType--","id":46},{"text":"GovernorInvalidVoteParams() error","hash":"IGovernor-GovernorInvalidVoteParams--","id":47},{"text":"GovernorQueueNotImplemented() error","hash":"IGovernor-GovernorQueueNotImplemented--","id":48},{"text":"GovernorNotQueuedProposal(uint256 proposalId) error","hash":"IGovernor-GovernorNotQueuedProposal-uint256-","id":49},{"text":"GovernorAlreadyQueuedProposal(uint256 proposalId) error","hash":"IGovernor-GovernorAlreadyQueuedProposal-uint256-","id":50},{"text":"GovernorInvalidSignature(address voter) error","hash":"IGovernor-GovernorInvalidSignature-address-","id":51},{"text":"Governor ","hash":"Governor","id":52},{"text":"onlyGovernance() modifier","hash":"Governor-onlyGovernance--","id":53},{"text":"constructor(string name_) internal","hash":"Governor-constructor-string-","id":54},{"text":"receive() external","hash":"Governor-receive--","id":55},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"Governor-supportsInterface-bytes4-","id":56},{"text":"name() → string public","hash":"Governor-name--","id":57},{"text":"version() → string public","hash":"Governor-version--","id":58},{"text":"hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 public","hash":"Governor-hashProposal-address---uint256---bytes---bytes32-","id":59},{"text":"state(uint256 proposalId) → enum IGovernor.ProposalState public","hash":"Governor-state-uint256-","id":60},{"text":"proposalThreshold() → uint256 public","hash":"Governor-proposalThreshold--","id":61},{"text":"proposalSnapshot(uint256 proposalId) → uint256 public","hash":"Governor-proposalSnapshot-uint256-","id":62},{"text":"proposalDeadline(uint256 proposalId) → uint256 public","hash":"Governor-proposalDeadline-uint256-","id":63},{"text":"proposalProposer(uint256 proposalId) → address public","hash":"Governor-proposalProposer-uint256-","id":64},{"text":"proposalEta(uint256 proposalId) → uint256 public","hash":"Governor-proposalEta-uint256-","id":65},{"text":"proposalNeedsQueuing(uint256) → bool public","hash":"Governor-proposalNeedsQueuing-uint256-","id":66},{"text":"_checkGovernance() internal","hash":"Governor-_checkGovernance--","id":67},{"text":"_quorumReached(uint256 proposalId) → bool internal","hash":"Governor-_quorumReached-uint256-","id":68},{"text":"_voteSucceeded(uint256 proposalId) → bool internal","hash":"Governor-_voteSucceeded-uint256-","id":69},{"text":"_getVotes(address account, uint256 timepoint, bytes params) → uint256 internal","hash":"Governor-_getVotes-address-uint256-bytes-","id":70},{"text":"_countVote(uint256 proposalId, address account, uint8 support, uint256 totalWeight, bytes params) → uint256 internal","hash":"Governor-_countVote-uint256-address-uint8-uint256-bytes-","id":71},{"text":"_defaultParams() → bytes internal","hash":"Governor-_defaultParams--","id":72},{"text":"propose(address[] targets, uint256[] values, bytes[] calldatas, string description) → uint256 public","hash":"Governor-propose-address---uint256---bytes---string-","id":73},{"text":"_propose(address[] targets, uint256[] values, bytes[] calldatas, string description, address proposer) → uint256 proposalId internal","hash":"Governor-_propose-address---uint256---bytes---string-address-","id":74},{"text":"queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 public","hash":"Governor-queue-address---uint256---bytes---bytes32-","id":75},{"text":"_queueOperations(uint256, address[], uint256[], bytes[], bytes32) → uint48 internal","hash":"Governor-_queueOperations-uint256-address---uint256---bytes---bytes32-","id":76},{"text":"execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 public","hash":"Governor-execute-address---uint256---bytes---bytes32-","id":77},{"text":"_executeOperations(uint256, address[] targets, uint256[] values, bytes[] calldatas, bytes32) internal","hash":"Governor-_executeOperations-uint256-address---uint256---bytes---bytes32-","id":78},{"text":"cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 public","hash":"Governor-cancel-address---uint256---bytes---bytes32-","id":79},{"text":"_cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 internal","hash":"Governor-_cancel-address---uint256---bytes---bytes32-","id":80},{"text":"getVotes(address account, uint256 timepoint) → uint256 public","hash":"Governor-getVotes-address-uint256-","id":81},{"text":"getVotesWithParams(address account, uint256 timepoint, bytes params) → uint256 public","hash":"Governor-getVotesWithParams-address-uint256-bytes-","id":82},{"text":"castVote(uint256 proposalId, uint8 support) → uint256 public","hash":"Governor-castVote-uint256-uint8-","id":83},{"text":"castVoteWithReason(uint256 proposalId, uint8 support, string reason) → uint256 public","hash":"Governor-castVoteWithReason-uint256-uint8-string-","id":84},{"text":"castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) → uint256 public","hash":"Governor-castVoteWithReasonAndParams-uint256-uint8-string-bytes-","id":85},{"text":"castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) → uint256 public","hash":"Governor-castVoteBySig-uint256-uint8-address-bytes-","id":86},{"text":"castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) → uint256 public","hash":"Governor-castVoteWithReasonAndParamsBySig-uint256-uint8-address-string-bytes-bytes-","id":87},{"text":"_castVote(uint256 proposalId, address account, uint8 support, string reason) → uint256 internal","hash":"Governor-_castVote-uint256-address-uint8-string-","id":88},{"text":"_castVote(uint256 proposalId, address account, uint8 support, string reason, bytes params) → uint256 internal","hash":"Governor-_castVote-uint256-address-uint8-string-bytes-","id":89},{"text":"relay(address target, uint256 value, bytes data) external","hash":"Governor-relay-address-uint256-bytes-","id":90},{"text":"_executor() → address internal","hash":"Governor-_executor--","id":91},{"text":"onERC721Received(address, address, uint256, bytes) → bytes4 public","hash":"Governor-onERC721Received-address-address-uint256-bytes-","id":92},{"text":"onERC1155Received(address, address, uint256, uint256, bytes) → bytes4 public","hash":"Governor-onERC1155Received-address-address-uint256-uint256-bytes-","id":93},{"text":"onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) → bytes4 public","hash":"Governor-onERC1155BatchReceived-address-address-uint256---uint256---bytes-","id":94},{"text":"_encodeStateBitmap(enum IGovernor.ProposalState proposalState) → bytes32 internal","hash":"Governor-_encodeStateBitmap-enum-IGovernor-ProposalState-","id":95},{"text":"_isValidDescriptionForProposer(address proposer, string description) → bool internal","hash":"Governor-_isValidDescriptionForProposer-address-string-","id":96},{"text":"clock() → uint48 public","hash":"Governor-clock--","id":97},{"text":"CLOCK_MODE() → string public","hash":"Governor-CLOCK_MODE--","id":98},{"text":"votingDelay() → uint256 public","hash":"Governor-votingDelay--","id":99},{"text":"votingPeriod() → uint256 public","hash":"Governor-votingPeriod--","id":100},{"text":"quorum(uint256 timepoint) → uint256 public","hash":"Governor-quorum-uint256-","id":101},{"text":"BALLOT_TYPEHASH() → bytes32 public","hash":"Governor-BALLOT_TYPEHASH-bytes32","id":102},{"text":"EXTENDED_BALLOT_TYPEHASH() → bytes32 public","hash":"Governor-EXTENDED_BALLOT_TYPEHASH-bytes32","id":103},{"text":"Modules","hash":"modules","id":104},{"text":"GovernorCountingSimple ","hash":"GovernorCountingSimple","id":105},{"text":"COUNTING_MODE() → string public","hash":"GovernorCountingSimple-COUNTING_MODE--","id":106},{"text":"hasVoted(uint256 proposalId, address account) → bool public","hash":"GovernorCountingSimple-hasVoted-uint256-address-","id":107},{"text":"proposalVotes(uint256 proposalId) → uint256 againstVotes, uint256 forVotes, uint256 abstainVotes public","hash":"GovernorCountingSimple-proposalVotes-uint256-","id":108},{"text":"_quorumReached(uint256 proposalId) → bool internal","hash":"GovernorCountingSimple-_quorumReached-uint256-","id":109},{"text":"_voteSucceeded(uint256 proposalId) → bool internal","hash":"GovernorCountingSimple-_voteSucceeded-uint256-","id":110},{"text":"_countVote(uint256 proposalId, address account, uint8 support, uint256 totalWeight, bytes) → uint256 internal","hash":"GovernorCountingSimple-_countVote-uint256-address-uint8-uint256-bytes-","id":111},{"text":"GovernorCountingFractional ","hash":"GovernorCountingFractional","id":112},{"text":"COUNTING_MODE() → string public","hash":"GovernorCountingFractional-COUNTING_MODE--","id":113},{"text":"hasVoted(uint256 proposalId, address account) → bool public","hash":"GovernorCountingFractional-hasVoted-uint256-address-","id":114},{"text":"usedVotes(uint256 proposalId, address account) → uint256 public","hash":"GovernorCountingFractional-usedVotes-uint256-address-","id":115},{"text":"proposalVotes(uint256 proposalId) → uint256 againstVotes, uint256 forVotes, uint256 abstainVotes public","hash":"GovernorCountingFractional-proposalVotes-uint256-","id":116},{"text":"_quorumReached(uint256 proposalId) → bool internal","hash":"GovernorCountingFractional-_quorumReached-uint256-","id":117},{"text":"_voteSucceeded(uint256 proposalId) → bool internal","hash":"GovernorCountingFractional-_voteSucceeded-uint256-","id":118},{"text":"_countVote(uint256 proposalId, address account, uint8 support, uint256 totalWeight, bytes params) → uint256 internal","hash":"GovernorCountingFractional-_countVote-uint256-address-uint8-uint256-bytes-","id":119},{"text":"GovernorExceedRemainingWeight(address voter, uint256 usedVotes, uint256 remainingWeight) error","hash":"GovernorCountingFractional-GovernorExceedRemainingWeight-address-uint256-uint256-","id":120},{"text":"uint8 VOTE_TYPE_FRACTIONAL internal constant","hash":"GovernorCountingFractional-VOTE_TYPE_FRACTIONAL-uint8","id":121},{"text":"GovernorVotes ","hash":"GovernorVotes","id":122},{"text":"constructor(contract IVotes tokenAddress) internal","hash":"GovernorVotes-constructor-contract-IVotes-","id":123},{"text":"token() → contract IERC5805 public","hash":"GovernorVotes-token--","id":124},{"text":"clock() → uint48 public","hash":"GovernorVotes-clock--","id":125},{"text":"CLOCK_MODE() → string public","hash":"GovernorVotes-CLOCK_MODE--","id":126},{"text":"_getVotes(address account, uint256 timepoint, bytes) → uint256 internal","hash":"GovernorVotes-_getVotes-address-uint256-bytes-","id":127},{"text":"GovernorVotesQuorumFraction ","hash":"GovernorVotesQuorumFraction","id":128},{"text":"constructor(uint256 quorumNumeratorValue) internal","hash":"GovernorVotesQuorumFraction-constructor-uint256-","id":129},{"text":"quorumNumerator() → uint256 public","hash":"GovernorVotesQuorumFraction-quorumNumerator--","id":130},{"text":"quorumNumerator(uint256 timepoint) → uint256 public","hash":"GovernorVotesQuorumFraction-quorumNumerator-uint256-","id":131},{"text":"quorumDenominator() → uint256 public","hash":"GovernorVotesQuorumFraction-quorumDenominator--","id":132},{"text":"quorum(uint256 timepoint) → uint256 public","hash":"GovernorVotesQuorumFraction-quorum-uint256-","id":133},{"text":"updateQuorumNumerator(uint256 newQuorumNumerator) external","hash":"GovernorVotesQuorumFraction-updateQuorumNumerator-uint256-","id":134},{"text":"_updateQuorumNumerator(uint256 newQuorumNumerator) internal","hash":"GovernorVotesQuorumFraction-_updateQuorumNumerator-uint256-","id":135},{"text":"QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator) event","hash":"GovernorVotesQuorumFraction-QuorumNumeratorUpdated-uint256-uint256-","id":136},{"text":"GovernorInvalidQuorumFraction(uint256 quorumNumerator, uint256 quorumDenominator) error","hash":"GovernorVotesQuorumFraction-GovernorInvalidQuorumFraction-uint256-uint256-","id":137},{"text":"Extensions","hash":"extensions","id":138},{"text":"GovernorTimelockAccess ","hash":"GovernorTimelockAccess","id":139},{"text":"Security Considerations","hash":"security_considerations","id":140},{"text":"constructor(address manager, uint32 initialBaseDelay) internal","hash":"GovernorTimelockAccess-constructor-address-uint32-","id":141},{"text":"accessManager() → contract IAccessManager public","hash":"GovernorTimelockAccess-accessManager--","id":142},{"text":"baseDelaySeconds() → uint32 public","hash":"GovernorTimelockAccess-baseDelaySeconds--","id":143},{"text":"setBaseDelaySeconds(uint32 newBaseDelay) public","hash":"GovernorTimelockAccess-setBaseDelaySeconds-uint32-","id":144},{"text":"_setBaseDelaySeconds(uint32 newBaseDelay) internal","hash":"GovernorTimelockAccess-_setBaseDelaySeconds-uint32-","id":145},{"text":"isAccessManagerIgnored(address target, bytes4 selector) → bool public","hash":"GovernorTimelockAccess-isAccessManagerIgnored-address-bytes4-","id":146},{"text":"setAccessManagerIgnored(address target, bytes4[] selectors, bool ignored) public","hash":"GovernorTimelockAccess-setAccessManagerIgnored-address-bytes4---bool-","id":147},{"text":"_setAccessManagerIgnored(address target, bytes4 selector, bool ignored) internal","hash":"GovernorTimelockAccess-_setAccessManagerIgnored-address-bytes4-bool-","id":148},{"text":"proposalExecutionPlan(uint256 proposalId) → uint32 delay, bool[] indirect, bool[] withDelay public","hash":"GovernorTimelockAccess-proposalExecutionPlan-uint256-","id":149},{"text":"proposalNeedsQueuing(uint256 proposalId) → bool public","hash":"GovernorTimelockAccess-proposalNeedsQueuing-uint256-","id":150},{"text":"propose(address[] targets, uint256[] values, bytes[] calldatas, string description) → uint256 public","hash":"GovernorTimelockAccess-propose-address---uint256---bytes---string-","id":151},{"text":"_queueOperations(uint256 proposalId, address[] targets, uint256[], bytes[] calldatas, bytes32) → uint48 internal","hash":"GovernorTimelockAccess-_queueOperations-uint256-address---uint256---bytes---bytes32-","id":152},{"text":"_executeOperations(uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32) internal","hash":"GovernorTimelockAccess-_executeOperations-uint256-address---uint256---bytes---bytes32-","id":153},{"text":"_cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 internal","hash":"GovernorTimelockAccess-_cancel-address---uint256---bytes---bytes32-","id":154},{"text":"BaseDelaySet(uint32 oldBaseDelaySeconds, uint32 newBaseDelaySeconds) event","hash":"GovernorTimelockAccess-BaseDelaySet-uint32-uint32-","id":155},{"text":"AccessManagerIgnoredSet(address target, bytes4 selector, bool ignored) event","hash":"GovernorTimelockAccess-AccessManagerIgnoredSet-address-bytes4-bool-","id":156},{"text":"GovernorUnmetDelay(uint256 proposalId, uint256 neededTimestamp) error","hash":"GovernorTimelockAccess-GovernorUnmetDelay-uint256-uint256-","id":157},{"text":"GovernorMismatchedNonce(uint256 proposalId, uint256 expectedNonce, uint256 actualNonce) error","hash":"GovernorTimelockAccess-GovernorMismatchedNonce-uint256-uint256-uint256-","id":158},{"text":"GovernorLockedIgnore() error","hash":"GovernorTimelockAccess-GovernorLockedIgnore--","id":159},{"text":"GovernorTimelockControl ","hash":"GovernorTimelockControl","id":160},{"text":"constructor(contract TimelockController timelockAddress) internal","hash":"GovernorTimelockControl-constructor-contract-TimelockController-","id":161},{"text":"state(uint256 proposalId) → enum IGovernor.ProposalState public","hash":"GovernorTimelockControl-state-uint256-","id":162},{"text":"timelock() → address public","hash":"GovernorTimelockControl-timelock--","id":163},{"text":"proposalNeedsQueuing(uint256) → bool public","hash":"GovernorTimelockControl-proposalNeedsQueuing-uint256-","id":164},{"text":"_queueOperations(uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint48 internal","hash":"GovernorTimelockControl-_queueOperations-uint256-address---uint256---bytes---bytes32-","id":165},{"text":"_executeOperations(uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) internal","hash":"GovernorTimelockControl-_executeOperations-uint256-address---uint256---bytes---bytes32-","id":166},{"text":"_cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 internal","hash":"GovernorTimelockControl-_cancel-address---uint256---bytes---bytes32-","id":167},{"text":"_executor() → address internal","hash":"GovernorTimelockControl-_executor--","id":168},{"text":"updateTimelock(contract TimelockController newTimelock) external","hash":"GovernorTimelockControl-updateTimelock-contract-TimelockController-","id":169},{"text":"TimelockChange(address oldTimelock, address newTimelock) event","hash":"GovernorTimelockControl-TimelockChange-address-address-","id":170},{"text":"GovernorTimelockCompound ","hash":"GovernorTimelockCompound","id":171},{"text":"constructor(contract ICompoundTimelock timelockAddress) internal","hash":"GovernorTimelockCompound-constructor-contract-ICompoundTimelock-","id":172},{"text":"state(uint256 proposalId) → enum IGovernor.ProposalState public","hash":"GovernorTimelockCompound-state-uint256-","id":173},{"text":"timelock() → address public","hash":"GovernorTimelockCompound-timelock--","id":174},{"text":"proposalNeedsQueuing(uint256) → bool public","hash":"GovernorTimelockCompound-proposalNeedsQueuing-uint256-","id":175},{"text":"_queueOperations(uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32) → uint48 internal","hash":"GovernorTimelockCompound-_queueOperations-uint256-address---uint256---bytes---bytes32-","id":176},{"text":"_executeOperations(uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32) internal","hash":"GovernorTimelockCompound-_executeOperations-uint256-address---uint256---bytes---bytes32-","id":177},{"text":"_cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) → uint256 internal","hash":"GovernorTimelockCompound-_cancel-address---uint256---bytes---bytes32-","id":178},{"text":"_executor() → address internal","hash":"GovernorTimelockCompound-_executor--","id":179},{"text":"__acceptAdmin() public","hash":"GovernorTimelockCompound-__acceptAdmin--","id":180},{"text":"updateTimelock(contract ICompoundTimelock newTimelock) external","hash":"GovernorTimelockCompound-updateTimelock-contract-ICompoundTimelock-","id":181},{"text":"TimelockChange(address oldTimelock, address newTimelock) event","hash":"GovernorTimelockCompound-TimelockChange-address-address-","id":182},{"text":"GovernorSettings ","hash":"GovernorSettings","id":183},{"text":"constructor(uint48 initialVotingDelay, uint32 initialVotingPeriod, uint256 initialProposalThreshold) internal","hash":"GovernorSettings-constructor-uint48-uint32-uint256-","id":184},{"text":"votingDelay() → uint256 public","hash":"GovernorSettings-votingDelay--","id":185},{"text":"votingPeriod() → uint256 public","hash":"GovernorSettings-votingPeriod--","id":186},{"text":"proposalThreshold() → uint256 public","hash":"GovernorSettings-proposalThreshold--","id":187},{"text":"setVotingDelay(uint48 newVotingDelay) public","hash":"GovernorSettings-setVotingDelay-uint48-","id":188},{"text":"setVotingPeriod(uint32 newVotingPeriod) public","hash":"GovernorSettings-setVotingPeriod-uint32-","id":189},{"text":"setProposalThreshold(uint256 newProposalThreshold) public","hash":"GovernorSettings-setProposalThreshold-uint256-","id":190},{"text":"_setVotingDelay(uint48 newVotingDelay) internal","hash":"GovernorSettings-_setVotingDelay-uint48-","id":191},{"text":"_setVotingPeriod(uint32 newVotingPeriod) internal","hash":"GovernorSettings-_setVotingPeriod-uint32-","id":192},{"text":"_setProposalThreshold(uint256 newProposalThreshold) internal","hash":"GovernorSettings-_setProposalThreshold-uint256-","id":193},{"text":"VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay) event","hash":"GovernorSettings-VotingDelaySet-uint256-uint256-","id":194},{"text":"VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod) event","hash":"GovernorSettings-VotingPeriodSet-uint256-uint256-","id":195},{"text":"ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold) event","hash":"GovernorSettings-ProposalThresholdSet-uint256-uint256-","id":196},{"text":"GovernorPreventLateQuorum ","hash":"GovernorPreventLateQuorum","id":197},{"text":"constructor(uint48 initialVoteExtension) internal","hash":"GovernorPreventLateQuorum-constructor-uint48-","id":198},{"text":"proposalDeadline(uint256 proposalId) → uint256 public","hash":"GovernorPreventLateQuorum-proposalDeadline-uint256-","id":199},{"text":"_castVote(uint256 proposalId, address account, uint8 support, string reason, bytes params) → uint256 internal","hash":"GovernorPreventLateQuorum-_castVote-uint256-address-uint8-string-bytes-","id":200},{"text":"lateQuorumVoteExtension() → uint48 public","hash":"GovernorPreventLateQuorum-lateQuorumVoteExtension--","id":201},{"text":"setLateQuorumVoteExtension(uint48 newVoteExtension) public","hash":"GovernorPreventLateQuorum-setLateQuorumVoteExtension-uint48-","id":202},{"text":"_setLateQuorumVoteExtension(uint48 newVoteExtension) internal","hash":"GovernorPreventLateQuorum-_setLateQuorumVoteExtension-uint48-","id":203},{"text":"ProposalExtended(uint256 indexed proposalId, uint64 extendedDeadline) event","hash":"GovernorPreventLateQuorum-ProposalExtended-uint256-uint64-","id":204},{"text":"LateQuorumVoteExtensionSet(uint64 oldVoteExtension, uint64 newVoteExtension) event","hash":"GovernorPreventLateQuorum-LateQuorumVoteExtensionSet-uint64-uint64-","id":205},{"text":"GovernorStorage ","hash":"GovernorStorage","id":206},{"text":"_propose(address[] targets, uint256[] values, bytes[] calldatas, string description, address proposer) → uint256 internal","hash":"GovernorStorage-_propose-address---uint256---bytes---string-address-","id":207},{"text":"queue(uint256 proposalId) public","hash":"GovernorStorage-queue-uint256-","id":208},{"text":"execute(uint256 proposalId) public","hash":"GovernorStorage-execute-uint256-","id":209},{"text":"cancel(uint256 proposalId) public","hash":"GovernorStorage-cancel-uint256-","id":210},{"text":"proposalCount() → uint256 public","hash":"GovernorStorage-proposalCount--","id":211},{"text":"proposalDetails(uint256 proposalId) → address[], uint256[], bytes[], bytes32 public","hash":"GovernorStorage-proposalDetails-uint256-","id":212},{"text":"proposalDetailsAt(uint256 index) → uint256, address[], uint256[], bytes[], bytes32 public","hash":"GovernorStorage-proposalDetailsAt-uint256-","id":213},{"text":"Utils","hash":"utils","id":214},{"text":"Votes ","hash":"Votes","id":215},{"text":"clock() → uint48 public","hash":"Votes-clock--","id":216},{"text":"CLOCK_MODE() → string public","hash":"Votes-CLOCK_MODE--","id":217},{"text":"getVotes(address account) → uint256 public","hash":"Votes-getVotes-address-","id":218},{"text":"getPastVotes(address account, uint256 timepoint) → uint256 public","hash":"Votes-getPastVotes-address-uint256-","id":219},{"text":"getPastTotalSupply(uint256 timepoint) → uint256 public","hash":"Votes-getPastTotalSupply-uint256-","id":220},{"text":"_getTotalSupply() → uint256 internal","hash":"Votes-_getTotalSupply--","id":221},{"text":"delegates(address account) → address public","hash":"Votes-delegates-address-","id":222},{"text":"delegate(address delegatee) public","hash":"Votes-delegate-address-","id":223},{"text":"delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public","hash":"Votes-delegateBySig-address-uint256-uint256-uint8-bytes32-bytes32-","id":224},{"text":"_delegate(address account, address delegatee) internal","hash":"Votes-_delegate-address-address-","id":225},{"text":"_transferVotingUnits(address from, address to, uint256 amount) internal","hash":"Votes-_transferVotingUnits-address-address-uint256-","id":226},{"text":"_moveDelegateVotes(address from, address to, uint256 amount) internal","hash":"Votes-_moveDelegateVotes-address-address-uint256-","id":227},{"text":"_numCheckpoints(address account) → uint32 internal","hash":"Votes-_numCheckpoints-address-","id":228},{"text":"_checkpoints(address account, uint32 pos) → struct Checkpoints.Checkpoint208 internal","hash":"Votes-_checkpoints-address-uint32-","id":229},{"text":"_getVotingUnits(address) → uint256 internal","hash":"Votes-_getVotingUnits-address-","id":230},{"text":"ERC6372InconsistentClock() error","hash":"Votes-ERC6372InconsistentClock--","id":231},{"text":"ERC5805FutureLookup(uint256 timepoint, uint48 clock) error","hash":"Votes-ERC5805FutureLookup-uint256-uint48-","id":232},{"text":"Timelock","hash":"timelock","id":233},{"text":"TimelockController ","hash":"TimelockController","id":234},{"text":"onlyRoleOrOpenRole(bytes32 role) modifier","hash":"TimelockController-onlyRoleOrOpenRole-bytes32-","id":235},{"text":"constructor(uint256 minDelay, address[] proposers, address[] executors, address admin) public","hash":"TimelockController-constructor-uint256-address---address---address-","id":236},{"text":"receive() external","hash":"TimelockController-receive--","id":237},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"TimelockController-supportsInterface-bytes4-","id":238},{"text":"isOperation(bytes32 id) → bool public","hash":"TimelockController-isOperation-bytes32-","id":239},{"text":"isOperationPending(bytes32 id) → bool public","hash":"TimelockController-isOperationPending-bytes32-","id":240},{"text":"isOperationReady(bytes32 id) → bool public","hash":"TimelockController-isOperationReady-bytes32-","id":241},{"text":"isOperationDone(bytes32 id) → bool public","hash":"TimelockController-isOperationDone-bytes32-","id":242},{"text":"getTimestamp(bytes32 id) → uint256 public","hash":"TimelockController-getTimestamp-bytes32-","id":243},{"text":"getOperationState(bytes32 id) → enum TimelockController.OperationState public","hash":"TimelockController-getOperationState-bytes32-","id":244},{"text":"getMinDelay() → uint256 public","hash":"TimelockController-getMinDelay--","id":245},{"text":"hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) → bytes32 public","hash":"TimelockController-hashOperation-address-uint256-bytes-bytes32-bytes32-","id":246},{"text":"hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) → bytes32 public","hash":"TimelockController-hashOperationBatch-address---uint256---bytes---bytes32-bytes32-","id":247},{"text":"schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay) public","hash":"TimelockController-schedule-address-uint256-bytes-bytes32-bytes32-uint256-","id":248},{"text":"scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay) public","hash":"TimelockController-scheduleBatch-address---uint256---bytes---bytes32-bytes32-uint256-","id":249},{"text":"cancel(bytes32 id) public","hash":"TimelockController-cancel-bytes32-","id":250},{"text":"execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) public","hash":"TimelockController-execute-address-uint256-bytes-bytes32-bytes32-","id":251},{"text":"executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) public","hash":"TimelockController-executeBatch-address---uint256---bytes---bytes32-bytes32-","id":252},{"text":"_execute(address target, uint256 value, bytes data) internal","hash":"TimelockController-_execute-address-uint256-bytes-","id":253},{"text":"updateDelay(uint256 newDelay) external","hash":"TimelockController-updateDelay-uint256-","id":254},{"text":"_encodeStateBitmap(enum TimelockController.OperationState operationState) → bytes32 internal","hash":"TimelockController-_encodeStateBitmap-enum-TimelockController-OperationState-","id":255},{"text":"PROPOSER_ROLE() → bytes32 public","hash":"TimelockController-PROPOSER_ROLE-bytes32","id":256},{"text":"EXECUTOR_ROLE() → bytes32 public","hash":"TimelockController-EXECUTOR_ROLE-bytes32","id":257},{"text":"CANCELLER_ROLE() → bytes32 public","hash":"TimelockController-CANCELLER_ROLE-bytes32","id":258},{"text":"CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay) event","hash":"TimelockController-CallScheduled-bytes32-uint256-address-uint256-bytes-bytes32-uint256-","id":259},{"text":"CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data) event","hash":"TimelockController-CallExecuted-bytes32-uint256-address-uint256-bytes-","id":260},{"text":"CallSalt(bytes32 indexed id, bytes32 salt) event","hash":"TimelockController-CallSalt-bytes32-bytes32-","id":261},{"text":"Cancelled(bytes32 indexed id) event","hash":"TimelockController-Cancelled-bytes32-","id":262},{"text":"MinDelayChange(uint256 oldDuration, uint256 newDuration) event","hash":"TimelockController-MinDelayChange-uint256-uint256-","id":263},{"text":"TimelockInvalidOperationLength(uint256 targets, uint256 payloads, uint256 values) error","hash":"TimelockController-TimelockInvalidOperationLength-uint256-uint256-uint256-","id":264},{"text":"TimelockInsufficientDelay(uint256 delay, uint256 minDelay) error","hash":"TimelockController-TimelockInsufficientDelay-uint256-uint256-","id":265},{"text":"TimelockUnexpectedOperationState(bytes32 operationId, bytes32 expectedStates) error","hash":"TimelockController-TimelockUnexpectedOperationState-bytes32-bytes32-","id":266},{"text":"TimelockUnexecutedPredecessor(bytes32 predecessorId) error","hash":"TimelockController-TimelockUnexecutedPredecessor-bytes32-","id":267},{"text":"TimelockUnauthorizedCaller(address caller) error","hash":"TimelockController-TimelockUnauthorizedCaller-address-","id":268},{"text":"uint256 _DONE_TIMESTAMP internal constant","hash":"TimelockController-_DONE_TIMESTAMP-uint256","id":269},{"text":"Terminology","hash":"timelock-terminology","id":270},{"text":"Operation structure","hash":"timelock-operation","id":271},{"text":"Operation lifecycle","hash":"timelock-operation-lifecycle","id":272},{"text":"Roles","hash":"timelock-roles","id":273},{"text":"Admin","hash":"timelock-admin","id":274},{"text":"Proposer","hash":"timelock-proposer","id":275},{"text":"Executor","hash":"timelock-executor","id":276}]},"24":{"id":24,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/interfaces These interfaces are available as .sol files, and also as compiler .json ABI files (through the npm package). These are useful to interact with third party contracts that implement them. IERC20 IERC20Errors IERC20Metadata IERC165 IERC721 IERC721Receiver IERC721Enumerable IERC721Metadata IERC721Errors IERC777 IERC777Recipient IERC777Sender IERC1155 IERC1155Receiver IERC1155MetadataURI IERC1155Errors IERC1271 IERC1363 IERC1363Receiver IERC1363Spender IERC1820Implementer IERC1820Registry IERC1822Proxiable IERC2612 IERC2981 IERC3156FlashLender IERC3156FlashBorrower IERC4626 IERC4906 IERC5267 IERC5313 IERC5805 IERC6372 IERC7674 import \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\"; Standard ERC-20 Errors Interface of the ERC-6093 custom errors for ERC-20 tokens. Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Indicates an error related to the current balance of a sender. Used in transfers. Indicates a failure with the token sender. Used in transfers. Indicates a failure with the token receiver. Used in transfers. Indicates a failure with the spender’s allowance. Used in transfers. Indicates a failure with the approver of a token to be approved. Used in approvals. Indicates a failure with the spender to be approved. Used in approvals. import \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\"; Standard ERC-721 Errors Interface of the ERC-6093 custom errors for ERC-721 tokens. Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) Indicates that an address can’t be an owner. For example, address(0) is a forbidden owner in ERC-20. Used in balance queries. Indicates a tokenId whose owner is the zero address. Indicates an error related to the ownership over a particular token. Used in transfers. Indicates a failure with the token sender. Used in transfers. Indicates a failure with the token receiver. Used in transfers. Indicates a failure with the operator’s approval. Used in transfers. Indicates a failure with the approver of a token to be approved. Used in approvals. Indicates a failure with the operator to be approved. Used in approvals. import \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\"; Standard ERC-1155 Errors Interface of the ERC-6093 custom errors for ERC-1155 tokens. Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) Indicates an error related to the current balance of a sender. Used in transfers. Indicates a failure with the token sender. Used in transfers. Indicates a failure with the token receiver. Used in transfers. Indicates a failure with the operator’s approval. Used in transfers. Indicates a failure with the approver of a token to be approved. Used in approvals. Indicates a failure with the operator to be approved. Used in approvals. Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers. import \"@openzeppelin/contracts/interfaces/IERC1271.sol\"; Interface of the ERC-1271 standard signature validation method for contracts as defined in ERC-1271. Functions isValidSignature(hash, signature) Should return whether the signature provided is valid for the provided data import \"@openzeppelin/contracts/interfaces/IERC1363.sol\"; Interface of the ERC-1363 standard as defined in the ERC-1363. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after transfer or transferFrom, or code on a spender contract after approve, in a single transaction. Functions transferAndCall(to, value) transferAndCall(to, value, data) transferFromAndCall(from, to, value) transferFromAndCall(from, to, value, data) approveAndCall(spender, value) approveAndCall(spender, value, data) IERC165 supportsInterface(interfaceId) IERC20 totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Moves a value amount of tokens from the caller’s account to to and then calls IERC1363Receiver.onTransferReceived on to. Moves a value amount of tokens from the caller’s account to to and then calls IERC1363Receiver.onTransferReceived on to. Moves a value amount of tokens from from to to using the allowance mechanism and then calls IERC1363Receiver.onTransferReceived on to. Moves a value amount of tokens from from to to using the allowance mechanism and then calls IERC1363Receiver.onTransferReceived on to. Sets a value amount of tokens as the allowance of spender over the caller’s tokens and then calls IERC1363Spender.onApprovalReceived on spender. Sets a value amount of tokens as the allowance of spender over the caller’s tokens and then calls IERC1363Spender.onApprovalReceived on spender. import \"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\"; Interface for any contract that wants to support transferAndCall or transferFromAndCall from ERC-1363 token contracts. Functions onTransferReceived(operator, from, value, data) Whenever ERC-1363 tokens are transferred to this contract via transferAndCall or transferFromAndCall by operator from from, this function is called. To accept the transfer, this must return bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\")) (i.e. 0x88a7ca5c, or its own function selector). import \"@openzeppelin/contracts/interfaces/IERC1363Spender.sol\"; Interface for any contract that wants to support approveAndCall from ERC-1363 token contracts. Functions onApprovalReceived(owner, value, data) Whenever an ERC-1363 token owner approves this contract via approveAndCall to spend their tokens, this function is called. To accept the approval, this must return bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\")) (i.e. 0x7b04a2d0, or its own function selector). import \"@openzeppelin/contracts/interfaces/IERC1820Implementer.sol\"; Interface for an ERC-1820 implementer, as defined in the ERC. Used by contracts that will be registered as implementers in the IERC1820Registry. Functions canImplementInterfaceForAddress(interfaceHash, account) Returns a special value (ERC1820_ACCEPT_MAGIC) if this contract implements interfaceHash for account. See IERC1820Registry.setInterfaceImplementer. import \"@openzeppelin/contracts/interfaces/IERC1820Registry.sol\"; Interface of the global ERC-1820 Registry, as defined in the ERC. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. IERC165 interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the ERC text. Functions setManager(account, newManager) getManager(account) setInterfaceImplementer(account, _interfaceHash, implementer) getInterfaceImplementer(account, _interfaceHash) interfaceHash(interfaceName) updateERC165Cache(account, interfaceId) implementsERC165Interface(account, interfaceId) implementsERC165InterfaceNoCache(account, interfaceId) Events InterfaceImplementerSet(account, interfaceHash, implementer) ManagerChanged(account, newManager) Sets newManager as the manager for account. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of 0x0 in newManager will reset the manager to this initial state. Emits a ManagerChanged event. Requirements: the caller must be the current manager for account. Returns the manager for account. See setManager. Sets the implementer contract as account's implementer for interfaceHash. account being the zero address is an alias for the caller’s address. The zero address can also be used in implementer to remove an old one. See interfaceHash to learn how these are created. Emits an InterfaceImplementerSet event. Requirements: the caller must be the current manager for account. interfaceHash must not be an IERC165 interface id (i.e. it must not end in 28 zeroes). implementer must implement IERC1820Implementer and return true when queried for support, unless implementer is the caller. See IERC1820Implementer.canImplementInterfaceForAddress. Returns the implementer of interfaceHash for account. If no such implementer is registered, returns the zero address. If interfaceHash is an IERC165 interface id (i.e. it ends with 28 zeroes), account will be queried for support of it. account being the zero address is an alias for the caller’s address. Returns the interface hash for an interfaceName, as defined in the corresponding section of the ERC. import \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\"; ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation. Functions proxiableUUID() Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. import \"@openzeppelin/contracts/interfaces/IERC2612.sol\"; Functions IERC20Permit permit(owner, spender, value, deadline, v, r, s) nonces(owner) DOMAIN_SEPARATOR() import \"@openzeppelin/contracts/interfaces/IERC2981.sol\"; Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. Functions royaltyInfo(tokenId, salePrice) IERC165 supportsInterface(interfaceId) Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers. import \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\"; Interface of the ERC-3156 FlashLender, as defined in ERC-3156. Functions maxFlashLoan(token) flashFee(token, amount) flashLoan(receiver, token, amount, data) The amount of currency available to be lended. The fee to be charged for a given loan. Initiate a flash loan. import \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\"; Interface of the ERC-3156 FlashBorrower, as defined in ERC-3156. Functions onFlashLoan(initiator, token, amount, fee, data) Receive a flash loan. import \"@openzeppelin/contracts/interfaces/IERC4626.sol\"; Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in ERC-4626. Functions asset() totalAssets() convertToShares(assets) convertToAssets(shares) maxDeposit(receiver) previewDeposit(assets) deposit(assets, receiver) maxMint(receiver) previewMint(shares) mint(shares, receiver) maxWithdraw(owner) previewWithdraw(assets) withdraw(assets, receiver, owner) maxRedeem(owner) previewRedeem(shares) redeem(shares, receiver, owner) IERC20Metadata name() symbol() decimals() IERC20 totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) Events Deposit(sender, owner, assets, shares) Withdraw(sender, receiver, owner, assets, shares) IERC20 Transfer(from, to, value) Approval(owner, spender, value) Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. MUST be an ERC-20 token contract. MUST NOT revert. Returns the total amount of the underlying asset that is “managed” by Vault. SHOULD include any compounding that occurs from yield. MUST be inclusive of any fees that are charged against assets in the Vault. MUST NOT revert. Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. MUST NOT be inclusive of any fees that are charged against assets in the Vault. MUST NOT show any variations depending on the caller. MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. MUST NOT revert. This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from. Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. MUST NOT be inclusive of any fees that are charged against assets in the Vault. MUST NOT show any variations depending on the caller. MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. MUST NOT revert. This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from. Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. MUST return a limited value if receiver is subject to some deposit limit. MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. MUST NOT revert. Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called in the same transaction. MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the deposit would be accepted, regardless if the user has enough tokens approved, etc. MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. MUST NOT revert. any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing. Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. MUST emit the Deposit event. MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the deposit execution, and are accounted for during deposit. MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not approving enough underlying tokens to the Vault contract, etc). most implementations will require pre-approval of the Vault with the Vault’s underlying asset token. Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert. Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the same transaction. MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint would be accepted, regardless if the user has enough tokens approved, etc. MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. MUST NOT revert. any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting. Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. MUST emit the Deposit event. MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint execution, and are accounted for during mint. MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not approving enough underlying tokens to the Vault contract, etc). most implementations will require pre-approval of the Vault with the Vault’s underlying asset token. Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. MUST return a limited value if owner is subject to some withdrawal limit or timelock. MUST NOT revert. Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if called in the same transaction. MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though the withdrawal would be accepted, regardless if the user has enough shares, etc. MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. MUST NOT revert. any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing. Burns shares from owner and sends exactly assets of underlying tokens to receiver. MUST emit the Withdraw event. MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the withdraw execution, and are accounted for during withdraw. MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately. Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. MUST return a limited value if owner is subject to some withdrawal limit or timelock. MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. MUST NOT revert. Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the same transaction. MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the redemption would be accepted, regardless if the user has enough shares, etc. MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. MUST NOT revert. any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming. Burns exactly shares from owner and sends assets of underlying tokens to receiver. MUST emit the Withdraw event. MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the redeem execution, and are accounted for during redeem. MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner not having enough shares, etc). some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately. import \"@openzeppelin/contracts/interfaces/IERC5313.sol\"; Interface for the Light Contract Ownership Standard. A standardized minimal interface required to identify an account that controls a contract Functions owner() Gets the address of the owner. import \"@openzeppelin/contracts/interfaces/IERC5267.sol\"; Functions eip712Domain() Events EIP712DomainChanged() returns the fields and values that describe the domain separator used by this contract for EIP-712 signature. MAY be emitted to signal that the domain could have changed. import \"@openzeppelin/contracts/interfaces/IERC5805.sol\"; Functions IVotes getVotes(account) getPastVotes(account, timepoint) getPastTotalSupply(timepoint) delegates(account) delegate(delegatee) delegateBySig(delegatee, nonce, expiry, v, r, s) IERC6372 clock() CLOCK_MODE() Events IVotes DelegateChanged(delegator, fromDelegate, toDelegate) DelegateVotesChanged(delegate, previousVotes, newVotes) Errors IVotes VotesExpiredSignature(expiry) import \"@openzeppelin/contracts/interfaces/IERC6372.sol\"; Functions clock() CLOCK_MODE() Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting). Description of the clock import \"@openzeppelin/contracts/interfaces/draft-IERC7674.sol\"; Temporary Approval Extension for ERC-20 (ERC-7674) Functions temporaryApprove(spender, value) IERC20 totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Set the temporary allowance, allowing spender to withdraw (within the same transaction) assets held by the caller. ← Governance Meta Transactions →","title":"Interfaces","component":"contracts","version":"5.x","name":"interfaces","url":"/contracts/5.x/api/interfaces.html","titles":[{"text":"List of standardized interfaces","hash":"list_of_standardized_interfaces","id":1},{"text":"Detailed ABI","hash":"detailed_abi","id":2},{"text":"IERC20Errors ","hash":"IERC20Errors","id":3},{"text":"ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed) error","hash":"IERC20Errors-ERC20InsufficientBalance-address-uint256-uint256-","id":4},{"text":"ERC20InvalidSender(address sender) error","hash":"IERC20Errors-ERC20InvalidSender-address-","id":5},{"text":"ERC20InvalidReceiver(address receiver) error","hash":"IERC20Errors-ERC20InvalidReceiver-address-","id":6},{"text":"ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed) error","hash":"IERC20Errors-ERC20InsufficientAllowance-address-uint256-uint256-","id":7},{"text":"ERC20InvalidApprover(address approver) error","hash":"IERC20Errors-ERC20InvalidApprover-address-","id":8},{"text":"ERC20InvalidSpender(address spender) error","hash":"IERC20Errors-ERC20InvalidSpender-address-","id":9},{"text":"IERC721Errors ","hash":"IERC721Errors","id":10},{"text":"ERC721InvalidOwner(address owner) error","hash":"IERC721Errors-ERC721InvalidOwner-address-","id":11},{"text":"ERC721NonexistentToken(uint256 tokenId) error","hash":"IERC721Errors-ERC721NonexistentToken-uint256-","id":12},{"text":"ERC721IncorrectOwner(address sender, uint256 tokenId, address owner) error","hash":"IERC721Errors-ERC721IncorrectOwner-address-uint256-address-","id":13},{"text":"ERC721InvalidSender(address sender) error","hash":"IERC721Errors-ERC721InvalidSender-address-","id":14},{"text":"ERC721InvalidReceiver(address receiver) error","hash":"IERC721Errors-ERC721InvalidReceiver-address-","id":15},{"text":"ERC721InsufficientApproval(address operator, uint256 tokenId) error","hash":"IERC721Errors-ERC721InsufficientApproval-address-uint256-","id":16},{"text":"ERC721InvalidApprover(address approver) error","hash":"IERC721Errors-ERC721InvalidApprover-address-","id":17},{"text":"ERC721InvalidOperator(address operator) error","hash":"IERC721Errors-ERC721InvalidOperator-address-","id":18},{"text":"IERC1155Errors ","hash":"IERC1155Errors","id":19},{"text":"ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId) error","hash":"IERC1155Errors-ERC1155InsufficientBalance-address-uint256-uint256-uint256-","id":20},{"text":"ERC1155InvalidSender(address sender) error","hash":"IERC1155Errors-ERC1155InvalidSender-address-","id":21},{"text":"ERC1155InvalidReceiver(address receiver) error","hash":"IERC1155Errors-ERC1155InvalidReceiver-address-","id":22},{"text":"ERC1155MissingApprovalForAll(address operator, address owner) error","hash":"IERC1155Errors-ERC1155MissingApprovalForAll-address-address-","id":23},{"text":"ERC1155InvalidApprover(address approver) error","hash":"IERC1155Errors-ERC1155InvalidApprover-address-","id":24},{"text":"ERC1155InvalidOperator(address operator) error","hash":"IERC1155Errors-ERC1155InvalidOperator-address-","id":25},{"text":"ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength) error","hash":"IERC1155Errors-ERC1155InvalidArrayLength-uint256-uint256-","id":26},{"text":"IERC1271 ","hash":"IERC1271","id":27},{"text":"isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue external","hash":"IERC1271-isValidSignature-bytes32-bytes-","id":28},{"text":"IERC1363 ","hash":"IERC1363","id":29},{"text":"transferAndCall(address to, uint256 value) → bool external","hash":"IERC1363-transferAndCall-address-uint256-","id":30},{"text":"transferAndCall(address to, uint256 value, bytes data) → bool external","hash":"IERC1363-transferAndCall-address-uint256-bytes-","id":31},{"text":"transferFromAndCall(address from, address to, uint256 value) → bool external","hash":"IERC1363-transferFromAndCall-address-address-uint256-","id":32},{"text":"transferFromAndCall(address from, address to, uint256 value, bytes data) → bool external","hash":"IERC1363-transferFromAndCall-address-address-uint256-bytes-","id":33},{"text":"approveAndCall(address spender, uint256 value) → bool external","hash":"IERC1363-approveAndCall-address-uint256-","id":34},{"text":"approveAndCall(address spender, uint256 value, bytes data) → bool external","hash":"IERC1363-approveAndCall-address-uint256-bytes-","id":35},{"text":"IERC1363Receiver ","hash":"IERC1363Receiver","id":36},{"text":"onTransferReceived(address operator, address from, uint256 value, bytes data) → bytes4 external","hash":"IERC1363Receiver-onTransferReceived-address-address-uint256-bytes-","id":37},{"text":"IERC1363Spender ","hash":"IERC1363Spender","id":38},{"text":"onApprovalReceived(address owner, uint256 value, bytes data) → bytes4 external","hash":"IERC1363Spender-onApprovalReceived-address-uint256-bytes-","id":39},{"text":"IERC1820Implementer ","hash":"IERC1820Implementer","id":40},{"text":"canImplementInterfaceForAddress(bytes32 interfaceHash, address account) → bytes32 external","hash":"IERC1820Implementer-canImplementInterfaceForAddress-bytes32-address-","id":41},{"text":"IERC1820Registry ","hash":"IERC1820Registry","id":42},{"text":"setManager(address account, address newManager) external","hash":"IERC1820Registry-setManager-address-address-","id":43},{"text":"getManager(address account) → address external","hash":"IERC1820Registry-getManager-address-","id":44},{"text":"setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external","hash":"IERC1820Registry-setInterfaceImplementer-address-bytes32-address-","id":45},{"text":"getInterfaceImplementer(address account, bytes32 _interfaceHash) → address external","hash":"IERC1820Registry-getInterfaceImplementer-address-bytes32-","id":46},{"text":"interfaceHash(string interfaceName) → bytes32 external","hash":"IERC1820Registry-interfaceHash-string-","id":47},{"text":"updateERC165Cache(address account, bytes4 interfaceId) external","hash":"IERC1820Registry-updateERC165Cache-address-bytes4-","id":48},{"text":"implementsERC165Interface(address account, bytes4 interfaceId) → bool external","hash":"IERC1820Registry-implementsERC165Interface-address-bytes4-","id":49},{"text":"implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) → bool external","hash":"IERC1820Registry-implementsERC165InterfaceNoCache-address-bytes4-","id":50},{"text":"InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer) event","hash":"IERC1820Registry-InterfaceImplementerSet-address-bytes32-address-","id":51},{"text":"ManagerChanged(address indexed account, address indexed newManager) event","hash":"IERC1820Registry-ManagerChanged-address-address-","id":52},{"text":"IERC1822Proxiable ","hash":"IERC1822Proxiable","id":53},{"text":"proxiableUUID() → bytes32 external","hash":"IERC1822Proxiable-proxiableUUID--","id":54},{"text":"IERC2612 ","hash":"IERC2612","id":55},{"text":"IERC2981 ","hash":"IERC2981","id":56},{"text":"royaltyInfo(uint256 tokenId, uint256 salePrice) → address receiver, uint256 royaltyAmount external","hash":"IERC2981-royaltyInfo-uint256-uint256-","id":57},{"text":"IERC3156FlashLender ","hash":"IERC3156FlashLender","id":58},{"text":"maxFlashLoan(address token) → uint256 external","hash":"IERC3156FlashLender-maxFlashLoan-address-","id":59},{"text":"flashFee(address token, uint256 amount) → uint256 external","hash":"IERC3156FlashLender-flashFee-address-uint256-","id":60},{"text":"flashLoan(contract IERC3156FlashBorrower receiver, address token, uint256 amount, bytes data) → bool external","hash":"IERC3156FlashLender-flashLoan-contract-IERC3156FlashBorrower-address-uint256-bytes-","id":61},{"text":"IERC3156FlashBorrower ","hash":"IERC3156FlashBorrower","id":62},{"text":"onFlashLoan(address initiator, address token, uint256 amount, uint256 fee, bytes data) → bytes32 external","hash":"IERC3156FlashBorrower-onFlashLoan-address-address-uint256-uint256-bytes-","id":63},{"text":"IERC4626 ","hash":"IERC4626","id":64},{"text":"asset() → address assetTokenAddress external","hash":"IERC4626-asset--","id":65},{"text":"totalAssets() → uint256 totalManagedAssets external","hash":"IERC4626-totalAssets--","id":66},{"text":"convertToShares(uint256 assets) → uint256 shares external","hash":"IERC4626-convertToShares-uint256-","id":67},{"text":"convertToAssets(uint256 shares) → uint256 assets external","hash":"IERC4626-convertToAssets-uint256-","id":68},{"text":"maxDeposit(address receiver) → uint256 maxAssets external","hash":"IERC4626-maxDeposit-address-","id":69},{"text":"previewDeposit(uint256 assets) → uint256 shares external","hash":"IERC4626-previewDeposit-uint256-","id":70},{"text":"deposit(uint256 assets, address receiver) → uint256 shares external","hash":"IERC4626-deposit-uint256-address-","id":71},{"text":"maxMint(address receiver) → uint256 maxShares external","hash":"IERC4626-maxMint-address-","id":72},{"text":"previewMint(uint256 shares) → uint256 assets external","hash":"IERC4626-previewMint-uint256-","id":73},{"text":"mint(uint256 shares, address receiver) → uint256 assets external","hash":"IERC4626-mint-uint256-address-","id":74},{"text":"maxWithdraw(address owner) → uint256 maxAssets external","hash":"IERC4626-maxWithdraw-address-","id":75},{"text":"previewWithdraw(uint256 assets) → uint256 shares external","hash":"IERC4626-previewWithdraw-uint256-","id":76},{"text":"withdraw(uint256 assets, address receiver, address owner) → uint256 shares external","hash":"IERC4626-withdraw-uint256-address-address-","id":77},{"text":"maxRedeem(address owner) → uint256 maxShares external","hash":"IERC4626-maxRedeem-address-","id":78},{"text":"previewRedeem(uint256 shares) → uint256 assets external","hash":"IERC4626-previewRedeem-uint256-","id":79},{"text":"redeem(uint256 shares, address receiver, address owner) → uint256 assets external","hash":"IERC4626-redeem-uint256-address-address-","id":80},{"text":"Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares) event","hash":"IERC4626-Deposit-address-address-uint256-uint256-","id":81},{"text":"Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares) event","hash":"IERC4626-Withdraw-address-address-address-uint256-uint256-","id":82},{"text":"IERC5313 ","hash":"IERC5313","id":83},{"text":"owner() → address external","hash":"IERC5313-owner--","id":84},{"text":"IERC5267 ","hash":"IERC5267","id":85},{"text":"eip712Domain() → bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions external","hash":"IERC5267-eip712Domain--","id":86},{"text":"EIP712DomainChanged() event","hash":"IERC5267-EIP712DomainChanged--","id":87},{"text":"IERC5805 ","hash":"IERC5805","id":88},{"text":"IERC6372 ","hash":"IERC6372","id":89},{"text":"clock() → uint48 external","hash":"IERC6372-clock--","id":90},{"text":"CLOCK_MODE() → string external","hash":"IERC6372-CLOCK_MODE--","id":91},{"text":"IERC7674 ","hash":"IERC7674","id":92},{"text":"temporaryApprove(address spender, uint256 value) → bool success external","hash":"IERC7674-temporaryApprove-address-uint256-","id":93}]},"25":{"id":25,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/metatx This directory includes contracts for adding meta-transaction capabilities (i.e. abstracting the execution context from the transaction origin) following the ERC-2771 specification. ERC2771Context: Provides a mechanism to override the sender and calldata of the execution context (msg.sender and msg.data) with a custom value specified by a trusted forwarder. ERC2771Forwarder: A production-ready forwarder that relays operation requests signed off-chain by an EOA. import \"@openzeppelin/contracts/metatx/ERC2771Context.sol\"; Context variant with ERC-2771 support. Avoid using this pattern in contracts that rely in a specific calldata length as they’ll be affected by any forwarder whose msg.data is suffixed with the from address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the receive function only accessible if msg.data.length == 0. The usage of delegatecall in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a delegatecall to itself will result in an invalid _msgSender recovery. Functions constructor(trustedForwarder_) trustedForwarder() isTrustedForwarder(forwarder) _msgSender() _msgData() _contextSuffixLength() Returns the address of the trusted forwarder. Indicates whether any particular address is the trusted forwarder. Override for msg.sender. Defaults to the original msg.sender whenever a call is not performed by the trusted forwarder or the calldata length is less than 20 bytes (an address length). Override for msg.data. Defaults to the original msg.data whenever a call is not performed by the trusted forwarder or the calldata length is less than 20 bytes (an address length). ERC-2771 specifies the context as being a single address (20 bytes). import \"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\"; A forwarder compatible with ERC-2771 contracts. See ERC2771Context. This forwarder operates on forward requests that include: from: An address to operate on behalf of. It is required to be equal to the request signer. to: The address that should be called. value: The amount of native token to attach with the requested call. gas: The amount of gas limit that will be forwarded with the requested call. nonce: A unique transaction ordering identifier to avoid replayability and request invalidation. deadline: A timestamp after which the request is not executable anymore. data: Encoded msg.data to send with the requested call. Relayers are able to submit batches if they are processing a high volume of requests. With high throughput, relayers may run into limitations of the chain such as limits on the number of transactions in the mempool. In these cases the recommendation is to distribute the load among multiple accounts. Batching requests includes an optional refund for unused msg.value that is achieved by performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance, if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly handle msg.data.length == 0. ERC2771Context in OpenZeppelin Contracts versions prior to 4.9.3 do not handle this properly. If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount specified in the request. This contract does not implement any kind of retribution for this gas, and it is assumed that there is an out of band incentive for relayers to pay for execution on behalf of signers. Often, the relayer is operated by a project that will consider it a user acquisition cost. By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward some other purpose that is not aligned with the expected out of band incentives. If you operate a relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or ERC-1155 transfers specifically, consider rejecting the use of the data field, since it can be used to execute arbitrary code. Functions constructor(name) verify(request) execute(request) executeBatch(requests, refundReceiver) _validate(request) _recoverForwardRequestSigner(request) _execute(request, requireValidRequest) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events ExecutedForwardRequest(signer, nonce, success) IERC5267 EIP712DomainChanged() Errors ERC2771ForwarderInvalidSigner(signer, from) ERC2771ForwarderMismatchedValue(requestedValue, msgValue) ERC2771ForwarderExpiredRequest(deadline) ERC2771UntrustfulTarget(target, forwarder) Nonces InvalidAccountNonce(account, currentNonce) Internal Variables bytes32 constant _FORWARD_REQUEST_TYPEHASH See EIP712.constructor. Returns true if a request is valid for a provided signature at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn’t expired (deadline is not met), and the signer matches the from parameter of the signed request. A request may return false here but it won’t cause executeBatch to revert if a refund receiver is provided. Executes a request on behalf of `signature’s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: The request value should be equal to the provided msg.value. The request should be valid according to verify. Batch version of execute with optional refunding and atomic execution. In case a batch contains at least one invalid request (see verify), the request will be skipped and the refundReceiver parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the refundReceiver is the address(0), this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: The sum of the requests' values should be equal to the provided msg.value. All of the requests should be valid (see verify) when refundReceiver is the zero address. Setting a zero refundReceiver guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting. Validates if the provided request can be executed at current block timestamp with the given request.signature on behalf of request.signer. Returns a tuple with the recovered the signer of an EIP712 forward request message hash and a boolean indicating if the signature is valid. The signature is considered valid if ECDSA.tryRecover indicates no recover error for it. Validates and executes a signed request returning the request call success value. Internal function without msg.value validation. Requirements: The caller must have provided enough gas to forward with the call. The request must be valid (see verify) if the requireValidRequest is true. Emits an ExecutedForwardRequest event. Using this function doesn’t check that all the msg.value was sent, potentially leaving value stuck in the contract. Emitted when a ForwardRequest is executed. An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas. The request from doesn’t match with the recovered signer. The requestedValue doesn’t match with the available msgValue. The request deadline has expired. The request target doesn’t trust the forwarder. ← Interfaces Proxy →","title":"Meta Transactions","component":"contracts","version":"5.x","name":"metatx","url":"/contracts/5.x/api/metatx.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"ERC2771Context ","hash":"ERC2771Context","id":2},{"text":"constructor(address trustedForwarder_) internal","hash":"ERC2771Context-constructor-address-","id":3},{"text":"trustedForwarder() → address public","hash":"ERC2771Context-trustedForwarder--","id":4},{"text":"isTrustedForwarder(address forwarder) → bool public","hash":"ERC2771Context-isTrustedForwarder-address-","id":5},{"text":"_msgSender() → address internal","hash":"ERC2771Context-_msgSender--","id":6},{"text":"_msgData() → bytes internal","hash":"ERC2771Context-_msgData--","id":7},{"text":"_contextSuffixLength() → uint256 internal","hash":"ERC2771Context-_contextSuffixLength--","id":8},{"text":"Utils","hash":"utils","id":9},{"text":"ERC2771Forwarder ","hash":"ERC2771Forwarder","id":10},{"text":"Security Considerations","hash":"security_considerations","id":11},{"text":"constructor(string name) public","hash":"ERC2771Forwarder-constructor-string-","id":12},{"text":"verify(struct ERC2771Forwarder.ForwardRequestData request) → bool public","hash":"ERC2771Forwarder-verify-struct-ERC2771Forwarder-ForwardRequestData-","id":13},{"text":"execute(struct ERC2771Forwarder.ForwardRequestData request) public","hash":"ERC2771Forwarder-execute-struct-ERC2771Forwarder-ForwardRequestData-","id":14},{"text":"executeBatch(struct ERC2771Forwarder.ForwardRequestData[] requests, address payable refundReceiver) public","hash":"ERC2771Forwarder-executeBatch-struct-ERC2771Forwarder-ForwardRequestData---address-payable-","id":15},{"text":"_validate(struct ERC2771Forwarder.ForwardRequestData request) → bool isTrustedForwarder, bool active, bool signerMatch, address signer internal","hash":"ERC2771Forwarder-_validate-struct-ERC2771Forwarder-ForwardRequestData-","id":16},{"text":"_recoverForwardRequestSigner(struct ERC2771Forwarder.ForwardRequestData request) → bool, address internal","hash":"ERC2771Forwarder-_recoverForwardRequestSigner-struct-ERC2771Forwarder-ForwardRequestData-","id":17},{"text":"_execute(struct ERC2771Forwarder.ForwardRequestData request, bool requireValidRequest) → bool success internal","hash":"ERC2771Forwarder-_execute-struct-ERC2771Forwarder-ForwardRequestData-bool-","id":18},{"text":"ExecutedForwardRequest(address indexed signer, uint256 nonce, bool success) event","hash":"ERC2771Forwarder-ExecutedForwardRequest-address-uint256-bool-","id":19},{"text":"ERC2771ForwarderInvalidSigner(address signer, address from) error","hash":"ERC2771Forwarder-ERC2771ForwarderInvalidSigner-address-address-","id":20},{"text":"ERC2771ForwarderMismatchedValue(uint256 requestedValue, uint256 msgValue) error","hash":"ERC2771Forwarder-ERC2771ForwarderMismatchedValue-uint256-uint256-","id":21},{"text":"ERC2771ForwarderExpiredRequest(uint48 deadline) error","hash":"ERC2771Forwarder-ERC2771ForwarderExpiredRequest-uint48-","id":22},{"text":"ERC2771UntrustfulTarget(address target, address forwarder) error","hash":"ERC2771Forwarder-ERC2771UntrustfulTarget-address-address-","id":23},{"text":"bytes32 _FORWARD_REQUEST_TYPEHASH internal constant","hash":"ERC2771Forwarder-_FORWARD_REQUEST_TYPEHASH-bytes32","id":24}]},"26":{"id":26,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/proxy This is a low-level set of contracts implementing different proxy patterns with and without upgradeability. For an in-depth overview of this pattern check out the Proxy Upgrade Pattern page. Most of the proxies below are built on an abstract base contract. Proxy: Abstract contract implementing the core delegation functionality. In order to avoid clashes with the storage variables of the implementation contract behind a proxy, we use ERC-1967 storage slots. ERC1967Utils: Internal functions to get and set the storage slots defined in ERC-1967. ERC1967Proxy: A proxy using ERC-1967 storage slots. Not upgradeable by default. There are two alternative ways to add upgradeability to an ERC-1967 proxy. Their differences are explained below in Transparent vs UUPS Proxies. TransparentUpgradeableProxy: A proxy with a built-in immutable admin and upgrade interface. UUPSUpgradeable: An upgradeability mechanism to be included in the implementation contract. Using upgradeable proxies correctly and securely is a difficult task that requires deep knowledge of the proxy pattern, Solidity, and the EVM. Unless you want a lot of low level control, we recommend using the OpenZeppelin Upgrades Plugins for Hardhat and Foundry. A different family of proxies are beacon proxies. This pattern, popularized by Dharma, allows multiple proxies to be upgraded to a different implementation in a single transaction. BeaconProxy: A proxy that retrieves its implementation from a beacon contract. UpgradeableBeacon: A beacon contract with a built in admin that can upgrade the BeaconProxy pointing to it. In this pattern, the proxy contract doesn’t hold the implementation address in storage like an ERC-1967 proxy. Instead, the address is stored in a separate beacon contract. The upgrade operations are sent to the beacon instead of to the proxy contract, and all proxies that follow that beacon are automatically upgraded. Outside the realm of upgradeability, proxies can also be useful to make cheap contract clones, such as those created by an on-chain factory contract that creates many instances of the same contract. These instances are designed to be both cheap to deploy, and cheap to call. Clones: A library that can deploy cheap minimal non-upgradeable proxies. The original proxies included in OpenZeppelin followed the Transparent Proxy Pattern. While this pattern is still provided, our recommendation is now shifting towards UUPS proxies, which are both lightweight and versatile. The name UUPS comes from ERC-1822, which first documented the pattern. While both of these share the same interface for upgrades, in UUPS proxies the upgrade is handled by the implementation, and can eventually be removed. Transparent proxies, on the other hand, include the upgrade and admin logic in the proxy itself. This means TransparentUpgradeableProxy is more expensive to deploy than what is possible with UUPS proxies. UUPS proxies are implemented using an ERC1967Proxy. Note that this proxy is not by itself upgradeable. It is the role of the implementation to include, alongside the contract’s logic, all the code necessary to update the implementation’s address that is stored at a specific slot in the proxy’s storage space. This is where the UUPSUpgradeable contract comes in. Inheriting from it (and overriding the _authorizeUpgrade function with the relevant access control mechanism) will turn your contract into a UUPS compliant implementation. Note that since both proxies use the same storage slot for the implementation address, using a UUPS compliant implementation with a TransparentUpgradeableProxy might allow non-admins to perform upgrade operations. By default, the upgrade functionality included in UUPSUpgradeable contains a security mechanism that will prevent any upgrades to a non UUPS compliant implementation. This prevents upgrades to an implementation contract that wouldn’t contain the necessary upgrade mechanism, as it would lock the upgradeability of the proxy forever. This security mechanism can be bypassed by either of: Adding a flag mechanism in the implementation that will disable the upgrade function when triggered. Upgrading to an implementation that features an upgrade mechanism without the additional security check, and then upgrading again to another implementation without the upgrade mechanism. The current implementation of this security mechanism uses ERC-1822 to detect the storage slot used by the implementation. A previous implementation, now deprecated, relied on a rollback check. It is possible to upgrade from a contract using the old mechanism to a new one. The inverse is however not possible, as old implementations (before version 4.5) did not include the ERC-1822 interface. import \"@openzeppelin/contracts/proxy/Proxy.sol\"; This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction delegatecall. We refer to the second contract as the implementation behind the proxy, and it has to be specified by overriding the virtual _implementation function. Additionally, delegation to the implementation can be triggered manually through the _fallback function, or to a different contract through the _delegate function. The success and return data of the delegated call will be returned back to the caller of the proxy. Functions _delegate(implementation) _implementation() _fallback() fallback() Delegates the current call to implementation. This function does not return to its internal call site, it will return directly to the external caller. This is a virtual function that should be overridden so it returns the address to which the fallback function and _fallback should delegate. Delegates the current call to the address returned by _implementation(). This function does not return to its internal call site, it will return directly to the external caller. Fallback function that delegates calls to the address returned by _implementation(). Will run if no other function in the contract matches the call data. import \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\"; This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by ERC-1967, so that it doesn’t conflict with the storage layout of the implementation behind the proxy. Functions constructor(implementation, _data) _implementation() Proxy _delegate(implementation) _fallback() fallback() Initializes the upgradeable proxy with an initial implementation specified by implementation. If _data is nonempty, it’s used as data in a delegate call to implementation. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: If data is empty, msg.value must be zero. Returns the current implementation address. To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using the eth_getStorageAt RPC call. 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc import \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\"; This library provides getters and event emitting update functions for ERC-1967 slots. Functions getImplementation() upgradeToAndCall(newImplementation, data) getAdmin() changeAdmin(newAdmin) getBeacon() upgradeBeaconToAndCall(newBeacon, data) Errors ERC1967InvalidImplementation(implementation) ERC1967InvalidAdmin(admin) ERC1967InvalidBeacon(beacon) ERC1967NonPayable() Internal Variables bytes32 constant IMPLEMENTATION_SLOT bytes32 constant ADMIN_SLOT bytes32 constant BEACON_SLOT Returns the current implementation address. Performs implementation upgrade with additional setup call if data is nonempty. This function is payable only if the setup call is performed, otherwise msg.value is rejected to avoid stuck value in the contract. Emits an IERC1967.Upgraded event. Returns the current admin. To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using the eth_getStorageAt RPC call. 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 Changes the admin of the proxy. Emits an IERC1967.AdminChanged event. Returns the current beacon. Change the beacon and trigger a setup call if data is nonempty. This function is payable only if the setup call is performed, otherwise msg.value is rejected to avoid stuck value in the contract. Emits an IERC1967.BeaconUpgraded event. Invoking this function has no effect on an instance of BeaconProxy since v5, since it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for efficiency. The implementation of the proxy is invalid. The admin of the proxy is invalid. The beacon of the proxy is invalid. An upgrade function sees msg.value > 0 that may be lost. Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1. Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1. The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1. import \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\"; This contract implements a proxy that is upgradeable through an associated ProxyAdmin instance. To avoid proxy selector clashing, which can potentially be used in an attack, this contract uses the transparent proxy pattern. This pattern implies two things that go hand in hand: If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the ITransparentUpgradeableProxy.upgradeToAndCall function exposed by the proxy itself. If the admin calls the proxy, it can call the upgradeToAndCall function but any other call won’t be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it’s best if it’s a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of ProxyAdmin and allows upgrades only if they come through it. You should think of the ProxyAdmin instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. The real interface of this proxy is that defined in ITransparentUpgradeableProxy. This contract does not inherit from that interface, and instead upgradeToAndCall is implicitly implemented using a custom dispatch mechanism in _fallback. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. This proxy does not inherit from Context deliberately. The ProxyAdmin of this contract won’t send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in ITransparentUpgradeableProxy will be resolved in favor of the new one. This could render the upgradeToAndCall function inaccessible, preventing upgradeability and compromising transparency. Functions constructor(_logic, initialOwner, _data) _proxyAdmin() _fallback() ERC1967Proxy _implementation() Proxy _delegate(implementation) fallback() Errors ProxyDeniedAdminAccess() Initializes an upgradeable proxy managed by an instance of a ProxyAdmin with an initialOwner, backed by the implementation at _logic, and optionally initialized with _data as explained in ERC1967Proxy.constructor. Returns the admin of this proxy. If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior. The proxy caller is the current admin, and can’t fallback to the proxy target. import \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\"; This is an auxiliary contract meant to be assigned as the admin of a TransparentUpgradeableProxy. For an explanation of why you would want to use this see the documentation for TransparentUpgradeableProxy. Functions constructor(initialOwner) upgradeAndCall(proxy, implementation, data) UPGRADE_INTERFACE_VERSION() Ownable owner() _checkOwner() renounceOwnership() transferOwnership(newOwner) _transferOwnership(newOwner) Events Ownable OwnershipTransferred(previousOwner, newOwner) Errors Ownable OwnableUnauthorizedAccount(account) OwnableInvalidOwner(owner) Sets the initial owner who can perform upgrades. Upgrades proxy to implementation and calls a function on the new implementation. See TransparentUpgradeableProxy._dispatchUpgradeToAndCall. Requirements: This contract must be the admin of proxy. If data is empty, msg.value must be zero. The version of the upgrade interface of the contract. If this getter is missing, both upgrade(address,address) and upgradeAndCall(address,address,bytes) are present, and upgrade must be used if no function should be called, while upgradeAndCall will invoke the receive function if the third argument is the empty byte string. If the getter returns \"5.0.0\", only upgradeAndCall(address,address,bytes) is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the receive function during an upgrade. import \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\"; This contract implements a proxy that gets the implementation address for each call from an UpgradeableBeacon. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by ERC-1967 so that it can be accessed externally. Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address. Functions constructor(beacon, data) _implementation() _getBeacon() Proxy _delegate(implementation) _fallback() fallback() Initializes the proxy with beacon. If data is nonempty, it’s used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: beacon must be a contract with the interface IBeacon. If data is empty, msg.value must be zero. Returns the current implementation address of the associated beacon. Returns the beacon. import \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\"; This is the interface that BeaconProxy expects of its beacon. Functions implementation() Must return an address that can be used as a delegate call target. UpgradeableBeacon will check that this address is a contract. import \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\"; This contract is used in conjunction with one or more instances of BeaconProxy to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon. Functions constructor(implementation_, initialOwner) implementation() upgradeTo(newImplementation) Ownable owner() _checkOwner() renounceOwnership() transferOwnership(newOwner) _transferOwnership(newOwner) Events Upgraded(implementation) Ownable OwnershipTransferred(previousOwner, newOwner) Errors BeaconInvalidImplementation(implementation) Ownable OwnableUnauthorizedAccount(account) OwnableInvalidOwner(owner) Sets the address of the initial implementation, and the initial owner who can upgrade the beacon. Returns the current implementation address. Upgrades the beacon to a new implementation. Emits an Upgraded event. Requirements: msg.sender must be the owner of the contract. newImplementation must be a contract. Emitted when the implementation returned by the beacon is changed. The implementation of the beacon is invalid. import \"@openzeppelin/contracts/proxy/Clones.sol\"; ERC-1167 is a standard for deploying minimal proxy contracts, also known as \"clones\". To simply and cheaply clone contract functionality in an immutable way, this standard specifies a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either create (traditional deployment) or create2 (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. Functions clone(implementation) clone(implementation, value) cloneDeterministic(implementation, salt) cloneDeterministic(implementation, salt, value) predictDeterministicAddress(implementation, salt, deployer) predictDeterministicAddress(implementation, salt) cloneWithImmutableArgs(implementation, args) cloneWithImmutableArgs(implementation, args, value) cloneDeterministicWithImmutableArgs(implementation, args, salt) cloneDeterministicWithImmutableArgs(implementation, args, salt, value) predictDeterministicAddressWithImmutableArgs(implementation, args, salt, deployer) predictDeterministicAddressWithImmutableArgs(implementation, args, salt) fetchCloneArgs(instance) Errors CloneArgumentsTooLong() Deploys and returns the address of a clone that mimics the behaviour of implementation. This function uses the create opcode, which should never revert. Same as clone, but with a value parameter to send native currency to the new contract. Using a non-zero value at creation will require the contract using this function (e.g. a factory) to always have enough balance for new deployments. Consider exposing this function under a payable method. Deploys and returns the address of a clone that mimics the behaviour of implementation. This function uses the create2 opcode and a salt to deterministically deploy the clone. Using the same implementation and salt multiple time will revert, since the clones cannot be deployed twice at the same address. Same as cloneDeterministic, but with a value parameter to send native currency to the new contract. Using a non-zero value at creation will require the contract using this function (e.g. a factory) to always have enough balance for new deployments. Consider exposing this function under a payable method. Computes the address of a clone deployed using Clones.cloneDeterministic. Computes the address of a clone deployed using Clones.cloneDeterministic. Deploys and returns the address of a clone that mimics the behavior of implementation with custom immutable arguments. These are provided through args and cannot be changed after deployment. To access the arguments within the implementation, use fetchCloneArgs. This function uses the create opcode, which should never revert. Same as cloneWithImmutableArgs, but with a value parameter to send native currency to the new contract. Using a non-zero value at creation will require the contract using this function (e.g. a factory) to always have enough balance for new deployments. Consider exposing this function under a payable method. Deploys and returns the address of a clone that mimics the behaviour of implementation with custom immutable arguments. These are provided through args and cannot be changed after deployment. To access the arguments within the implementation, use fetchCloneArgs. This function uses the create2 opcode and a salt to deterministically deploy the clone. Using the same implementation and salt multiple time will revert, since the clones cannot be deployed twice at the same address. Same as cloneDeterministicWithImmutableArgs, but with a value parameter to send native currency to the new contract. Using a non-zero value at creation will require the contract using this function (e.g. a factory) to always have enough balance for new deployments. Consider exposing this function under a payable method. Computes the address of a clone deployed using Clones.cloneDeterministicWithImmutableArgs. Computes the address of a clone deployed using Clones.cloneDeterministicWithImmutableArgs. Get the immutable args attached to a clone. If instance is a clone that was deployed using clone or cloneDeterministic, this function will return an empty array. If instance is a clone that was deployed using cloneWithImmutableArgs or cloneDeterministicWithImmutableArgs, this function will return the args array used at creation. If instance is NOT a clone deployed using this library, the behavior is undefined. This function should only be used to check addresses that are known to be clones. import \"@openzeppelin/contracts/proxy/utils/Initializable.sol\"; This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it’s common to move constructor logic to an external initializer function, usually called initialize. It then becomes necessary to protect this initializer function so it can only be called once. The initializer modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: contract MyToken is ERC20Upgradeable { function initialize() initializer public { __ERC20_init(\"MyToken\", \"MTK\"); } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable { function initializeV2() reinitializer(2) public { __ERC20Permit_init(\"MyToken\"); } } To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the _data argument to ERC1967Proxy.constructor. When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the _disableInitializers function in the constructor to automatically lock it when it is deployed: /// @custom:oz-upgrades-unsafe-allow constructor constructor() { _disableInitializers(); } Modifiers initializer() reinitializer(version) onlyInitializing() Functions _checkInitializing() _disableInitializers() _getInitializedVersion() _isInitializing() Events Initialized(version) Errors InvalidInitialization() NotInitializing() A modifier that defines a protected initializer function that can be invoked at most once. In its scope, onlyInitializing functions can be used to initialize parent contracts. Similar to reinitializer(1), except that in the context of a constructor an initializer may be invoked any number of times. This behavior in the constructor can be useful during testing and is not expected to be used in production. Emits an Initialized event. A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the contract hasn’t been initialized to a greater version before. In its scope, onlyInitializing functions can be used to initialize parent contracts. A reinitializer may be used after the original initialization step. This is essential to configure modules that are added through upgrades and that require initialization. When version is 1, this modifier is similar to initializer, except that functions marked with reinitializer cannot be nested. If one is invoked in the context of another, execution will revert. Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in a contract, executing them in the right order is up to the developer or operator. Setting the version to 2**64 - 1 will prevent any future reinitialization. Emits an Initialized event. Modifier to protect an initialization function so that it can only be invoked by functions with the initializer and reinitializer modifiers, directly or indirectly. Reverts if the contract is not in an initializing state. See onlyInitializing. Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call. Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized to any version. It is recommended to use this to lock implementation contracts that are designed to be called through proxies. Emits an Initialized event the first time it is successfully executed. Returns the highest version that has been initialized. See reinitializer. Returns true if the contract is currently initializing. See onlyInitializing. Triggered when the contract has been initialized or reinitialized. The contract is already initialized. The contract is not initializing. import \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\"; An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an ERC1967Proxy, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing UUPSUpgradeable with a custom implementation of upgrades. The _authorizeUpgrade function must be overridden to include access restriction to the upgrade mechanism. Modifiers onlyProxy() notDelegated() Functions proxiableUUID() upgradeToAndCall(newImplementation, data) _checkProxy() _checkNotDelegated() _authorizeUpgrade(newImplementation) UPGRADE_INTERFACE_VERSION() Errors UUPSUnauthorizedCallContext() UUPSUnsupportedProxiableUUID(slot) Check that the execution is being performed through a delegatecall call and that the execution context is a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to fail. Check that the execution is not being performed through a delegate call. This allows a function to be callable on the implementing contract but not through proxies. Implementation of the ERC-1822 proxiableUUID function. This returns the storage slot used by the implementation. It is used to validate the implementation’s compatibility when performing an upgrade. A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the notDelegated modifier. Upgrade the implementation of the proxy to newImplementation, and subsequently execute the function call encoded in data. Calls _authorizeUpgrade. Emits an Upgraded event. Reverts if the execution is not performed via delegatecall or the execution context is not of a proxy with an ERC-1967 compliant implementation pointing to self. See {_onlyProxy}. Reverts if the execution is performed via delegatecall. See notDelegated. Function that should revert when msg.sender is not authorized to upgrade the contract. Called by upgradeToAndCall. Normally, this function will use an access control modifier such as Ownable.onlyOwner. function _authorizeUpgrade(address) internal onlyOwner {} The version of the upgrade interface of the contract. If this getter is missing, both upgradeTo(address) and upgradeToAndCall(address,bytes) are present, and upgradeTo must be used if no function should be called, while upgradeToAndCall will invoke the receive function if the second argument is the empty byte string. If the getter returns \"5.0.0\", only upgradeToAndCall(address,bytes) is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the receive function during an upgrade. The call is from an unauthorized context. The storage slot is unsupported as a UUID. ← Meta Transactions Utils →","title":"Proxies","component":"contracts","version":"5.x","name":"proxy","url":"/contracts/5.x/api/proxy.html","titles":[{"text":"Transparent vs UUPS Proxies","hash":"transparent-vs-uups","id":1},{"text":"Core","hash":"core","id":2},{"text":"Proxy ","hash":"Proxy","id":3},{"text":"_delegate(address implementation) internal","hash":"Proxy-_delegate-address-","id":4},{"text":"_implementation() → address internal","hash":"Proxy-_implementation--","id":5},{"text":"_fallback() internal","hash":"Proxy-_fallback--","id":6},{"text":"fallback() external","hash":"Proxy-fallback--","id":7},{"text":"ERC-1967","hash":"erc_1967","id":8},{"text":"ERC1967Proxy ","hash":"ERC1967Proxy","id":9},{"text":"constructor(address implementation, bytes _data) public","hash":"ERC1967Proxy-constructor-address-bytes-","id":10},{"text":"_implementation() → address internal","hash":"ERC1967Proxy-_implementation--","id":11},{"text":"ERC1967Utils ","hash":"ERC1967Utils","id":12},{"text":"getImplementation() → address internal","hash":"ERC1967Utils-getImplementation--","id":13},{"text":"upgradeToAndCall(address newImplementation, bytes data) internal","hash":"ERC1967Utils-upgradeToAndCall-address-bytes-","id":14},{"text":"getAdmin() → address internal","hash":"ERC1967Utils-getAdmin--","id":15},{"text":"changeAdmin(address newAdmin) internal","hash":"ERC1967Utils-changeAdmin-address-","id":16},{"text":"getBeacon() → address internal","hash":"ERC1967Utils-getBeacon--","id":17},{"text":"upgradeBeaconToAndCall(address newBeacon, bytes data) internal","hash":"ERC1967Utils-upgradeBeaconToAndCall-address-bytes-","id":18},{"text":"ERC1967InvalidImplementation(address implementation) error","hash":"ERC1967Utils-ERC1967InvalidImplementation-address-","id":19},{"text":"ERC1967InvalidAdmin(address admin) error","hash":"ERC1967Utils-ERC1967InvalidAdmin-address-","id":20},{"text":"ERC1967InvalidBeacon(address beacon) error","hash":"ERC1967Utils-ERC1967InvalidBeacon-address-","id":21},{"text":"ERC1967NonPayable() error","hash":"ERC1967Utils-ERC1967NonPayable--","id":22},{"text":"bytes32 IMPLEMENTATION_SLOT internal constant","hash":"ERC1967Utils-IMPLEMENTATION_SLOT-bytes32","id":23},{"text":"bytes32 ADMIN_SLOT internal constant","hash":"ERC1967Utils-ADMIN_SLOT-bytes32","id":24},{"text":"bytes32 BEACON_SLOT internal constant","hash":"ERC1967Utils-BEACON_SLOT-bytes32","id":25},{"text":"Transparent Proxy","hash":"transparent_proxy","id":26},{"text":"TransparentUpgradeableProxy ","hash":"TransparentUpgradeableProxy","id":27},{"text":"constructor(address _logic, address initialOwner, bytes _data) public","hash":"TransparentUpgradeableProxy-constructor-address-address-bytes-","id":28},{"text":"_proxyAdmin() → address internal","hash":"TransparentUpgradeableProxy-_proxyAdmin--","id":29},{"text":"_fallback() internal","hash":"TransparentUpgradeableProxy-_fallback--","id":30},{"text":"ProxyDeniedAdminAccess() error","hash":"TransparentUpgradeableProxy-ProxyDeniedAdminAccess--","id":31},{"text":"ProxyAdmin ","hash":"ProxyAdmin","id":32},{"text":"constructor(address initialOwner) public","hash":"ProxyAdmin-constructor-address-","id":33},{"text":"upgradeAndCall(contract ITransparentUpgradeableProxy proxy, address implementation, bytes data) public","hash":"ProxyAdmin-upgradeAndCall-contract-ITransparentUpgradeableProxy-address-bytes-","id":34},{"text":"UPGRADE_INTERFACE_VERSION() → string public","hash":"ProxyAdmin-UPGRADE_INTERFACE_VERSION-string","id":35},{"text":"Beacon","hash":"beacon","id":36},{"text":"BeaconProxy ","hash":"BeaconProxy","id":37},{"text":"constructor(address beacon, bytes data) public","hash":"BeaconProxy-constructor-address-bytes-","id":38},{"text":"_implementation() → address internal","hash":"BeaconProxy-_implementation--","id":39},{"text":"_getBeacon() → address internal","hash":"BeaconProxy-_getBeacon--","id":40},{"text":"IBeacon ","hash":"IBeacon","id":41},{"text":"implementation() → address external","hash":"IBeacon-implementation--","id":42},{"text":"UpgradeableBeacon ","hash":"UpgradeableBeacon","id":43},{"text":"constructor(address implementation_, address initialOwner) public","hash":"UpgradeableBeacon-constructor-address-address-","id":44},{"text":"implementation() → address public","hash":"UpgradeableBeacon-implementation--","id":45},{"text":"upgradeTo(address newImplementation) public","hash":"UpgradeableBeacon-upgradeTo-address-","id":46},{"text":"Upgraded(address indexed implementation) event","hash":"UpgradeableBeacon-Upgraded-address-","id":47},{"text":"BeaconInvalidImplementation(address implementation) error","hash":"UpgradeableBeacon-BeaconInvalidImplementation-address-","id":48},{"text":"Minimal Clones","hash":"minimal_clones","id":49},{"text":"Clones ","hash":"Clones","id":50},{"text":"clone(address implementation) → address instance internal","hash":"Clones-clone-address-","id":51},{"text":"clone(address implementation, uint256 value) → address instance internal","hash":"Clones-clone-address-uint256-","id":52},{"text":"cloneDeterministic(address implementation, bytes32 salt) → address instance internal","hash":"Clones-cloneDeterministic-address-bytes32-","id":53},{"text":"cloneDeterministic(address implementation, bytes32 salt, uint256 value) → address instance internal","hash":"Clones-cloneDeterministic-address-bytes32-uint256-","id":54},{"text":"predictDeterministicAddress(address implementation, bytes32 salt, address deployer) → address predicted internal","hash":"Clones-predictDeterministicAddress-address-bytes32-address-","id":55},{"text":"predictDeterministicAddress(address implementation, bytes32 salt) → address predicted internal","hash":"Clones-predictDeterministicAddress-address-bytes32-","id":56},{"text":"cloneWithImmutableArgs(address implementation, bytes args) → address instance internal","hash":"Clones-cloneWithImmutableArgs-address-bytes-","id":57},{"text":"cloneWithImmutableArgs(address implementation, bytes args, uint256 value) → address instance internal","hash":"Clones-cloneWithImmutableArgs-address-bytes-uint256-","id":58},{"text":"cloneDeterministicWithImmutableArgs(address implementation, bytes args, bytes32 salt) → address instance internal","hash":"Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-","id":59},{"text":"cloneDeterministicWithImmutableArgs(address implementation, bytes args, bytes32 salt, uint256 value) → address instance internal","hash":"Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-uint256-","id":60},{"text":"predictDeterministicAddressWithImmutableArgs(address implementation, bytes args, bytes32 salt, address deployer) → address predicted internal","hash":"Clones-predictDeterministicAddressWithImmutableArgs-address-bytes-bytes32-address-","id":61},{"text":"predictDeterministicAddressWithImmutableArgs(address implementation, bytes args, bytes32 salt) → address predicted internal","hash":"Clones-predictDeterministicAddressWithImmutableArgs-address-bytes-bytes32-","id":62},{"text":"fetchCloneArgs(address instance) → bytes internal","hash":"Clones-fetchCloneArgs-address-","id":63},{"text":"CloneArgumentsTooLong() error","hash":"Clones-CloneArgumentsTooLong--","id":64},{"text":"Utils","hash":"utils","id":65},{"text":"Initializable ","hash":"Initializable","id":66},{"text":"initializer() modifier","hash":"Initializable-initializer--","id":67},{"text":"reinitializer(uint64 version) modifier","hash":"Initializable-reinitializer-uint64-","id":68},{"text":"onlyInitializing() modifier","hash":"Initializable-onlyInitializing--","id":69},{"text":"_checkInitializing() internal","hash":"Initializable-_checkInitializing--","id":70},{"text":"_disableInitializers() internal","hash":"Initializable-_disableInitializers--","id":71},{"text":"_getInitializedVersion() → uint64 internal","hash":"Initializable-_getInitializedVersion--","id":72},{"text":"_isInitializing() → bool internal","hash":"Initializable-_isInitializing--","id":73},{"text":"Initialized(uint64 version) event","hash":"Initializable-Initialized-uint64-","id":74},{"text":"InvalidInitialization() error","hash":"Initializable-InvalidInitialization--","id":75},{"text":"NotInitializing() error","hash":"Initializable-NotInitializing--","id":76},{"text":"UUPSUpgradeable ","hash":"UUPSUpgradeable","id":77},{"text":"onlyProxy() modifier","hash":"UUPSUpgradeable-onlyProxy--","id":78},{"text":"notDelegated() modifier","hash":"UUPSUpgradeable-notDelegated--","id":79},{"text":"proxiableUUID() → bytes32 external","hash":"UUPSUpgradeable-proxiableUUID--","id":80},{"text":"upgradeToAndCall(address newImplementation, bytes data) public","hash":"UUPSUpgradeable-upgradeToAndCall-address-bytes-","id":81},{"text":"_checkProxy() internal","hash":"UUPSUpgradeable-_checkProxy--","id":82},{"text":"_checkNotDelegated() internal","hash":"UUPSUpgradeable-_checkNotDelegated--","id":83},{"text":"_authorizeUpgrade(address newImplementation) internal","hash":"UUPSUpgradeable-_authorizeUpgrade-address-","id":84},{"text":"UPGRADE_INTERFACE_VERSION() → string public","hash":"UUPSUpgradeable-UPGRADE_INTERFACE_VERSION-string","id":85},{"text":"UUPSUnauthorizedCallContext() error","hash":"UUPSUpgradeable-UUPSUnauthorizedCallContext--","id":86},{"text":"UUPSUnsupportedProxiableUUID(bytes32 slot) error","hash":"UUPSUpgradeable-UUPSUnsupportedProxiableUUID-bytes32-","id":87}]},"27":{"id":27,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/utils Miscellaneous contracts and libraries containing utility functions you can use to improve security, work with new data types, or safely use low-level primitives. Math, SignedMath: Implementation of various arithmetic functions. SafeCast: Checked downcasting functions to avoid silent truncation. ECDSA, MessageHashUtils: Libraries for interacting with ECDSA signatures. P256: Library for verifying and recovering public keys from secp256r1 signatures. RSA: Library with RSA PKCS#1 v1.5 signature verification utilities. SignatureChecker: A library helper to support regular ECDSA from EOAs as well as ERC-1271 signatures for smart contracts. Hashes: Commonly used hash functions. MerkleProof: Functions for verifying Merkle Tree proofs. EIP712: Contract with functions to allow processing signed typed structure data according to EIP-712. MessageEnvelopeUtils: A enveloped hashing scheme that prevents replayability of smart contract signatures leveraging EIP-712 typing. ERC1271TypedSigner: A base contract to validate signatures using MessageEnvelopeUtils. ReentrancyGuard: A modifier that can prevent reentrancy during certain functions. ReentrancyGuardTransient: Variant of ReentrancyGuard that uses transient storage (EIP-1153). Pausable: A common emergency response mechanism that can pause functionality while a remediation is pending. Nonces: Utility for tracking and verifying address nonces that only increment. ERC165, ERC165Checker: Utilities for inspecting interfaces supported by contracts. BitMaps: A simple library to manage boolean value mapped to a numerical index in an efficient way. EnumerableMap: A type like Solidity’s mapping, but with key-value enumeration: this will let you know how many entries a mapping has, and iterate over them (which is not possible with mapping). EnumerableSet: Like EnumerableMap, but for sets. Can be used to store privileged accounts, issued IDs, etc. DoubleEndedQueue: An implementation of a double ended queue whose values can be removed added or remove from both sides. Useful for FIFO and LIFO structures. CircularBuffer: A data structure to store the last N values pushed to it. Checkpoints: A data structure to store values mapped to a strictly increasing key. Can be used for storing and accessing values over time. Heap: A library that implements a binary heap in storage. MerkleTree: A library with Merkle Tree data structures and helper functions. Create2: Wrapper around the CREATE2 EVM opcode for safe use without having to deal with low-level assembly. Address: Collection of functions for overloading Solidity’s address type. Arrays: Collection of functions that operate on arrays. Base64: On-chain base64 and base64URL encoding according to RFC-4648. Strings: Common operations for strings formatting. ShortString: Library to encode (and decode) short strings into (or from) a single bytes32 slot for optimizing costs. Short strings are limited to 31 characters. SlotDerivation: Methods for deriving storage slot from ERC-7201 namespaces as well as from constructions such as mapping and arrays. StorageSlot: Methods for accessing specific storage slots formatted as common primitive types. Also include primitives for reading from and writing to transient storage (only value types are currently supported). Multicall: Abstract contract with a utility to allow batching together multiple calls in a single transaction. Useful for allowing EOAs to perform multiple operations at once. Context: A utility for abstracting the sender and calldata in the current execution context. Packing: A library for packing and unpacking multiple values into bytes32 Panic: A library to revert with Solidity panic codes. Comparators: A library that contains comparator functions to use with with the Heap library. Because Solidity does not support generic types, EnumerableMap and EnumerableSet are specialized to a limited number of key-value types. import \"@openzeppelin/contracts/utils/math/Math.sol\"; Standard math utilities missing in the Solidity language. Functions tryAdd(a, b) trySub(a, b) tryMul(a, b) tryDiv(a, b) tryMod(a, b) ternary(condition, a, b) max(a, b) min(a, b) average(a, b) ceilDiv(a, b) mulDiv(x, y, denominator) mulDiv(x, y, denominator, rounding) invMod(a, n) invModPrime(a, p) modExp(b, e, m) tryModExp(b, e, m) modExp(b, e, m) tryModExp(b, e, m) sqrt(a) sqrt(a, rounding) log2(value) log2(value, rounding) log10(value) log10(value, rounding) log256(value) log256(value, rounding) unsignedRoundsUp(rounding) Returns the addition of two unsigned integers, with an success flag (no overflow). Returns the subtraction of two unsigned integers, with an success flag (no overflow). Returns the multiplication of two unsigned integers, with an success flag (no overflow). Returns the division of two unsigned integers, with a success flag (no division by zero). Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero). Branchless ternary evaluation for a ? b : c. Gas costs are constant. This function may reduce bytecode size and consume less gas when used standalone. However, the compiler may optimize Solidity ternary operations (i.e. a ? b : c) to only compute one branch when needed, making this function more expensive. Returns the largest of two numbers. Returns the smallest of two numbers. Returns the average of two numbers. The result is rounded towards zero. Returns the ceiling of the division of two numbers. This differs from standard division with / in that it rounds towards infinity instead of rounding towards zero. Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0. Original credit to Remco Bloemen under MIT license (https://xn—​2-umb.com/21/muldiv) with further edits by Uniswap Labs also under MIT license. Calculates x * y / denominator with full precision, following the selected rounding direction. Calculate the modular multiplicative inverse of a number in Z/nZ. If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0. If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible. If the input value is not inversible, 0 is returned. If you know for sure that n is (big) a prime, it may be cheaper to use Fermat’s little theorem and get the inverse using Math.modExp(a, n - 2, n). See invModPrime. Variant of invMod. More efficient, but only works if p is known to be a prime greater than 2. From Fermat’s little theorem, we know that if p is prime, then a(p-1) ≡ 1 mod p. As a consequence, we have a * a(p-2) ≡ 1 mod p, which means that a**(p-2) is the modular multiplicative inverse of a in Fp. this function does NOT check that p is a prime greater than 2. Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m) Requirements: - modulus can’t be zero - underlying staticcall to precompile must succeed The result is only valid if the underlying call succeeds. When using this function, make sure the chain you’re using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in EIP-198. Otherwise, the underlying function will succeed given the lack of a revert, but the result may be incorrectly interpreted as 0. Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m). It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying to operate modulo 0 or if the underlying precompile reverted. The result is only valid if the success flag is true. When using this function, make sure the chain you’re using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in EIP-198. Otherwise, the underlying function will succeed given the lack of a revert, but the result may be incorrectly interpreted as 0. Variant of modExp that supports inputs of arbitrary length. Variant of tryModExp that supports inputs of arbitrary length. Returns the square root of a number. If the number is not a perfect square, the value is rounded towards zero. This method is based on Newton’s method for computing square roots; the algorithm is restricted to only using integer operations. Calculates sqrt(a), following the selected rounding direction. Return the log in base 2 of a positive value rounded towards zero. Returns 0 if given 0. Return the log in base 2, following the selected rounding direction, of a positive value. Returns 0 if given 0. Return the log in base 10 of a positive value rounded towards zero. Returns 0 if given 0. Return the log in base 10, following the selected rounding direction, of a positive value. Returns 0 if given 0. Return the log in base 256 of a positive value rounded towards zero. Returns 0 if given 0. Adding one to the result gives the number of pairs of hex symbols needed to represent value as a hex string. Return the log in base 256, following the selected rounding direction, of a positive value. Returns 0 if given 0. Returns whether a provided rounding mode is considered rounding up for unsigned integers. import \"@openzeppelin/contracts/utils/math/SignedMath.sol\"; Standard signed math utilities missing in the Solidity language. Functions ternary(condition, a, b) max(a, b) min(a, b) average(a, b) abs(n) Branchless ternary evaluation for a ? b : c. Gas costs are constant. This function may reduce bytecode size and consume less gas when used standalone. However, the compiler may optimize Solidity ternary operations (i.e. a ? b : c) to only compute one branch when needed, making this function more expensive. Returns the largest of two signed numbers. Returns the smallest of two signed numbers. Returns the average of two signed numbers without overflow. The result is rounded towards zero. Returns the absolute unsigned value of a signed value. import \"@openzeppelin/contracts/utils/math/SafeCast.sol\"; Wrappers over Solidity’s uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. SafeCast restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it’s recommended to use it always. Functions toUint248(value) toUint240(value) toUint232(value) toUint224(value) toUint216(value) toUint208(value) toUint200(value) toUint192(value) toUint184(value) toUint176(value) toUint168(value) toUint160(value) toUint152(value) toUint144(value) toUint136(value) toUint128(value) toUint120(value) toUint112(value) toUint104(value) toUint96(value) toUint88(value) toUint80(value) toUint72(value) toUint64(value) toUint56(value) toUint48(value) toUint40(value) toUint32(value) toUint24(value) toUint16(value) toUint8(value) toUint256(value) toInt248(value) toInt240(value) toInt232(value) toInt224(value) toInt216(value) toInt208(value) toInt200(value) toInt192(value) toInt184(value) toInt176(value) toInt168(value) toInt160(value) toInt152(value) toInt144(value) toInt136(value) toInt128(value) toInt120(value) toInt112(value) toInt104(value) toInt96(value) toInt88(value) toInt80(value) toInt72(value) toInt64(value) toInt56(value) toInt48(value) toInt40(value) toInt32(value) toInt24(value) toInt16(value) toInt8(value) toInt256(value) toUint(b) Errors SafeCastOverflowedUintDowncast(bits, value) SafeCastOverflowedIntToUint(value) SafeCastOverflowedIntDowncast(bits, value) SafeCastOverflowedUintToInt(value) Returns the downcasted uint248 from uint256, reverting on overflow (when the input is greater than largest uint248). Counterpart to Solidity’s uint248 operator. Requirements: input must fit into 248 bits Returns the downcasted uint240 from uint256, reverting on overflow (when the input is greater than largest uint240). Counterpart to Solidity’s uint240 operator. Requirements: input must fit into 240 bits Returns the downcasted uint232 from uint256, reverting on overflow (when the input is greater than largest uint232). Counterpart to Solidity’s uint232 operator. Requirements: input must fit into 232 bits Returns the downcasted uint224 from uint256, reverting on overflow (when the input is greater than largest uint224). Counterpart to Solidity’s uint224 operator. Requirements: input must fit into 224 bits Returns the downcasted uint216 from uint256, reverting on overflow (when the input is greater than largest uint216). Counterpart to Solidity’s uint216 operator. Requirements: input must fit into 216 bits Returns the downcasted uint208 from uint256, reverting on overflow (when the input is greater than largest uint208). Counterpart to Solidity’s uint208 operator. Requirements: input must fit into 208 bits Returns the downcasted uint200 from uint256, reverting on overflow (when the input is greater than largest uint200). Counterpart to Solidity’s uint200 operator. Requirements: input must fit into 200 bits Returns the downcasted uint192 from uint256, reverting on overflow (when the input is greater than largest uint192). Counterpart to Solidity’s uint192 operator. Requirements: input must fit into 192 bits Returns the downcasted uint184 from uint256, reverting on overflow (when the input is greater than largest uint184). Counterpart to Solidity’s uint184 operator. Requirements: input must fit into 184 bits Returns the downcasted uint176 from uint256, reverting on overflow (when the input is greater than largest uint176). Counterpart to Solidity’s uint176 operator. Requirements: input must fit into 176 bits Returns the downcasted uint168 from uint256, reverting on overflow (when the input is greater than largest uint168). Counterpart to Solidity’s uint168 operator. Requirements: input must fit into 168 bits Returns the downcasted uint160 from uint256, reverting on overflow (when the input is greater than largest uint160). Counterpart to Solidity’s uint160 operator. Requirements: input must fit into 160 bits Returns the downcasted uint152 from uint256, reverting on overflow (when the input is greater than largest uint152). Counterpart to Solidity’s uint152 operator. Requirements: input must fit into 152 bits Returns the downcasted uint144 from uint256, reverting on overflow (when the input is greater than largest uint144). Counterpart to Solidity’s uint144 operator. Requirements: input must fit into 144 bits Returns the downcasted uint136 from uint256, reverting on overflow (when the input is greater than largest uint136). Counterpart to Solidity’s uint136 operator. Requirements: input must fit into 136 bits Returns the downcasted uint128 from uint256, reverting on overflow (when the input is greater than largest uint128). Counterpart to Solidity’s uint128 operator. Requirements: input must fit into 128 bits Returns the downcasted uint120 from uint256, reverting on overflow (when the input is greater than largest uint120). Counterpart to Solidity’s uint120 operator. Requirements: input must fit into 120 bits Returns the downcasted uint112 from uint256, reverting on overflow (when the input is greater than largest uint112). Counterpart to Solidity’s uint112 operator. Requirements: input must fit into 112 bits Returns the downcasted uint104 from uint256, reverting on overflow (when the input is greater than largest uint104). Counterpart to Solidity’s uint104 operator. Requirements: input must fit into 104 bits Returns the downcasted uint96 from uint256, reverting on overflow (when the input is greater than largest uint96). Counterpart to Solidity’s uint96 operator. Requirements: input must fit into 96 bits Returns the downcasted uint88 from uint256, reverting on overflow (when the input is greater than largest uint88). Counterpart to Solidity’s uint88 operator. Requirements: input must fit into 88 bits Returns the downcasted uint80 from uint256, reverting on overflow (when the input is greater than largest uint80). Counterpart to Solidity’s uint80 operator. Requirements: input must fit into 80 bits Returns the downcasted uint72 from uint256, reverting on overflow (when the input is greater than largest uint72). Counterpart to Solidity’s uint72 operator. Requirements: input must fit into 72 bits Returns the downcasted uint64 from uint256, reverting on overflow (when the input is greater than largest uint64). Counterpart to Solidity’s uint64 operator. Requirements: input must fit into 64 bits Returns the downcasted uint56 from uint256, reverting on overflow (when the input is greater than largest uint56). Counterpart to Solidity’s uint56 operator. Requirements: input must fit into 56 bits Returns the downcasted uint48 from uint256, reverting on overflow (when the input is greater than largest uint48). Counterpart to Solidity’s uint48 operator. Requirements: input must fit into 48 bits Returns the downcasted uint40 from uint256, reverting on overflow (when the input is greater than largest uint40). Counterpart to Solidity’s uint40 operator. Requirements: input must fit into 40 bits Returns the downcasted uint32 from uint256, reverting on overflow (when the input is greater than largest uint32). Counterpart to Solidity’s uint32 operator. Requirements: input must fit into 32 bits Returns the downcasted uint24 from uint256, reverting on overflow (when the input is greater than largest uint24). Counterpart to Solidity’s uint24 operator. Requirements: input must fit into 24 bits Returns the downcasted uint16 from uint256, reverting on overflow (when the input is greater than largest uint16). Counterpart to Solidity’s uint16 operator. Requirements: input must fit into 16 bits Returns the downcasted uint8 from uint256, reverting on overflow (when the input is greater than largest uint8). Counterpart to Solidity’s uint8 operator. Requirements: input must fit into 8 bits Converts a signed int256 into an unsigned uint256. Requirements: input must be greater than or equal to 0. Returns the downcasted int248 from int256, reverting on overflow (when the input is less than smallest int248 or greater than largest int248). Counterpart to Solidity’s int248 operator. Requirements: input must fit into 248 bits Returns the downcasted int240 from int256, reverting on overflow (when the input is less than smallest int240 or greater than largest int240). Counterpart to Solidity’s int240 operator. Requirements: input must fit into 240 bits Returns the downcasted int232 from int256, reverting on overflow (when the input is less than smallest int232 or greater than largest int232). Counterpart to Solidity’s int232 operator. Requirements: input must fit into 232 bits Returns the downcasted int224 from int256, reverting on overflow (when the input is less than smallest int224 or greater than largest int224). Counterpart to Solidity’s int224 operator. Requirements: input must fit into 224 bits Returns the downcasted int216 from int256, reverting on overflow (when the input is less than smallest int216 or greater than largest int216). Counterpart to Solidity’s int216 operator. Requirements: input must fit into 216 bits Returns the downcasted int208 from int256, reverting on overflow (when the input is less than smallest int208 or greater than largest int208). Counterpart to Solidity’s int208 operator. Requirements: input must fit into 208 bits Returns the downcasted int200 from int256, reverting on overflow (when the input is less than smallest int200 or greater than largest int200). Counterpart to Solidity’s int200 operator. Requirements: input must fit into 200 bits Returns the downcasted int192 from int256, reverting on overflow (when the input is less than smallest int192 or greater than largest int192). Counterpart to Solidity’s int192 operator. Requirements: input must fit into 192 bits Returns the downcasted int184 from int256, reverting on overflow (when the input is less than smallest int184 or greater than largest int184). Counterpart to Solidity’s int184 operator. Requirements: input must fit into 184 bits Returns the downcasted int176 from int256, reverting on overflow (when the input is less than smallest int176 or greater than largest int176). Counterpart to Solidity’s int176 operator. Requirements: input must fit into 176 bits Returns the downcasted int168 from int256, reverting on overflow (when the input is less than smallest int168 or greater than largest int168). Counterpart to Solidity’s int168 operator. Requirements: input must fit into 168 bits Returns the downcasted int160 from int256, reverting on overflow (when the input is less than smallest int160 or greater than largest int160). Counterpart to Solidity’s int160 operator. Requirements: input must fit into 160 bits Returns the downcasted int152 from int256, reverting on overflow (when the input is less than smallest int152 or greater than largest int152). Counterpart to Solidity’s int152 operator. Requirements: input must fit into 152 bits Returns the downcasted int144 from int256, reverting on overflow (when the input is less than smallest int144 or greater than largest int144). Counterpart to Solidity’s int144 operator. Requirements: input must fit into 144 bits Returns the downcasted int136 from int256, reverting on overflow (when the input is less than smallest int136 or greater than largest int136). Counterpart to Solidity’s int136 operator. Requirements: input must fit into 136 bits Returns the downcasted int128 from int256, reverting on overflow (when the input is less than smallest int128 or greater than largest int128). Counterpart to Solidity’s int128 operator. Requirements: input must fit into 128 bits Returns the downcasted int120 from int256, reverting on overflow (when the input is less than smallest int120 or greater than largest int120). Counterpart to Solidity’s int120 operator. Requirements: input must fit into 120 bits Returns the downcasted int112 from int256, reverting on overflow (when the input is less than smallest int112 or greater than largest int112). Counterpart to Solidity’s int112 operator. Requirements: input must fit into 112 bits Returns the downcasted int104 from int256, reverting on overflow (when the input is less than smallest int104 or greater than largest int104). Counterpart to Solidity’s int104 operator. Requirements: input must fit into 104 bits Returns the downcasted int96 from int256, reverting on overflow (when the input is less than smallest int96 or greater than largest int96). Counterpart to Solidity’s int96 operator. Requirements: input must fit into 96 bits Returns the downcasted int88 from int256, reverting on overflow (when the input is less than smallest int88 or greater than largest int88). Counterpart to Solidity’s int88 operator. Requirements: input must fit into 88 bits Returns the downcasted int80 from int256, reverting on overflow (when the input is less than smallest int80 or greater than largest int80). Counterpart to Solidity’s int80 operator. Requirements: input must fit into 80 bits Returns the downcasted int72 from int256, reverting on overflow (when the input is less than smallest int72 or greater than largest int72). Counterpart to Solidity’s int72 operator. Requirements: input must fit into 72 bits Returns the downcasted int64 from int256, reverting on overflow (when the input is less than smallest int64 or greater than largest int64). Counterpart to Solidity’s int64 operator. Requirements: input must fit into 64 bits Returns the downcasted int56 from int256, reverting on overflow (when the input is less than smallest int56 or greater than largest int56). Counterpart to Solidity’s int56 operator. Requirements: input must fit into 56 bits Returns the downcasted int48 from int256, reverting on overflow (when the input is less than smallest int48 or greater than largest int48). Counterpart to Solidity’s int48 operator. Requirements: input must fit into 48 bits Returns the downcasted int40 from int256, reverting on overflow (when the input is less than smallest int40 or greater than largest int40). Counterpart to Solidity’s int40 operator. Requirements: input must fit into 40 bits Returns the downcasted int32 from int256, reverting on overflow (when the input is less than smallest int32 or greater than largest int32). Counterpart to Solidity’s int32 operator. Requirements: input must fit into 32 bits Returns the downcasted int24 from int256, reverting on overflow (when the input is less than smallest int24 or greater than largest int24). Counterpart to Solidity’s int24 operator. Requirements: input must fit into 24 bits Returns the downcasted int16 from int256, reverting on overflow (when the input is less than smallest int16 or greater than largest int16). Counterpart to Solidity’s int16 operator. Requirements: input must fit into 16 bits Returns the downcasted int8 from int256, reverting on overflow (when the input is less than smallest int8 or greater than largest int8). Counterpart to Solidity’s int8 operator. Requirements: input must fit into 8 bits Converts an unsigned uint256 into a signed int256. Requirements: input must be less than or equal to maxInt256. Cast a boolean (false or true) to a uint256 (0 or 1) with no jump. Value doesn’t fit in an uint of bits size. An int value doesn’t fit in an uint of bits size. Value doesn’t fit in an int of bits size. An uint value doesn’t fit in an int of bits size. import \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"; Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address. Functions tryRecover(hash, signature) recover(hash, signature) tryRecover(hash, r, vs) recover(hash, r, vs) tryRecover(hash, v, r, s) recover(hash, v, r, s) Errors ECDSAInvalidSignature() ECDSAInvalidSignatureLength(length) ECDSAInvalidSignatureS(s) Returns the address that signed a hashed message (hash) with signature or an error. This will not return address(0) without also returning an error description. Errors are documented using an enum (error type) and a bytes32 providing additional information about the error. If no error is returned, then the address can be used for verification purposes. The ecrecover EVM precompile allows for malleable (non-unique) signatures: this function rejects them by requiring the s value to be in the lower half order, and the v value to be either 27 or 28. hash must be the result of a hash operation for the verification to be secure: it is possible to craft signatures that recover to arbitrary addresses for non-hashed data. A safe way to ensure this is by receiving a hash of the original message (which may otherwise be too long), and then calling MessageHashUtils.toEthSignedMessageHash on it. Documentation for signature generation: - with Web3.js - with ethers Returns the address that signed a hashed message (hash) with signature. This address can then be used for verification purposes. The ecrecover EVM precompile allows for malleable (non-unique) signatures: this function rejects them by requiring the s value to be in the lower half order, and the v value to be either 27 or 28. hash must be the result of a hash operation for the verification to be secure: it is possible to craft signatures that recover to arbitrary addresses for non-hashed data. A safe way to ensure this is by receiving a hash of the original message (which may otherwise be too long), and then calling MessageHashUtils.toEthSignedMessageHash on it. Overload of ECDSA.tryRecover that receives the r and vs short-signature fields separately. See ERC-2098 short signatures Overload of ECDSA.recover that receives the r and `vs short-signature fields separately. Overload of ECDSA.tryRecover that receives the v, r and s signature fields separately. Overload of ECDSA.recover that receives the v, r and s signature fields separately. The signature derives the address(0). The signature has an invalid length. The signature has an S value that is in the upper half order. import \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\"; EIP-712 is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of abi.encode and keccak256. This contract implements the EIP-712 domain separator (_domainSeparatorV4) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA (_hashTypedDataV4). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method eth_signTypedDataV4 in MetaMask. In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the _domainSeparatorV4 function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. Functions constructor(name, version) _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Initializes the domain separator and parameter caches. The meaning of name and version is specified in EIP-712: name: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. version: the current major version of the signing domain. These parameters cannot be changed except through a smart contract upgrade. Returns the domain separator for the current chain. Given an already hashed struct, this function returns the hash of the fully encoded EIP712 message for this domain. This hash can be used together with ECDSA.recover to obtain the signer of a message. For example: bytes32 digest = _hashTypedDataV4(keccak256(abi.encode( keccak256(\"Mail(address to,string contents)\"), mailTo, keccak256(bytes(mailContents)) ))); address signer = ECDSA.recover(digest, signature); See {IERC-5267}. The name parameter for the EIP712 domain. By default this function reads _name which is an immutable value. It only reads from storage if necessary (in case the value is too large to fit in a ShortString). The version parameter for the EIP712 domain. By default this function reads _version which is an immutable value. It only reads from storage if necessary (in case the value is too large to fit in a ShortString). import \"@openzeppelin/contracts/utils/cryptography/MessageEnvelopeUtils.sol\"; Utilities to produce and process EIP712 typed data signatures with an application envelope. Typed data envelopes are useful for smart contracts that validate signatures (e.g. Accounts), as these allow contracts to validate signatures of wrapped data structures that include their EIP712._domainSeparatorV4. In this way, an off-chain signer can be sure that the signature is only valid for the specific domain. For developers, there might be 2 ways of validating smart contract messages: As an application validating a typed data signature. See toTypedDataEnvelopeHash. As a smart contract validating a raw message signature. See toPersonalSignEnvelopeHash. A provider for a smart contract wallet would need to return this signature as the result of a call to personal_sign or eth_signTypedData, and this may be unsupported by API clients that expect a return value of 129 bytes, or specifically the r,s,v parameters of an ECDSA signature, as is for example specified for EIP712. Functions unwrapTypedDataEnvelope(signature) wrapTypedDataEnvelope(signature, separator, contents, contentsType) toPersonalSignEnvelopeHash(separator, contents) toTypedDataEnvelopeHash(separator, hashedTypedDataEnvelopeStruct) TYPED_DATA_ENVELOPE_TYPEHASH(contentsType) tryValidateContentsType(contentsType) typedDataEnvelopeStructHash(contentsType, contents, name, version, chainId, verifyingContract, salt, extensions) Errors InvalidContentsType() Internal Variables bytes32 constant _PERSONAL_SIGN_ENVELOPE_TYPEHASH Parses a nested signature into its components. See {nest}. Nest a signature for a given EIP-712 type into an envelope for the domain separator. Constructed as follows: signature ‖ DOMAIN_SEPARATOR ‖ contents ‖ contentsType ‖ uint16(contentsType.length) signature is the original signature for the envelope including the contents hash DOMAIN_SEPARATOR is the EIP-712 EIP712._domainSeparatorV4 of the smart contract verifying the signature contents is the hash of the underlying data structure or message contentsType is the EIP-712 type of the envelope (e.g. TYPED_DATA_ENVELOPE_TYPEHASH or _PERSONAL_SIGN_ENVELOPE_TYPEHASH) Counterpart of unwrapTypedDataEnvelope to extract the original signature and the nested components. Wraps a contents digest into an envelope that simulates the eth_personalSign RPC method in the context of smart contracts. This envelope uses the _PERSONAL_SIGN_ENVELOPE_TYPEHASH type to wrap the contents hash in an EIP-712 envelope for the current domain separator. To produce a signature for this envelope, the signer must sign a wrapped message hash: bytes32 hash = abi.encodePacked( \\x19\\x01, CURRENT_DOMAIN_SEPARATOR, keccak256(abi.encode(\"PersonalSign(bytes prefixed)\"),\\x19Ethereum Signed Message:\\n32,contents) ); Wraps an EIP712 typed data contents digest into an envelope that simulates the eth_signTypedData RPC method in the context of smart contracts. This envelope uses the TYPED_DATA_ENVELOPE_TYPEHASH type to nest the contents hash in an EIP-712 envelope for the current domain. To produce a signature for this envelope, the signer must sign a wrapped typed data hash: bytes32 hash = keccak256( abi.encodePacked( \\x19\\x01, separator, // The domain separator of the applicaton contract keccak256( abi.encode( TYPED_DATA_ENVELOPE_TYPEHASH(contentsType), // See {TYPED_DATA_ENVELOPE_TYPEHASH} contents, // See {IERC5267-eip712Domain} for the following arguments from the verifying contract's domain keccak256(bytes(name)), keccak256(bytes(version)), chainId, verifyingContract, salt, keccak256(abi.encodePacked(extensions)) ) ) ) ); NOTE: The arguments should be those of the verifying application. See {EIP712-_domainSeparatorV4} and {IERC5267-eip712Domain} for more details of how to obtain these values. Respectively, they must be obtained from the verifying contract (e.g. an Account) and the application domain. [.contract-item] [[MessageEnvelopeUtils-TYPED_DATA_ENVELOPE_TYPEHASH-bytes-]] ==== `[.contract-item-name]#++TYPED_DATA_ENVELOPE_TYPEHASH++#++(bytes contentsType) → bytes32 result++` [.item-kind]#internal# Computes the wrapped EIP-712 type hash for the given contents type. The `contentsTypeName` is the string name in the app's domain before the parentheses (e.g. Transfer in `Transfer(address to,uint256 amount)`). ```solidity TypedDataSign({contentsTypeName},bytes1 fields,string name,string version,uint256 chainId,address verifyingContract,bytes32 salt,uint256[] extensions){contentsType} Requirements: - contentsType must be a valid EIP-712 type (see tryValidateContentsType) Try to validate the contents type is a valid EIP-712 type. A valid contentsType is considered invalid if it’s empty or it: Starts with a-z or ( Contains any of the following bytes: , )\\x00 Computes the hash of the envelope struct for the given contents. Error when the contents type is invalid. See tryValidateContentsType. An EIP-712 typed to represent \"personal\" signatures (i.e. mimic of eth_personalSign for smart contracts). import \"@openzeppelin/contracts/utils/cryptography/ERC1271TypedSigner.sol\"; Validates signatures wrapping the message hash in an EIP712 envelope. See MessageEnvelopeUtils. Linking the signature to the EIP-712 domain separator is a security measure to prevent signature replay across different EIP-712 domains (e.g. a single offchain owner of multiple contracts). This contract requires implementing the _validateSignature function, which passes the wrapped message hash, which may be either an typed data or a personal sign envelope. EIP712 uses ShortStrings to optimize gas costs for short strings (up to 31 characters). Consider that strings longer than that will use storage, which may limit the ability of the signer to be used within the ERC-4337 validation phase (due to ERC-7562 storage access rules). Functions isValidSignature(hash, signature) _isValidSignature(hash, signature) _isValidTypedDataEnvelopeSignature(hash, signature) _isValidPersonalSigEnvelopeSignature(hash, signature) _typedDataEnvelopeHash(signature) _personalSigEnvelopeHash(hash) _validateSignature(hash, signature) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() Events IERC5267 EIP712DomainChanged() Attempts validating the signature in an nested EIP-712 envelope. A nested EIP-712 envelope might be presented in 2 different ways: As an nested EIP-712 typed data As a personal signature (an EIP-712 mimic of the eth_personalSign for a smart contract) Internal version of isValidSignature that returns a boolean. EIP-712 typed data envelope verification. Personal signature envelope verification. EIP-712 typed data envelope verification. See MessageEnvelopeUtils.toTypedDataEnvelopeHash for the envelope structure. See MessageEnvelopeUtils.toPersonalSignEnvelopeHash. Signature validation algorithm. Implementing a signature validation algorithm is a security-sensitive operation as it involves cryptographic verification. It is important to review and test thoroughly before deployment. Consider using one of the signature verification libraries (ECDSA, P256 or RSA). import \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"; Signature message hash utilities for producing digests to be consumed by ECDSA recovery or signing. The library provides methods for generating a hash of a message that conforms to the ERC-191 and EIP 712 specifications. Functions toEthSignedMessageHash(messageHash) toEthSignedMessageHash(message) toDataWithIntendedValidatorHash(validator, data) toTypedDataHash(domainSeparator, structHash) Returns the keccak256 digest of an ERC-191 signed data with version 0x45 (personal_sign messages). The digest is calculated by prefixing a bytes32 messageHash with \"\\x19Ethereum Signed Message:\\n32\" and hashing the result. It corresponds with the hash signed when using the eth_sign JSON-RPC method. The messageHash parameter is intended to be the result of hashing a raw message with keccak256, although any bytes32 value can be safely used because the final digest will be re-hashed. See ECDSA.recover. Returns the keccak256 digest of an ERC-191 signed data with version 0x45 (personal_sign messages). The digest is calculated by prefixing an arbitrary message with \"\\x19Ethereum Signed Message:\\n\" + len(message) and hashing the result. It corresponds with the hash signed when using the eth_sign JSON-RPC method. See ECDSA.recover. Returns the keccak256 digest of an ERC-191 signed data with version 0x00 (data with intended validator). The digest is calculated by prefixing an arbitrary data with \"\\x19\\x00\" and the intended validator address. Then hashing the result. See ECDSA.recover. Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version 0x01). The digest is calculated from a domainSeparator and a structHash, by prefixing them with \\x19\\x01 and hashing the result. It corresponds to the hash signed by the eth_signTypedData JSON-RPC method as part of EIP-712. See ECDSA.recover. import \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\"; Signature verification helper that can be used instead of ECDSA.recover to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe). Functions isValidSignatureNow(signer, hash, signature) isValidERC1271SignatureNow(signer, hash, signature) Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the signature is validated against that smart contract using ERC-1271, otherwise it’s validated using ECDSA.recover. Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). Checks if a signature is valid for a given signer and data hash. The signature is validated against the signer smart contract using ERC-1271. Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). import \"@openzeppelin/contracts/utils/cryptography/Hashes.sol\"; Library of standard hash functions. Functions commutativeKeccak256(a, b) Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs. Equivalent to the standardNodeHash in our JavaScript library. import \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"; These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our JavaScript library. You will find a quickstart guide in the readme. You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin’s JavaScript library generates Merkle trees that are safe against this attack out of the box. Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. This library supports proof verification for merkle trees built using custom commutative hashing functions (i.e. H(a, b) == H(b, a)). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library. Functions verify(proof, root, leaf) processProof(proof, leaf) verify(proof, root, leaf, hasher) processProof(proof, leaf, hasher) verifyCalldata(proof, root, leaf) processProofCalldata(proof, leaf) verifyCalldata(proof, root, leaf, hasher) processProofCalldata(proof, leaf, hasher) multiProofVerify(proof, proofFlags, root, leaves) processMultiProof(proof, proofFlags, leaves) multiProofVerify(proof, proofFlags, root, leaves, hasher) processMultiProof(proof, proofFlags, leaves, hasher) multiProofVerifyCalldata(proof, proofFlags, root, leaves) processMultiProofCalldata(proof, proofFlags, leaves) multiProofVerifyCalldata(proof, proofFlags, root, leaves, hasher) processMultiProofCalldata(proof, proofFlags, leaves, hasher) Errors MerkleProofInvalidMultiproof() Returns true if a leaf can be proved to be a part of a Merkle tree defined by root. For this, a proof must be provided, containing sibling hashes on the branch from the leaf to the root of the tree. Each pair of leaves and each pair of pre-images are assumed to be sorted. This version handles proofs in memory with the default hashing function. Returns the rebuilt hash obtained by traversing a Merkle tree up from leaf using proof. A proof is valid if and only if the rebuilt hash matches the root of the tree. When processing the proof, the pairs of leafs & pre-images are assumed to be sorted. This version handles proofs in memory with the default hashing function. Returns true if a leaf can be proved to be a part of a Merkle tree defined by root. For this, a proof must be provided, containing sibling hashes on the branch from the leaf to the root of the tree. Each pair of leaves and each pair of pre-images are assumed to be sorted. This version handles proofs in memory with a custom hashing function. Returns the rebuilt hash obtained by traversing a Merkle tree up from leaf using proof. A proof is valid if and only if the rebuilt hash matches the root of the tree. When processing the proof, the pairs of leafs & pre-images are assumed to be sorted. This version handles proofs in memory with a custom hashing function. Returns true if a leaf can be proved to be a part of a Merkle tree defined by root. For this, a proof must be provided, containing sibling hashes on the branch from the leaf to the root of the tree. Each pair of leaves and each pair of pre-images are assumed to be sorted. This version handles proofs in calldata with the default hashing function. Returns the rebuilt hash obtained by traversing a Merkle tree up from leaf using proof. A proof is valid if and only if the rebuilt hash matches the root of the tree. When processing the proof, the pairs of leafs & pre-images are assumed to be sorted. This version handles proofs in calldata with the default hashing function. Returns true if a leaf can be proved to be a part of a Merkle tree defined by root. For this, a proof must be provided, containing sibling hashes on the branch from the leaf to the root of the tree. Each pair of leaves and each pair of pre-images are assumed to be sorted. This version handles proofs in calldata with a custom hashing function. Returns the rebuilt hash obtained by traversing a Merkle tree up from leaf using proof. A proof is valid if and only if the rebuilt hash matches the root of the tree. When processing the proof, the pairs of leafs & pre-images are assumed to be sorted. This version handles proofs in calldata with a custom hashing function. Returns true if the leaves can be simultaneously proven to be a part of a Merkle tree defined by root, according to proof and proofFlags as described in processMultiProof. This version handles multiproofs in memory with the default hashing function. Not all Merkle trees admit multiproofs. See processMultiProof for details. Consider the case where root == proof[0] && leaves.length == 0 as it will return true. The leaves must be validated independently. See processMultiProof. Returns the root of a tree reconstructed from leaves and sibling nodes in proof. The reconstruction proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another leaf/inner node or a proof sibling node, depending on whether each proofFlags item is true or false respectively. This version handles multiproofs in memory with the default hashing function. Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer). The empty set (i.e. the case where proof.length == 1 && leaves.length == 0) is considered a no-op, and therefore a valid multiproof (i.e. it returns proof[0]). Consider disallowing this case if you’re not validating the leaves elsewhere. Returns true if the leaves can be simultaneously proven to be a part of a Merkle tree defined by root, according to proof and proofFlags as described in processMultiProof. This version handles multiproofs in memory with a custom hashing function. Not all Merkle trees admit multiproofs. See processMultiProof for details. Consider the case where root == proof[0] && leaves.length == 0 as it will return true. The leaves must be validated independently. See processMultiProof. Returns the root of a tree reconstructed from leaves and sibling nodes in proof. The reconstruction proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another leaf/inner node or a proof sibling node, depending on whether each proofFlags item is true or false respectively. This version handles multiproofs in memory with a custom hashing function. Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer). The empty set (i.e. the case where proof.length == 1 && leaves.length == 0) is considered a no-op, and therefore a valid multiproof (i.e. it returns proof[0]). Consider disallowing this case if you’re not validating the leaves elsewhere. Returns true if the leaves can be simultaneously proven to be a part of a Merkle tree defined by root, according to proof and proofFlags as described in processMultiProof. This version handles multiproofs in calldata with the default hashing function. Not all Merkle trees admit multiproofs. See processMultiProof for details. Consider the case where root == proof[0] && leaves.length == 0 as it will return true. The leaves must be validated independently. See processMultiProofCalldata. Returns the root of a tree reconstructed from leaves and sibling nodes in proof. The reconstruction proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another leaf/inner node or a proof sibling node, depending on whether each proofFlags item is true or false respectively. This version handles multiproofs in calldata with the default hashing function. Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer). The empty set (i.e. the case where proof.length == 1 && leaves.length == 0) is considered a no-op, and therefore a valid multiproof (i.e. it returns proof[0]). Consider disallowing this case if you’re not validating the leaves elsewhere. Returns true if the leaves can be simultaneously proven to be a part of a Merkle tree defined by root, according to proof and proofFlags as described in processMultiProof. This version handles multiproofs in calldata with a custom hashing function. Not all Merkle trees admit multiproofs. See processMultiProof for details. Consider the case where root == proof[0] && leaves.length == 0 as it will return true. The leaves must be validated independently. See processMultiProofCalldata. Returns the root of a tree reconstructed from leaves and sibling nodes in proof. The reconstruction proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another leaf/inner node or a proof sibling node, depending on whether each proofFlags item is true or false respectively. This version handles multiproofs in calldata with a custom hashing function. Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer). The empty set (i.e. the case where proof.length == 1 && leaves.length == 0) is considered a no-op, and therefore a valid multiproof (i.e. it returns proof[0]). Consider disallowing this case if you’re not validating the leaves elsewhere. The multiproof provided is not valid. import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"; Contract module that helps prevent reentrant calls to a function. Inheriting from ReentrancyGuard will make the nonReentrant modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single nonReentrant guard, functions marked as nonReentrant may not call one another. This can be worked around by making those functions private, and then adding external nonReentrant entry points to them. If EIP-1153 (transient storage) is available on the chain you’re deploying at, consider using ReentrancyGuardTransient instead. If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post Reentrancy After Istanbul. Modifiers nonReentrant() Functions constructor() _reentrancyGuardEntered() Errors ReentrancyGuardReentrantCall() Prevents a contract from calling itself, directly or indirectly. Calling a nonReentrant function from another nonReentrant function is not supported. It is possible to prevent this from happening by making the nonReentrant function external, and making it call a private function that does the actual work. Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a nonReentrant function in the call stack. Unauthorized reentrant call. import \"@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol\"; Variant of ReentrancyGuard that uses transient storage. This variant only works on networks where EIP-1153 is available. Modifiers nonReentrant() Functions _reentrancyGuardEntered() Errors ReentrancyGuardReentrantCall() Prevents a contract from calling itself, directly or indirectly. Calling a nonReentrant function from another nonReentrant function is not supported. It is possible to prevent this from happening by making the nonReentrant function external, and making it call a private function that does the actual work. Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a nonReentrant function in the call stack. Unauthorized reentrant call. import \"@openzeppelin/contracts/utils/Pausable.sol\"; Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers whenNotPaused and whenPaused, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place. Modifiers whenNotPaused() whenPaused() Functions constructor() paused() _requireNotPaused() _requirePaused() _pause() _unpause() Events Paused(account) Unpaused(account) Errors EnforcedPause() ExpectedPause() Modifier to make a function callable only when the contract is not paused. Requirements: The contract must not be paused. Modifier to make a function callable only when the contract is paused. Requirements: The contract must be paused. Initializes the contract in unpaused state. Returns true if the contract is paused, and false otherwise. Throws if the contract is paused. Throws if the contract is not paused. Triggers stopped state. Requirements: The contract must not be paused. Returns to normal state. Requirements: The contract must be paused. Emitted when the pause is triggered by account. Emitted when the pause is lifted by account. The operation failed because the contract is paused. The operation failed because the contract is not paused. import \"@openzeppelin/contracts/utils/Nonces.sol\"; Provides tracking nonces for addresses. Nonces will only increment. Functions nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) Errors InvalidAccountNonce(account, currentNonce) Returns the next unused nonce for an address. Consumes a nonce. Returns the current value and increments nonce. Same as _useNonce but checking that nonce is the next valid for owner. The nonce used for an account is not the expected current nonce. This set of interfaces and contracts deal with type introspection of contracts, that is, examining which functions can be called on them. This is usually referred to as a contract’s interface. Ethereum contracts have no native concept of an interface, so applications must usually simply trust they are not making an incorrect call. For trusted setups this is a non-issue, but often unknown and untrusted third-party addresses need to be interacted with. There may even not be any direct calls to them! (e.g. ERC-20 tokens may be sent to a contract that lacks a way to transfer them out of it, locking them forever). In these cases, a contract declaring its interface can be very helpful in preventing errors. import \"@openzeppelin/contracts/utils/introspection/IERC165.sol\"; Interface of the ERC-165 standard, as defined in the ERC. Implementers can declare support of contract interfaces, which can then be queried by others (ERC165Checker). For an implementation, see ERC165. Functions supportsInterface(interfaceId) Returns true if this contract implements the interface defined by interfaceId. See the corresponding ERC section to learn more about how these ids are created. This function call must use less than 30 000 gas. import \"@openzeppelin/contracts/utils/introspection/ERC165.sol\"; Implementation of the IERC165 interface. Contracts that want to implement ERC-165 should inherit from this contract and override supportsInterface to check for the additional interface id that will be supported. For example: function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) { return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } Functions supportsInterface(interfaceId) See IERC165.supportsInterface. import \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\"; Library used to query support of an interface declared via IERC165. Note that these functions return the actual result of the query: they do not revert if an interface is not supported. It is up to the caller to decide what to do in these cases. Functions supportsERC165(account) supportsInterface(account, interfaceId) getSupportedInterfaces(account, interfaceIds) supportsAllInterfaces(account, interfaceIds) supportsERC165InterfaceUnchecked(account, interfaceId) Returns true if account supports the IERC165 interface. Returns true if account supports the interface defined by interfaceId. Support for IERC165 itself is queried automatically. See IERC165.supportsInterface. Returns a boolean array where each value corresponds to the interfaces passed in and whether they’re supported or not. This allows you to batch check interfaces for a contract where your expectation is that some interfaces may not be supported. See IERC165.supportsInterface. Returns true if account supports all the interfaces defined in interfaceIds. Support for IERC165 itself is queried automatically. Batch-querying can lead to gas savings by skipping repeated checks for IERC165 support. See IERC165.supportsInterface. Assumes that account contains a contract that supports ERC-165, otherwise the behavior of this method is undefined. This precondition can be checked with supportsERC165. Some precompiled contracts will falsely indicate support for a given interface, so caution should be exercised when using this function. Interface identification is specified in ERC-165. import \"@openzeppelin/contracts/utils/structs/BitMaps.sol\"; Library for managing uint256 to bool mapping in a compact and efficient way, provided the keys are sequential. Largely inspired by Uniswap’s merkle-distributor. BitMaps pack 256 booleans across each bit of a single 256-bit slot of uint256 type. Hence booleans corresponding to 256 sequential indices would only consume a single slot, unlike the regular bool which would consume an entire slot for a single value. This results in gas savings in two ways: Setting a zero value to non-zero only once every 256 times Accessing the same warm slot for every 256 sequential indices Functions get(bitmap, index) setTo(bitmap, index, value) set(bitmap, index) unset(bitmap, index) Returns whether the bit at index is set. Sets the bit at index to the boolean value. Sets the bit at index. Unsets the bit at index. import \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\"; Library for managing an enumerable variant of Solidity’s mapping type. Maps have the following properties: Entries are added, removed, and checked for existence in constant time (O(1)). Entries are enumerated in O(n). No guarantees are made on the ordering. contract Example { // Add the library methods using EnumerableMap for EnumerableMap.UintToAddressMap; // Declare a set state variable EnumerableMap.UintToAddressMap private myMap; } The following map types are supported: uint256 → address (UintToAddressMap) since v3.0.0 address → uint256 (AddressToUintMap) since v4.6.0 bytes32 → bytes32 (Bytes32ToBytes32Map) since v4.6.0 uint256 → uint256 (UintToUintMap) since v4.7.0 bytes32 → uint256 (Bytes32ToUintMap) since v4.7.0 uint256 → bytes32 (UintToBytes32Map) since v5.1.0 address → address (AddressToAddressMap) since v5.1.0 address → bytes32 (AddressToBytes32Map) since v5.1.0 bytes32 → address (Bytes32ToAddressMap) since v5.1.0 Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See ethereum/solidity#11843 for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. Functions set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) set(map, key, value) remove(map, key) contains(map, key) length(map) at(map, index) tryGet(map, key) get(map, key) keys(map) Errors EnumerableMapNonexistentKey(key) Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a key-value pair from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of key-value pairs in the map. O(1). Returns the key-value pair stored at position index in the map. O(1). Note that there are no guarantees on the ordering of entries inside the array, and it may change when more entries are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Adds a key-value pair to a map, or updates the value for an existing key. O(1). Returns true if the key was added to the map, that is if it was not already present. Removes a value from a map. O(1). Returns true if the key was removed from the map, that is if it was present. Returns true if the key is in the map. O(1). Returns the number of elements in the map. O(1). Returns the element stored at position index in the map. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Tries to returns the value associated with key. O(1). Does not revert if key is not in the map. Returns the value associated with key. O(1). Requirements: key must be in the map. Return the an array containing all the keys This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block. Query for a nonexistent map key. import \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\"; Library for managing sets of primitive types. Sets have the following properties: Elements are added, removed, and checked for existence in constant time (O(1)). Elements are enumerated in O(n). No guarantees are made on the ordering. contract Example { // Add the library methods using EnumerableSet for EnumerableSet.AddressSet; // Declare a set state variable EnumerableSet.AddressSet private mySet; } As of v3.3.0, sets of type bytes32 (Bytes32Set), address (AddressSet) and uint256 (UintSet) are supported. Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See ethereum/solidity#11843 for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. Functions add(set, value) remove(set, value) contains(set, value) length(set) at(set, index) values(set) add(set, value) remove(set, value) contains(set, value) length(set) at(set, index) values(set) add(set, value) remove(set, value) contains(set, value) length(set) at(set, index) values(set) Add a value to a set. O(1). Returns true if the value was added to the set, that is if it was not already present. Removes a value from a set. O(1). Returns true if the value was removed from the set, that is if it was present. Returns true if the value is in the set. O(1). Returns the number of values in the set. O(1). Returns the value stored at position index in the set. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Return the entire set in an array This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block. Add a value to a set. O(1). Returns true if the value was added to the set, that is if it was not already present. Removes a value from a set. O(1). Returns true if the value was removed from the set, that is if it was present. Returns true if the value is in the set. O(1). Returns the number of values in the set. O(1). Returns the value stored at position index in the set. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Return the entire set in an array This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block. Add a value to a set. O(1). Returns true if the value was added to the set, that is if it was not already present. Removes a value from a set. O(1). Returns true if the value was removed from the set, that is if it was present. Returns true if the value is in the set. O(1). Returns the number of values in the set. O(1). Returns the value stored at position index in the set. O(1). Note that there are no guarantees on the ordering of values inside the array, and it may change when more values are added or removed. Requirements: index must be strictly less than length. Return the entire set in an array This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block. import \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\"; A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes clear, given that the existing queue contents are left in storage. The struct is called Bytes32Deque. Other types can be cast to and from bytes32. This data structure can only be used in storage, and not in memory. DoubleEndedQueue.Bytes32Deque queue; Functions pushBack(deque, value) popBack(deque) pushFront(deque, value) popFront(deque) front(deque) back(deque) at(deque, index) clear(deque) length(deque) empty(deque) Inserts an item at the end of the queue. Reverts with Panic.RESOURCE_ERROR if the queue is full. Removes the item at the end of the queue and returns it. Reverts with Panic.EMPTY_ARRAY_POP if the queue is empty. Inserts an item at the beginning of the queue. Reverts with Panic.RESOURCE_ERROR if the queue is full. Removes the item at the beginning of the queue and returns it. Reverts with Panic.EMPTY_ARRAY_POP if the queue is empty. Returns the item at the beginning of the queue. Reverts with Panic.ARRAY_OUT_OF_BOUNDS if the queue is empty. Returns the item at the end of the queue. Reverts with Panic.ARRAY_OUT_OF_BOUNDS if the queue is empty. Return the item at a position in the queue given by index, with the first item at 0 and last item at length(deque) - 1. Reverts with Panic.ARRAY_OUT_OF_BOUNDS if the index is out of bounds. Resets the queue back to being empty. The current items are left behind in storage. This does not affect the functioning of the queue, but misses out on potential gas refunds. Returns the number of items in the queue. Returns true if the queue is empty. import \"@openzeppelin/contracts/utils/structs/CircularBuffer.sol\"; A fixed-size buffer for keeping bytes32 items in storage. This data structure allows for pushing elements to it, and when its length exceeds the specified fixed size, new items take the place of the oldest element in the buffer, keeping at most N elements in the structure. Elements can’t be removed but the data structure can be cleared. See clear. Complexity: - insertion (push): O(1) - lookup (last): O(1) - inclusion (includes): O(N) (worst case) - reset (clear): O(1) The struct is called Bytes32CircularBuffer. Other types can be cast to and from bytes32. This data structure can only be used in storage, and not in memory. Example usage: contract Example { // Add the library methods using CircularBuffer for CircularBuffer.Bytes32CircularBuffer; // Declare a buffer storage variable CircularBuffer.Bytes32CircularBuffer private myBuffer; } Functions setup(self, size) clear(self) push(self, value) count(self) length(self) last(self, i) includes(self, value) Initialize a new CircularBuffer of given size. If the CircularBuffer was already setup and used, calling that function again will reset it to a blank state. The size of the buffer will affect the execution of includes function, as it has a complexity of O(N). Consider a large buffer size may render the function unusable. Clear all data in the buffer without resetting memory, keeping the existing size. Push a new value to the buffer. If the buffer is already full, the new value replaces the oldest value in the buffer. Number of values currently in the buffer. This value is 0 for an empty buffer, and cannot exceed the size of the buffer. Length of the buffer. This is the maximum number of elements kepts in the buffer. Getter for the i-th value in the buffer, from the end. Reverts with Panic.ARRAY_OUT_OF_BOUNDS if trying to access an element that was not pushed, or that was dropped to make room for newer elements. Check if a given value is in the buffer. import \"@openzeppelin/contracts/utils/structs/Checkpoints.sol\"; This library defines the Trace* struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See Votes as an example. To create a history of checkpoints define a variable type Checkpoints.Trace* in your contract, and store a new checkpoint for the current transaction block using the push function. Functions push(self, key, value) lowerLookup(self, key) upperLookup(self, key) upperLookupRecent(self, key) latest(self) latestCheckpoint(self) length(self) at(self, pos) push(self, key, value) lowerLookup(self, key) upperLookup(self, key) upperLookupRecent(self, key) latest(self) latestCheckpoint(self) length(self) at(self, pos) push(self, key, value) lowerLookup(self, key) upperLookup(self, key) upperLookupRecent(self, key) latest(self) latestCheckpoint(self) length(self) at(self, pos) Errors CheckpointUnorderedInsertion() Pushes a (key, value) pair into a Trace224 so that it is stored as the checkpoint. Returns previous value and new value. Never accept key as a user input, since an arbitrary type(uint32).max key set will disable the library. Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. This is a variant of upperLookup that is optimised to find \"recent\" checkpoint (checkpoints with high keys). Returns the value in the most recent checkpoint, or zero if there are no checkpoints. Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value in the most recent checkpoint. Returns the number of checkpoint. Returns checkpoint at given position. Pushes a (key, value) pair into a Trace208 so that it is stored as the checkpoint. Returns previous value and new value. Never accept key as a user input, since an arbitrary type(uint48).max key set will disable the library. Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. This is a variant of upperLookup that is optimised to find \"recent\" checkpoint (checkpoints with high keys). Returns the value in the most recent checkpoint, or zero if there are no checkpoints. Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value in the most recent checkpoint. Returns the number of checkpoint. Returns checkpoint at given position. Pushes a (key, value) pair into a Trace160 so that it is stored as the checkpoint. Returns previous value and new value. Never accept key as a user input, since an arbitrary type(uint96).max key set will disable the library. Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none. This is a variant of upperLookup that is optimised to find \"recent\" checkpoint (checkpoints with high keys). Returns the value in the most recent checkpoint, or zero if there are no checkpoints. Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value in the most recent checkpoint. Returns the number of checkpoint. Returns checkpoint at given position. A value was attempted to be inserted on a past checkpoint. import \"@openzeppelin/contracts/utils/structs/Heap.sol\"; Library for managing binary heap that can be used as priority queue. Heaps are represented as an array of Node objects. This array stores two overlapping structures: * A tree structure where the first element (index 0) is the root, and where the node at index i is the child of the node at index (i-1)/2 and the father of nodes at index 2*i+1 and 2*i+2. Each node stores the index (in the array) where the corresponding value is stored. * A list of payloads values where each index contains a value and a lookup index. The type of the value depends on the variant being used. The lookup is the index of the node (in the tree) that points to this value. Some invariants: ` i == heap.data[heap.data[i].index].lookup // for all indices i i == heap.data[heap.data[i].lookup].index // for all indices i ` The structure is ordered so that each node is bigger than its parent. An immediate consequence is that the highest priority value is the one at the root. This value can be looked up in constant time (O(1)) at heap.data[heap.data[0].index].value The structure is designed to perform the following operations with the corresponding complexities: peek (get the highest priority value): O(1) insert (insert a value): O(log(n)) pop (remove the highest priority value): O(log(n)) replace (replace the highest priority value with a new value): O(log(n)) length (get the number of elements): O(1) clear (remove all elements): O(1) Functions peek(self) pop(self) pop(self, comp) insert(self, value) insert(self, value, comp) replace(self, newValue) replace(self, newValue, comp) length(self) clear(self) peek(self) pop(self) pop(self, comp) insert(self, value) insert(self, value, comp) replace(self, newValue) replace(self, newValue, comp) length(self) clear(self) Lookup the root element of the heap. Remove (and return) the root element for the heap using the default comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Remove (and return) the root element for the heap using the provided comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Insert a new element in the heap using the default comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Insert a new element in the heap using the provided comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Return the root element for the heap, and replace it with a new value, using the default comparator. This is equivalent to using pop and insert, but requires only one rebalancing operation. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Return the root element for the heap, and replace it with a new value, using the provided comparator. This is equivalent to using pop and insert, but requires only one rebalancing operation. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Returns the number of elements in the heap. Removes all elements in the heap. Lookup the root element of the heap. Remove (and return) the root element for the heap using the default comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Remove (and return) the root element for the heap using the provided comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Insert a new element in the heap using the default comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Insert a new element in the heap using the provided comparator. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Return the root element for the heap, and replace it with a new value, using the default comparator. This is equivalent to using pop and insert, but requires only one rebalancing operation. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Return the root element for the heap, and replace it with a new value, using the provided comparator. This is equivalent to using pop and insert, but requires only one rebalancing operation. All inserting and removal from a heap should always be done using the same comparator. Mixing comparator during the lifecycle of a heap will result in undefined behavior. Returns the number of elements in the heap. Removes all elements in the heap. import \"@openzeppelin/contracts/utils/structs/MerkleTree.sol\"; Library for managing Merkle Tree data structures. Each tree is a complete binary tree with the ability to sequentially insert leaves, changing them from a zero to a non-zero value and updating its root. This structure allows inserting commitments (or other entries) that are not stored, but can be proven to be part of the tree at a later time if the root is kept. See MerkleProof. A tree is defined by the following parameters: Depth: The number of levels in the tree, it also defines the maximum number of leaves as 2**depth. Zero value: The value that represents an empty leaf. Used to avoid regular zero values to be part of the tree. Hashing function: A cryptographic hash function used to produce internal nodes. Defaults to Hashes.commutativeKeccak256. Building trees using non-commutative hashing functions (i.e. H(a, b) != H(b, a)) is supported. However, proving the inclusion of a leaf in such trees is not possible with the MerkleProof library since it only supports commutative hashing functions. Available since v5.1. Functions setup(self, levels, zero) setup(self, levels, zero, fnHash) push(self, leaf) push(self, leaf, fnHash) depth(self) Initialize a Bytes32PushTree using Hashes.commutativeKeccak256 to hash internal nodes. The capacity of the tree (i.e. number of leaves) is set to 2**levels. Calling this function on MerkleTree that was already setup and used will reset it to a blank state. Once a tree is setup, any push to it must use the same hashing function. This means that values should be pushed to it using the default push function. The zero value should be carefully chosen since it will be stored in the tree representing empty leaves. It should be a value that is not expected to be part of the tree. Same as setup, but allows to specify a custom hashing function. Once a tree is setup, any push to it must use the same hashing function. This means that values should be pushed to it using the custom push function, which should be the same one as used during the setup. Providing a custom hashing function is a security-sensitive operation since it may compromise the soundness of the tree. Consider using functions from Hashes. Insert a new leaf in the tree, and compute the new root. Returns the position of the inserted leaf in the tree, and the resulting root. Hashing the leaf before calling this function is recommended as a protection against second pre-image attacks. This variant uses Hashes.commutativeKeccak256 to hash internal nodes. It should only be used on merkle trees that were setup using the same (default) hashing function (i.e. by calling the default setup function). Insert a new leaf in the tree, and compute the new root. Returns the position of the inserted leaf in the tree, and the resulting root. Hashing the leaf before calling this function is recommended as a protection against second pre-image attacks. This variant uses a custom hashing function to hash internal nodes. It should only be called with the same function as the one used during the initial setup of the merkle tree. Tree’s depth (set at initialization) import \"@openzeppelin/contracts/utils/Create2.sol\"; Helper to make usage of the CREATE2 EVM opcode easier and safer. CREATE2 can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the EIP for more information. Functions deploy(amount, salt, bytecode) computeAddress(salt, bytecodeHash) computeAddress(salt, bytecodeHash, deployer) Errors Create2EmptyBytecode() Deploys a contract using CREATE2. The address where the contract will be deployed can be known in advance via computeAddress. The bytecode for a contract can be obtained from Solidity with type(contractName).creationCode. Requirements: bytecode must not be empty. salt must have not been used for bytecode already. the factory must have a balance of at least amount. if amount is non-zero, bytecode must have a payable constructor. Returns the address where a contract will be stored if deployed via deploy. Any change in the bytecodeHash or salt will result in a new destination address. Returns the address where a contract will be stored if deployed via deploy from a contract located at deployer. If deployer is this contract’s address, returns the same value as computeAddress. There’s no code to deploy. import \"@openzeppelin/contracts/utils/Address.sol\"; Collection of functions related to the address type Functions sendValue(recipient, amount) functionCall(target, data) functionCallWithValue(target, data, value) functionStaticCall(target, data) functionDelegateCall(target, data) verifyCallResultFromTarget(target, success, returndata) verifyCallResult(success, returndata) Errors AddressEmptyCode(target) Replacement for Solidity’s transfer: sends amount wei to recipient, forwarding all available gas and reverting on errors. EIP1884 increases the gas cost of certain opcodes, possibly making contracts go over the 2300 gas limit imposed by transfer, making them unable to receive funds via transfer. sendValue removes this limitation. Learn more. because control is transferred to recipient, care must be taken to not create reentrancy vulnerabilities. Consider using ReentrancyGuard or the checks-effects-interactions pattern. Performs a Solidity function call using a low level call. A plain call is an unsafe replacement for a function call: use this function instead. If target reverts with a revert reason or custom error, it is bubbled up by this function (like regular Solidity function calls). However, if the call reverted with no returned reason, this function reverts with a {Errors.FailedCall} error. Returns the raw returned data. To convert to the expected return value, use abi.decode. Requirements: target must be a contract. calling target with data must not revert. Same as functionCall, but also transferring value wei to target. Requirements: the calling contract must have an ETH balance of at least value. the called Solidity function must be payable. Same as functionCall, but performing a static call. Same as functionCall, but performing a delegate call. Tool to verify that a low level call to smart-contract was successful, and reverts if the target was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case of an unsuccessful call. Tool to verify that a low level call was successful, and reverts if it wasn’t, either by bubbling the revert reason or with a default {Errors.FailedCall} error. There’s no code at target (it is not a contract). import \"@openzeppelin/contracts/utils/Arrays.sol\"; Collection of functions related to array types. Functions sort(array, comp) sort(array) sort(array, comp) sort(array) sort(array, comp) sort(array) findUpperBound(array, element) lowerBound(array, element) upperBound(array, element) lowerBoundMemory(array, element) upperBoundMemory(array, element) unsafeAccess(arr, pos) unsafeAccess(arr, pos) unsafeAccess(arr, pos) unsafeMemoryAccess(arr, pos) unsafeMemoryAccess(arr, pos) unsafeMemoryAccess(arr, pos) unsafeSetLength(array, len) unsafeSetLength(array, len) unsafeSetLength(array, len) Sort an array of uint256 (in memory) following the provided comparator function. This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array. this function’s cost is O(n · log(n)) in average and O(n²) in the worst case, with n the length of the array. Using it in view functions that are executed through eth_call is safe, but one should be very careful when executing this as part of a transaction. If the array being sorted is too large, the sort operation may consume more gas than is available in a block, leading to potential DoS. Consider memory side-effects when using custom comparator functions that access memory in an unsafe way. Variant of sort that sorts an array of uint256 in increasing order. Sort an array of address (in memory) following the provided comparator function. This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array. this function’s cost is O(n · log(n)) in average and O(n²) in the worst case, with n the length of the array. Using it in view functions that are executed through eth_call is safe, but one should be very careful when executing this as part of a transaction. If the array being sorted is too large, the sort operation may consume more gas than is available in a block, leading to potential DoS. Consider memory side-effects when using custom comparator functions that access memory in an unsafe way. Variant of sort that sorts an array of address in increasing order. Sort an array of bytes32 (in memory) following the provided comparator function. This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array. this function’s cost is O(n · log(n)) in average and O(n²) in the worst case, with n the length of the array. Using it in view functions that are executed through eth_call is safe, but one should be very careful when executing this as part of a transaction. If the array being sorted is too large, the sort operation may consume more gas than is available in a block, leading to potential DoS. Consider memory side-effects when using custom comparator functions that access memory in an unsafe way. Variant of sort that sorts an array of bytes32 in increasing order. Searches a sorted array and returns the first index that contains a value greater or equal to element. If no such index exists (i.e. all values in the array are strictly less than element), the array length is returned. Time complexity O(log n). The array is expected to be sorted in ascending order, and to contain no repeated elements. Deprecated. This implementation behaves as lowerBound but lacks support for repeated elements in the array. The lowerBound function should be used instead. Searches an array sorted in ascending order and returns the first index that contains a value greater or equal than element. If no such index exists (i.e. all values in the array are strictly less than element), the array length is returned. Time complexity O(log n). See C++'s lower_bound. Searches an array sorted in ascending order and returns the first index that contains a value strictly greater than element. If no such index exists (i.e. all values in the array are strictly less than element), the array length is returned. Time complexity O(log n). See C++'s upper_bound. Same as lowerBound, but with an array in memory. Same as upperBound, but with an array in memory. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check. Only use if you are certain pos is lower than the array length. Helper to set the length of an dynamic array. Directly writing to .length is forbidden. this does not clear elements if length is reduced, of initialize elements if length is increased. Helper to set the length of an dynamic array. Directly writing to .length is forbidden. this does not clear elements if length is reduced, of initialize elements if length is increased. Helper to set the length of an dynamic array. Directly writing to .length is forbidden. this does not clear elements if length is reduced, of initialize elements if length is increased. import \"@openzeppelin/contracts/utils/Base64.sol\"; Provides a set of functions to operate with Base64 strings. Functions encode(data) encodeURL(data) Internal Variables string constant _TABLE string constant _TABLE_URL Converts a bytes to its Bytes64 string representation. Converts a bytes to its Bytes64Url string representation. Output is not padded with = as specified in rfc4648. Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648 import \"@openzeppelin/contracts/utils/Strings.sol\"; String operations. Functions toString(value) toStringSigned(value) toHexString(value) toHexString(value, length) toHexString(addr) toChecksumHexString(addr) equal(a, b) Errors StringsInsufficientHexLength(value, length) Converts a uint256 to its ASCII string decimal representation. Converts a int256 to its ASCII string decimal representation. Converts a uint256 to its ASCII string hexadecimal representation. Converts a uint256 to its ASCII string hexadecimal representation with fixed length. Converts an address with fixed length of 20 bytes to its not checksummed ASCII string hexadecimal representation. Converts an address with fixed length of 20 bytes to its checksummed ASCII string hexadecimal representation, according to EIP-55. Returns true if the two strings are equal. The value string doesn’t fit in the specified length. import \"@openzeppelin/contracts/utils/ShortStrings.sol\"; This library provides functions to convert short memory strings into a ShortString type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: contract Named { using ShortStrings for *; ShortString private immutable _name; string private _nameFallback; constructor(string memory contractName) { _name = contractName.toShortStringWithFallback(_nameFallback); } function name() external view returns (string memory) { return _name.toStringWithFallback(_nameFallback); } } Functions toShortString(str) toString(sstr) byteLength(sstr) toShortStringWithFallback(value, store) toStringWithFallback(value, store) byteLengthWithFallback(value, store) Errors StringTooLong(str) InvalidShortString() Encode a string of at most 31 chars into a ShortString. This will trigger a StringTooLong error is the input string is too long. Decode a ShortString back to a \"normal\" string. Return the length of a ShortString. Encode a string into a ShortString, or write it to storage if it is too long. Decode a string that was encoded to ShortString or written to storage using {setWithFallback}. Return the length of a string that was encoded to ShortString or written to storage using {setWithFallback}. This will return the \"byte length\" of the string. This may not reflect the actual length in terms of actual characters as the UTF-8 encoding of a single character can span over multiple bytes. import \"@openzeppelin/contracts/utils/SlotDerivation.sol\"; Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See Solidity docs for mappings and dynamic arrays.. Example usage: contract Example { // Add the library methods using StorageSlot for bytes32; using SlotDerivation for bytes32; // Declare a namespace string private constant _NAMESPACE = \"\" // eg. OpenZeppelin.Slot function setValueInNamespace(uint256 key, address newValue) internal { _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue; } function getValueInNamespace(uint256 key) internal view returns (address) { return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value; } } Consider using this library along with StorageSlot. This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. Functions erc7201Slot(namespace) offset(slot, pos) deriveArray(slot) deriveMapping(slot, key) deriveMapping(slot, key) deriveMapping(slot, key) deriveMapping(slot, key) deriveMapping(slot, key) deriveMapping(slot, key) deriveMapping(slot, key) Derive an ERC-7201 slot from a string (namespace). Add an offset to a slot to get the n-th element of a structure or an array. Derive the location of the first element in an array from the slot where the length is stored. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. Derive the location of a mapping element from the key. import \"@openzeppelin/contracts/utils/StorageSlot.sol\"; Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a value member that can be used to read or write. Example usage to set ERC-1967 implementation slot: contract ERC1967 { // Define the slot. Alternatively, use the SlotDerivation library to derive the slot. bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc; function _getImplementation() internal view returns (address) { return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value; } function _setImplementation(address newImplementation) internal { require(newImplementation.code.length > 0); StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation; } } Since version 5.1, this library also support writing and reading value types to and from transient storage. Example using transient storage: contract Lock { // Define the slot. Alternatively, use the SlotDerivation library to derive the slot. bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542; modifier locked() { require(!_LOCK_SLOT.asBoolean().tload()); _LOCK_SLOT.asBoolean().tstore(true); _; _LOCK_SLOT.asBoolean().tstore(false); } } Consider using this library along with SlotDerivation. Functions getAddressSlot(slot) getBooleanSlot(slot) getBytes32Slot(slot) getUint256Slot(slot) getInt256Slot(slot) getStringSlot(slot) getStringSlot(store) getBytesSlot(slot) getBytesSlot(store) asAddress(slot) asBoolean(slot) asBytes32(slot) asUint256(slot) asInt256(slot) tload(slot) tstore(slot, value) tload(slot) tstore(slot, value) tload(slot) tstore(slot, value) tload(slot) tstore(slot, value) tload(slot) tstore(slot, value) Returns an AddressSlot with member value located at slot. Returns a BooleanSlot with member value located at slot. Returns a Bytes32Slot with member value located at slot. Returns a Uint256Slot with member value located at slot. Returns a Int256Slot with member value located at slot. Returns a StringSlot with member value located at slot. Returns an StringSlot representation of the string storage pointer store. Returns a BytesSlot with member value located at slot. Returns an BytesSlot representation of the bytes storage pointer store. Cast an arbitrary slot to a AddressSlotType. Cast an arbitrary slot to a BooleanSlotType. Cast an arbitrary slot to a Bytes32SlotType. Cast an arbitrary slot to a Uint256SlotType. Cast an arbitrary slot to a Int256SlotType. Load the value held at location slot in transient storage. Store value at location slot in transient storage. Load the value held at location slot in transient storage. Store value at location slot in transient storage. Load the value held at location slot in transient storage. Store value at location slot in transient storage. Load the value held at location slot in transient storage. Store value at location slot in transient storage. Load the value held at location slot in transient storage. Store value at location slot in transient storage. import \"@openzeppelin/contracts/utils/Multicall.sol\"; Provides a function to batch together multiple calls in a single external call. Consider any assumption about calldata validation performed by the sender may be violated if it’s not especially careful about sending transactions invoking multicall. For example, a relay address that filters function selectors won’t filter calls nested within a multicall operation. Since 5.0.1 and 4.9.4, this contract identifies non-canonical contexts (i.e. msg.sender is not {_msgSender}). If a non-canonical context is identified, the following self delegatecall appends the last bytes of msg.data to the subcall. This makes it safe to use with ERC2771Context. Contexts that don’t affect the resolution of {_msgSender} are not propagated to subcalls. Functions multicall(data) Receives and executes a batch of function calls on this contract. import \"@openzeppelin/contracts/utils/Context.sol\"; Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts. Functions _msgSender() _msgData() _contextSuffixLength() import \"@openzeppelin/contracts/utils/Packing.sol\"; Helper library packing and unpacking multiple values into bytesXX. Example usage: library MyPacker { type MyType is bytes32; function _pack(address account, bytes4 selector, uint64 period) external pure returns (MyType) { bytes12 subpack = Packing.pack_4_8(selector, bytes8(period)); bytes32 pack = Packing.pack_20_12(bytes20(account), subpack); return MyType.wrap(pack); } function _unpack(MyType self) external pure returns (address, bytes4, uint64) { bytes32 pack = MyType.unwrap(self); return ( address(Packing.extract_32_20(pack, 0)), Packing.extract_32_4(pack, 20), uint64(Packing.extract_32_8(pack, 24)) ); } } Functions pack_1_1(left, right) pack_2_2(left, right) pack_2_4(left, right) pack_2_6(left, right) pack_2_8(left, right) pack_2_10(left, right) pack_2_20(left, right) pack_2_22(left, right) pack_4_2(left, right) pack_4_4(left, right) pack_4_6(left, right) pack_4_8(left, right) pack_4_12(left, right) pack_4_16(left, right) pack_4_20(left, right) pack_4_24(left, right) pack_4_28(left, right) pack_6_2(left, right) pack_6_4(left, right) pack_6_6(left, right) pack_6_10(left, right) pack_6_16(left, right) pack_6_22(left, right) pack_8_2(left, right) pack_8_4(left, right) pack_8_8(left, right) pack_8_12(left, right) pack_8_16(left, right) pack_8_20(left, right) pack_8_24(left, right) pack_10_2(left, right) pack_10_6(left, right) pack_10_10(left, right) pack_10_12(left, right) pack_10_22(left, right) pack_12_4(left, right) pack_12_8(left, right) pack_12_10(left, right) pack_12_12(left, right) pack_12_16(left, right) pack_12_20(left, right) pack_16_4(left, right) pack_16_6(left, right) pack_16_8(left, right) pack_16_12(left, right) pack_16_16(left, right) pack_20_2(left, right) pack_20_4(left, right) pack_20_8(left, right) pack_20_12(left, right) pack_22_2(left, right) pack_22_6(left, right) pack_22_10(left, right) pack_24_4(left, right) pack_24_8(left, right) pack_28_4(left, right) extract_2_1(self, offset) replace_2_1(self, value, offset) extract_4_1(self, offset) replace_4_1(self, value, offset) extract_4_2(self, offset) replace_4_2(self, value, offset) extract_6_1(self, offset) replace_6_1(self, value, offset) extract_6_2(self, offset) replace_6_2(self, value, offset) extract_6_4(self, offset) replace_6_4(self, value, offset) extract_8_1(self, offset) replace_8_1(self, value, offset) extract_8_2(self, offset) replace_8_2(self, value, offset) extract_8_4(self, offset) replace_8_4(self, value, offset) extract_8_6(self, offset) replace_8_6(self, value, offset) extract_10_1(self, offset) replace_10_1(self, value, offset) extract_10_2(self, offset) replace_10_2(self, value, offset) extract_10_4(self, offset) replace_10_4(self, value, offset) extract_10_6(self, offset) replace_10_6(self, value, offset) extract_10_8(self, offset) replace_10_8(self, value, offset) extract_12_1(self, offset) replace_12_1(self, value, offset) extract_12_2(self, offset) replace_12_2(self, value, offset) extract_12_4(self, offset) replace_12_4(self, value, offset) extract_12_6(self, offset) replace_12_6(self, value, offset) extract_12_8(self, offset) replace_12_8(self, value, offset) extract_12_10(self, offset) replace_12_10(self, value, offset) extract_16_1(self, offset) replace_16_1(self, value, offset) extract_16_2(self, offset) replace_16_2(self, value, offset) extract_16_4(self, offset) replace_16_4(self, value, offset) extract_16_6(self, offset) replace_16_6(self, value, offset) extract_16_8(self, offset) replace_16_8(self, value, offset) extract_16_10(self, offset) replace_16_10(self, value, offset) extract_16_12(self, offset) replace_16_12(self, value, offset) extract_20_1(self, offset) replace_20_1(self, value, offset) extract_20_2(self, offset) replace_20_2(self, value, offset) extract_20_4(self, offset) replace_20_4(self, value, offset) extract_20_6(self, offset) replace_20_6(self, value, offset) extract_20_8(self, offset) replace_20_8(self, value, offset) extract_20_10(self, offset) replace_20_10(self, value, offset) extract_20_12(self, offset) replace_20_12(self, value, offset) extract_20_16(self, offset) replace_20_16(self, value, offset) extract_22_1(self, offset) replace_22_1(self, value, offset) extract_22_2(self, offset) replace_22_2(self, value, offset) extract_22_4(self, offset) replace_22_4(self, value, offset) extract_22_6(self, offset) replace_22_6(self, value, offset) extract_22_8(self, offset) replace_22_8(self, value, offset) extract_22_10(self, offset) replace_22_10(self, value, offset) extract_22_12(self, offset) replace_22_12(self, value, offset) extract_22_16(self, offset) replace_22_16(self, value, offset) extract_22_20(self, offset) replace_22_20(self, value, offset) extract_24_1(self, offset) replace_24_1(self, value, offset) extract_24_2(self, offset) replace_24_2(self, value, offset) extract_24_4(self, offset) replace_24_4(self, value, offset) extract_24_6(self, offset) replace_24_6(self, value, offset) extract_24_8(self, offset) replace_24_8(self, value, offset) extract_24_10(self, offset) replace_24_10(self, value, offset) extract_24_12(self, offset) replace_24_12(self, value, offset) extract_24_16(self, offset) replace_24_16(self, value, offset) extract_24_20(self, offset) replace_24_20(self, value, offset) extract_24_22(self, offset) replace_24_22(self, value, offset) extract_28_1(self, offset) replace_28_1(self, value, offset) extract_28_2(self, offset) replace_28_2(self, value, offset) extract_28_4(self, offset) replace_28_4(self, value, offset) extract_28_6(self, offset) replace_28_6(self, value, offset) extract_28_8(self, offset) replace_28_8(self, value, offset) extract_28_10(self, offset) replace_28_10(self, value, offset) extract_28_12(self, offset) replace_28_12(self, value, offset) extract_28_16(self, offset) replace_28_16(self, value, offset) extract_28_20(self, offset) replace_28_20(self, value, offset) extract_28_22(self, offset) replace_28_22(self, value, offset) extract_28_24(self, offset) replace_28_24(self, value, offset) extract_32_1(self, offset) replace_32_1(self, value, offset) extract_32_2(self, offset) replace_32_2(self, value, offset) extract_32_4(self, offset) replace_32_4(self, value, offset) extract_32_6(self, offset) replace_32_6(self, value, offset) extract_32_8(self, offset) replace_32_8(self, value, offset) extract_32_10(self, offset) replace_32_10(self, value, offset) extract_32_12(self, offset) replace_32_12(self, value, offset) extract_32_16(self, offset) replace_32_16(self, value, offset) extract_32_20(self, offset) replace_32_20(self, value, offset) extract_32_22(self, offset) replace_32_22(self, value, offset) extract_32_24(self, offset) replace_32_24(self, value, offset) extract_32_28(self, offset) replace_32_28(self, value, offset) Errors OutOfRangeAccess() import \"@openzeppelin/contracts/utils/Panic.sol\"; Helper library for emitting standardized panic codes. contract Example { using Panic for uint256; // Use any of the declared internal constants function foo() { Panic.GENERIC.panic(); } // Alternatively function foo() { Panic.panic(Panic.GENERIC); } } Follows the list from libsolutil. Functions panic(code) Internal Variables uint256 constant GENERIC uint256 constant ASSERT uint256 constant UNDER_OVERFLOW uint256 constant DIVISION_BY_ZERO uint256 constant ENUM_CONVERSION_ERROR uint256 constant STORAGE_ENCODING_ERROR uint256 constant EMPTY_ARRAY_POP uint256 constant ARRAY_OUT_OF_BOUNDS uint256 constant RESOURCE_ERROR uint256 constant INVALID_INTERNAL_FUNCTION Reverts with a panic code. Recommended to use with the internal constants with predefined codes. generic / unspecified error used by the assert() builtin arithmetic underflow or overflow division or modulo by zero enum conversion error invalid encoding in storage empty array pop array out of bounds access resource error (too large allocation or too large array) calling invalid internal function import \"@openzeppelin/contracts/utils/Comparators.sol\"; Functions lt(a, b) gt(a, b) ← Proxy","title":"Utilities","component":"contracts","version":"5.x","name":"utils","url":"/contracts/5.x/api/utils.html","titles":[{"text":"Math","hash":"math","id":1},{"text":"Math ","hash":"Math","id":2},{"text":"tryAdd(uint256 a, uint256 b) → bool success, uint256 result internal","hash":"Math-tryAdd-uint256-uint256-","id":3},{"text":"trySub(uint256 a, uint256 b) → bool success, uint256 result internal","hash":"Math-trySub-uint256-uint256-","id":4},{"text":"tryMul(uint256 a, uint256 b) → bool success, uint256 result internal","hash":"Math-tryMul-uint256-uint256-","id":5},{"text":"tryDiv(uint256 a, uint256 b) → bool success, uint256 result internal","hash":"Math-tryDiv-uint256-uint256-","id":6},{"text":"tryMod(uint256 a, uint256 b) → bool success, uint256 result internal","hash":"Math-tryMod-uint256-uint256-","id":7},{"text":"ternary(bool condition, uint256 a, uint256 b) → uint256 internal","hash":"Math-ternary-bool-uint256-uint256-","id":8},{"text":"max(uint256 a, uint256 b) → uint256 internal","hash":"Math-max-uint256-uint256-","id":9},{"text":"min(uint256 a, uint256 b) → uint256 internal","hash":"Math-min-uint256-uint256-","id":10},{"text":"average(uint256 a, uint256 b) → uint256 internal","hash":"Math-average-uint256-uint256-","id":11},{"text":"ceilDiv(uint256 a, uint256 b) → uint256 internal","hash":"Math-ceilDiv-uint256-uint256-","id":12},{"text":"mulDiv(uint256 x, uint256 y, uint256 denominator) → uint256 result internal","hash":"Math-mulDiv-uint256-uint256-uint256-","id":13},{"text":"mulDiv(uint256 x, uint256 y, uint256 denominator, enum Math.Rounding rounding) → uint256 internal","hash":"Math-mulDiv-uint256-uint256-uint256-enum-Math-Rounding-","id":14},{"text":"invMod(uint256 a, uint256 n) → uint256 internal","hash":"Math-invMod-uint256-uint256-","id":15},{"text":"invModPrime(uint256 a, uint256 p) → uint256 internal","hash":"Math-invModPrime-uint256-uint256-","id":16},{"text":"modExp(uint256 b, uint256 e, uint256 m) → uint256 internal","hash":"Math-modExp-uint256-uint256-uint256-","id":17},{"text":"tryModExp(uint256 b, uint256 e, uint256 m) → bool success, uint256 result internal","hash":"Math-tryModExp-uint256-uint256-uint256-","id":18},{"text":"modExp(bytes b, bytes e, bytes m) → bytes internal","hash":"Math-modExp-bytes-bytes-bytes-","id":19},{"text":"tryModExp(bytes b, bytes e, bytes m) → bool success, bytes result internal","hash":"Math-tryModExp-bytes-bytes-bytes-","id":20},{"text":"sqrt(uint256 a) → uint256 internal","hash":"Math-sqrt-uint256-","id":21},{"text":"sqrt(uint256 a, enum Math.Rounding rounding) → uint256 internal","hash":"Math-sqrt-uint256-enum-Math-Rounding-","id":22},{"text":"log2(uint256 value) → uint256 internal","hash":"Math-log2-uint256-","id":23},{"text":"log2(uint256 value, enum Math.Rounding rounding) → uint256 internal","hash":"Math-log2-uint256-enum-Math-Rounding-","id":24},{"text":"log10(uint256 value) → uint256 internal","hash":"Math-log10-uint256-","id":25},{"text":"log10(uint256 value, enum Math.Rounding rounding) → uint256 internal","hash":"Math-log10-uint256-enum-Math-Rounding-","id":26},{"text":"log256(uint256 value) → uint256 internal","hash":"Math-log256-uint256-","id":27},{"text":"log256(uint256 value, enum Math.Rounding rounding) → uint256 internal","hash":"Math-log256-uint256-enum-Math-Rounding-","id":28},{"text":"unsignedRoundsUp(enum Math.Rounding rounding) → bool internal","hash":"Math-unsignedRoundsUp-enum-Math-Rounding-","id":29},{"text":"SignedMath ","hash":"SignedMath","id":30},{"text":"ternary(bool condition, int256 a, int256 b) → int256 internal","hash":"SignedMath-ternary-bool-int256-int256-","id":31},{"text":"max(int256 a, int256 b) → int256 internal","hash":"SignedMath-max-int256-int256-","id":32},{"text":"min(int256 a, int256 b) → int256 internal","hash":"SignedMath-min-int256-int256-","id":33},{"text":"average(int256 a, int256 b) → int256 internal","hash":"SignedMath-average-int256-int256-","id":34},{"text":"abs(int256 n) → uint256 internal","hash":"SignedMath-abs-int256-","id":35},{"text":"SafeCast ","hash":"SafeCast","id":36},{"text":"toUint248(uint256 value) → uint248 internal","hash":"SafeCast-toUint248-uint256-","id":37},{"text":"toUint240(uint256 value) → uint240 internal","hash":"SafeCast-toUint240-uint256-","id":38},{"text":"toUint232(uint256 value) → uint232 internal","hash":"SafeCast-toUint232-uint256-","id":39},{"text":"toUint224(uint256 value) → uint224 internal","hash":"SafeCast-toUint224-uint256-","id":40},{"text":"toUint216(uint256 value) → uint216 internal","hash":"SafeCast-toUint216-uint256-","id":41},{"text":"toUint208(uint256 value) → uint208 internal","hash":"SafeCast-toUint208-uint256-","id":42},{"text":"toUint200(uint256 value) → uint200 internal","hash":"SafeCast-toUint200-uint256-","id":43},{"text":"toUint192(uint256 value) → uint192 internal","hash":"SafeCast-toUint192-uint256-","id":44},{"text":"toUint184(uint256 value) → uint184 internal","hash":"SafeCast-toUint184-uint256-","id":45},{"text":"toUint176(uint256 value) → uint176 internal","hash":"SafeCast-toUint176-uint256-","id":46},{"text":"toUint168(uint256 value) → uint168 internal","hash":"SafeCast-toUint168-uint256-","id":47},{"text":"toUint160(uint256 value) → uint160 internal","hash":"SafeCast-toUint160-uint256-","id":48},{"text":"toUint152(uint256 value) → uint152 internal","hash":"SafeCast-toUint152-uint256-","id":49},{"text":"toUint144(uint256 value) → uint144 internal","hash":"SafeCast-toUint144-uint256-","id":50},{"text":"toUint136(uint256 value) → uint136 internal","hash":"SafeCast-toUint136-uint256-","id":51},{"text":"toUint128(uint256 value) → uint128 internal","hash":"SafeCast-toUint128-uint256-","id":52},{"text":"toUint120(uint256 value) → uint120 internal","hash":"SafeCast-toUint120-uint256-","id":53},{"text":"toUint112(uint256 value) → uint112 internal","hash":"SafeCast-toUint112-uint256-","id":54},{"text":"toUint104(uint256 value) → uint104 internal","hash":"SafeCast-toUint104-uint256-","id":55},{"text":"toUint96(uint256 value) → uint96 internal","hash":"SafeCast-toUint96-uint256-","id":56},{"text":"toUint88(uint256 value) → uint88 internal","hash":"SafeCast-toUint88-uint256-","id":57},{"text":"toUint80(uint256 value) → uint80 internal","hash":"SafeCast-toUint80-uint256-","id":58},{"text":"toUint72(uint256 value) → uint72 internal","hash":"SafeCast-toUint72-uint256-","id":59},{"text":"toUint64(uint256 value) → uint64 internal","hash":"SafeCast-toUint64-uint256-","id":60},{"text":"toUint56(uint256 value) → uint56 internal","hash":"SafeCast-toUint56-uint256-","id":61},{"text":"toUint48(uint256 value) → uint48 internal","hash":"SafeCast-toUint48-uint256-","id":62},{"text":"toUint40(uint256 value) → uint40 internal","hash":"SafeCast-toUint40-uint256-","id":63},{"text":"toUint32(uint256 value) → uint32 internal","hash":"SafeCast-toUint32-uint256-","id":64},{"text":"toUint24(uint256 value) → uint24 internal","hash":"SafeCast-toUint24-uint256-","id":65},{"text":"toUint16(uint256 value) → uint16 internal","hash":"SafeCast-toUint16-uint256-","id":66},{"text":"toUint8(uint256 value) → uint8 internal","hash":"SafeCast-toUint8-uint256-","id":67},{"text":"toUint256(int256 value) → uint256 internal","hash":"SafeCast-toUint256-int256-","id":68},{"text":"toInt248(int256 value) → int248 downcasted internal","hash":"SafeCast-toInt248-int256-","id":69},{"text":"toInt240(int256 value) → int240 downcasted internal","hash":"SafeCast-toInt240-int256-","id":70},{"text":"toInt232(int256 value) → int232 downcasted internal","hash":"SafeCast-toInt232-int256-","id":71},{"text":"toInt224(int256 value) → int224 downcasted internal","hash":"SafeCast-toInt224-int256-","id":72},{"text":"toInt216(int256 value) → int216 downcasted internal","hash":"SafeCast-toInt216-int256-","id":73},{"text":"toInt208(int256 value) → int208 downcasted internal","hash":"SafeCast-toInt208-int256-","id":74},{"text":"toInt200(int256 value) → int200 downcasted internal","hash":"SafeCast-toInt200-int256-","id":75},{"text":"toInt192(int256 value) → int192 downcasted internal","hash":"SafeCast-toInt192-int256-","id":76},{"text":"toInt184(int256 value) → int184 downcasted internal","hash":"SafeCast-toInt184-int256-","id":77},{"text":"toInt176(int256 value) → int176 downcasted internal","hash":"SafeCast-toInt176-int256-","id":78},{"text":"toInt168(int256 value) → int168 downcasted internal","hash":"SafeCast-toInt168-int256-","id":79},{"text":"toInt160(int256 value) → int160 downcasted internal","hash":"SafeCast-toInt160-int256-","id":80},{"text":"toInt152(int256 value) → int152 downcasted internal","hash":"SafeCast-toInt152-int256-","id":81},{"text":"toInt144(int256 value) → int144 downcasted internal","hash":"SafeCast-toInt144-int256-","id":82},{"text":"toInt136(int256 value) → int136 downcasted internal","hash":"SafeCast-toInt136-int256-","id":83},{"text":"toInt128(int256 value) → int128 downcasted internal","hash":"SafeCast-toInt128-int256-","id":84},{"text":"toInt120(int256 value) → int120 downcasted internal","hash":"SafeCast-toInt120-int256-","id":85},{"text":"toInt112(int256 value) → int112 downcasted internal","hash":"SafeCast-toInt112-int256-","id":86},{"text":"toInt104(int256 value) → int104 downcasted internal","hash":"SafeCast-toInt104-int256-","id":87},{"text":"toInt96(int256 value) → int96 downcasted internal","hash":"SafeCast-toInt96-int256-","id":88},{"text":"toInt88(int256 value) → int88 downcasted internal","hash":"SafeCast-toInt88-int256-","id":89},{"text":"toInt80(int256 value) → int80 downcasted internal","hash":"SafeCast-toInt80-int256-","id":90},{"text":"toInt72(int256 value) → int72 downcasted internal","hash":"SafeCast-toInt72-int256-","id":91},{"text":"toInt64(int256 value) → int64 downcasted internal","hash":"SafeCast-toInt64-int256-","id":92},{"text":"toInt56(int256 value) → int56 downcasted internal","hash":"SafeCast-toInt56-int256-","id":93},{"text":"toInt48(int256 value) → int48 downcasted internal","hash":"SafeCast-toInt48-int256-","id":94},{"text":"toInt40(int256 value) → int40 downcasted internal","hash":"SafeCast-toInt40-int256-","id":95},{"text":"toInt32(int256 value) → int32 downcasted internal","hash":"SafeCast-toInt32-int256-","id":96},{"text":"toInt24(int256 value) → int24 downcasted internal","hash":"SafeCast-toInt24-int256-","id":97},{"text":"toInt16(int256 value) → int16 downcasted internal","hash":"SafeCast-toInt16-int256-","id":98},{"text":"toInt8(int256 value) → int8 downcasted internal","hash":"SafeCast-toInt8-int256-","id":99},{"text":"toInt256(uint256 value) → int256 internal","hash":"SafeCast-toInt256-uint256-","id":100},{"text":"toUint(bool b) → uint256 u internal","hash":"SafeCast-toUint-bool-","id":101},{"text":"SafeCastOverflowedUintDowncast(uint8 bits, uint256 value) error","hash":"SafeCast-SafeCastOverflowedUintDowncast-uint8-uint256-","id":102},{"text":"SafeCastOverflowedIntToUint(int256 value) error","hash":"SafeCast-SafeCastOverflowedIntToUint-int256-","id":103},{"text":"SafeCastOverflowedIntDowncast(uint8 bits, int256 value) error","hash":"SafeCast-SafeCastOverflowedIntDowncast-uint8-int256-","id":104},{"text":"SafeCastOverflowedUintToInt(uint256 value) error","hash":"SafeCast-SafeCastOverflowedUintToInt-uint256-","id":105},{"text":"Cryptography","hash":"cryptography","id":106},{"text":"ECDSA ","hash":"ECDSA","id":107},{"text":"tryRecover(bytes32 hash, bytes signature) → address, enum ECDSA.RecoverError, bytes32 internal","hash":"ECDSA-tryRecover-bytes32-bytes-","id":108},{"text":"recover(bytes32 hash, bytes signature) → address internal","hash":"ECDSA-recover-bytes32-bytes-","id":109},{"text":"tryRecover(bytes32 hash, bytes32 r, bytes32 vs) → address, enum ECDSA.RecoverError, bytes32 internal","hash":"ECDSA-tryRecover-bytes32-bytes32-bytes32-","id":110},{"text":"recover(bytes32 hash, bytes32 r, bytes32 vs) → address internal","hash":"ECDSA-recover-bytes32-bytes32-bytes32-","id":111},{"text":"tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) → address, enum ECDSA.RecoverError, bytes32 internal","hash":"ECDSA-tryRecover-bytes32-uint8-bytes32-bytes32-","id":112},{"text":"recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) → address internal","hash":"ECDSA-recover-bytes32-uint8-bytes32-bytes32-","id":113},{"text":"ECDSAInvalidSignature() error","hash":"ECDSA-ECDSAInvalidSignature--","id":114},{"text":"ECDSAInvalidSignatureLength(uint256 length) error","hash":"ECDSA-ECDSAInvalidSignatureLength-uint256-","id":115},{"text":"ECDSAInvalidSignatureS(bytes32 s) error","hash":"ECDSA-ECDSAInvalidSignatureS-bytes32-","id":116},{"text":"EIP712 ","hash":"EIP712","id":117},{"text":"constructor(string name, string version) internal","hash":"EIP712-constructor-string-string-","id":118},{"text":"_domainSeparatorV4() → bytes32 internal","hash":"EIP712-_domainSeparatorV4--","id":119},{"text":"_hashTypedDataV4(bytes32 structHash) → bytes32 internal","hash":"EIP712-_hashTypedDataV4-bytes32-","id":120},{"text":"eip712Domain() → bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions public","hash":"EIP712-eip712Domain--","id":121},{"text":"_EIP712Name() → string internal","hash":"EIP712-_EIP712Name--","id":122},{"text":"_EIP712Version() → string internal","hash":"EIP712-_EIP712Version--","id":123},{"text":"MessageEnvelopeUtils ","hash":"MessageEnvelopeUtils","id":124},{"text":"unwrapTypedDataEnvelope(bytes signature) → bytes originalSig, bytes32 appSeparator, bytes32 contents, bytes contentsType internal","hash":"MessageEnvelopeUtils-unwrapTypedDataEnvelope-bytes-","id":125},{"text":"wrapTypedDataEnvelope(bytes signature, bytes32 separator, bytes32 contents, bytes contentsType) → bytes internal","hash":"MessageEnvelopeUtils-wrapTypedDataEnvelope-bytes-bytes32-bytes32-bytes-","id":126},{"text":"toPersonalSignEnvelopeHash(bytes32 separator, bytes32 contents) → bytes32 internal","hash":"MessageEnvelopeUtils-toPersonalSignEnvelopeHash-bytes32-bytes32-","id":127},{"text":"toTypedDataEnvelopeHash(bytes32 separator, bytes32 hashedTypedDataEnvelopeStruct) → bytes32 result internal","hash":"MessageEnvelopeUtils-toTypedDataEnvelopeHash-bytes32-bytes32-","id":128},{"text":"tryValidateContentsType(bytes contentsType) → bool valid, bytes contentsTypeName internal","hash":"MessageEnvelopeUtils-tryValidateContentsType-bytes-","id":129},{"text":"typedDataEnvelopeStructHash(bytes contentsType, bytes32 contents, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions) → bytes32 result internal","hash":"MessageEnvelopeUtils-typedDataEnvelopeStructHash-bytes-bytes32-string-string-uint256-address-bytes32-uint256---","id":130},{"text":"InvalidContentsType() error","hash":"MessageEnvelopeUtils-InvalidContentsType--","id":131},{"text":"bytes32 _PERSONAL_SIGN_ENVELOPE_TYPEHASH internal constant","hash":"MessageEnvelopeUtils-_PERSONAL_SIGN_ENVELOPE_TYPEHASH-bytes32","id":132},{"text":"ERC1271TypedSigner ","hash":"ERC1271TypedSigner","id":133},{"text":"isValidSignature(bytes32 hash, bytes signature) → bytes4 result public","hash":"ERC1271TypedSigner-isValidSignature-bytes32-bytes-","id":134},{"text":"_isValidSignature(bytes32 hash, bytes signature) → bool internal","hash":"ERC1271TypedSigner-_isValidSignature-bytes32-bytes-","id":135},{"text":"_isValidTypedDataEnvelopeSignature(bytes32 hash, bytes signature) → bool internal","hash":"ERC1271TypedSigner-_isValidTypedDataEnvelopeSignature-bytes32-bytes-","id":136},{"text":"_isValidPersonalSigEnvelopeSignature(bytes32 hash, bytes signature) → bool internal","hash":"ERC1271TypedSigner-_isValidPersonalSigEnvelopeSignature-bytes32-bytes-","id":137},{"text":"_typedDataEnvelopeHash(bytes signature) → bytes originalSignature, bytes32 result internal","hash":"ERC1271TypedSigner-_typedDataEnvelopeHash-bytes-","id":138},{"text":"_personalSigEnvelopeHash(bytes32 hash) → bytes32 internal","hash":"ERC1271TypedSigner-_personalSigEnvelopeHash-bytes32-","id":139},{"text":"_validateSignature(bytes32 hash, bytes signature) → bool internal","hash":"ERC1271TypedSigner-_validateSignature-bytes32-bytes-","id":140},{"text":"MessageHashUtils ","hash":"MessageHashUtils","id":141},{"text":"toEthSignedMessageHash(bytes32 messageHash) → bytes32 digest internal","hash":"MessageHashUtils-toEthSignedMessageHash-bytes32-","id":142},{"text":"toEthSignedMessageHash(bytes message) → bytes32 internal","hash":"MessageHashUtils-toEthSignedMessageHash-bytes-","id":143},{"text":"toDataWithIntendedValidatorHash(address validator, bytes data) → bytes32 internal","hash":"MessageHashUtils-toDataWithIntendedValidatorHash-address-bytes-","id":144},{"text":"toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) → bytes32 digest internal","hash":"MessageHashUtils-toTypedDataHash-bytes32-bytes32-","id":145},{"text":"SignatureChecker ","hash":"SignatureChecker","id":146},{"text":"isValidSignatureNow(address signer, bytes32 hash, bytes signature) → bool internal","hash":"SignatureChecker-isValidSignatureNow-address-bytes32-bytes-","id":147},{"text":"isValidERC1271SignatureNow(address signer, bytes32 hash, bytes signature) → bool internal","hash":"SignatureChecker-isValidERC1271SignatureNow-address-bytes32-bytes-","id":148},{"text":"Hashes ","hash":"Hashes","id":149},{"text":"commutativeKeccak256(bytes32 a, bytes32 b) → bytes32 internal","hash":"Hashes-commutativeKeccak256-bytes32-bytes32-","id":150},{"text":"MerkleProof ","hash":"MerkleProof","id":151},{"text":"verify(bytes32[] proof, bytes32 root, bytes32 leaf) → bool internal","hash":"MerkleProof-verify-bytes32---bytes32-bytes32-","id":152},{"text":"processProof(bytes32[] proof, bytes32 leaf) → bytes32 internal","hash":"MerkleProof-processProof-bytes32---bytes32-","id":153},{"text":"verify(bytes32[] proof, bytes32 root, bytes32 leaf, function (bytes32,bytes32) view returns (bytes32) hasher) → bool internal","hash":"MerkleProof-verify-bytes32---bytes32-bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":154},{"text":"processProof(bytes32[] proof, bytes32 leaf, function (bytes32,bytes32) view returns (bytes32) hasher) → bytes32 internal","hash":"MerkleProof-processProof-bytes32---bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":155},{"text":"verifyCalldata(bytes32[] proof, bytes32 root, bytes32 leaf) → bool internal","hash":"MerkleProof-verifyCalldata-bytes32---bytes32-bytes32-","id":156},{"text":"processProofCalldata(bytes32[] proof, bytes32 leaf) → bytes32 internal","hash":"MerkleProof-processProofCalldata-bytes32---bytes32-","id":157},{"text":"verifyCalldata(bytes32[] proof, bytes32 root, bytes32 leaf, function (bytes32,bytes32) view returns (bytes32) hasher) → bool internal","hash":"MerkleProof-verifyCalldata-bytes32---bytes32-bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":158},{"text":"processProofCalldata(bytes32[] proof, bytes32 leaf, function (bytes32,bytes32) view returns (bytes32) hasher) → bytes32 internal","hash":"MerkleProof-processProofCalldata-bytes32---bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":159},{"text":"multiProofVerify(bytes32[] proof, bool[] proofFlags, bytes32 root, bytes32[] leaves) → bool internal","hash":"MerkleProof-multiProofVerify-bytes32---bool---bytes32-bytes32---","id":160},{"text":"processMultiProof(bytes32[] proof, bool[] proofFlags, bytes32[] leaves) → bytes32 merkleRoot internal","hash":"MerkleProof-processMultiProof-bytes32---bool---bytes32---","id":161},{"text":"multiProofVerify(bytes32[] proof, bool[] proofFlags, bytes32 root, bytes32[] leaves, function (bytes32,bytes32) view returns (bytes32) hasher) → bool internal","hash":"MerkleProof-multiProofVerify-bytes32---bool---bytes32-bytes32---function--bytes32-bytes32--view-returns--bytes32--","id":162},{"text":"processMultiProof(bytes32[] proof, bool[] proofFlags, bytes32[] leaves, function (bytes32,bytes32) view returns (bytes32) hasher) → bytes32 merkleRoot internal","hash":"MerkleProof-processMultiProof-bytes32---bool---bytes32---function--bytes32-bytes32--view-returns--bytes32--","id":163},{"text":"multiProofVerifyCalldata(bytes32[] proof, bool[] proofFlags, bytes32 root, bytes32[] leaves) → bool internal","hash":"MerkleProof-multiProofVerifyCalldata-bytes32---bool---bytes32-bytes32---","id":164},{"text":"processMultiProofCalldata(bytes32[] proof, bool[] proofFlags, bytes32[] leaves) → bytes32 merkleRoot internal","hash":"MerkleProof-processMultiProofCalldata-bytes32---bool---bytes32---","id":165},{"text":"multiProofVerifyCalldata(bytes32[] proof, bool[] proofFlags, bytes32 root, bytes32[] leaves, function (bytes32,bytes32) view returns (bytes32) hasher) → bool internal","hash":"MerkleProof-multiProofVerifyCalldata-bytes32---bool---bytes32-bytes32---function--bytes32-bytes32--view-returns--bytes32--","id":166},{"text":"processMultiProofCalldata(bytes32[] proof, bool[] proofFlags, bytes32[] leaves, function (bytes32,bytes32) view returns (bytes32) hasher) → bytes32 merkleRoot internal","hash":"MerkleProof-processMultiProofCalldata-bytes32---bool---bytes32---function--bytes32-bytes32--view-returns--bytes32--","id":167},{"text":"MerkleProofInvalidMultiproof() error","hash":"MerkleProof-MerkleProofInvalidMultiproof--","id":168},{"text":"Security","hash":"security","id":169},{"text":"ReentrancyGuard ","hash":"ReentrancyGuard","id":170},{"text":"nonReentrant() modifier","hash":"ReentrancyGuard-nonReentrant--","id":171},{"text":"constructor() internal","hash":"ReentrancyGuard-constructor--","id":172},{"text":"_reentrancyGuardEntered() → bool internal","hash":"ReentrancyGuard-_reentrancyGuardEntered--","id":173},{"text":"ReentrancyGuardReentrantCall() error","hash":"ReentrancyGuard-ReentrancyGuardReentrantCall--","id":174},{"text":"ReentrancyGuardTransient ","hash":"ReentrancyGuardTransient","id":175},{"text":"nonReentrant() modifier","hash":"ReentrancyGuardTransient-nonReentrant--","id":176},{"text":"_reentrancyGuardEntered() → bool internal","hash":"ReentrancyGuardTransient-_reentrancyGuardEntered--","id":177},{"text":"ReentrancyGuardReentrantCall() error","hash":"ReentrancyGuardTransient-ReentrancyGuardReentrantCall--","id":178},{"text":"Pausable ","hash":"Pausable","id":179},{"text":"whenNotPaused() modifier","hash":"Pausable-whenNotPaused--","id":180},{"text":"whenPaused() modifier","hash":"Pausable-whenPaused--","id":181},{"text":"constructor() internal","hash":"Pausable-constructor--","id":182},{"text":"paused() → bool public","hash":"Pausable-paused--","id":183},{"text":"_requireNotPaused() internal","hash":"Pausable-_requireNotPaused--","id":184},{"text":"_requirePaused() internal","hash":"Pausable-_requirePaused--","id":185},{"text":"_pause() internal","hash":"Pausable-_pause--","id":186},{"text":"_unpause() internal","hash":"Pausable-_unpause--","id":187},{"text":"Paused(address account) event","hash":"Pausable-Paused-address-","id":188},{"text":"Unpaused(address account) event","hash":"Pausable-Unpaused-address-","id":189},{"text":"EnforcedPause() error","hash":"Pausable-EnforcedPause--","id":190},{"text":"ExpectedPause() error","hash":"Pausable-ExpectedPause--","id":191},{"text":"Nonces ","hash":"Nonces","id":192},{"text":"nonces(address owner) → uint256 public","hash":"Nonces-nonces-address-","id":193},{"text":"_useNonce(address owner) → uint256 internal","hash":"Nonces-_useNonce-address-","id":194},{"text":"_useCheckedNonce(address owner, uint256 nonce) internal","hash":"Nonces-_useCheckedNonce-address-uint256-","id":195},{"text":"InvalidAccountNonce(address account, uint256 currentNonce) error","hash":"Nonces-InvalidAccountNonce-address-uint256-","id":196},{"text":"Introspection","hash":"introspection","id":197},{"text":"IERC165 ","hash":"IERC165","id":198},{"text":"supportsInterface(bytes4 interfaceId) → bool external","hash":"IERC165-supportsInterface-bytes4-","id":199},{"text":"ERC165 ","hash":"ERC165","id":200},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC165-supportsInterface-bytes4-","id":201},{"text":"ERC165Checker ","hash":"ERC165Checker","id":202},{"text":"supportsERC165(address account) → bool internal","hash":"ERC165Checker-supportsERC165-address-","id":203},{"text":"supportsInterface(address account, bytes4 interfaceId) → bool internal","hash":"ERC165Checker-supportsInterface-address-bytes4-","id":204},{"text":"getSupportedInterfaces(address account, bytes4[] interfaceIds) → bool[] internal","hash":"ERC165Checker-getSupportedInterfaces-address-bytes4---","id":205},{"text":"supportsAllInterfaces(address account, bytes4[] interfaceIds) → bool internal","hash":"ERC165Checker-supportsAllInterfaces-address-bytes4---","id":206},{"text":"supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) → bool internal","hash":"ERC165Checker-supportsERC165InterfaceUnchecked-address-bytes4-","id":207},{"text":"Data Structures","hash":"data_structures","id":208},{"text":"BitMaps ","hash":"BitMaps","id":209},{"text":"get(struct BitMaps.BitMap bitmap, uint256 index) → bool internal","hash":"BitMaps-get-struct-BitMaps-BitMap-uint256-","id":210},{"text":"setTo(struct BitMaps.BitMap bitmap, uint256 index, bool value) internal","hash":"BitMaps-setTo-struct-BitMaps-BitMap-uint256-bool-","id":211},{"text":"set(struct BitMaps.BitMap bitmap, uint256 index) internal","hash":"BitMaps-set-struct-BitMaps-BitMap-uint256-","id":212},{"text":"unset(struct BitMaps.BitMap bitmap, uint256 index) internal","hash":"BitMaps-unset-struct-BitMaps-BitMap-uint256-","id":213},{"text":"EnumerableMap ","hash":"EnumerableMap","id":214},{"text":"set(struct EnumerableMap.Bytes32ToBytes32Map map, bytes32 key, bytes32 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-Bytes32ToBytes32Map-bytes32-bytes32-","id":215},{"text":"remove(struct EnumerableMap.Bytes32ToBytes32Map map, bytes32 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-Bytes32ToBytes32Map-bytes32-","id":216},{"text":"contains(struct EnumerableMap.Bytes32ToBytes32Map map, bytes32 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-Bytes32ToBytes32Map-bytes32-","id":217},{"text":"length(struct EnumerableMap.Bytes32ToBytes32Map map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-Bytes32ToBytes32Map-","id":218},{"text":"at(struct EnumerableMap.Bytes32ToBytes32Map map, uint256 index) → bytes32, bytes32 internal","hash":"EnumerableMap-at-struct-EnumerableMap-Bytes32ToBytes32Map-uint256-","id":219},{"text":"tryGet(struct EnumerableMap.Bytes32ToBytes32Map map, bytes32 key) → bool, bytes32 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-Bytes32ToBytes32Map-bytes32-","id":220},{"text":"get(struct EnumerableMap.Bytes32ToBytes32Map map, bytes32 key) → bytes32 internal","hash":"EnumerableMap-get-struct-EnumerableMap-Bytes32ToBytes32Map-bytes32-","id":221},{"text":"keys(struct EnumerableMap.Bytes32ToBytes32Map map) → bytes32[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-Bytes32ToBytes32Map-","id":222},{"text":"set(struct EnumerableMap.UintToUintMap map, uint256 key, uint256 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-UintToUintMap-uint256-uint256-","id":223},{"text":"remove(struct EnumerableMap.UintToUintMap map, uint256 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-UintToUintMap-uint256-","id":224},{"text":"contains(struct EnumerableMap.UintToUintMap map, uint256 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-UintToUintMap-uint256-","id":225},{"text":"length(struct EnumerableMap.UintToUintMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-UintToUintMap-","id":226},{"text":"at(struct EnumerableMap.UintToUintMap map, uint256 index) → uint256, uint256 internal","hash":"EnumerableMap-at-struct-EnumerableMap-UintToUintMap-uint256-","id":227},{"text":"tryGet(struct EnumerableMap.UintToUintMap map, uint256 key) → bool, uint256 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-UintToUintMap-uint256-","id":228},{"text":"get(struct EnumerableMap.UintToUintMap map, uint256 key) → uint256 internal","hash":"EnumerableMap-get-struct-EnumerableMap-UintToUintMap-uint256-","id":229},{"text":"keys(struct EnumerableMap.UintToUintMap map) → uint256[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-UintToUintMap-","id":230},{"text":"set(struct EnumerableMap.UintToAddressMap map, uint256 key, address value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-UintToAddressMap-uint256-address-","id":231},{"text":"remove(struct EnumerableMap.UintToAddressMap map, uint256 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-UintToAddressMap-uint256-","id":232},{"text":"contains(struct EnumerableMap.UintToAddressMap map, uint256 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-UintToAddressMap-uint256-","id":233},{"text":"length(struct EnumerableMap.UintToAddressMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-UintToAddressMap-","id":234},{"text":"at(struct EnumerableMap.UintToAddressMap map, uint256 index) → uint256, address internal","hash":"EnumerableMap-at-struct-EnumerableMap-UintToAddressMap-uint256-","id":235},{"text":"tryGet(struct EnumerableMap.UintToAddressMap map, uint256 key) → bool, address internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-UintToAddressMap-uint256-","id":236},{"text":"get(struct EnumerableMap.UintToAddressMap map, uint256 key) → address internal","hash":"EnumerableMap-get-struct-EnumerableMap-UintToAddressMap-uint256-","id":237},{"text":"keys(struct EnumerableMap.UintToAddressMap map) → uint256[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-UintToAddressMap-","id":238},{"text":"set(struct EnumerableMap.UintToBytes32Map map, uint256 key, bytes32 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-UintToBytes32Map-uint256-bytes32-","id":239},{"text":"remove(struct EnumerableMap.UintToBytes32Map map, uint256 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-UintToBytes32Map-uint256-","id":240},{"text":"contains(struct EnumerableMap.UintToBytes32Map map, uint256 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-UintToBytes32Map-uint256-","id":241},{"text":"length(struct EnumerableMap.UintToBytes32Map map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-UintToBytes32Map-","id":242},{"text":"at(struct EnumerableMap.UintToBytes32Map map, uint256 index) → uint256, bytes32 internal","hash":"EnumerableMap-at-struct-EnumerableMap-UintToBytes32Map-uint256-","id":243},{"text":"tryGet(struct EnumerableMap.UintToBytes32Map map, uint256 key) → bool, bytes32 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-UintToBytes32Map-uint256-","id":244},{"text":"get(struct EnumerableMap.UintToBytes32Map map, uint256 key) → bytes32 internal","hash":"EnumerableMap-get-struct-EnumerableMap-UintToBytes32Map-uint256-","id":245},{"text":"keys(struct EnumerableMap.UintToBytes32Map map) → uint256[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-UintToBytes32Map-","id":246},{"text":"set(struct EnumerableMap.AddressToUintMap map, address key, uint256 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-AddressToUintMap-address-uint256-","id":247},{"text":"remove(struct EnumerableMap.AddressToUintMap map, address key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-AddressToUintMap-address-","id":248},{"text":"contains(struct EnumerableMap.AddressToUintMap map, address key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-AddressToUintMap-address-","id":249},{"text":"length(struct EnumerableMap.AddressToUintMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-AddressToUintMap-","id":250},{"text":"at(struct EnumerableMap.AddressToUintMap map, uint256 index) → address, uint256 internal","hash":"EnumerableMap-at-struct-EnumerableMap-AddressToUintMap-uint256-","id":251},{"text":"tryGet(struct EnumerableMap.AddressToUintMap map, address key) → bool, uint256 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-AddressToUintMap-address-","id":252},{"text":"get(struct EnumerableMap.AddressToUintMap map, address key) → uint256 internal","hash":"EnumerableMap-get-struct-EnumerableMap-AddressToUintMap-address-","id":253},{"text":"keys(struct EnumerableMap.AddressToUintMap map) → address[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-AddressToUintMap-","id":254},{"text":"set(struct EnumerableMap.AddressToAddressMap map, address key, address value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-AddressToAddressMap-address-address-","id":255},{"text":"remove(struct EnumerableMap.AddressToAddressMap map, address key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-AddressToAddressMap-address-","id":256},{"text":"contains(struct EnumerableMap.AddressToAddressMap map, address key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-AddressToAddressMap-address-","id":257},{"text":"length(struct EnumerableMap.AddressToAddressMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-AddressToAddressMap-","id":258},{"text":"at(struct EnumerableMap.AddressToAddressMap map, uint256 index) → address, address internal","hash":"EnumerableMap-at-struct-EnumerableMap-AddressToAddressMap-uint256-","id":259},{"text":"tryGet(struct EnumerableMap.AddressToAddressMap map, address key) → bool, address internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-AddressToAddressMap-address-","id":260},{"text":"get(struct EnumerableMap.AddressToAddressMap map, address key) → address internal","hash":"EnumerableMap-get-struct-EnumerableMap-AddressToAddressMap-address-","id":261},{"text":"keys(struct EnumerableMap.AddressToAddressMap map) → address[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-AddressToAddressMap-","id":262},{"text":"set(struct EnumerableMap.AddressToBytes32Map map, address key, bytes32 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-AddressToBytes32Map-address-bytes32-","id":263},{"text":"remove(struct EnumerableMap.AddressToBytes32Map map, address key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-AddressToBytes32Map-address-","id":264},{"text":"contains(struct EnumerableMap.AddressToBytes32Map map, address key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-AddressToBytes32Map-address-","id":265},{"text":"length(struct EnumerableMap.AddressToBytes32Map map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-AddressToBytes32Map-","id":266},{"text":"at(struct EnumerableMap.AddressToBytes32Map map, uint256 index) → address, bytes32 internal","hash":"EnumerableMap-at-struct-EnumerableMap-AddressToBytes32Map-uint256-","id":267},{"text":"tryGet(struct EnumerableMap.AddressToBytes32Map map, address key) → bool, bytes32 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-AddressToBytes32Map-address-","id":268},{"text":"get(struct EnumerableMap.AddressToBytes32Map map, address key) → bytes32 internal","hash":"EnumerableMap-get-struct-EnumerableMap-AddressToBytes32Map-address-","id":269},{"text":"keys(struct EnumerableMap.AddressToBytes32Map map) → address[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-AddressToBytes32Map-","id":270},{"text":"set(struct EnumerableMap.Bytes32ToUintMap map, bytes32 key, uint256 value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-Bytes32ToUintMap-bytes32-uint256-","id":271},{"text":"remove(struct EnumerableMap.Bytes32ToUintMap map, bytes32 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-Bytes32ToUintMap-bytes32-","id":272},{"text":"contains(struct EnumerableMap.Bytes32ToUintMap map, bytes32 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-Bytes32ToUintMap-bytes32-","id":273},{"text":"length(struct EnumerableMap.Bytes32ToUintMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-Bytes32ToUintMap-","id":274},{"text":"at(struct EnumerableMap.Bytes32ToUintMap map, uint256 index) → bytes32, uint256 internal","hash":"EnumerableMap-at-struct-EnumerableMap-Bytes32ToUintMap-uint256-","id":275},{"text":"tryGet(struct EnumerableMap.Bytes32ToUintMap map, bytes32 key) → bool, uint256 internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-Bytes32ToUintMap-bytes32-","id":276},{"text":"get(struct EnumerableMap.Bytes32ToUintMap map, bytes32 key) → uint256 internal","hash":"EnumerableMap-get-struct-EnumerableMap-Bytes32ToUintMap-bytes32-","id":277},{"text":"keys(struct EnumerableMap.Bytes32ToUintMap map) → bytes32[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-Bytes32ToUintMap-","id":278},{"text":"set(struct EnumerableMap.Bytes32ToAddressMap map, bytes32 key, address value) → bool internal","hash":"EnumerableMap-set-struct-EnumerableMap-Bytes32ToAddressMap-bytes32-address-","id":279},{"text":"remove(struct EnumerableMap.Bytes32ToAddressMap map, bytes32 key) → bool internal","hash":"EnumerableMap-remove-struct-EnumerableMap-Bytes32ToAddressMap-bytes32-","id":280},{"text":"contains(struct EnumerableMap.Bytes32ToAddressMap map, bytes32 key) → bool internal","hash":"EnumerableMap-contains-struct-EnumerableMap-Bytes32ToAddressMap-bytes32-","id":281},{"text":"length(struct EnumerableMap.Bytes32ToAddressMap map) → uint256 internal","hash":"EnumerableMap-length-struct-EnumerableMap-Bytes32ToAddressMap-","id":282},{"text":"at(struct EnumerableMap.Bytes32ToAddressMap map, uint256 index) → bytes32, address internal","hash":"EnumerableMap-at-struct-EnumerableMap-Bytes32ToAddressMap-uint256-","id":283},{"text":"tryGet(struct EnumerableMap.Bytes32ToAddressMap map, bytes32 key) → bool, address internal","hash":"EnumerableMap-tryGet-struct-EnumerableMap-Bytes32ToAddressMap-bytes32-","id":284},{"text":"get(struct EnumerableMap.Bytes32ToAddressMap map, bytes32 key) → address internal","hash":"EnumerableMap-get-struct-EnumerableMap-Bytes32ToAddressMap-bytes32-","id":285},{"text":"keys(struct EnumerableMap.Bytes32ToAddressMap map) → bytes32[] internal","hash":"EnumerableMap-keys-struct-EnumerableMap-Bytes32ToAddressMap-","id":286},{"text":"EnumerableMapNonexistentKey(bytes32 key) error","hash":"EnumerableMap-EnumerableMapNonexistentKey-bytes32-","id":287},{"text":"EnumerableSet ","hash":"EnumerableSet","id":288},{"text":"add(struct EnumerableSet.Bytes32Set set, bytes32 value) → bool internal","hash":"EnumerableSet-add-struct-EnumerableSet-Bytes32Set-bytes32-","id":289},{"text":"remove(struct EnumerableSet.Bytes32Set set, bytes32 value) → bool internal","hash":"EnumerableSet-remove-struct-EnumerableSet-Bytes32Set-bytes32-","id":290},{"text":"contains(struct EnumerableSet.Bytes32Set set, bytes32 value) → bool internal","hash":"EnumerableSet-contains-struct-EnumerableSet-Bytes32Set-bytes32-","id":291},{"text":"length(struct EnumerableSet.Bytes32Set set) → uint256 internal","hash":"EnumerableSet-length-struct-EnumerableSet-Bytes32Set-","id":292},{"text":"at(struct EnumerableSet.Bytes32Set set, uint256 index) → bytes32 internal","hash":"EnumerableSet-at-struct-EnumerableSet-Bytes32Set-uint256-","id":293},{"text":"values(struct EnumerableSet.Bytes32Set set) → bytes32[] internal","hash":"EnumerableSet-values-struct-EnumerableSet-Bytes32Set-","id":294},{"text":"add(struct EnumerableSet.AddressSet set, address value) → bool internal","hash":"EnumerableSet-add-struct-EnumerableSet-AddressSet-address-","id":295},{"text":"remove(struct EnumerableSet.AddressSet set, address value) → bool internal","hash":"EnumerableSet-remove-struct-EnumerableSet-AddressSet-address-","id":296},{"text":"contains(struct EnumerableSet.AddressSet set, address value) → bool internal","hash":"EnumerableSet-contains-struct-EnumerableSet-AddressSet-address-","id":297},{"text":"length(struct EnumerableSet.AddressSet set) → uint256 internal","hash":"EnumerableSet-length-struct-EnumerableSet-AddressSet-","id":298},{"text":"at(struct EnumerableSet.AddressSet set, uint256 index) → address internal","hash":"EnumerableSet-at-struct-EnumerableSet-AddressSet-uint256-","id":299},{"text":"values(struct EnumerableSet.AddressSet set) → address[] internal","hash":"EnumerableSet-values-struct-EnumerableSet-AddressSet-","id":300},{"text":"add(struct EnumerableSet.UintSet set, uint256 value) → bool internal","hash":"EnumerableSet-add-struct-EnumerableSet-UintSet-uint256-","id":301},{"text":"remove(struct EnumerableSet.UintSet set, uint256 value) → bool internal","hash":"EnumerableSet-remove-struct-EnumerableSet-UintSet-uint256-","id":302},{"text":"contains(struct EnumerableSet.UintSet set, uint256 value) → bool internal","hash":"EnumerableSet-contains-struct-EnumerableSet-UintSet-uint256-","id":303},{"text":"length(struct EnumerableSet.UintSet set) → uint256 internal","hash":"EnumerableSet-length-struct-EnumerableSet-UintSet-","id":304},{"text":"at(struct EnumerableSet.UintSet set, uint256 index) → uint256 internal","hash":"EnumerableSet-at-struct-EnumerableSet-UintSet-uint256-","id":305},{"text":"values(struct EnumerableSet.UintSet set) → uint256[] internal","hash":"EnumerableSet-values-struct-EnumerableSet-UintSet-","id":306},{"text":"DoubleEndedQueue ","hash":"DoubleEndedQueue","id":307},{"text":"pushBack(struct DoubleEndedQueue.Bytes32Deque deque, bytes32 value) internal","hash":"DoubleEndedQueue-pushBack-struct-DoubleEndedQueue-Bytes32Deque-bytes32-","id":308},{"text":"popBack(struct DoubleEndedQueue.Bytes32Deque deque) → bytes32 value internal","hash":"DoubleEndedQueue-popBack-struct-DoubleEndedQueue-Bytes32Deque-","id":309},{"text":"pushFront(struct DoubleEndedQueue.Bytes32Deque deque, bytes32 value) internal","hash":"DoubleEndedQueue-pushFront-struct-DoubleEndedQueue-Bytes32Deque-bytes32-","id":310},{"text":"popFront(struct DoubleEndedQueue.Bytes32Deque deque) → bytes32 value internal","hash":"DoubleEndedQueue-popFront-struct-DoubleEndedQueue-Bytes32Deque-","id":311},{"text":"front(struct DoubleEndedQueue.Bytes32Deque deque) → bytes32 value internal","hash":"DoubleEndedQueue-front-struct-DoubleEndedQueue-Bytes32Deque-","id":312},{"text":"back(struct DoubleEndedQueue.Bytes32Deque deque) → bytes32 value internal","hash":"DoubleEndedQueue-back-struct-DoubleEndedQueue-Bytes32Deque-","id":313},{"text":"at(struct DoubleEndedQueue.Bytes32Deque deque, uint256 index) → bytes32 value internal","hash":"DoubleEndedQueue-at-struct-DoubleEndedQueue-Bytes32Deque-uint256-","id":314},{"text":"clear(struct DoubleEndedQueue.Bytes32Deque deque) internal","hash":"DoubleEndedQueue-clear-struct-DoubleEndedQueue-Bytes32Deque-","id":315},{"text":"length(struct DoubleEndedQueue.Bytes32Deque deque) → uint256 internal","hash":"DoubleEndedQueue-length-struct-DoubleEndedQueue-Bytes32Deque-","id":316},{"text":"empty(struct DoubleEndedQueue.Bytes32Deque deque) → bool internal","hash":"DoubleEndedQueue-empty-struct-DoubleEndedQueue-Bytes32Deque-","id":317},{"text":"CircularBuffer ","hash":"CircularBuffer","id":318},{"text":"setup(struct CircularBuffer.Bytes32CircularBuffer self, uint256 size) internal","hash":"CircularBuffer-setup-struct-CircularBuffer-Bytes32CircularBuffer-uint256-","id":319},{"text":"clear(struct CircularBuffer.Bytes32CircularBuffer self) internal","hash":"CircularBuffer-clear-struct-CircularBuffer-Bytes32CircularBuffer-","id":320},{"text":"push(struct CircularBuffer.Bytes32CircularBuffer self, bytes32 value) internal","hash":"CircularBuffer-push-struct-CircularBuffer-Bytes32CircularBuffer-bytes32-","id":321},{"text":"count(struct CircularBuffer.Bytes32CircularBuffer self) → uint256 internal","hash":"CircularBuffer-count-struct-CircularBuffer-Bytes32CircularBuffer-","id":322},{"text":"length(struct CircularBuffer.Bytes32CircularBuffer self) → uint256 internal","hash":"CircularBuffer-length-struct-CircularBuffer-Bytes32CircularBuffer-","id":323},{"text":"last(struct CircularBuffer.Bytes32CircularBuffer self, uint256 i) → bytes32 internal","hash":"CircularBuffer-last-struct-CircularBuffer-Bytes32CircularBuffer-uint256-","id":324},{"text":"includes(struct CircularBuffer.Bytes32CircularBuffer self, bytes32 value) → bool internal","hash":"CircularBuffer-includes-struct-CircularBuffer-Bytes32CircularBuffer-bytes32-","id":325},{"text":"Checkpoints ","hash":"Checkpoints","id":326},{"text":"push(struct Checkpoints.Trace224 self, uint32 key, uint224 value) → uint224, uint224 internal","hash":"Checkpoints-push-struct-Checkpoints-Trace224-uint32-uint224-","id":327},{"text":"lowerLookup(struct Checkpoints.Trace224 self, uint32 key) → uint224 internal","hash":"Checkpoints-lowerLookup-struct-Checkpoints-Trace224-uint32-","id":328},{"text":"upperLookup(struct Checkpoints.Trace224 self, uint32 key) → uint224 internal","hash":"Checkpoints-upperLookup-struct-Checkpoints-Trace224-uint32-","id":329},{"text":"upperLookupRecent(struct Checkpoints.Trace224 self, uint32 key) → uint224 internal","hash":"Checkpoints-upperLookupRecent-struct-Checkpoints-Trace224-uint32-","id":330},{"text":"latest(struct Checkpoints.Trace224 self) → uint224 internal","hash":"Checkpoints-latest-struct-Checkpoints-Trace224-","id":331},{"text":"latestCheckpoint(struct Checkpoints.Trace224 self) → bool exists, uint32 _key, uint224 _value internal","hash":"Checkpoints-latestCheckpoint-struct-Checkpoints-Trace224-","id":332},{"text":"length(struct Checkpoints.Trace224 self) → uint256 internal","hash":"Checkpoints-length-struct-Checkpoints-Trace224-","id":333},{"text":"at(struct Checkpoints.Trace224 self, uint32 pos) → struct Checkpoints.Checkpoint224 internal","hash":"Checkpoints-at-struct-Checkpoints-Trace224-uint32-","id":334},{"text":"push(struct Checkpoints.Trace208 self, uint48 key, uint208 value) → uint208, uint208 internal","hash":"Checkpoints-push-struct-Checkpoints-Trace208-uint48-uint208-","id":335},{"text":"lowerLookup(struct Checkpoints.Trace208 self, uint48 key) → uint208 internal","hash":"Checkpoints-lowerLookup-struct-Checkpoints-Trace208-uint48-","id":336},{"text":"upperLookup(struct Checkpoints.Trace208 self, uint48 key) → uint208 internal","hash":"Checkpoints-upperLookup-struct-Checkpoints-Trace208-uint48-","id":337},{"text":"upperLookupRecent(struct Checkpoints.Trace208 self, uint48 key) → uint208 internal","hash":"Checkpoints-upperLookupRecent-struct-Checkpoints-Trace208-uint48-","id":338},{"text":"latest(struct Checkpoints.Trace208 self) → uint208 internal","hash":"Checkpoints-latest-struct-Checkpoints-Trace208-","id":339},{"text":"latestCheckpoint(struct Checkpoints.Trace208 self) → bool exists, uint48 _key, uint208 _value internal","hash":"Checkpoints-latestCheckpoint-struct-Checkpoints-Trace208-","id":340},{"text":"length(struct Checkpoints.Trace208 self) → uint256 internal","hash":"Checkpoints-length-struct-Checkpoints-Trace208-","id":341},{"text":"at(struct Checkpoints.Trace208 self, uint32 pos) → struct Checkpoints.Checkpoint208 internal","hash":"Checkpoints-at-struct-Checkpoints-Trace208-uint32-","id":342},{"text":"push(struct Checkpoints.Trace160 self, uint96 key, uint160 value) → uint160, uint160 internal","hash":"Checkpoints-push-struct-Checkpoints-Trace160-uint96-uint160-","id":343},{"text":"lowerLookup(struct Checkpoints.Trace160 self, uint96 key) → uint160 internal","hash":"Checkpoints-lowerLookup-struct-Checkpoints-Trace160-uint96-","id":344},{"text":"upperLookup(struct Checkpoints.Trace160 self, uint96 key) → uint160 internal","hash":"Checkpoints-upperLookup-struct-Checkpoints-Trace160-uint96-","id":345},{"text":"upperLookupRecent(struct Checkpoints.Trace160 self, uint96 key) → uint160 internal","hash":"Checkpoints-upperLookupRecent-struct-Checkpoints-Trace160-uint96-","id":346},{"text":"latest(struct Checkpoints.Trace160 self) → uint160 internal","hash":"Checkpoints-latest-struct-Checkpoints-Trace160-","id":347},{"text":"latestCheckpoint(struct Checkpoints.Trace160 self) → bool exists, uint96 _key, uint160 _value internal","hash":"Checkpoints-latestCheckpoint-struct-Checkpoints-Trace160-","id":348},{"text":"length(struct Checkpoints.Trace160 self) → uint256 internal","hash":"Checkpoints-length-struct-Checkpoints-Trace160-","id":349},{"text":"at(struct Checkpoints.Trace160 self, uint32 pos) → struct Checkpoints.Checkpoint160 internal","hash":"Checkpoints-at-struct-Checkpoints-Trace160-uint32-","id":350},{"text":"CheckpointUnorderedInsertion() error","hash":"Checkpoints-CheckpointUnorderedInsertion--","id":351},{"text":"Heap ","hash":"Heap","id":352},{"text":"peek(struct Heap.Uint256Heap self) → uint256 internal","hash":"Heap-peek-struct-Heap-Uint256Heap-","id":353},{"text":"pop(struct Heap.Uint256Heap self) → uint256 internal","hash":"Heap-pop-struct-Heap-Uint256Heap-","id":354},{"text":"pop(struct Heap.Uint256Heap self, function (uint256,uint256) view returns (bool) comp) → uint256 internal","hash":"Heap-pop-struct-Heap-Uint256Heap-function--uint256-uint256--view-returns--bool--","id":355},{"text":"insert(struct Heap.Uint256Heap self, uint256 value) internal","hash":"Heap-insert-struct-Heap-Uint256Heap-uint256-","id":356},{"text":"insert(struct Heap.Uint256Heap self, uint256 value, function (uint256,uint256) view returns (bool) comp) internal","hash":"Heap-insert-struct-Heap-Uint256Heap-uint256-function--uint256-uint256--view-returns--bool--","id":357},{"text":"replace(struct Heap.Uint256Heap self, uint256 newValue) → uint256 internal","hash":"Heap-replace-struct-Heap-Uint256Heap-uint256-","id":358},{"text":"replace(struct Heap.Uint256Heap self, uint256 newValue, function (uint256,uint256) view returns (bool) comp) → uint256 internal","hash":"Heap-replace-struct-Heap-Uint256Heap-uint256-function--uint256-uint256--view-returns--bool--","id":359},{"text":"length(struct Heap.Uint256Heap self) → uint64 internal","hash":"Heap-length-struct-Heap-Uint256Heap-","id":360},{"text":"clear(struct Heap.Uint256Heap self) internal","hash":"Heap-clear-struct-Heap-Uint256Heap-","id":361},{"text":"peek(struct Heap.Uint208Heap self) → uint208 internal","hash":"Heap-peek-struct-Heap-Uint208Heap-","id":362},{"text":"pop(struct Heap.Uint208Heap self) → uint208 internal","hash":"Heap-pop-struct-Heap-Uint208Heap-","id":363},{"text":"pop(struct Heap.Uint208Heap self, function (uint256,uint256) view returns (bool) comp) → uint208 internal","hash":"Heap-pop-struct-Heap-Uint208Heap-function--uint256-uint256--view-returns--bool--","id":364},{"text":"insert(struct Heap.Uint208Heap self, uint208 value) internal","hash":"Heap-insert-struct-Heap-Uint208Heap-uint208-","id":365},{"text":"insert(struct Heap.Uint208Heap self, uint208 value, function (uint256,uint256) view returns (bool) comp) internal","hash":"Heap-insert-struct-Heap-Uint208Heap-uint208-function--uint256-uint256--view-returns--bool--","id":366},{"text":"replace(struct Heap.Uint208Heap self, uint208 newValue) → uint208 internal","hash":"Heap-replace-struct-Heap-Uint208Heap-uint208-","id":367},{"text":"replace(struct Heap.Uint208Heap self, uint208 newValue, function (uint256,uint256) view returns (bool) comp) → uint208 internal","hash":"Heap-replace-struct-Heap-Uint208Heap-uint208-function--uint256-uint256--view-returns--bool--","id":368},{"text":"length(struct Heap.Uint208Heap self) → uint24 internal","hash":"Heap-length-struct-Heap-Uint208Heap-","id":369},{"text":"clear(struct Heap.Uint208Heap self) internal","hash":"Heap-clear-struct-Heap-Uint208Heap-","id":370},{"text":"MerkleTree ","hash":"MerkleTree","id":371},{"text":"setup(struct MerkleTree.Bytes32PushTree self, uint8 levels, bytes32 zero) → bytes32 initialRoot internal","hash":"MerkleTree-setup-struct-MerkleTree-Bytes32PushTree-uint8-bytes32-","id":372},{"text":"setup(struct MerkleTree.Bytes32PushTree self, uint8 levels, bytes32 zero, function (bytes32,bytes32) view returns (bytes32) fnHash) → bytes32 initialRoot internal","hash":"MerkleTree-setup-struct-MerkleTree-Bytes32PushTree-uint8-bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":373},{"text":"push(struct MerkleTree.Bytes32PushTree self, bytes32 leaf) → uint256 index, bytes32 newRoot internal","hash":"MerkleTree-push-struct-MerkleTree-Bytes32PushTree-bytes32-","id":374},{"text":"push(struct MerkleTree.Bytes32PushTree self, bytes32 leaf, function (bytes32,bytes32) view returns (bytes32) fnHash) → uint256 index, bytes32 newRoot internal","hash":"MerkleTree-push-struct-MerkleTree-Bytes32PushTree-bytes32-function--bytes32-bytes32--view-returns--bytes32--","id":375},{"text":"depth(struct MerkleTree.Bytes32PushTree self) → uint256 internal","hash":"MerkleTree-depth-struct-MerkleTree-Bytes32PushTree-","id":376},{"text":"Libraries","hash":"libraries","id":377},{"text":"Create2 ","hash":"Create2","id":378},{"text":"deploy(uint256 amount, bytes32 salt, bytes bytecode) → address addr internal","hash":"Create2-deploy-uint256-bytes32-bytes-","id":379},{"text":"computeAddress(bytes32 salt, bytes32 bytecodeHash) → address internal","hash":"Create2-computeAddress-bytes32-bytes32-","id":380},{"text":"computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) → address addr internal","hash":"Create2-computeAddress-bytes32-bytes32-address-","id":381},{"text":"Create2EmptyBytecode() error","hash":"Create2-Create2EmptyBytecode--","id":382},{"text":"Address ","hash":"Address","id":383},{"text":"sendValue(address payable recipient, uint256 amount) internal","hash":"Address-sendValue-address-payable-uint256-","id":384},{"text":"functionCall(address target, bytes data) → bytes internal","hash":"Address-functionCall-address-bytes-","id":385},{"text":"functionCallWithValue(address target, bytes data, uint256 value) → bytes internal","hash":"Address-functionCallWithValue-address-bytes-uint256-","id":386},{"text":"functionStaticCall(address target, bytes data) → bytes internal","hash":"Address-functionStaticCall-address-bytes-","id":387},{"text":"functionDelegateCall(address target, bytes data) → bytes internal","hash":"Address-functionDelegateCall-address-bytes-","id":388},{"text":"verifyCallResultFromTarget(address target, bool success, bytes returndata) → bytes internal","hash":"Address-verifyCallResultFromTarget-address-bool-bytes-","id":389},{"text":"verifyCallResult(bool success, bytes returndata) → bytes internal","hash":"Address-verifyCallResult-bool-bytes-","id":390},{"text":"AddressEmptyCode(address target) error","hash":"Address-AddressEmptyCode-address-","id":391},{"text":"Arrays ","hash":"Arrays","id":392},{"text":"sort(uint256[] array, function (uint256,uint256) pure returns (bool) comp) → uint256[] internal","hash":"Arrays-sort-uint256---function--uint256-uint256--pure-returns--bool--","id":393},{"text":"sort(uint256[] array) → uint256[] internal","hash":"Arrays-sort-uint256---","id":394},{"text":"sort(address[] array, function (address,address) pure returns (bool) comp) → address[] internal","hash":"Arrays-sort-address---function--address-address--pure-returns--bool--","id":395},{"text":"sort(address[] array) → address[] internal","hash":"Arrays-sort-address---","id":396},{"text":"sort(bytes32[] array, function (bytes32,bytes32) pure returns (bool) comp) → bytes32[] internal","hash":"Arrays-sort-bytes32---function--bytes32-bytes32--pure-returns--bool--","id":397},{"text":"sort(bytes32[] array) → bytes32[] internal","hash":"Arrays-sort-bytes32---","id":398},{"text":"findUpperBound(uint256[] array, uint256 element) → uint256 internal","hash":"Arrays-findUpperBound-uint256---uint256-","id":399},{"text":"lowerBound(uint256[] array, uint256 element) → uint256 internal","hash":"Arrays-lowerBound-uint256---uint256-","id":400},{"text":"upperBound(uint256[] array, uint256 element) → uint256 internal","hash":"Arrays-upperBound-uint256---uint256-","id":401},{"text":"lowerBoundMemory(uint256[] array, uint256 element) → uint256 internal","hash":"Arrays-lowerBoundMemory-uint256---uint256-","id":402},{"text":"upperBoundMemory(uint256[] array, uint256 element) → uint256 internal","hash":"Arrays-upperBoundMemory-uint256---uint256-","id":403},{"text":"unsafeAccess(address[] arr, uint256 pos) → struct StorageSlot.AddressSlot internal","hash":"Arrays-unsafeAccess-address---uint256-","id":404},{"text":"unsafeAccess(bytes32[] arr, uint256 pos) → struct StorageSlot.Bytes32Slot internal","hash":"Arrays-unsafeAccess-bytes32---uint256-","id":405},{"text":"unsafeAccess(uint256[] arr, uint256 pos) → struct StorageSlot.Uint256Slot internal","hash":"Arrays-unsafeAccess-uint256---uint256-","id":406},{"text":"unsafeMemoryAccess(address[] arr, uint256 pos) → address res internal","hash":"Arrays-unsafeMemoryAccess-address---uint256-","id":407},{"text":"unsafeMemoryAccess(bytes32[] arr, uint256 pos) → bytes32 res internal","hash":"Arrays-unsafeMemoryAccess-bytes32---uint256-","id":408},{"text":"unsafeMemoryAccess(uint256[] arr, uint256 pos) → uint256 res internal","hash":"Arrays-unsafeMemoryAccess-uint256---uint256-","id":409},{"text":"unsafeSetLength(address[] array, uint256 len) internal","hash":"Arrays-unsafeSetLength-address---uint256-","id":410},{"text":"unsafeSetLength(bytes32[] array, uint256 len) internal","hash":"Arrays-unsafeSetLength-bytes32---uint256-","id":411},{"text":"unsafeSetLength(uint256[] array, uint256 len) internal","hash":"Arrays-unsafeSetLength-uint256---uint256-","id":412},{"text":"Base64 ","hash":"Base64","id":413},{"text":"encode(bytes data) → string internal","hash":"Base64-encode-bytes-","id":414},{"text":"encodeURL(bytes data) → string internal","hash":"Base64-encodeURL-bytes-","id":415},{"text":"string _TABLE internal constant","hash":"Base64-_TABLE-string","id":416},{"text":"string _TABLE_URL internal constant","hash":"Base64-_TABLE_URL-string","id":417},{"text":"Strings ","hash":"Strings","id":418},{"text":"toString(uint256 value) → string internal","hash":"Strings-toString-uint256-","id":419},{"text":"toStringSigned(int256 value) → string internal","hash":"Strings-toStringSigned-int256-","id":420},{"text":"toHexString(uint256 value) → string internal","hash":"Strings-toHexString-uint256-","id":421},{"text":"toHexString(uint256 value, uint256 length) → string internal","hash":"Strings-toHexString-uint256-uint256-","id":422},{"text":"toHexString(address addr) → string internal","hash":"Strings-toHexString-address-","id":423},{"text":"toChecksumHexString(address addr) → string internal","hash":"Strings-toChecksumHexString-address-","id":424},{"text":"equal(string a, string b) → bool internal","hash":"Strings-equal-string-string-","id":425},{"text":"StringsInsufficientHexLength(uint256 value, uint256 length) error","hash":"Strings-StringsInsufficientHexLength-uint256-uint256-","id":426},{"text":"ShortStrings ","hash":"ShortStrings","id":427},{"text":"toShortString(string str) → ShortString internal","hash":"ShortStrings-toShortString-string-","id":428},{"text":"toString(ShortString sstr) → string internal","hash":"ShortStrings-toString-ShortString-","id":429},{"text":"byteLength(ShortString sstr) → uint256 internal","hash":"ShortStrings-byteLength-ShortString-","id":430},{"text":"toShortStringWithFallback(string value, string store) → ShortString internal","hash":"ShortStrings-toShortStringWithFallback-string-string-","id":431},{"text":"toStringWithFallback(ShortString value, string store) → string internal","hash":"ShortStrings-toStringWithFallback-ShortString-string-","id":432},{"text":"byteLengthWithFallback(ShortString value, string store) → uint256 internal","hash":"ShortStrings-byteLengthWithFallback-ShortString-string-","id":433},{"text":"StringTooLong(string str) error","hash":"ShortStrings-StringTooLong-string-","id":434},{"text":"InvalidShortString() error","hash":"ShortStrings-InvalidShortString--","id":435},{"text":"SlotDerivation ","hash":"SlotDerivation","id":436},{"text":"erc7201Slot(string namespace) → bytes32 slot internal","hash":"SlotDerivation-erc7201Slot-string-","id":437},{"text":"offset(bytes32 slot, uint256 pos) → bytes32 result internal","hash":"SlotDerivation-offset-bytes32-uint256-","id":438},{"text":"deriveArray(bytes32 slot) → bytes32 result internal","hash":"SlotDerivation-deriveArray-bytes32-","id":439},{"text":"deriveMapping(bytes32 slot, address key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-address-","id":440},{"text":"deriveMapping(bytes32 slot, bool key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-bool-","id":441},{"text":"deriveMapping(bytes32 slot, bytes32 key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-bytes32-","id":442},{"text":"deriveMapping(bytes32 slot, uint256 key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-uint256-","id":443},{"text":"deriveMapping(bytes32 slot, int256 key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-int256-","id":444},{"text":"deriveMapping(bytes32 slot, string key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-string-","id":445},{"text":"deriveMapping(bytes32 slot, bytes key) → bytes32 result internal","hash":"SlotDerivation-deriveMapping-bytes32-bytes-","id":446},{"text":"StorageSlot ","hash":"StorageSlot","id":447},{"text":"getAddressSlot(bytes32 slot) → struct StorageSlot.AddressSlot r internal","hash":"StorageSlot-getAddressSlot-bytes32-","id":448},{"text":"getBooleanSlot(bytes32 slot) → struct StorageSlot.BooleanSlot r internal","hash":"StorageSlot-getBooleanSlot-bytes32-","id":449},{"text":"getBytes32Slot(bytes32 slot) → struct StorageSlot.Bytes32Slot r internal","hash":"StorageSlot-getBytes32Slot-bytes32-","id":450},{"text":"getUint256Slot(bytes32 slot) → struct StorageSlot.Uint256Slot r internal","hash":"StorageSlot-getUint256Slot-bytes32-","id":451},{"text":"getInt256Slot(bytes32 slot) → struct StorageSlot.Int256Slot r internal","hash":"StorageSlot-getInt256Slot-bytes32-","id":452},{"text":"getStringSlot(bytes32 slot) → struct StorageSlot.StringSlot r internal","hash":"StorageSlot-getStringSlot-bytes32-","id":453},{"text":"getStringSlot(string store) → struct StorageSlot.StringSlot r internal","hash":"StorageSlot-getStringSlot-string-","id":454},{"text":"getBytesSlot(bytes32 slot) → struct StorageSlot.BytesSlot r internal","hash":"StorageSlot-getBytesSlot-bytes32-","id":455},{"text":"getBytesSlot(bytes store) → struct StorageSlot.BytesSlot r internal","hash":"StorageSlot-getBytesSlot-bytes-","id":456},{"text":"asAddress(bytes32 slot) → StorageSlot.AddressSlotType internal","hash":"StorageSlot-asAddress-bytes32-","id":457},{"text":"asBoolean(bytes32 slot) → StorageSlot.BooleanSlotType internal","hash":"StorageSlot-asBoolean-bytes32-","id":458},{"text":"asBytes32(bytes32 slot) → StorageSlot.Bytes32SlotType internal","hash":"StorageSlot-asBytes32-bytes32-","id":459},{"text":"asUint256(bytes32 slot) → StorageSlot.Uint256SlotType internal","hash":"StorageSlot-asUint256-bytes32-","id":460},{"text":"asInt256(bytes32 slot) → StorageSlot.Int256SlotType internal","hash":"StorageSlot-asInt256-bytes32-","id":461},{"text":"tload(StorageSlot.AddressSlotType slot) → address value internal","hash":"StorageSlot-tload-StorageSlot-AddressSlotType-","id":462},{"text":"tstore(StorageSlot.AddressSlotType slot, address value) internal","hash":"StorageSlot-tstore-StorageSlot-AddressSlotType-address-","id":463},{"text":"tload(StorageSlot.BooleanSlotType slot) → bool value internal","hash":"StorageSlot-tload-StorageSlot-BooleanSlotType-","id":464},{"text":"tstore(StorageSlot.BooleanSlotType slot, bool value) internal","hash":"StorageSlot-tstore-StorageSlot-BooleanSlotType-bool-","id":465},{"text":"tload(StorageSlot.Bytes32SlotType slot) → bytes32 value internal","hash":"StorageSlot-tload-StorageSlot-Bytes32SlotType-","id":466},{"text":"tstore(StorageSlot.Bytes32SlotType slot, bytes32 value) internal","hash":"StorageSlot-tstore-StorageSlot-Bytes32SlotType-bytes32-","id":467},{"text":"tload(StorageSlot.Uint256SlotType slot) → uint256 value internal","hash":"StorageSlot-tload-StorageSlot-Uint256SlotType-","id":468},{"text":"tstore(StorageSlot.Uint256SlotType slot, uint256 value) internal","hash":"StorageSlot-tstore-StorageSlot-Uint256SlotType-uint256-","id":469},{"text":"tload(StorageSlot.Int256SlotType slot) → int256 value internal","hash":"StorageSlot-tload-StorageSlot-Int256SlotType-","id":470},{"text":"tstore(StorageSlot.Int256SlotType slot, int256 value) internal","hash":"StorageSlot-tstore-StorageSlot-Int256SlotType-int256-","id":471},{"text":"Multicall ","hash":"Multicall","id":472},{"text":"multicall(bytes[] data) → bytes[] results external","hash":"Multicall-multicall-bytes---","id":473},{"text":"Context ","hash":"Context","id":474},{"text":"_msgSender() → address internal","hash":"Context-_msgSender--","id":475},{"text":"_msgData() → bytes internal","hash":"Context-_msgData--","id":476},{"text":"_contextSuffixLength() → uint256 internal","hash":"Context-_contextSuffixLength--","id":477},{"text":"Packing ","hash":"Packing","id":478},{"text":"pack_1_1(bytes1 left, bytes1 right) → bytes2 result internal","hash":"Packing-pack_1_1-bytes1-bytes1-","id":479},{"text":"pack_2_2(bytes2 left, bytes2 right) → bytes4 result internal","hash":"Packing-pack_2_2-bytes2-bytes2-","id":480},{"text":"pack_2_4(bytes2 left, bytes4 right) → bytes6 result internal","hash":"Packing-pack_2_4-bytes2-bytes4-","id":481},{"text":"pack_2_6(bytes2 left, bytes6 right) → bytes8 result internal","hash":"Packing-pack_2_6-bytes2-bytes6-","id":482},{"text":"pack_2_8(bytes2 left, bytes8 right) → bytes10 result internal","hash":"Packing-pack_2_8-bytes2-bytes8-","id":483},{"text":"pack_2_10(bytes2 left, bytes10 right) → bytes12 result internal","hash":"Packing-pack_2_10-bytes2-bytes10-","id":484},{"text":"pack_2_20(bytes2 left, bytes20 right) → bytes22 result internal","hash":"Packing-pack_2_20-bytes2-bytes20-","id":485},{"text":"pack_2_22(bytes2 left, bytes22 right) → bytes24 result internal","hash":"Packing-pack_2_22-bytes2-bytes22-","id":486},{"text":"pack_4_2(bytes4 left, bytes2 right) → bytes6 result internal","hash":"Packing-pack_4_2-bytes4-bytes2-","id":487},{"text":"pack_4_4(bytes4 left, bytes4 right) → bytes8 result internal","hash":"Packing-pack_4_4-bytes4-bytes4-","id":488},{"text":"pack_4_6(bytes4 left, bytes6 right) → bytes10 result internal","hash":"Packing-pack_4_6-bytes4-bytes6-","id":489},{"text":"pack_4_8(bytes4 left, bytes8 right) → bytes12 result internal","hash":"Packing-pack_4_8-bytes4-bytes8-","id":490},{"text":"pack_4_12(bytes4 left, bytes12 right) → bytes16 result internal","hash":"Packing-pack_4_12-bytes4-bytes12-","id":491},{"text":"pack_4_16(bytes4 left, bytes16 right) → bytes20 result internal","hash":"Packing-pack_4_16-bytes4-bytes16-","id":492},{"text":"pack_4_20(bytes4 left, bytes20 right) → bytes24 result internal","hash":"Packing-pack_4_20-bytes4-bytes20-","id":493},{"text":"pack_4_24(bytes4 left, bytes24 right) → bytes28 result internal","hash":"Packing-pack_4_24-bytes4-bytes24-","id":494},{"text":"pack_4_28(bytes4 left, bytes28 right) → bytes32 result internal","hash":"Packing-pack_4_28-bytes4-bytes28-","id":495},{"text":"pack_6_2(bytes6 left, bytes2 right) → bytes8 result internal","hash":"Packing-pack_6_2-bytes6-bytes2-","id":496},{"text":"pack_6_4(bytes6 left, bytes4 right) → bytes10 result internal","hash":"Packing-pack_6_4-bytes6-bytes4-","id":497},{"text":"pack_6_6(bytes6 left, bytes6 right) → bytes12 result internal","hash":"Packing-pack_6_6-bytes6-bytes6-","id":498},{"text":"pack_6_10(bytes6 left, bytes10 right) → bytes16 result internal","hash":"Packing-pack_6_10-bytes6-bytes10-","id":499},{"text":"pack_6_16(bytes6 left, bytes16 right) → bytes22 result internal","hash":"Packing-pack_6_16-bytes6-bytes16-","id":500},{"text":"pack_6_22(bytes6 left, bytes22 right) → bytes28 result internal","hash":"Packing-pack_6_22-bytes6-bytes22-","id":501},{"text":"pack_8_2(bytes8 left, bytes2 right) → bytes10 result internal","hash":"Packing-pack_8_2-bytes8-bytes2-","id":502},{"text":"pack_8_4(bytes8 left, bytes4 right) → bytes12 result internal","hash":"Packing-pack_8_4-bytes8-bytes4-","id":503},{"text":"pack_8_8(bytes8 left, bytes8 right) → bytes16 result internal","hash":"Packing-pack_8_8-bytes8-bytes8-","id":504},{"text":"pack_8_12(bytes8 left, bytes12 right) → bytes20 result internal","hash":"Packing-pack_8_12-bytes8-bytes12-","id":505},{"text":"pack_8_16(bytes8 left, bytes16 right) → bytes24 result internal","hash":"Packing-pack_8_16-bytes8-bytes16-","id":506},{"text":"pack_8_20(bytes8 left, bytes20 right) → bytes28 result internal","hash":"Packing-pack_8_20-bytes8-bytes20-","id":507},{"text":"pack_8_24(bytes8 left, bytes24 right) → bytes32 result internal","hash":"Packing-pack_8_24-bytes8-bytes24-","id":508},{"text":"pack_10_2(bytes10 left, bytes2 right) → bytes12 result internal","hash":"Packing-pack_10_2-bytes10-bytes2-","id":509},{"text":"pack_10_6(bytes10 left, bytes6 right) → bytes16 result internal","hash":"Packing-pack_10_6-bytes10-bytes6-","id":510},{"text":"pack_10_10(bytes10 left, bytes10 right) → bytes20 result internal","hash":"Packing-pack_10_10-bytes10-bytes10-","id":511},{"text":"pack_10_12(bytes10 left, bytes12 right) → bytes22 result internal","hash":"Packing-pack_10_12-bytes10-bytes12-","id":512},{"text":"pack_10_22(bytes10 left, bytes22 right) → bytes32 result internal","hash":"Packing-pack_10_22-bytes10-bytes22-","id":513},{"text":"pack_12_4(bytes12 left, bytes4 right) → bytes16 result internal","hash":"Packing-pack_12_4-bytes12-bytes4-","id":514},{"text":"pack_12_8(bytes12 left, bytes8 right) → bytes20 result internal","hash":"Packing-pack_12_8-bytes12-bytes8-","id":515},{"text":"pack_12_10(bytes12 left, bytes10 right) → bytes22 result internal","hash":"Packing-pack_12_10-bytes12-bytes10-","id":516},{"text":"pack_12_12(bytes12 left, bytes12 right) → bytes24 result internal","hash":"Packing-pack_12_12-bytes12-bytes12-","id":517},{"text":"pack_12_16(bytes12 left, bytes16 right) → bytes28 result internal","hash":"Packing-pack_12_16-bytes12-bytes16-","id":518},{"text":"pack_12_20(bytes12 left, bytes20 right) → bytes32 result internal","hash":"Packing-pack_12_20-bytes12-bytes20-","id":519},{"text":"pack_16_4(bytes16 left, bytes4 right) → bytes20 result internal","hash":"Packing-pack_16_4-bytes16-bytes4-","id":520},{"text":"pack_16_6(bytes16 left, bytes6 right) → bytes22 result internal","hash":"Packing-pack_16_6-bytes16-bytes6-","id":521},{"text":"pack_16_8(bytes16 left, bytes8 right) → bytes24 result internal","hash":"Packing-pack_16_8-bytes16-bytes8-","id":522},{"text":"pack_16_12(bytes16 left, bytes12 right) → bytes28 result internal","hash":"Packing-pack_16_12-bytes16-bytes12-","id":523},{"text":"pack_16_16(bytes16 left, bytes16 right) → bytes32 result internal","hash":"Packing-pack_16_16-bytes16-bytes16-","id":524},{"text":"pack_20_2(bytes20 left, bytes2 right) → bytes22 result internal","hash":"Packing-pack_20_2-bytes20-bytes2-","id":525},{"text":"pack_20_4(bytes20 left, bytes4 right) → bytes24 result internal","hash":"Packing-pack_20_4-bytes20-bytes4-","id":526},{"text":"pack_20_8(bytes20 left, bytes8 right) → bytes28 result internal","hash":"Packing-pack_20_8-bytes20-bytes8-","id":527},{"text":"pack_20_12(bytes20 left, bytes12 right) → bytes32 result internal","hash":"Packing-pack_20_12-bytes20-bytes12-","id":528},{"text":"pack_22_2(bytes22 left, bytes2 right) → bytes24 result internal","hash":"Packing-pack_22_2-bytes22-bytes2-","id":529},{"text":"pack_22_6(bytes22 left, bytes6 right) → bytes28 result internal","hash":"Packing-pack_22_6-bytes22-bytes6-","id":530},{"text":"pack_22_10(bytes22 left, bytes10 right) → bytes32 result internal","hash":"Packing-pack_22_10-bytes22-bytes10-","id":531},{"text":"pack_24_4(bytes24 left, bytes4 right) → bytes28 result internal","hash":"Packing-pack_24_4-bytes24-bytes4-","id":532},{"text":"pack_24_8(bytes24 left, bytes8 right) → bytes32 result internal","hash":"Packing-pack_24_8-bytes24-bytes8-","id":533},{"text":"pack_28_4(bytes28 left, bytes4 right) → bytes32 result internal","hash":"Packing-pack_28_4-bytes28-bytes4-","id":534},{"text":"extract_2_1(bytes2 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_2_1-bytes2-uint8-","id":535},{"text":"replace_2_1(bytes2 self, bytes1 value, uint8 offset) → bytes2 result internal","hash":"Packing-replace_2_1-bytes2-bytes1-uint8-","id":536},{"text":"extract_4_1(bytes4 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_4_1-bytes4-uint8-","id":537},{"text":"replace_4_1(bytes4 self, bytes1 value, uint8 offset) → bytes4 result internal","hash":"Packing-replace_4_1-bytes4-bytes1-uint8-","id":538},{"text":"extract_4_2(bytes4 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_4_2-bytes4-uint8-","id":539},{"text":"replace_4_2(bytes4 self, bytes2 value, uint8 offset) → bytes4 result internal","hash":"Packing-replace_4_2-bytes4-bytes2-uint8-","id":540},{"text":"extract_6_1(bytes6 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_6_1-bytes6-uint8-","id":541},{"text":"replace_6_1(bytes6 self, bytes1 value, uint8 offset) → bytes6 result internal","hash":"Packing-replace_6_1-bytes6-bytes1-uint8-","id":542},{"text":"extract_6_2(bytes6 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_6_2-bytes6-uint8-","id":543},{"text":"replace_6_2(bytes6 self, bytes2 value, uint8 offset) → bytes6 result internal","hash":"Packing-replace_6_2-bytes6-bytes2-uint8-","id":544},{"text":"extract_6_4(bytes6 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_6_4-bytes6-uint8-","id":545},{"text":"replace_6_4(bytes6 self, bytes4 value, uint8 offset) → bytes6 result internal","hash":"Packing-replace_6_4-bytes6-bytes4-uint8-","id":546},{"text":"extract_8_1(bytes8 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_8_1-bytes8-uint8-","id":547},{"text":"replace_8_1(bytes8 self, bytes1 value, uint8 offset) → bytes8 result internal","hash":"Packing-replace_8_1-bytes8-bytes1-uint8-","id":548},{"text":"extract_8_2(bytes8 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_8_2-bytes8-uint8-","id":549},{"text":"replace_8_2(bytes8 self, bytes2 value, uint8 offset) → bytes8 result internal","hash":"Packing-replace_8_2-bytes8-bytes2-uint8-","id":550},{"text":"extract_8_4(bytes8 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_8_4-bytes8-uint8-","id":551},{"text":"replace_8_4(bytes8 self, bytes4 value, uint8 offset) → bytes8 result internal","hash":"Packing-replace_8_4-bytes8-bytes4-uint8-","id":552},{"text":"extract_8_6(bytes8 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_8_6-bytes8-uint8-","id":553},{"text":"replace_8_6(bytes8 self, bytes6 value, uint8 offset) → bytes8 result internal","hash":"Packing-replace_8_6-bytes8-bytes6-uint8-","id":554},{"text":"extract_10_1(bytes10 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_10_1-bytes10-uint8-","id":555},{"text":"replace_10_1(bytes10 self, bytes1 value, uint8 offset) → bytes10 result internal","hash":"Packing-replace_10_1-bytes10-bytes1-uint8-","id":556},{"text":"extract_10_2(bytes10 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_10_2-bytes10-uint8-","id":557},{"text":"replace_10_2(bytes10 self, bytes2 value, uint8 offset) → bytes10 result internal","hash":"Packing-replace_10_2-bytes10-bytes2-uint8-","id":558},{"text":"extract_10_4(bytes10 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_10_4-bytes10-uint8-","id":559},{"text":"replace_10_4(bytes10 self, bytes4 value, uint8 offset) → bytes10 result internal","hash":"Packing-replace_10_4-bytes10-bytes4-uint8-","id":560},{"text":"extract_10_6(bytes10 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_10_6-bytes10-uint8-","id":561},{"text":"replace_10_6(bytes10 self, bytes6 value, uint8 offset) → bytes10 result internal","hash":"Packing-replace_10_6-bytes10-bytes6-uint8-","id":562},{"text":"extract_10_8(bytes10 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_10_8-bytes10-uint8-","id":563},{"text":"replace_10_8(bytes10 self, bytes8 value, uint8 offset) → bytes10 result internal","hash":"Packing-replace_10_8-bytes10-bytes8-uint8-","id":564},{"text":"extract_12_1(bytes12 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_12_1-bytes12-uint8-","id":565},{"text":"replace_12_1(bytes12 self, bytes1 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_1-bytes12-bytes1-uint8-","id":566},{"text":"extract_12_2(bytes12 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_12_2-bytes12-uint8-","id":567},{"text":"replace_12_2(bytes12 self, bytes2 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_2-bytes12-bytes2-uint8-","id":568},{"text":"extract_12_4(bytes12 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_12_4-bytes12-uint8-","id":569},{"text":"replace_12_4(bytes12 self, bytes4 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_4-bytes12-bytes4-uint8-","id":570},{"text":"extract_12_6(bytes12 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_12_6-bytes12-uint8-","id":571},{"text":"replace_12_6(bytes12 self, bytes6 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_6-bytes12-bytes6-uint8-","id":572},{"text":"extract_12_8(bytes12 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_12_8-bytes12-uint8-","id":573},{"text":"replace_12_8(bytes12 self, bytes8 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_8-bytes12-bytes8-uint8-","id":574},{"text":"extract_12_10(bytes12 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_12_10-bytes12-uint8-","id":575},{"text":"replace_12_10(bytes12 self, bytes10 value, uint8 offset) → bytes12 result internal","hash":"Packing-replace_12_10-bytes12-bytes10-uint8-","id":576},{"text":"extract_16_1(bytes16 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_16_1-bytes16-uint8-","id":577},{"text":"replace_16_1(bytes16 self, bytes1 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_1-bytes16-bytes1-uint8-","id":578},{"text":"extract_16_2(bytes16 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_16_2-bytes16-uint8-","id":579},{"text":"replace_16_2(bytes16 self, bytes2 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_2-bytes16-bytes2-uint8-","id":580},{"text":"extract_16_4(bytes16 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_16_4-bytes16-uint8-","id":581},{"text":"replace_16_4(bytes16 self, bytes4 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_4-bytes16-bytes4-uint8-","id":582},{"text":"extract_16_6(bytes16 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_16_6-bytes16-uint8-","id":583},{"text":"replace_16_6(bytes16 self, bytes6 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_6-bytes16-bytes6-uint8-","id":584},{"text":"extract_16_8(bytes16 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_16_8-bytes16-uint8-","id":585},{"text":"replace_16_8(bytes16 self, bytes8 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_8-bytes16-bytes8-uint8-","id":586},{"text":"extract_16_10(bytes16 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_16_10-bytes16-uint8-","id":587},{"text":"replace_16_10(bytes16 self, bytes10 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_10-bytes16-bytes10-uint8-","id":588},{"text":"extract_16_12(bytes16 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_16_12-bytes16-uint8-","id":589},{"text":"replace_16_12(bytes16 self, bytes12 value, uint8 offset) → bytes16 result internal","hash":"Packing-replace_16_12-bytes16-bytes12-uint8-","id":590},{"text":"extract_20_1(bytes20 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_20_1-bytes20-uint8-","id":591},{"text":"replace_20_1(bytes20 self, bytes1 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_1-bytes20-bytes1-uint8-","id":592},{"text":"extract_20_2(bytes20 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_20_2-bytes20-uint8-","id":593},{"text":"replace_20_2(bytes20 self, bytes2 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_2-bytes20-bytes2-uint8-","id":594},{"text":"extract_20_4(bytes20 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_20_4-bytes20-uint8-","id":595},{"text":"replace_20_4(bytes20 self, bytes4 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_4-bytes20-bytes4-uint8-","id":596},{"text":"extract_20_6(bytes20 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_20_6-bytes20-uint8-","id":597},{"text":"replace_20_6(bytes20 self, bytes6 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_6-bytes20-bytes6-uint8-","id":598},{"text":"extract_20_8(bytes20 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_20_8-bytes20-uint8-","id":599},{"text":"replace_20_8(bytes20 self, bytes8 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_8-bytes20-bytes8-uint8-","id":600},{"text":"extract_20_10(bytes20 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_20_10-bytes20-uint8-","id":601},{"text":"replace_20_10(bytes20 self, bytes10 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_10-bytes20-bytes10-uint8-","id":602},{"text":"extract_20_12(bytes20 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_20_12-bytes20-uint8-","id":603},{"text":"replace_20_12(bytes20 self, bytes12 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_12-bytes20-bytes12-uint8-","id":604},{"text":"extract_20_16(bytes20 self, uint8 offset) → bytes16 result internal","hash":"Packing-extract_20_16-bytes20-uint8-","id":605},{"text":"replace_20_16(bytes20 self, bytes16 value, uint8 offset) → bytes20 result internal","hash":"Packing-replace_20_16-bytes20-bytes16-uint8-","id":606},{"text":"extract_22_1(bytes22 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_22_1-bytes22-uint8-","id":607},{"text":"replace_22_1(bytes22 self, bytes1 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_1-bytes22-bytes1-uint8-","id":608},{"text":"extract_22_2(bytes22 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_22_2-bytes22-uint8-","id":609},{"text":"replace_22_2(bytes22 self, bytes2 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_2-bytes22-bytes2-uint8-","id":610},{"text":"extract_22_4(bytes22 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_22_4-bytes22-uint8-","id":611},{"text":"replace_22_4(bytes22 self, bytes4 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_4-bytes22-bytes4-uint8-","id":612},{"text":"extract_22_6(bytes22 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_22_6-bytes22-uint8-","id":613},{"text":"replace_22_6(bytes22 self, bytes6 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_6-bytes22-bytes6-uint8-","id":614},{"text":"extract_22_8(bytes22 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_22_8-bytes22-uint8-","id":615},{"text":"replace_22_8(bytes22 self, bytes8 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_8-bytes22-bytes8-uint8-","id":616},{"text":"extract_22_10(bytes22 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_22_10-bytes22-uint8-","id":617},{"text":"replace_22_10(bytes22 self, bytes10 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_10-bytes22-bytes10-uint8-","id":618},{"text":"extract_22_12(bytes22 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_22_12-bytes22-uint8-","id":619},{"text":"replace_22_12(bytes22 self, bytes12 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_12-bytes22-bytes12-uint8-","id":620},{"text":"extract_22_16(bytes22 self, uint8 offset) → bytes16 result internal","hash":"Packing-extract_22_16-bytes22-uint8-","id":621},{"text":"replace_22_16(bytes22 self, bytes16 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_16-bytes22-bytes16-uint8-","id":622},{"text":"extract_22_20(bytes22 self, uint8 offset) → bytes20 result internal","hash":"Packing-extract_22_20-bytes22-uint8-","id":623},{"text":"replace_22_20(bytes22 self, bytes20 value, uint8 offset) → bytes22 result internal","hash":"Packing-replace_22_20-bytes22-bytes20-uint8-","id":624},{"text":"extract_24_1(bytes24 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_24_1-bytes24-uint8-","id":625},{"text":"replace_24_1(bytes24 self, bytes1 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_1-bytes24-bytes1-uint8-","id":626},{"text":"extract_24_2(bytes24 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_24_2-bytes24-uint8-","id":627},{"text":"replace_24_2(bytes24 self, bytes2 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_2-bytes24-bytes2-uint8-","id":628},{"text":"extract_24_4(bytes24 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_24_4-bytes24-uint8-","id":629},{"text":"replace_24_4(bytes24 self, bytes4 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_4-bytes24-bytes4-uint8-","id":630},{"text":"extract_24_6(bytes24 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_24_6-bytes24-uint8-","id":631},{"text":"replace_24_6(bytes24 self, bytes6 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_6-bytes24-bytes6-uint8-","id":632},{"text":"extract_24_8(bytes24 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_24_8-bytes24-uint8-","id":633},{"text":"replace_24_8(bytes24 self, bytes8 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_8-bytes24-bytes8-uint8-","id":634},{"text":"extract_24_10(bytes24 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_24_10-bytes24-uint8-","id":635},{"text":"replace_24_10(bytes24 self, bytes10 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_10-bytes24-bytes10-uint8-","id":636},{"text":"extract_24_12(bytes24 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_24_12-bytes24-uint8-","id":637},{"text":"replace_24_12(bytes24 self, bytes12 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_12-bytes24-bytes12-uint8-","id":638},{"text":"extract_24_16(bytes24 self, uint8 offset) → bytes16 result internal","hash":"Packing-extract_24_16-bytes24-uint8-","id":639},{"text":"replace_24_16(bytes24 self, bytes16 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_16-bytes24-bytes16-uint8-","id":640},{"text":"extract_24_20(bytes24 self, uint8 offset) → bytes20 result internal","hash":"Packing-extract_24_20-bytes24-uint8-","id":641},{"text":"replace_24_20(bytes24 self, bytes20 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_20-bytes24-bytes20-uint8-","id":642},{"text":"extract_24_22(bytes24 self, uint8 offset) → bytes22 result internal","hash":"Packing-extract_24_22-bytes24-uint8-","id":643},{"text":"replace_24_22(bytes24 self, bytes22 value, uint8 offset) → bytes24 result internal","hash":"Packing-replace_24_22-bytes24-bytes22-uint8-","id":644},{"text":"extract_28_1(bytes28 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_28_1-bytes28-uint8-","id":645},{"text":"replace_28_1(bytes28 self, bytes1 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_1-bytes28-bytes1-uint8-","id":646},{"text":"extract_28_2(bytes28 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_28_2-bytes28-uint8-","id":647},{"text":"replace_28_2(bytes28 self, bytes2 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_2-bytes28-bytes2-uint8-","id":648},{"text":"extract_28_4(bytes28 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_28_4-bytes28-uint8-","id":649},{"text":"replace_28_4(bytes28 self, bytes4 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_4-bytes28-bytes4-uint8-","id":650},{"text":"extract_28_6(bytes28 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_28_6-bytes28-uint8-","id":651},{"text":"replace_28_6(bytes28 self, bytes6 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_6-bytes28-bytes6-uint8-","id":652},{"text":"extract_28_8(bytes28 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_28_8-bytes28-uint8-","id":653},{"text":"replace_28_8(bytes28 self, bytes8 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_8-bytes28-bytes8-uint8-","id":654},{"text":"extract_28_10(bytes28 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_28_10-bytes28-uint8-","id":655},{"text":"replace_28_10(bytes28 self, bytes10 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_10-bytes28-bytes10-uint8-","id":656},{"text":"extract_28_12(bytes28 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_28_12-bytes28-uint8-","id":657},{"text":"replace_28_12(bytes28 self, bytes12 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_12-bytes28-bytes12-uint8-","id":658},{"text":"extract_28_16(bytes28 self, uint8 offset) → bytes16 result internal","hash":"Packing-extract_28_16-bytes28-uint8-","id":659},{"text":"replace_28_16(bytes28 self, bytes16 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_16-bytes28-bytes16-uint8-","id":660},{"text":"extract_28_20(bytes28 self, uint8 offset) → bytes20 result internal","hash":"Packing-extract_28_20-bytes28-uint8-","id":661},{"text":"replace_28_20(bytes28 self, bytes20 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_20-bytes28-bytes20-uint8-","id":662},{"text":"extract_28_22(bytes28 self, uint8 offset) → bytes22 result internal","hash":"Packing-extract_28_22-bytes28-uint8-","id":663},{"text":"replace_28_22(bytes28 self, bytes22 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_22-bytes28-bytes22-uint8-","id":664},{"text":"extract_28_24(bytes28 self, uint8 offset) → bytes24 result internal","hash":"Packing-extract_28_24-bytes28-uint8-","id":665},{"text":"replace_28_24(bytes28 self, bytes24 value, uint8 offset) → bytes28 result internal","hash":"Packing-replace_28_24-bytes28-bytes24-uint8-","id":666},{"text":"extract_32_1(bytes32 self, uint8 offset) → bytes1 result internal","hash":"Packing-extract_32_1-bytes32-uint8-","id":667},{"text":"replace_32_1(bytes32 self, bytes1 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_1-bytes32-bytes1-uint8-","id":668},{"text":"extract_32_2(bytes32 self, uint8 offset) → bytes2 result internal","hash":"Packing-extract_32_2-bytes32-uint8-","id":669},{"text":"replace_32_2(bytes32 self, bytes2 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_2-bytes32-bytes2-uint8-","id":670},{"text":"extract_32_4(bytes32 self, uint8 offset) → bytes4 result internal","hash":"Packing-extract_32_4-bytes32-uint8-","id":671},{"text":"replace_32_4(bytes32 self, bytes4 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_4-bytes32-bytes4-uint8-","id":672},{"text":"extract_32_6(bytes32 self, uint8 offset) → bytes6 result internal","hash":"Packing-extract_32_6-bytes32-uint8-","id":673},{"text":"replace_32_6(bytes32 self, bytes6 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_6-bytes32-bytes6-uint8-","id":674},{"text":"extract_32_8(bytes32 self, uint8 offset) → bytes8 result internal","hash":"Packing-extract_32_8-bytes32-uint8-","id":675},{"text":"replace_32_8(bytes32 self, bytes8 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_8-bytes32-bytes8-uint8-","id":676},{"text":"extract_32_10(bytes32 self, uint8 offset) → bytes10 result internal","hash":"Packing-extract_32_10-bytes32-uint8-","id":677},{"text":"replace_32_10(bytes32 self, bytes10 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_10-bytes32-bytes10-uint8-","id":678},{"text":"extract_32_12(bytes32 self, uint8 offset) → bytes12 result internal","hash":"Packing-extract_32_12-bytes32-uint8-","id":679},{"text":"replace_32_12(bytes32 self, bytes12 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_12-bytes32-bytes12-uint8-","id":680},{"text":"extract_32_16(bytes32 self, uint8 offset) → bytes16 result internal","hash":"Packing-extract_32_16-bytes32-uint8-","id":681},{"text":"replace_32_16(bytes32 self, bytes16 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_16-bytes32-bytes16-uint8-","id":682},{"text":"extract_32_20(bytes32 self, uint8 offset) → bytes20 result internal","hash":"Packing-extract_32_20-bytes32-uint8-","id":683},{"text":"replace_32_20(bytes32 self, bytes20 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_20-bytes32-bytes20-uint8-","id":684},{"text":"extract_32_22(bytes32 self, uint8 offset) → bytes22 result internal","hash":"Packing-extract_32_22-bytes32-uint8-","id":685},{"text":"replace_32_22(bytes32 self, bytes22 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_22-bytes32-bytes22-uint8-","id":686},{"text":"extract_32_24(bytes32 self, uint8 offset) → bytes24 result internal","hash":"Packing-extract_32_24-bytes32-uint8-","id":687},{"text":"replace_32_24(bytes32 self, bytes24 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_24-bytes32-bytes24-uint8-","id":688},{"text":"extract_32_28(bytes32 self, uint8 offset) → bytes28 result internal","hash":"Packing-extract_32_28-bytes32-uint8-","id":689},{"text":"replace_32_28(bytes32 self, bytes28 value, uint8 offset) → bytes32 result internal","hash":"Packing-replace_32_28-bytes32-bytes28-uint8-","id":690},{"text":"OutOfRangeAccess() error","hash":"Packing-OutOfRangeAccess--","id":691},{"text":"Panic ","hash":"Panic","id":692},{"text":"panic(uint256 code) internal","hash":"Panic-panic-uint256-","id":693},{"text":"uint256 GENERIC internal constant","hash":"Panic-GENERIC-uint256","id":694},{"text":"uint256 ASSERT internal constant","hash":"Panic-ASSERT-uint256","id":695},{"text":"uint256 UNDER_OVERFLOW internal constant","hash":"Panic-UNDER_OVERFLOW-uint256","id":696},{"text":"uint256 DIVISION_BY_ZERO internal constant","hash":"Panic-DIVISION_BY_ZERO-uint256","id":697},{"text":"uint256 ENUM_CONVERSION_ERROR internal constant","hash":"Panic-ENUM_CONVERSION_ERROR-uint256","id":698},{"text":"uint256 STORAGE_ENCODING_ERROR internal constant","hash":"Panic-STORAGE_ENCODING_ERROR-uint256","id":699},{"text":"uint256 EMPTY_ARRAY_POP internal constant","hash":"Panic-EMPTY_ARRAY_POP-uint256","id":700},{"text":"uint256 ARRAY_OUT_OF_BOUNDS internal constant","hash":"Panic-ARRAY_OUT_OF_BOUNDS-uint256","id":701},{"text":"uint256 RESOURCE_ERROR internal constant","hash":"Panic-RESOURCE_ERROR-uint256","id":702},{"text":"uint256 INVALID_INTERNAL_FUNCTION internal constant","hash":"Panic-INVALID_INTERNAL_FUNCTION-uint256","id":703},{"text":"Comparators ","hash":"Comparators","id":704},{"text":"lt(uint256 a, uint256 b) → bool internal","hash":"Comparators-lt-uint256-uint256-","id":705},{"text":"gt(uint256 a, uint256 b) → bool internal","hash":"Comparators-gt-uint256-uint256-","id":706}]},"28":{"id":28,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/token/erc1155 This set of interfaces and contracts are all related to the ERC-1155 Multi Token Standard. The ERC consists of three interfaces which fulfill different roles, found here as IERC1155, IERC1155MetadataURI and IERC1155Receiver. ERC1155 implements the mandatory IERC1155 interface, as well as the optional extension IERC1155MetadataURI, by relying on the substitution mechanism to use the same URI for all token types, dramatically reducing gas costs. Additionally there are multiple custom extensions, including: designation of addresses that can pause token transfers for all users (ERC1155Pausable). destruction of own tokens (ERC1155Burnable). This core set of contracts is designed to be unopinionated, allowing developers to access the internal functions in ERC-1155 (such as _mint) and expose them as external functions in the way they prefer. import \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\"; Required interface of an ERC-1155 compliant contract, as defined in the ERC. Functions balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) IERC165 supportsInterface(interfaceId) Events TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Returns the value of tokens of token type id owned by account. Batched version of balanceOf. Requirements: accounts and ids must have the same length. Grants or revokes permission to operator to transfer the caller’s tokens, according to approved, Emits an ApprovalForAll event. Requirements: operator cannot be the zero address. Returns true if operator is approved to transfer account's tokens. See setApprovalForAll. Transfers a value amount of tokens of type id from from to to. This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a TransferSingle event. Requirements: to cannot be the zero address. If the caller is not from, it must have been approved to spend from's tokens via setApprovalForAll. from must have a balance of tokens of type id of at least value amount. If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value. Batched version of safeTransferFrom. This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a TransferSingle or a TransferBatch event, depending on the length of the array arguments. Requirements: ids and values must have the same length. If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value. Emitted when value amount of tokens of type id are transferred from from to to by operator. Equivalent to multiple TransferSingle events, where operator, from and to are the same for all transfers. Emitted when account grants or revokes permission to operator to transfer their tokens, according to approved. Emitted when the URI for token type id changes to value, if it is a non-programmatic URI. If an URI event was emitted for id, the standard guarantees that value will equal the value returned by IERC1155MetadataURI.uri. import \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\"; Interface of the optional ERC1155MetadataExtension interface, as defined in the ERC. Functions uri(id) IERC1155 balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) IERC165 supportsInterface(interfaceId) Events IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Returns the URI for token type id. If the {id} substring is present in the URI, it must be replaced by clients with the actual token type ID. import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\"; Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 Functions constructor(uri_) supportsInterface(interfaceId) uri() balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) _update(from, to, ids, values) _updateWithAcceptanceCheck(from, to, ids, values, data) _safeTransferFrom(from, to, id, value, data) _safeBatchTransferFrom(from, to, ids, values, data) _setURI(newuri) _mint(to, id, value, data) _mintBatch(to, ids, values, data) _burn(from, id, value) _burnBatch(from, ids, values) _setApprovalForAll(owner, operator, approved) Events IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Errors IERC1155Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) See _setURI. See IERC165.supportsInterface. See IERC1155MetadataURI.uri. This implementation returns the same URI for all token types. It relies on the token type ID substitution mechanism defined in the ERC. Clients calling this function must replace the {id} substring with the actual token type ID. See IERC1155.balanceOf. See IERC1155.balanceOfBatch. Requirements: accounts and ids must have the same length. See IERC1155.setApprovalForAll. See IERC1155.isApprovedForAll. See IERC1155.safeTransferFrom. See IERC1155.safeBatchTransferFrom. Transfers a value amount of tokens of type id from from to to. Will mint (or burn) if from (or to) is the zero address. Emits a TransferSingle event if the arrays contain one element, and TransferBatch otherwise. Requirements: If to refers to a smart contract, it must implement either IERC1155Receiver.onERC1155Received or IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value. ids and values must have the same length. The ERC-1155 acceptance check is not performed in this function. See _updateWithAcceptanceCheck instead. Version of _update that performs the token acceptance check by calling IERC1155Receiver.onERC1155Received or IERC1155Receiver.onERC1155BatchReceived on the receiver address if it contains code (eg. is a smart contract at the moment of execution). Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any update to the contract state after this function would break the check-effect-interaction pattern. Consider overriding _update instead. Transfers a value tokens of token type id from from to to. Emits a TransferSingle event. Requirements: to cannot be the zero address. from must have a balance of tokens of type id of at least value amount. If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value. Batched version of _safeTransferFrom. Emits a TransferBatch event. Requirements: If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value. ids and values must have the same length. Sets a new URI for all token types, by relying on the token type ID substitution mechanism defined in the ERC. By this mechanism, any occurrence of the {id} substring in either the URI or any of the values in the JSON file at said URI will be replaced by clients with the token type ID. For example, the https://token-cdn-domain/{id}.json URI would be interpreted by clients as https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json for token type ID 0x4cce0. See uri. Because these URIs cannot be meaningfully represented by the uri event, this function emits no events. Creates a value amount of tokens of type id, and assigns them to to. Emits a TransferSingle event. Requirements: to cannot be the zero address. If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value. Batched version of _mint. Emits a TransferBatch event. Requirements: ids and values must have the same length. to cannot be the zero address. If to refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value. Destroys a value amount of tokens of type id from from Emits a TransferSingle event. Requirements: from cannot be the zero address. from must have at least value amount of tokens of type id. Batched version of _burn. Emits a TransferBatch event. Requirements: from cannot be the zero address. from must have at least value amount of tokens of type id. ids and values must have the same length. Approve operator to operate on all of owner tokens Emits an ApprovalForAll event. Requirements: operator cannot be the zero address. import \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\"; Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers. Functions onERC1155Received(operator, from, id, value, data) onERC1155BatchReceived(operator, from, ids, values, data) IERC165 supportsInterface(interfaceId) Handles the receipt of a single ERC-1155 token type. This function is called at the end of a safeTransferFrom after the balance has been updated. To accept the transfer, this must return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) (i.e. 0xf23a6e61, or its own function selector). Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a safeBatchTransferFrom after the balances have been updated. To accept the transfer(s), this must return bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\")) (i.e. 0xbc197c81, or its own function selector). import \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\"; ERC-1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the Pausable._pause and Pausable._unpause internal functions, with appropriate access control, e.g. using AccessControl or Ownable. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable. Functions _update(from, to, ids, values) Pausable paused() _requireNotPaused() _requirePaused() _pause() _unpause() ERC1155 supportsInterface(interfaceId) uri() balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) _updateWithAcceptanceCheck(from, to, ids, values, data) _safeTransferFrom(from, to, id, value, data) _safeBatchTransferFrom(from, to, ids, values, data) _setURI(newuri) _mint(to, id, value, data) _mintBatch(to, ids, values, data) _burn(from, id, value) _burnBatch(from, ids, values) _setApprovalForAll(owner, operator, approved) Events Pausable Paused(account) Unpaused(account) IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Errors Pausable EnforcedPause() ExpectedPause() IERC1155Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) See ERC1155._update. Requirements: the contract must not be paused. import \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\"; Extension of ERC1155 that allows token holders to destroy both their own tokens and those that they have been approved to use. Functions burn(account, id, value) burnBatch(account, ids, values) ERC1155 supportsInterface(interfaceId) uri() balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) _update(from, to, ids, values) _updateWithAcceptanceCheck(from, to, ids, values, data) _safeTransferFrom(from, to, id, value, data) _safeBatchTransferFrom(from, to, ids, values, data) _setURI(newuri) _mint(to, id, value, data) _mintBatch(to, ids, values, data) _burn(from, id, value) _burnBatch(from, ids, values) _setApprovalForAll(owner, operator, approved) Events IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Errors IERC1155Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) import \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\"; Extension of ERC-1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. This extension should not be added in an upgrade to an already deployed contract. Functions totalSupply(id) totalSupply() exists(id) _update(from, to, ids, values) ERC1155 supportsInterface(interfaceId) uri() balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) _updateWithAcceptanceCheck(from, to, ids, values, data) _safeTransferFrom(from, to, id, value, data) _safeBatchTransferFrom(from, to, ids, values, data) _setURI(newuri) _mint(to, id, value, data) _mintBatch(to, ids, values, data) _burn(from, id, value) _burnBatch(from, ids, values) _setApprovalForAll(owner, operator, approved) Events IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Errors IERC1155Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) Total value of tokens in with a given id. Total value of tokens. Indicates whether any token exist with a given id, or not. See ERC1155._update. import \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\"; ERC-1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension Functions uri(tokenId) _setURI(tokenId, tokenURI) _setBaseURI(baseURI) ERC1155 supportsInterface(interfaceId) balanceOf(account, id) balanceOfBatch(accounts, ids) setApprovalForAll(operator, approved) isApprovedForAll(account, operator) safeTransferFrom(from, to, id, value, data) safeBatchTransferFrom(from, to, ids, values, data) _update(from, to, ids, values) _updateWithAcceptanceCheck(from, to, ids, values, data) _safeTransferFrom(from, to, id, value, data) _safeBatchTransferFrom(from, to, ids, values, data) _setURI(newuri) _mint(to, id, value, data) _mintBatch(to, ids, values, data) _burn(from, id, value) _burnBatch(from, ids, values) _setApprovalForAll(owner, operator, approved) Events IERC1155 TransferSingle(operator, from, to, id, value) TransferBatch(operator, from, to, ids, values) ApprovalForAll(account, operator, approved) URI(value, id) Errors IERC1155Errors ERC1155InsufficientBalance(sender, balance, needed, tokenId) ERC1155InvalidSender(sender) ERC1155InvalidReceiver(receiver) ERC1155MissingApprovalForAll(operator, owner) ERC1155InvalidApprover(approver) ERC1155InvalidOperator(operator) ERC1155InvalidArrayLength(idsLength, valuesLength) See IERC1155MetadataURI.uri. This implementation returns the concatenation of the _baseURI and the token-specific uri if the latter is set This enables the following behaviors: if _tokenURIs[tokenId] is set, then the result is the concatenation of _baseURI and _tokenURIs[tokenId] (keep in mind that _baseURI is empty per default); if _tokenURIs[tokenId] is NOT set then we fallback to super.uri() which in most cases will contain ERC1155._uri; if _tokenURIs[tokenId] is NOT set, and if the parents do not have a uri value set, then the result is empty. Sets tokenURI as the tokenURI of tokenId. Sets baseURI as the _baseURI for all tokens import \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\"; Simple implementation of IERC1155Receiver that will allow a contract to hold ERC-1155 tokens. When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck. Functions supportsInterface(interfaceId) onERC1155Received(, , , , ) onERC1155BatchReceived(, , , , ) See IERC165.supportsInterface. import \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\"; Library that provide common ERC-1155 utility functions. See ERC-1155. Functions checkOnERC1155Received(operator, from, to, id, value, data) checkOnERC1155BatchReceived(operator, from, to, ids, values, data) Performs an acceptance check for the provided operator by calling {IERC1155-onERC1155Received} on the to address. The operator is generally the address that initiated the token transfer (i.e. msg.sender). The acceptance call is not executed and treated as a no-op if the target address is doesn’t contain code (i.e. an EOA). Otherwise, the recipient must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value to accept the transfer. Performs a batch acceptance check for the provided operator by calling {IERC1155-onERC1155BatchReceived} on the to address. The operator is generally the address that initiated the token transfer (i.e. msg.sender). The acceptance call is not executed and treated as a no-op if the target address is doesn’t contain code (i.e. an EOA). Otherwise, the recipient must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value to accept the transfer. ← ERC 721 Finance →","title":"ERC-1155","component":"contracts","version":"5.x","name":"ERC1155","url":"/contracts/5.x/api/token/ERC1155.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"IERC1155 ","hash":"IERC1155","id":2},{"text":"balanceOf(address account, uint256 id) → uint256 external","hash":"IERC1155-balanceOf-address-uint256-","id":3},{"text":"balanceOfBatch(address[] accounts, uint256[] ids) → uint256[] external","hash":"IERC1155-balanceOfBatch-address---uint256---","id":4},{"text":"setApprovalForAll(address operator, bool approved) external","hash":"IERC1155-setApprovalForAll-address-bool-","id":5},{"text":"isApprovedForAll(address account, address operator) → bool external","hash":"IERC1155-isApprovedForAll-address-address-","id":6},{"text":"safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data) external","hash":"IERC1155-safeTransferFrom-address-address-uint256-uint256-bytes-","id":7},{"text":"safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data) external","hash":"IERC1155-safeBatchTransferFrom-address-address-uint256---uint256---bytes-","id":8},{"text":"TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value) event","hash":"IERC1155-TransferSingle-address-address-address-uint256-uint256-","id":9},{"text":"TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values) event","hash":"IERC1155-TransferBatch-address-address-address-uint256---uint256---","id":10},{"text":"ApprovalForAll(address indexed account, address indexed operator, bool approved) event","hash":"IERC1155-ApprovalForAll-address-address-bool-","id":11},{"text":"URI(string value, uint256 indexed id) event","hash":"IERC1155-URI-string-uint256-","id":12},{"text":"IERC1155MetadataURI ","hash":"IERC1155MetadataURI","id":13},{"text":"uri(uint256 id) → string external","hash":"IERC1155MetadataURI-uri-uint256-","id":14},{"text":"ERC1155 ","hash":"ERC1155","id":15},{"text":"constructor(string uri_) internal","hash":"ERC1155-constructor-string-","id":16},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC1155-supportsInterface-bytes4-","id":17},{"text":"uri(uint256) → string public","hash":"ERC1155-uri-uint256-","id":18},{"text":"balanceOf(address account, uint256 id) → uint256 public","hash":"ERC1155-balanceOf-address-uint256-","id":19},{"text":"balanceOfBatch(address[] accounts, uint256[] ids) → uint256[] public","hash":"ERC1155-balanceOfBatch-address---uint256---","id":20},{"text":"setApprovalForAll(address operator, bool approved) public","hash":"ERC1155-setApprovalForAll-address-bool-","id":21},{"text":"isApprovedForAll(address account, address operator) → bool public","hash":"ERC1155-isApprovedForAll-address-address-","id":22},{"text":"safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data) public","hash":"ERC1155-safeTransferFrom-address-address-uint256-uint256-bytes-","id":23},{"text":"safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data) public","hash":"ERC1155-safeBatchTransferFrom-address-address-uint256---uint256---bytes-","id":24},{"text":"_update(address from, address to, uint256[] ids, uint256[] values) internal","hash":"ERC1155-_update-address-address-uint256---uint256---","id":25},{"text":"_updateWithAcceptanceCheck(address from, address to, uint256[] ids, uint256[] values, bytes data) internal","hash":"ERC1155-_updateWithAcceptanceCheck-address-address-uint256---uint256---bytes-","id":26},{"text":"_safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data) internal","hash":"ERC1155-_safeTransferFrom-address-address-uint256-uint256-bytes-","id":27},{"text":"_safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data) internal","hash":"ERC1155-_safeBatchTransferFrom-address-address-uint256---uint256---bytes-","id":28},{"text":"_setURI(string newuri) internal","hash":"ERC1155-_setURI-string-","id":29},{"text":"_mint(address to, uint256 id, uint256 value, bytes data) internal","hash":"ERC1155-_mint-address-uint256-uint256-bytes-","id":30},{"text":"_mintBatch(address to, uint256[] ids, uint256[] values, bytes data) internal","hash":"ERC1155-_mintBatch-address-uint256---uint256---bytes-","id":31},{"text":"_burn(address from, uint256 id, uint256 value) internal","hash":"ERC1155-_burn-address-uint256-uint256-","id":32},{"text":"_burnBatch(address from, uint256[] ids, uint256[] values) internal","hash":"ERC1155-_burnBatch-address-uint256---uint256---","id":33},{"text":"_setApprovalForAll(address owner, address operator, bool approved) internal","hash":"ERC1155-_setApprovalForAll-address-address-bool-","id":34},{"text":"IERC1155Receiver ","hash":"IERC1155Receiver","id":35},{"text":"onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes data) → bytes4 external","hash":"IERC1155Receiver-onERC1155Received-address-address-uint256-uint256-bytes-","id":36},{"text":"onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) → bytes4 external","hash":"IERC1155Receiver-onERC1155BatchReceived-address-address-uint256---uint256---bytes-","id":37},{"text":"Extensions","hash":"extensions","id":38},{"text":"ERC1155Pausable ","hash":"ERC1155Pausable","id":39},{"text":"_update(address from, address to, uint256[] ids, uint256[] values) internal","hash":"ERC1155Pausable-_update-address-address-uint256---uint256---","id":40},{"text":"ERC1155Burnable ","hash":"ERC1155Burnable","id":41},{"text":"burn(address account, uint256 id, uint256 value) public","hash":"ERC1155Burnable-burn-address-uint256-uint256-","id":42},{"text":"burnBatch(address account, uint256[] ids, uint256[] values) public","hash":"ERC1155Burnable-burnBatch-address-uint256---uint256---","id":43},{"text":"ERC1155Supply ","hash":"ERC1155Supply","id":44},{"text":"totalSupply(uint256 id) → uint256 public","hash":"ERC1155Supply-totalSupply-uint256-","id":45},{"text":"totalSupply() → uint256 public","hash":"ERC1155Supply-totalSupply--","id":46},{"text":"exists(uint256 id) → bool public","hash":"ERC1155Supply-exists-uint256-","id":47},{"text":"_update(address from, address to, uint256[] ids, uint256[] values) internal","hash":"ERC1155Supply-_update-address-address-uint256---uint256---","id":48},{"text":"ERC1155URIStorage ","hash":"ERC1155URIStorage","id":49},{"text":"uri(uint256 tokenId) → string public","hash":"ERC1155URIStorage-uri-uint256-","id":50},{"text":"_setURI(uint256 tokenId, string tokenURI) internal","hash":"ERC1155URIStorage-_setURI-uint256-string-","id":51},{"text":"_setBaseURI(string baseURI) internal","hash":"ERC1155URIStorage-_setBaseURI-string-","id":52},{"text":"Utilities","hash":"utilities","id":53},{"text":"ERC1155Holder ","hash":"ERC1155Holder","id":54},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC1155Holder-supportsInterface-bytes4-","id":55},{"text":"onERC1155Received(address, address, uint256, uint256, bytes) → bytes4 public","hash":"ERC1155Holder-onERC1155Received-address-address-uint256-uint256-bytes-","id":56},{"text":"onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) → bytes4 public","hash":"ERC1155Holder-onERC1155BatchReceived-address-address-uint256---uint256---bytes-","id":57},{"text":"ERC1155Utils ","hash":"ERC1155Utils","id":58},{"text":"checkOnERC1155Received(address operator, address from, address to, uint256 id, uint256 value, bytes data) internal","hash":"ERC1155Utils-checkOnERC1155Received-address-address-address-uint256-uint256-bytes-","id":59},{"text":"checkOnERC1155BatchReceived(address operator, address from, address to, uint256[] ids, uint256[] values, bytes data) internal","hash":"ERC1155Utils-checkOnERC1155BatchReceived-address-address-address-uint256---uint256---bytes-","id":60}]},"29":{"id":29,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/token/erc20 This set of interfaces, contracts, and utilities are all related to the ERC-20 Token Standard. For an overview of ERC-20 tokens and a walk through on how to create a token contract read our ERC-20 guide. There are a few core contracts that implement the behavior specified in the ERC: IERC20: the interface all ERC-20 implementations should conform to. IERC20Metadata: the extended ERC-20 interface including the name, symbol and decimals functions. ERC20: the implementation of the ERC-20 interface, including the name, symbol and decimals optional standard extension to the base interface. Additionally there are multiple custom extensions, including: ERC20Permit: gasless approval of tokens (standardized as ERC-2612). ERC20Burnable: destruction of own tokens. ERC20Capped: enforcement of a cap to the total supply when minting tokens. ERC20Pausable: ability to pause token transfers. ERC20FlashMint: token level support for flash loans through the minting and burning of ephemeral tokens (standardized as ERC-3156). ERC20Votes: support for voting and vote delegation. ERC20Wrapper: wrapper to create an ERC-20 backed by another ERC-20, with deposit and withdraw methods. Useful in conjunction with ERC20Votes. ERC20TemporaryApproval: support for approvals lasting for only one transaction, as defined in ERC-7674. ERC1363: support for calling the target of a transfer or approval, enabling code execution on the receiver within a single transaction. ERC4626: tokenized vault that manages shares (represented as ERC-20) that are backed by assets (another ERC-20). Finally, there are some utilities to interact with ERC-20 contracts in various ways: SafeERC20: a wrapper around the interface that eliminates the need to handle boolean return values. Other utilities that support ERC-20 assets can be found in codebase: ERC-20 tokens can be timelocked (held tokens for a beneficiary until a specified time) or vested (released following a given schedule) using a VestingWallet. This core set of contracts is designed to be unopinionated, allowing developers to access the internal functions in ERC-20 (such as _mint) and expose them as external functions in the way they prefer. import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; Interface of the ERC-20 standard as defined in the ERC. Functions totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) Events Transfer(from, to, value) Approval(owner, spender, value) Returns the value of tokens in existence. Returns the value of tokens owned by account. Moves a value amount of tokens from the caller’s account to to. Returns a boolean value indicating whether the operation succeeded. Emits a transfer event. Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom. This is zero by default. This value changes when approve or transferFrom are called. Sets a value amount of tokens as the allowance of spender over the caller’s tokens. Returns a boolean value indicating whether the operation succeeded. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender’s allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an Approval event. Moves a value amount of tokens from from to to using the allowance mechanism. value is then deducted from the caller’s allowance. Returns a boolean value indicating whether the operation succeeded. Emits a transfer event. Emitted when value tokens are moved from one account (from) to another (to). Note that value may be zero. Emitted when the allowance of a spender for an owner is set by a call to approve. value is the new allowance. import \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\"; Interface for the optional metadata functions from the ERC-20 standard. Functions name() symbol() decimals() IERC20 totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Returns the name of the token. Returns the symbol of the token. Returns the decimals places of the token. import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; Implementation of the IERC20 interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using _mint. For a detailed writeup see our guide How to implement supply mechanisms. The default value of decimals is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning false on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications. Functions constructor(name_, symbol_) name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Sets the values for name and symbol. All two of these values are immutable: they can only be set once during construction. Returns the name of the token. Returns the symbol of the token, usually a shorter version of the name. Returns the number of decimals used to get its user representation. For example, if decimals equals 2, a balance of 505 tokens should be displayed to a user as 5.05 (505 / 10 ** 2). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it’s overridden. This information is only used for display purposes: it in no way affects any of the arithmetic of the contract, including IERC20.balanceOf and IERC20.transfer. See IERC20.totalSupply. See IERC20.balanceOf. See IERC20.transfer. Requirements: to cannot be the zero address. the caller must have a balance of at least value. See IERC20.allowance. See IERC20.approve. If value is the maximum uint256, the allowance is not updated on transferFrom. This is semantically equivalent to an infinite approval. Requirements: spender cannot be the zero address. See IERC20.transferFrom. Skips emitting an Approval event indicating an allowance update. This is not required by the ERC. See _approve. Does not update the allowance if the current allowance is the maximum uint256. Requirements: from and to cannot be the zero address. from must have a balance of at least value. the caller must have allowance for from's tokens of at least value. Moves a value amount of tokens from from to to. This internal function is equivalent to transfer, and can be used to e.g. implement automatic token fees, slashing mechanisms, etc. Emits a transfer event. This function is not virtual, _update should be overridden instead. Transfers a value amount of tokens from from to to, or alternatively mints (or burns) if from (or to) is the zero address. All customizations to transfers, mints, and burns should be done by overriding this function. Emits a transfer event. Creates a value amount of tokens and assigns them to account, by transferring it from address(0). Relies on the _update mechanism Emits a transfer event with from set to the zero address. This function is not virtual, _update should be overridden instead. Destroys a value amount of tokens from account, lowering the total supply. Relies on the _update mechanism. Emits a transfer event with to set to the zero address. This function is not virtual, _update should be overridden instead Sets value as the allowance of spender over the owner s tokens. This internal function is equivalent to approve, and can be used to e.g. set automatic allowances for certain subsystems, etc. Emits an Approval event. Requirements: owner cannot be the zero address. spender cannot be the zero address. Overrides to this logic should be done to the variant with an additional bool emitEvent argument. Variant of _approve with an optional flag to enable or disable the Approval event. By default (when calling _approve) the flag is set to true. On the other hand, approval changes made by _spendAllowance during the transferFrom operation set the flag to false. This saves gas by not emitting any Approval event during transferFrom operations. Anyone who wishes to continue emitting Approval events on the`transferFrom` operation can force the flag to true using the following override: function _approve(address owner, address spender, uint256 value, bool) internal virtual override { super._approve(owner, spender, value, true); } Requirements are the same as _approve. Updates owner s allowance for spender based on spent value. Does not update the allowance value in case of infinite allowance. Revert if not enough allowance is available. Does not emit an Approval event. import \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\"; Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in ERC-2612. Adds the permit method, which can be used to change an account’s ERC-20 allowance (see IERC20.allowance) by presenting a message signed by the account. By not relying on IERC20.approve, the token holder account doesn’t need to send a transaction, and thus is not required to hold Ether at all. There are two important considerations concerning the use of permit. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a permit call to fail. Combining these two aspects, a pattern that may be generally recommended is: function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public { try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {} doThing(..., value); } function doThing(..., uint256 value) public { token.safeTransferFrom(msg.sender, address(this), value); ... } Observe that: 1) msg.sender is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of try/catch allows the permit to fail and makes the code tolerant to frontrunning. (See also SafeERC20.safeTransferFrom). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don’t rely on permit. Functions permit(owner, spender, value, deadline, v, r, s) nonces(owner) DOMAIN_SEPARATOR() Sets value as the allowance of spender over owner's tokens, given owner's signed approval. The same issues IERC20.approve has related to transaction ordering also apply here. Emits an Approval event. Requirements: spender cannot be the zero address. deadline must be a timestamp in the future. v, r and s must be a valid secp256k1 signature from owner over the EIP712-formatted function arguments. the signature must use owner's current nonce (see nonces). For more information on the signature format, see the relevant EIP section. See Security Considerations above. Returns the current nonce for owner. This value must be included whenever a signature is generated for permit. Every successful call to permit increases owner's nonce by one. This prevents a signature from being used multiple times. Returns the domain separator used in the encoding of the signature for permit, as defined by EIP712. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\"; Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in ERC-2612. Adds the permit method, which can be used to change an account’s ERC-20 allowance (see IERC20.allowance) by presenting a message signed by the account. By not relying on IERC20.approve, the token holder account doesn’t need to send a transaction, and thus is not required to hold Ether at all. Functions constructor(name) permit(owner, spender, value, deadline, v, r, s) nonces(owner) DOMAIN_SEPARATOR() Nonces _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC5267 EIP712DomainChanged() IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC2612ExpiredSignature(deadline) ERC2612InvalidSigner(signer, owner) Nonces InvalidAccountNonce(account, currentNonce) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Initializes the EIP712 domain separator using the name parameter, and setting version to \"1\". It’s a good idea to use the same name that is defined as the ERC-20 token name. Sets value as the allowance of spender over owner's tokens, given owner's signed approval. The same issues IERC20.approve has related to transaction ordering also apply here. Emits an Approval event. Requirements: spender cannot be the zero address. deadline must be a timestamp in the future. v, r and s must be a valid secp256k1 signature from owner over the EIP712-formatted function arguments. the signature must use owner's current nonce (see nonces). For more information on the signature format, see the relevant EIP section. See Security Considerations above. Returns the current nonce for owner. This value must be included whenever a signature is generated for permit. Every successful call to permit increases owner's nonce by one. This prevents a signature from being used multiple times. Returns the domain separator used in the encoding of the signature for permit, as defined by EIP712. Permit deadline has expired. Mismatched signature. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\"; Extension of ERC20 that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis). Functions burn(value) burnFrom(account, value) ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Destroys a value amount of tokens from the caller. See ERC20._burn. Destroys a value amount of tokens from account, deducting from the caller’s allowance. See ERC20._burn and ERC20.allowance. Requirements: the caller must have allowance for accounts's tokens of at least value. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\"; Extension of ERC20 that adds a cap to the supply of tokens. Functions constructor(cap_) cap() _update(from, to, value) ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC20ExceededCap(increasedSupply, cap) ERC20InvalidCap(cap) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Sets the value of the cap. This value is immutable, it can only be set once during construction. Returns the cap on the token’s total supply. See ERC20._update. Total supply cap has been exceeded. The supplied cap is not a valid cap. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\"; ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the Pausable._pause and Pausable._unpause internal functions, with appropriate access control, e.g. using AccessControl or Ownable. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable. Functions _update(from, to, value) Pausable paused() _requireNotPaused() _requirePaused() _pause() _unpause() ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events Pausable Paused(account) Unpaused(account) IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors Pausable EnforcedPause() ExpectedPause() IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) See ERC20._update. Requirements: the contract must not be paused. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\"; Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound’s, and supports token supply up to 2208 - 1, while COMP is limited to 296 - 1. This contract does not provide interface compatibility with Compound’s COMP token. This extension keeps a history (checkpoints) of each account’s vote power. Vote power can be delegated either by calling the Votes.delegate function directly, or by providing a signature to be used with Votes.delegateBySig. Voting power can be queried through the public accessors Votes.getVotes and Votes.getPastVotes. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. Functions _maxSupply() _update(from, to, value) _getVotingUnits(account) numCheckpoints(account) checkpoints(account, pos) Votes clock() CLOCK_MODE() getVotes(account) getPastVotes(account, timepoint) getPastTotalSupply(timepoint) _getTotalSupply() delegates(account) delegate(delegatee) delegateBySig(delegatee, nonce, expiry, v, r, s) _delegate(account, delegatee) _transferVotingUnits(from, to, amount) _moveDelegateVotes(from, to, amount) _numCheckpoints(account) _checkpoints(account, pos) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IVotes DelegateChanged(delegator, fromDelegate, toDelegate) DelegateVotesChanged(delegate, previousVotes, newVotes) IERC5267 EIP712DomainChanged() IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC20ExceededSafeSupply(increasedSupply, cap) Votes ERC6372InconsistentClock() ERC5805FutureLookup(timepoint, clock) IVotes VotesExpiredSignature(expiry) Nonces InvalidAccountNonce(account, currentNonce) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Maximum token supply. Defaults to type(uint208).max (2208 - 1). This maximum is enforced in _update. It limits the total supply of the token, which is otherwise a uint256, so that checkpoints can be stored in the Trace208 structure used by Votes. Increasing this value will not remove the underlying limitation, and will cause _update to fail because of a math overflow in Votes._transferVotingUnits. An override could be used to further restrict the total supply (to a lower value) if additional logic requires it. When resolving override conflicts on this function, the minimum should be returned. Move voting power when tokens are transferred. Emits a IVotes.DelegateVotesChanged event. Returns the voting units of an account. Overriding this function may compromise the internal vote accounting. ERC20Votes assumes tokens map to voting units 1:1 and this is not easy to change. Get number of checkpoints for account. Get the pos-th checkpoint for account. Total supply cap has been exceeded, introducing a risk of votes overflowing. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Wrapper.sol\"; Extension of the ERC-20 token contract to support token wrapping. Users can deposit and withdraw \"underlying tokens\" and receive a matching number of \"wrapped tokens\". This is useful in conjunction with other modules. For example, combining this wrapping mechanism with ERC20Votes will allow the wrapping of an existing \"basic\" ERC-20 into a governance token. Any mechanism in which the underlying token changes the balanceOf of an account without an explicit transfer may desynchronize this contract’s supply and its underlying balance. Please exercise caution when wrapping tokens that may undercollateralize the wrapper (i.e. wrapper’s total supply is higher than its underlying balance). See _recover for recovering value accrued to the wrapper. Functions constructor(underlyingToken) decimals() underlying() depositFor(account, value) withdrawTo(account, value) _recover(account) ERC20 name() symbol() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC20InvalidUnderlying(token) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) See ERC20.decimals. Returns the address of the underlying ERC-20 token that is being wrapped. Allow a user to deposit underlying tokens and mint the corresponding number of wrapped tokens. Allow a user to burn a number of wrapped tokens and withdraw the corresponding number of underlying tokens. Mint wrapped token to cover any underlyingTokens that would have been transferred by mistake or acquired from rebasing mechanisms. Internal function that can be exposed with access control if desired. The underlying token couldn’t be wrapped. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\"; Implementation of the ERC-3156 Flash loans extension, as defined in ERC-3156. Adds the flashLoan method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding flashFee. When this extension is used along with the ERC20Capped or ERC20Votes extensions, maxFlashLoan will not correctly reflect the maximum that can be flash minted. We recommend overriding maxFlashLoan so that it correctly reflects the supply cap. Functions maxFlashLoan(token) flashFee(token, value) _flashFee(token, value) _flashFeeReceiver() flashLoan(receiver, token, value, data) ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC3156UnsupportedToken(token) ERC3156ExceededMaxLoan(maxLoan) ERC3156InvalidReceiver(receiver) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Returns the maximum amount of tokens available for loan. Returns the fee applied when doing flash loans. This function calls the _flashFee function which returns the fee applied when doing flash loans. Returns the fee applied when doing flash loans. By default this implementation has 0 fees. This function can be overloaded to make the flash loan mechanism deflationary. Returns the receiver address of the flash fee. By default this implementation returns the address(0) which means the fee amount will be burnt. This function can be overloaded to change the fee receiver. Performs a flash loan. New tokens are minted and sent to the receiver, who is required to implement the IERC3156FlashBorrower interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned. The loan token is not valid. The requested loan exceeds the max loan value for token. The receiver of a flashloan is not a valid IERC3156FlashBorrower.onFlashLoan implementer. import \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20TemporaryApproval.sol\"; Extension of ERC20 that adds support for temporary allowances following ERC-7674. This is a draft contract. The corresponding ERC is still subject to changes. Functions allowance(owner, spender) _temporaryAllowance(owner, spender) temporaryApprove(spender, value) _temporaryApprove(owner, spender, value) _spendAllowance(owner, spender, value) ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) allowance override that includes the temporary allowance when looking up the current allowance. If adding up the persistent and the temporary allowances result in an overflow, type(uint256).max is returned. Internal getter for the current temporary allowance that spender has over owner tokens. Alternative to approve that sets a value amount of tokens as the temporary allowance of spender over the caller’s tokens. Returns a boolean value indicating whether the operation succeeded. Requirements: - spender cannot be the zero address. Does NOT emit an Approval event. Sets value as the temporary allowance of spender over the owner s tokens. This internal function is equivalent to temporaryApprove, and can be used to e.g. set automatic allowances for certain subsystems, etc. Requirements: - owner cannot be the zero address. - spender cannot be the zero address. Does NOT emit an Approval event. _spendAllowance override that consumes the temporary allowance (if any) before eventually falling back to consuming the persistent allowance. NOTE: This function skips calling super._spendAllowance if the temporary allowance is enough to cover the spending. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol\"; Extension of ERC20 tokens that adds support for code execution after transfers and approvals on recipient contracts. Calls after transfers are enabled through the ERC1363.transferAndCall and ERC1363.transferFromAndCall methods while calls after approvals can be made with ERC1363.approveAndCall Functions supportsInterface(interfaceId) transferAndCall(to, value) transferAndCall(to, value, data) transferFromAndCall(from, to, value) transferFromAndCall(from, to, value, data) approveAndCall(spender, value) approveAndCall(spender, value, data) ERC20 name() symbol() decimals() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC1363TransferFailed(receiver, value) ERC1363TransferFromFailed(sender, receiver, value) ERC1363ApproveFailed(spender, value) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Returns true if this contract implements the interface defined by interfaceId. See the corresponding ERC section to learn more about how these ids are created. This function call must use less than 30 000 gas. Moves a value amount of tokens from the caller’s account to to and then calls IERC1363Receiver.onTransferReceived on to. Requirements: The target has code (i.e. is a contract). The target to must implement the IERC1363Receiver interface. The target must return the IERC1363Receiver.onTransferReceived selector to accept the transfer. The internal transfer must succeed (returned true). Variant of transferAndCall that accepts an additional data parameter with no specified format. Moves a value amount of tokens from from to to using the allowance mechanism and then calls IERC1363Receiver.onTransferReceived on to. Requirements: The target has code (i.e. is a contract). The target to must implement the IERC1363Receiver interface. The target must return the IERC1363Receiver.onTransferReceived selector to accept the transfer. The internal transferFrom must succeed (returned true). Variant of transferFromAndCall that accepts an additional data parameter with no specified format. Sets a value amount of tokens as the allowance of spender over the caller’s tokens and then calls IERC1363Spender.onApprovalReceived on spender. Requirements: The target has code (i.e. is a contract). The target spender must implement the IERC1363Spender interface. The target must return the IERC1363Spender.onApprovalReceived selector to accept the approval. The internal approve must succeed (returned true). Variant of approveAndCall that accepts an additional data parameter with no specified format. Indicates a failure within the transfer part of a transferAndCall operation. Indicates a failure within the transferFrom part of a transferFromAndCall operation. Indicates a failure within the approve part of a approveAndCall operation. import \"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\"; Implementation of the ERC-4626 \"Tokenized Vault Standard\" as defined in ERC-4626. This extension allows the minting and burning of \"shares\" (represented using the ERC-20 inheritance) in exchange for underlying \"assets\" through standardized deposit, mint, redeem and burn workflows. This contract extends the ERC-20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this contract and not the \"assets\" token which is an independent contract. In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by verifying the amount received is as expected, using a wrapper that performs these checks such as ERC4626Router. Since v4.9, this implementation introduces configurable virtual assets and shares to help developers mitigate that risk. The _decimalsOffset() corresponds to an offset in the decimal representation between the underlying asset’s decimals and the vault decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset (0) makes it non-profitable even if an attacker is able to capture value from multiple user deposits, as a result of the value being captured by the virtual shares (out of the attacker’s donation) matching the attacker’s expected gains. With a larger offset, the attack becomes orders of magnitude more expensive than it is profitable. More details about the underlying math can be found here. The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets will cause the first user to exit to experience reduced losses in detriment to the last users that will experience bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the _convertToShares and _convertToAssets functions. To learn more, check out our ERC-4626 guide. Functions constructor(asset_) decimals() asset() totalAssets() convertToShares(assets) convertToAssets(shares) maxDeposit() maxMint() maxWithdraw(owner) maxRedeem(owner) previewDeposit(assets) previewMint(shares) previewWithdraw(assets) previewRedeem(shares) deposit(assets, receiver) mint(shares, receiver) withdraw(assets, receiver, owner) redeem(shares, receiver, owner) _convertToShares(assets, rounding) _convertToAssets(shares, rounding) _deposit(caller, receiver, assets, shares) _withdraw(caller, receiver, owner, assets, shares) _decimalsOffset() ERC20 name() symbol() totalSupply() balanceOf(account) transfer(to, value) allowance(owner, spender) approve(spender, value) transferFrom(from, to, value) _transfer(from, to, value) _update(from, to, value) _mint(account, value) _burn(account, value) _approve(owner, spender, value) _approve(owner, spender, value, emitEvent) _spendAllowance(owner, spender, value) Events IERC4626 Deposit(sender, owner, assets, shares) Withdraw(sender, receiver, owner, assets, shares) IERC20 Transfer(from, to, value) Approval(owner, spender, value) Errors ERC4626ExceededMaxDeposit(receiver, assets, max) ERC4626ExceededMaxMint(receiver, shares, max) ERC4626ExceededMaxWithdraw(owner, assets, max) ERC4626ExceededMaxRedeem(owner, shares, max) IERC20Errors ERC20InsufficientBalance(sender, balance, needed) ERC20InvalidSender(sender) ERC20InvalidReceiver(receiver) ERC20InsufficientAllowance(spender, allowance, needed) ERC20InvalidApprover(approver) ERC20InvalidSpender(spender) Set the underlying asset contract. This must be an ERC20-compatible contract (ERC-20 or ERC-777). Decimals are computed by adding the decimal offset on top of the underlying asset’s decimals. This \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset’s decimals. See IERC20Metadata.decimals. See IERC4626.asset. See IERC4626.totalAssets. See IERC4626.convertToShares. See IERC4626.convertToAssets. See IERC4626.maxDeposit. See IERC4626.maxMint. See IERC4626.maxWithdraw. See IERC4626.maxRedeem. See IERC4626.previewDeposit. See IERC4626.previewMint. See IERC4626.previewWithdraw. See IERC4626.previewRedeem. See IERC4626.deposit. See IERC4626.mint. See IERC4626.withdraw. See IERC4626.redeem. Internal conversion function (from assets to shares) with support for rounding direction. Internal conversion function (from shares to assets) with support for rounding direction. Deposit/mint common workflow. Withdraw/redeem common workflow. Attempted to deposit more assets than the max amount for receiver. Attempted to mint more shares than the max amount for receiver. Attempted to withdraw more assets than the max amount for receiver. Attempted to redeem more shares than the max amount for receiver. import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"; Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a using SafeERC20 for IERC20; statement to your contract, which allows you to call the safe operations as token.safeTransfer(…​), etc. Functions safeTransfer(token, to, value) safeTransferFrom(token, from, to, value) safeIncreaseAllowance(token, spender, value) safeDecreaseAllowance(token, spender, requestedDecrease) forceApprove(token, spender, value) transferAndCallRelaxed(token, to, value, data) transferFromAndCallRelaxed(token, from, to, value, data) approveAndCallRelaxed(token, to, value, data) Errors SafeERC20FailedOperation(token) SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease) Transfer value amount of token from the calling contract to to. If token returns no value, non-reverting calls are assumed to be successful. Transfer value amount of token from from to to, spending the approval given by from to the calling contract. If token returns no value, non-reverting calls are assumed to be successful. Increase the calling contract’s allowance toward spender by value. If token returns no value, non-reverting calls are assumed to be successful. Decrease the calling contract’s allowance toward spender by requestedDecrease. If token returns no value, non-reverting calls are assumed to be successful. Set the calling contract’s allowance toward spender to value. If token returns no value, non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval to be set to zero before setting it to a non-zero value, such as USDT. Performs an ERC1363 transferAndCall, with a fallback to the simple ERC20 transfer if the target has no code. This can be used to implement an ERC721-like safe transfer that rely on ERC1363 checks when targeting contracts. Reverts if the returned value is other than true. Performs an ERC1363 transferFromAndCall, with a fallback to the simple ERC20 transferFrom if the target has no code. This can be used to implement an ERC721-like safe transfer that rely on ERC1363 checks when targeting contracts. Reverts if the returned value is other than true. Performs an ERC1363 approveAndCall, with a fallback to the simple ERC20 approve if the target has no code. This can be used to implement an ERC721-like safe transfer that rely on ERC1363 checks when targeting contracts. When the recipient address (to) has no code (i.e. is an EOA), this function behaves as forceApprove. Opposedly, when the recipient address (to) has code, this function only attempts to call ERC1363.approveAndCall once without retrying, and relies on the returned value to be true. Reverts if the returned value is other than true. An operation with an ERC-20 token failed. Indicates a failed decreaseAllowance request. import \"@openzeppelin/contracts/token/ERC20/utils/ERC1363Utils.sol\"; Library that provides common ERC-1363 utility functions. See ERC-1363. Functions checkOnERC1363TransferReceived(operator, from, to, value, data) checkOnERC1363ApprovalReceived(operator, spender, value, data) Errors ERC1363InvalidReceiver(receiver) ERC1363InvalidSpender(spender) Performs a call to IERC1363Receiver.onTransferReceived on a target address. Requirements: The target has code (i.e. is a contract). The target to must implement the IERC1363Receiver interface. The target must return the IERC1363Receiver.onTransferReceived selector to accept the transfer. Performs a call to IERC1363Spender.onApprovalReceived on a target address. Requirements: The target has code (i.e. is a contract). The target spender must implement the IERC1363Spender interface. The target must return the IERC1363Spender.onApprovalReceived selector to accept the approval. Indicates a failure with the token receiver. Used in transfers. Indicates a failure with the token spender. Used in approvals. ← Common (Tokens) ERC 721 →","title":"ERC-20","component":"contracts","version":"5.x","name":"ERC20","url":"/contracts/5.x/api/token/ERC20.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"IERC20 ","hash":"IERC20","id":2},{"text":"totalSupply() → uint256 external","hash":"IERC20-totalSupply--","id":3},{"text":"balanceOf(address account) → uint256 external","hash":"IERC20-balanceOf-address-","id":4},{"text":"transfer(address to, uint256 value) → bool external","hash":"IERC20-transfer-address-uint256-","id":5},{"text":"allowance(address owner, address spender) → uint256 external","hash":"IERC20-allowance-address-address-","id":6},{"text":"approve(address spender, uint256 value) → bool external","hash":"IERC20-approve-address-uint256-","id":7},{"text":"transferFrom(address from, address to, uint256 value) → bool external","hash":"IERC20-transferFrom-address-address-uint256-","id":8},{"text":"Transfer(address indexed from, address indexed to, uint256 value) event","hash":"IERC20-Transfer-address-address-uint256-","id":9},{"text":"Approval(address indexed owner, address indexed spender, uint256 value) event","hash":"IERC20-Approval-address-address-uint256-","id":10},{"text":"IERC20Metadata ","hash":"IERC20Metadata","id":11},{"text":"name() → string external","hash":"IERC20Metadata-name--","id":12},{"text":"symbol() → string external","hash":"IERC20Metadata-symbol--","id":13},{"text":"decimals() → uint8 external","hash":"IERC20Metadata-decimals--","id":14},{"text":"ERC20 ","hash":"ERC20","id":15},{"text":"constructor(string name_, string symbol_) internal","hash":"ERC20-constructor-string-string-","id":16},{"text":"name() → string public","hash":"ERC20-name--","id":17},{"text":"symbol() → string public","hash":"ERC20-symbol--","id":18},{"text":"decimals() → uint8 public","hash":"ERC20-decimals--","id":19},{"text":"totalSupply() → uint256 public","hash":"ERC20-totalSupply--","id":20},{"text":"balanceOf(address account) → uint256 public","hash":"ERC20-balanceOf-address-","id":21},{"text":"transfer(address to, uint256 value) → bool public","hash":"ERC20-transfer-address-uint256-","id":22},{"text":"allowance(address owner, address spender) → uint256 public","hash":"ERC20-allowance-address-address-","id":23},{"text":"approve(address spender, uint256 value) → bool public","hash":"ERC20-approve-address-uint256-","id":24},{"text":"transferFrom(address from, address to, uint256 value) → bool public","hash":"ERC20-transferFrom-address-address-uint256-","id":25},{"text":"_transfer(address from, address to, uint256 value) internal","hash":"ERC20-_transfer-address-address-uint256-","id":26},{"text":"_update(address from, address to, uint256 value) internal","hash":"ERC20-_update-address-address-uint256-","id":27},{"text":"_mint(address account, uint256 value) internal","hash":"ERC20-_mint-address-uint256-","id":28},{"text":"_burn(address account, uint256 value) internal","hash":"ERC20-_burn-address-uint256-","id":29},{"text":"_approve(address owner, address spender, uint256 value) internal","hash":"ERC20-_approve-address-address-uint256-","id":30},{"text":"_approve(address owner, address spender, uint256 value, bool emitEvent) internal","hash":"ERC20-_approve-address-address-uint256-bool-","id":31},{"text":"_spendAllowance(address owner, address spender, uint256 value) internal","hash":"ERC20-_spendAllowance-address-address-uint256-","id":32},{"text":"Extensions","hash":"extensions","id":33},{"text":"IERC20Permit ","hash":"IERC20Permit","id":34},{"text":"Security Considerations","hash":"security_considerations","id":35},{"text":"permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external","hash":"IERC20Permit-permit-address-address-uint256-uint256-uint8-bytes32-bytes32-","id":36},{"text":"nonces(address owner) → uint256 external","hash":"IERC20Permit-nonces-address-","id":37},{"text":"DOMAIN_SEPARATOR() → bytes32 external","hash":"IERC20Permit-DOMAIN_SEPARATOR--","id":38},{"text":"ERC20Permit ","hash":"ERC20Permit","id":39},{"text":"constructor(string name) internal","hash":"ERC20Permit-constructor-string-","id":40},{"text":"permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public","hash":"ERC20Permit-permit-address-address-uint256-uint256-uint8-bytes32-bytes32-","id":41},{"text":"nonces(address owner) → uint256 public","hash":"ERC20Permit-nonces-address-","id":42},{"text":"DOMAIN_SEPARATOR() → bytes32 external","hash":"ERC20Permit-DOMAIN_SEPARATOR--","id":43},{"text":"ERC2612ExpiredSignature(uint256 deadline) error","hash":"ERC20Permit-ERC2612ExpiredSignature-uint256-","id":44},{"text":"ERC2612InvalidSigner(address signer, address owner) error","hash":"ERC20Permit-ERC2612InvalidSigner-address-address-","id":45},{"text":"ERC20Burnable ","hash":"ERC20Burnable","id":46},{"text":"burn(uint256 value) public","hash":"ERC20Burnable-burn-uint256-","id":47},{"text":"burnFrom(address account, uint256 value) public","hash":"ERC20Burnable-burnFrom-address-uint256-","id":48},{"text":"ERC20Capped ","hash":"ERC20Capped","id":49},{"text":"constructor(uint256 cap_) internal","hash":"ERC20Capped-constructor-uint256-","id":50},{"text":"cap() → uint256 public","hash":"ERC20Capped-cap--","id":51},{"text":"_update(address from, address to, uint256 value) internal","hash":"ERC20Capped-_update-address-address-uint256-","id":52},{"text":"ERC20ExceededCap(uint256 increasedSupply, uint256 cap) error","hash":"ERC20Capped-ERC20ExceededCap-uint256-uint256-","id":53},{"text":"ERC20InvalidCap(uint256 cap) error","hash":"ERC20Capped-ERC20InvalidCap-uint256-","id":54},{"text":"ERC20Pausable ","hash":"ERC20Pausable","id":55},{"text":"_update(address from, address to, uint256 value) internal","hash":"ERC20Pausable-_update-address-address-uint256-","id":56},{"text":"ERC20Votes ","hash":"ERC20Votes","id":57},{"text":"_maxSupply() → uint256 internal","hash":"ERC20Votes-_maxSupply--","id":58},{"text":"_update(address from, address to, uint256 value) internal","hash":"ERC20Votes-_update-address-address-uint256-","id":59},{"text":"_getVotingUnits(address account) → uint256 internal","hash":"ERC20Votes-_getVotingUnits-address-","id":60},{"text":"numCheckpoints(address account) → uint32 public","hash":"ERC20Votes-numCheckpoints-address-","id":61},{"text":"checkpoints(address account, uint32 pos) → struct Checkpoints.Checkpoint208 public","hash":"ERC20Votes-checkpoints-address-uint32-","id":62},{"text":"ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap) error","hash":"ERC20Votes-ERC20ExceededSafeSupply-uint256-uint256-","id":63},{"text":"ERC20Wrapper ","hash":"ERC20Wrapper","id":64},{"text":"constructor(contract IERC20 underlyingToken) internal","hash":"ERC20Wrapper-constructor-contract-IERC20-","id":65},{"text":"decimals() → uint8 public","hash":"ERC20Wrapper-decimals--","id":66},{"text":"underlying() → contract IERC20 public","hash":"ERC20Wrapper-underlying--","id":67},{"text":"depositFor(address account, uint256 value) → bool public","hash":"ERC20Wrapper-depositFor-address-uint256-","id":68},{"text":"withdrawTo(address account, uint256 value) → bool public","hash":"ERC20Wrapper-withdrawTo-address-uint256-","id":69},{"text":"_recover(address account) → uint256 internal","hash":"ERC20Wrapper-_recover-address-","id":70},{"text":"ERC20InvalidUnderlying(address token) error","hash":"ERC20Wrapper-ERC20InvalidUnderlying-address-","id":71},{"text":"ERC20FlashMint ","hash":"ERC20FlashMint","id":72},{"text":"maxFlashLoan(address token) → uint256 public","hash":"ERC20FlashMint-maxFlashLoan-address-","id":73},{"text":"flashFee(address token, uint256 value) → uint256 public","hash":"ERC20FlashMint-flashFee-address-uint256-","id":74},{"text":"_flashFee(address token, uint256 value) → uint256 internal","hash":"ERC20FlashMint-_flashFee-address-uint256-","id":75},{"text":"_flashFeeReceiver() → address internal","hash":"ERC20FlashMint-_flashFeeReceiver--","id":76},{"text":"flashLoan(contract IERC3156FlashBorrower receiver, address token, uint256 value, bytes data) → bool public","hash":"ERC20FlashMint-flashLoan-contract-IERC3156FlashBorrower-address-uint256-bytes-","id":77},{"text":"ERC3156UnsupportedToken(address token) error","hash":"ERC20FlashMint-ERC3156UnsupportedToken-address-","id":78},{"text":"ERC3156ExceededMaxLoan(uint256 maxLoan) error","hash":"ERC20FlashMint-ERC3156ExceededMaxLoan-uint256-","id":79},{"text":"ERC3156InvalidReceiver(address receiver) error","hash":"ERC20FlashMint-ERC3156InvalidReceiver-address-","id":80},{"text":"ERC20TemporaryApproval ","hash":"ERC20TemporaryApproval","id":81},{"text":"allowance(address owner, address spender) → uint256 public","hash":"ERC20TemporaryApproval-allowance-address-address-","id":82},{"text":"_temporaryAllowance(address owner, address spender) → uint256 internal","hash":"ERC20TemporaryApproval-_temporaryAllowance-address-address-","id":83},{"text":"temporaryApprove(address spender, uint256 value) → bool public","hash":"ERC20TemporaryApproval-temporaryApprove-address-uint256-","id":84},{"text":"_temporaryApprove(address owner, address spender, uint256 value) internal","hash":"ERC20TemporaryApproval-_temporaryApprove-address-address-uint256-","id":85},{"text":"_spendAllowance(address owner, address spender, uint256 value) internal","hash":"ERC20TemporaryApproval-_spendAllowance-address-address-uint256-","id":86},{"text":"ERC1363 ","hash":"ERC1363","id":87},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC1363-supportsInterface-bytes4-","id":88},{"text":"transferAndCall(address to, uint256 value) → bool public","hash":"ERC1363-transferAndCall-address-uint256-","id":89},{"text":"transferAndCall(address to, uint256 value, bytes data) → bool public","hash":"ERC1363-transferAndCall-address-uint256-bytes-","id":90},{"text":"transferFromAndCall(address from, address to, uint256 value) → bool public","hash":"ERC1363-transferFromAndCall-address-address-uint256-","id":91},{"text":"transferFromAndCall(address from, address to, uint256 value, bytes data) → bool public","hash":"ERC1363-transferFromAndCall-address-address-uint256-bytes-","id":92},{"text":"approveAndCall(address spender, uint256 value) → bool public","hash":"ERC1363-approveAndCall-address-uint256-","id":93},{"text":"approveAndCall(address spender, uint256 value, bytes data) → bool public","hash":"ERC1363-approveAndCall-address-uint256-bytes-","id":94},{"text":"ERC1363TransferFailed(address receiver, uint256 value) error","hash":"ERC1363-ERC1363TransferFailed-address-uint256-","id":95},{"text":"ERC1363TransferFromFailed(address sender, address receiver, uint256 value) error","hash":"ERC1363-ERC1363TransferFromFailed-address-address-uint256-","id":96},{"text":"ERC1363ApproveFailed(address spender, uint256 value) error","hash":"ERC1363-ERC1363ApproveFailed-address-uint256-","id":97},{"text":"ERC4626 ","hash":"ERC4626","id":98},{"text":"constructor(contract IERC20 asset_) internal","hash":"ERC4626-constructor-contract-IERC20-","id":99},{"text":"decimals() → uint8 public","hash":"ERC4626-decimals--","id":100},{"text":"asset() → address public","hash":"ERC4626-asset--","id":101},{"text":"totalAssets() → uint256 public","hash":"ERC4626-totalAssets--","id":102},{"text":"convertToShares(uint256 assets) → uint256 public","hash":"ERC4626-convertToShares-uint256-","id":103},{"text":"convertToAssets(uint256 shares) → uint256 public","hash":"ERC4626-convertToAssets-uint256-","id":104},{"text":"maxDeposit(address) → uint256 public","hash":"ERC4626-maxDeposit-address-","id":105},{"text":"maxMint(address) → uint256 public","hash":"ERC4626-maxMint-address-","id":106},{"text":"maxWithdraw(address owner) → uint256 public","hash":"ERC4626-maxWithdraw-address-","id":107},{"text":"maxRedeem(address owner) → uint256 public","hash":"ERC4626-maxRedeem-address-","id":108},{"text":"previewDeposit(uint256 assets) → uint256 public","hash":"ERC4626-previewDeposit-uint256-","id":109},{"text":"previewMint(uint256 shares) → uint256 public","hash":"ERC4626-previewMint-uint256-","id":110},{"text":"previewWithdraw(uint256 assets) → uint256 public","hash":"ERC4626-previewWithdraw-uint256-","id":111},{"text":"previewRedeem(uint256 shares) → uint256 public","hash":"ERC4626-previewRedeem-uint256-","id":112},{"text":"deposit(uint256 assets, address receiver) → uint256 public","hash":"ERC4626-deposit-uint256-address-","id":113},{"text":"mint(uint256 shares, address receiver) → uint256 public","hash":"ERC4626-mint-uint256-address-","id":114},{"text":"withdraw(uint256 assets, address receiver, address owner) → uint256 public","hash":"ERC4626-withdraw-uint256-address-address-","id":115},{"text":"redeem(uint256 shares, address receiver, address owner) → uint256 public","hash":"ERC4626-redeem-uint256-address-address-","id":116},{"text":"_convertToShares(uint256 assets, enum Math.Rounding rounding) → uint256 internal","hash":"ERC4626-_convertToShares-uint256-enum-Math-Rounding-","id":117},{"text":"_convertToAssets(uint256 shares, enum Math.Rounding rounding) → uint256 internal","hash":"ERC4626-_convertToAssets-uint256-enum-Math-Rounding-","id":118},{"text":"_deposit(address caller, address receiver, uint256 assets, uint256 shares) internal","hash":"ERC4626-_deposit-address-address-uint256-uint256-","id":119},{"text":"_withdraw(address caller, address receiver, address owner, uint256 assets, uint256 shares) internal","hash":"ERC4626-_withdraw-address-address-address-uint256-uint256-","id":120},{"text":"_decimalsOffset() → uint8 internal","hash":"ERC4626-_decimalsOffset--","id":121},{"text":"ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max) error","hash":"ERC4626-ERC4626ExceededMaxDeposit-address-uint256-uint256-","id":122},{"text":"ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max) error","hash":"ERC4626-ERC4626ExceededMaxMint-address-uint256-uint256-","id":123},{"text":"ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max) error","hash":"ERC4626-ERC4626ExceededMaxWithdraw-address-uint256-uint256-","id":124},{"text":"ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max) error","hash":"ERC4626-ERC4626ExceededMaxRedeem-address-uint256-uint256-","id":125},{"text":"Utilities","hash":"utilities","id":126},{"text":"SafeERC20 ","hash":"SafeERC20","id":127},{"text":"safeTransfer(contract IERC20 token, address to, uint256 value) internal","hash":"SafeERC20-safeTransfer-contract-IERC20-address-uint256-","id":128},{"text":"safeTransferFrom(contract IERC20 token, address from, address to, uint256 value) internal","hash":"SafeERC20-safeTransferFrom-contract-IERC20-address-address-uint256-","id":129},{"text":"safeIncreaseAllowance(contract IERC20 token, address spender, uint256 value) internal","hash":"SafeERC20-safeIncreaseAllowance-contract-IERC20-address-uint256-","id":130},{"text":"safeDecreaseAllowance(contract IERC20 token, address spender, uint256 requestedDecrease) internal","hash":"SafeERC20-safeDecreaseAllowance-contract-IERC20-address-uint256-","id":131},{"text":"forceApprove(contract IERC20 token, address spender, uint256 value) internal","hash":"SafeERC20-forceApprove-contract-IERC20-address-uint256-","id":132},{"text":"transferAndCallRelaxed(contract IERC1363 token, address to, uint256 value, bytes data) internal","hash":"SafeERC20-transferAndCallRelaxed-contract-IERC1363-address-uint256-bytes-","id":133},{"text":"transferFromAndCallRelaxed(contract IERC1363 token, address from, address to, uint256 value, bytes data) internal","hash":"SafeERC20-transferFromAndCallRelaxed-contract-IERC1363-address-address-uint256-bytes-","id":134},{"text":"approveAndCallRelaxed(contract IERC1363 token, address to, uint256 value, bytes data) internal","hash":"SafeERC20-approveAndCallRelaxed-contract-IERC1363-address-uint256-bytes-","id":135},{"text":"SafeERC20FailedOperation(address token) error","hash":"SafeERC20-SafeERC20FailedOperation-address-","id":136},{"text":"SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease) error","hash":"SafeERC20-SafeERC20FailedDecreaseAllowance-address-uint256-uint256-","id":137},{"text":"ERC1363Utils ","hash":"ERC1363Utils","id":138},{"text":"checkOnERC1363TransferReceived(address operator, address from, address to, uint256 value, bytes data) internal","hash":"ERC1363Utils-checkOnERC1363TransferReceived-address-address-address-uint256-bytes-","id":139},{"text":"checkOnERC1363ApprovalReceived(address operator, address spender, uint256 value, bytes data) internal","hash":"ERC1363Utils-checkOnERC1363ApprovalReceived-address-address-uint256-bytes-","id":140},{"text":"ERC1363InvalidReceiver(address receiver) error","hash":"ERC1363Utils-ERC1363InvalidReceiver-address-","id":141},{"text":"ERC1363InvalidSpender(address spender) error","hash":"ERC1363Utils-ERC1363InvalidSpender-address-","id":142}]},"30":{"id":30,"text":"This document is better viewed at https://docs.openzeppelin.com/contracts/api/token/erc721 This set of interfaces, contracts, and utilities are all related to the ERC-721 Non-Fungible Token Standard. For a walk through on how to create an ERC-721 token read our ERC-721 guide. The ERC specifies four interfaces: IERC721: Core functionality required in all compliant implementation. IERC721Metadata: Optional extension that adds name, symbol, and token URI, almost always included. IERC721Enumerable: Optional extension that allows enumerating the tokens on chain, often not included since it requires large gas overhead. IERC721Receiver: An interface that must be implemented by contracts if they want to accept tokens through safeTransferFrom. OpenZeppelin Contracts provides implementations of all four interfaces: ERC721: The core and metadata extensions, with a base URI mechanism. ERC721Enumerable: The enumerable extension. ERC721Holder: A bare bones implementation of the receiver interface. Additionally there are a few of other extensions: ERC721Consecutive: An implementation of ERC-2309 for minting batchs of tokens during construction, in accordance with ERC-721. ERC721URIStorage: A more flexible but more expensive way of storing metadata. ERC721Votes: Support for voting and vote delegation. ERC721Royalty: A way to signal royalty information following ERC-2981. ERC721Pausable: A primitive to pause contract operation. ERC721Burnable: A way for token holders to burn their own tokens. ERC721Wrapper: Wrapper to create an ERC-721 backed by another ERC-721, with deposit and withdraw methods. Useful in conjunction with ERC721Votes. This core set of contracts is designed to be unopinionated, allowing developers to access the internal functions in ERC-721 (such as _mint) and expose them as external functions in the way they prefer. import \"@openzeppelin/contracts/token/ERC721/IERC721.sol\"; Required interface of an ERC-721 compliant contract. Functions balanceOf(owner) ownerOf(tokenId) safeTransferFrom(from, to, tokenId, data) safeTransferFrom(from, to, tokenId) transferFrom(from, to, tokenId) approve(to, tokenId) setApprovalForAll(operator, approved) getApproved(tokenId) isApprovedForAll(owner, operator) IERC165 supportsInterface(interfaceId) Events Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Returns the number of tokens in owner's account. Returns the owner of the tokenId token. Requirements: tokenId must exist. Safely transfers tokenId token from from to to. Requirements: from cannot be the zero address. to cannot be the zero address. tokenId token must exist and be owned by from. If the caller is not from, it must be approved to move this token by either approve or setApprovalForAll. If to refers to a smart contract, it must implement IERC721Receiver.onERC721Received, which is called upon a safe transfer. Emits a Transfer event. Safely transfers tokenId token from from to to, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: from cannot be the zero address. to cannot be the zero address. tokenId token must exist and be owned by from. If the caller is not from, it must have been allowed to move this token by either approve or setApprovalForAll. If to refers to a smart contract, it must implement IERC721Receiver.onERC721Received, which is called upon a safe transfer. Emits a Transfer event. Transfers tokenId token from from to to. Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of safeTransferFrom prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: from cannot be the zero address. to cannot be the zero address. tokenId token must be owned by from. If the caller is not from, it must be approved to move this token by either approve or setApprovalForAll. Emits a Transfer event. Gives permission to to to transfer tokenId token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: The caller must own the token or be an approved operator. tokenId must exist. Emits an Approval event. Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller. Requirements: The operator cannot be the address zero. Emits an ApprovalForAll event. Returns the account approved for tokenId token. Requirements: tokenId must exist. Returns if the operator is allowed to manage all of the assets of owner. See setApprovalForAll Emitted when tokenId token is transferred from from to to. Emitted when owner enables approved to manage the tokenId token. Emitted when owner enables or disables (approved) operator to manage all of its assets. import \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\"; See https://eips.ethereum.org/EIPS/eip-721 Functions name() symbol() tokenURI(tokenId) IERC721 balanceOf(owner) ownerOf(tokenId) safeTransferFrom(from, to, tokenId, data) safeTransferFrom(from, to, tokenId) transferFrom(from, to, tokenId) approve(to, tokenId) setApprovalForAll(operator, approved) getApproved(tokenId) isApprovedForAll(owner, operator) IERC165 supportsInterface(interfaceId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Returns the token collection name. Returns the token collection symbol. Returns the Uniform Resource Identifier (URI) for tokenId token. import \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\"; See https://eips.ethereum.org/EIPS/eip-721 Functions totalSupply() tokenOfOwnerByIndex(owner, index) tokenByIndex(index) IERC721 balanceOf(owner) ownerOf(tokenId) safeTransferFrom(from, to, tokenId, data) safeTransferFrom(from, to, tokenId) transferFrom(from, to, tokenId) approve(to, tokenId) setApprovalForAll(operator, approved) getApproved(tokenId) isApprovedForAll(owner, operator) IERC165 supportsInterface(interfaceId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Returns the total amount of tokens stored by the contract. Returns a token ID owned by owner at a given index of its token list. Use along with balanceOf to enumerate all of owner's tokens. Returns a token ID at a given index of all the tokens stored by the contract. Use along with totalSupply to enumerate all tokens. import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"; Implementation of ERC-721 Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as ERC721Enumerable. Functions constructor(name_, symbol_) supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _update(to, tokenId, auth) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) Initializes the contract by setting a name and a symbol to the token collection. See IERC165.supportsInterface. See IERC721.balanceOf. See IERC721.ownerOf. See IERC721Metadata.name. See IERC721Metadata.symbol. See IERC721Metadata.tokenURI. Base URI for computing tokenURI. If set, the resulting URI for each token will be the concatenation of the baseURI and the tokenId. Empty by default, can be overridden in child contracts. See IERC721.approve. See IERC721.getApproved. See IERC721.setApprovalForAll. See IERC721.isApprovedForAll. See IERC721.transferFrom. See IERC721.safeTransferFrom. See IERC721.safeTransferFrom. Returns the owner of the tokenId. Does NOT revert if token doesn’t exist Any overrides to this function that add ownership of tokens not tracked by the core ERC-721 logic MUST be matched with the use of _increaseBalance to keep balances consistent with ownership. The invariant to preserve is that for any address a the value returned by balanceOf(a) must be equal to the number of tokens such that _ownerOf(tokenId) is a. Returns the approved address for tokenId. Returns 0 if tokenId is not minted. Returns whether spender is allowed to manage owner’s tokens, or `tokenId in particular (ignoring whether it is owned by owner). This function assumes that owner is the actual owner of tokenId and does not verify this assumption. Checks if spender can operate on tokenId, assuming the provided owner is the actual owner. Reverts if: - spender does not have approval from owner for tokenId. - spender does not have approval to manage all of `owner’s assets. This function assumes that owner is the actual owner of tokenId and does not verify this assumption. Unsafe write access to the balances, used by extensions that \"mint\" tokens using an ownerOf override. the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that a uint256 would ever overflow from increments when these increments are bounded to uint128 values. Increasing an account’s balance using this function tends to be paired with an override of the _ownerOf function to resolve the ownership of the corresponding tokens so that balances and ownership remain consistent with one another. Transfers tokenId from its current owner to to, or alternatively mints (or burns) if the current owner (or to) is the zero address. Returns the owner of the tokenId before the update. The auth argument is optional. If the value passed is non 0, then this function will check that auth is either the owner of the token, or approved to operate on the token (by the owner). Emits a Transfer event. If overriding this function in a way that tracks balances, see also _increaseBalance. Mints tokenId and transfers it to to. Usage of this method is discouraged, use _safeMint whenever possible Requirements: tokenId must not exist. to cannot be the zero address. Emits a Transfer event. Mints tokenId, transfers it to to and checks for to acceptance. Requirements: tokenId must not exist. If to refers to a smart contract, it must implement IERC721Receiver.onERC721Received, which is called upon a safe transfer. Emits a Transfer event. Same as _safeMint, with an additional data parameter which is forwarded in IERC721Receiver.onERC721Received to contract recipients. Destroys tokenId. The approval is cleared when the token is burned. This is an internal function that does not check if the sender is authorized to operate on the token. Requirements: tokenId must exist. Emits a Transfer event. Transfers tokenId from from to to. As opposed to transferFrom, this imposes no restrictions on msg.sender. Requirements: to cannot be the zero address. tokenId token must be owned by from. Emits a Transfer event. Safely transfers tokenId token from from to to, checking that contract recipients are aware of the ERC-721 standard to prevent tokens from being forever locked. data is additional data, it has no specified format and it is sent in call to to. This internal function is like safeTransferFrom in the sense that it invokes IERC721Receiver.onERC721Received on the receiver, and can be used to e.g. implement alternative mechanisms to perform token transfer, such as signature-based. Requirements: tokenId token must exist and be owned by from. to cannot be the zero address. from cannot be the zero address. If to refers to a smart contract, it must implement IERC721Receiver.onERC721Received, which is called upon a safe transfer. Emits a Transfer event. Same as _safeTransfer, with an additional data parameter which is forwarded in IERC721Receiver.onERC721Received to contract recipients. Approve to to operate on tokenId The auth argument is optional. If the value passed is non 0, then this function will check that auth is either the owner of the token, or approved to operate on all tokens held by this owner. Emits an Approval event. Overrides to this logic should be done to the variant with an additional bool emitEvent argument. Variant of _approve with an optional flag to enable or disable the Approval event. The event is not emitted in the context of transfers. Approve operator to operate on all of owner tokens Requirements: - operator can’t be the address zero. Emits an ApprovalForAll event. Reverts if the tokenId doesn’t have a current owner (it hasn’t been minted, or it has been burned). Returns the owner. Overrides to ownership logic should be done to _ownerOf. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\"; This implements an optional extension of ERC721 defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. ERC721 extensions that implement custom balanceOf logic, such as ERC721Consecutive, interfere with enumerability and should not be used together with ERC721Enumerable. Functions supportsInterface(interfaceId) tokenOfOwnerByIndex(owner, index) totalSupply() tokenByIndex(index) _update(to, tokenId, auth) _increaseBalance(account, amount) ERC721 balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors ERC721OutOfBoundsIndex(owner, index) ERC721EnumerableForbiddenBatchMint() IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) See IERC165.supportsInterface. See IERC721Enumerable.tokenOfOwnerByIndex. See IERC721Enumerable.totalSupply. See IERC721Enumerable.tokenByIndex. See ERC721._update. An owner’s token query was out of bounds for `index. The owner being address(0) indicates a global out of bounds index. Batch mint is not allowed. import \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\"; Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts. Functions onERC721Received(operator, from, tokenId, data) Whenever an IERC721 tokenId token is transferred to this contract via IERC721.safeTransferFrom by operator from from, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with IERC721Receiver.onERC721Received.selector. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\"; ERC-721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the Pausable._pause and Pausable._unpause internal functions, with appropriate access control, e.g. using AccessControl or Ownable. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable. Functions _update(to, tokenId, auth) Pausable paused() _requireNotPaused() _requirePaused() _pause() _unpause() ERC721 supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events Pausable Paused(account) Unpaused(account) IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors Pausable EnforcedPause() ExpectedPause() IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) See ERC721._update. Requirements: the contract must not be paused. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\"; ERC-721 Token that can be burned (destroyed). Functions burn(tokenId) ERC721 supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _update(to, tokenId, auth) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) Burns tokenId. See ERC721._burn. Requirements: The caller must own tokenId or be an approved operator. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Consecutive.sol\"; Implementation of the ERC-2309 \"Consecutive Transfer Extension\" as defined in ERC-2309. This extension allows the minting of large batches of tokens, during contract construction only. For upgradeable contracts this implies that batch minting is only available during proxy deployment, and not in subsequent upgrades. These batches are limited to 5000 tokens at a time by default to accommodate off-chain indexers. Using this extension removes the ability to mint single tokens during contract construction. This ability is regained after construction. During construction, only batch minting is allowed. This extension does not call the _update function for tokens minted in batch. Any logic added to this function through overrides will not be triggered when token are minted in batch. You may want to also override _increaseBalance or _mintConsecutive to account for these mints. When overriding _mintConsecutive, be careful about call ordering. ownerOf may return invalid values during the _mintConsecutive execution if the super call is not called first. To be safe, execute the super call before your custom logic. Functions _maxBatchSize() _ownerOf(tokenId) _mintConsecutive(to, batchSize) _update(to, tokenId, auth) _firstConsecutiveId() ERC721 supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) IERC2309 ConsecutiveTransfer(fromTokenId, toTokenId, fromAddress, toAddress) Errors ERC721ForbiddenBatchMint() ERC721ExceededMaxBatchMint(batchSize, maxBatch) ERC721ForbiddenMint() ERC721ForbiddenBatchBurn() IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) Maximum size of a batch of consecutive tokens. This is designed to limit stress on off-chain indexing services that have to record one entry per token, and have protections against \"unreasonably large\" batches of tokens. Overriding the default value of 5000 will not cause on-chain issues, but may result in the asset not being correctly supported by off-chain indexing services (including marketplaces). See ERC721._ownerOf. Override that checks the sequential ownership structure for tokens that have been minted as part of a batch, and not yet transferred. Mint a batch of tokens of length batchSize for to. Returns the token id of the first token minted in the batch; if batchSize is 0, returns the number of consecutive ids minted so far. Requirements: batchSize must not be greater than _maxBatchSize. The function is called in the constructor of the contract (directly or indirectly). Does not emit a Transfer event. This is ERC-721 compliant as long as it is done inside of the constructor, which is enforced by this function. Does not invoke onERC721Received on the receiver. Emits a IERC2309.ConsecutiveTransfer event. See ERC721._update. Override version that restricts normal minting to after construction. Using ERC721Consecutive prevents minting during construction in favor of _mintConsecutive. After construction, _mintConsecutive is no longer available and minting through _update becomes available. Used to offset the first token id in {_nextConsecutiveId} Batch mint is restricted to the constructor. Any batch mint not emitting the IERC721.Transfer event outside of the constructor is non ERC-721 compliant. Exceeds the max amount of mints per batch. Individual minting is not allowed. Batch burn is not supported. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\"; ERC-721 token with storage based token URI management. Functions supportsInterface(interfaceId) tokenURI(tokenId) _setTokenURI(tokenId, _tokenURI) ERC721 balanceOf(owner) ownerOf(tokenId) name() symbol() _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _update(to, tokenId, auth) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC4906 MetadataUpdate(_tokenId) BatchMetadataUpdate(_fromTokenId, _toTokenId) IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) See IERC165.supportsInterface See IERC721Metadata.tokenURI. Sets _tokenURI as the tokenURI of tokenId. Emits {MetadataUpdate}. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\"; Extension of ERC-721 to support voting and delegation as implemented by Votes, where each individual NFT counts as 1 vote unit. Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of the votes in governance decisions, or they can delegate to themselves to be their own representative. Functions _update(to, tokenId, auth) _getVotingUnits(account) _increaseBalance(account, amount) Votes clock() CLOCK_MODE() getVotes(account) getPastVotes(account, timepoint) getPastTotalSupply(timepoint) _getTotalSupply() delegates(account) delegate(delegatee) delegateBySig(delegatee, nonce, expiry, v, r, s) _delegate(account, delegatee) _transferVotingUnits(from, to, amount) _moveDelegateVotes(from, to, amount) _numCheckpoints(account) _checkpoints(account, pos) Nonces nonces(owner) _useNonce(owner) _useCheckedNonce(owner, nonce) EIP712 _domainSeparatorV4() _hashTypedDataV4(structHash) eip712Domain() _EIP712Name() _EIP712Version() ERC721 supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IVotes DelegateChanged(delegator, fromDelegate, toDelegate) DelegateVotesChanged(delegate, previousVotes, newVotes) IERC5267 EIP712DomainChanged() IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors Votes ERC6372InconsistentClock() ERC5805FutureLookup(timepoint, clock) IVotes VotesExpiredSignature(expiry) Nonces InvalidAccountNonce(account, currentNonce) IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) See ERC721._update. Adjusts votes when tokens are transferred. Emits a IVotes.DelegateVotesChanged event. Returns the balance of account. Overriding this function will likely result in incorrect vote tracking. See ERC721._increaseBalance. We need that to account tokens that were minted in batch. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\"; Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via ERC2981._setDefaultRoyalty, and/or individually for specific token ids via ERC2981._setTokenRoyalty. The latter takes precedence over the first. ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See Rationale in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. Functions supportsInterface(interfaceId) ERC721 balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _update(to, tokenId, auth) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) ERC2981 royaltyInfo(tokenId, salePrice) _feeDenominator() _setDefaultRoyalty(receiver, feeNumerator) _deleteDefaultRoyalty() _setTokenRoyalty(tokenId, receiver, feeNumerator) _resetTokenRoyalty(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) ERC2981 ERC2981InvalidDefaultRoyalty(numerator, denominator) ERC2981InvalidDefaultRoyaltyReceiver(receiver) ERC2981InvalidTokenRoyalty(tokenId, numerator, denominator) ERC2981InvalidTokenRoyaltyReceiver(tokenId, receiver) See IERC165.supportsInterface. import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Wrapper.sol\"; Extension of the ERC-721 token contract to support token wrapping. Users can deposit and withdraw an \"underlying token\" and receive a \"wrapped token\" with a matching tokenId. This is useful in conjunction with other modules. For example, combining this wrapping mechanism with ERC721Votes will allow the wrapping of an existing \"basic\" ERC-721 into a governance token. Functions constructor(underlyingToken) depositFor(account, tokenIds) withdrawTo(account, tokenIds) onERC721Received(, from, tokenId, ) _recover(account, tokenId) underlying() ERC721 supportsInterface(interfaceId) balanceOf(owner) ownerOf(tokenId) name() symbol() tokenURI(tokenId) _baseURI() approve(to, tokenId) getApproved(tokenId) setApprovalForAll(operator, approved) isApprovedForAll(owner, operator) transferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId) safeTransferFrom(from, to, tokenId, data) _ownerOf(tokenId) _getApproved(tokenId) _isAuthorized(owner, spender, tokenId) _checkAuthorized(owner, spender, tokenId) _increaseBalance(account, value) _update(to, tokenId, auth) _mint(to, tokenId) _safeMint(to, tokenId) _safeMint(to, tokenId, data) _burn(tokenId) _transfer(from, to, tokenId) _safeTransfer(from, to, tokenId) _safeTransfer(from, to, tokenId, data) _approve(to, tokenId, auth) _approve(to, tokenId, auth, emitEvent) _setApprovalForAll(owner, operator, approved) _requireOwned(tokenId) Events IERC721 Transfer(from, to, tokenId) Approval(owner, approved, tokenId) ApprovalForAll(owner, operator, approved) Errors ERC721UnsupportedToken(token) IERC721Errors ERC721InvalidOwner(owner) ERC721NonexistentToken(tokenId) ERC721IncorrectOwner(sender, tokenId, owner) ERC721InvalidSender(sender) ERC721InvalidReceiver(receiver) ERC721InsufficientApproval(operator, tokenId) ERC721InvalidApprover(approver) ERC721InvalidOperator(operator) Allow a user to deposit underlying tokens and mint the corresponding tokenIds. Allow a user to burn wrapped tokens and withdraw the corresponding tokenIds of the underlying tokens. Overrides IERC721Receiver.onERC721Received to allow minting on direct ERC-721 transfers to this contract. In case there’s data attached, it validates that the operator is this contract, so only trusted data is accepted from depositFor. Doesn’t work with unsafe transfers (eg. IERC721.transferFrom). Use ERC721Wrapper._recover for recovering in that scenario. Mint a wrapped token to cover any underlyingToken that would have been transferred by mistake. Internal function that can be exposed with access control if desired. Returns the underlying token. The received ERC-721 token couldn’t be wrapped. import \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\"; Implementation of the IERC721Receiver interface. Accepts all token transfers. Make sure the contract is able to use its token with IERC721.safeTransferFrom, IERC721.approve or IERC721.setApprovalForAll. Functions onERC721Received(, , , ) See IERC721Receiver.onERC721Received. Always returns IERC721Receiver.onERC721Received.selector. import \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\"; Library that provide common ERC-721 utility functions. See ERC-721. Functions checkOnERC721Received(operator, from, to, tokenId, data) Performs an acceptance check for the provided operator by calling {IERC721-onERC721Received} on the to address. The operator is generally the address that initiated the token transfer (i.e. msg.sender). The acceptance call is not executed and treated as a no-op if the target address doesn’t contain code (i.e. an EOA). Otherwise, the recipient must implement IERC721Receiver.onERC721Received and return the acceptance magic value to accept the transfer. ← ERC 20 ERC 1155 →","title":"ERC-721","component":"contracts","version":"5.x","name":"ERC721","url":"/contracts/5.x/api/token/ERC721.html","titles":[{"text":"Core","hash":"core","id":1},{"text":"IERC721 ","hash":"IERC721","id":2},{"text":"balanceOf(address owner) → uint256 balance external","hash":"IERC721-balanceOf-address-","id":3},{"text":"ownerOf(uint256 tokenId) → address owner external","hash":"IERC721-ownerOf-uint256-","id":4},{"text":"safeTransferFrom(address from, address to, uint256 tokenId, bytes data) external","hash":"IERC721-safeTransferFrom-address-address-uint256-bytes-","id":5},{"text":"safeTransferFrom(address from, address to, uint256 tokenId) external","hash":"IERC721-safeTransferFrom-address-address-uint256-","id":6},{"text":"transferFrom(address from, address to, uint256 tokenId) external","hash":"IERC721-transferFrom-address-address-uint256-","id":7},{"text":"approve(address to, uint256 tokenId) external","hash":"IERC721-approve-address-uint256-","id":8},{"text":"setApprovalForAll(address operator, bool approved) external","hash":"IERC721-setApprovalForAll-address-bool-","id":9},{"text":"getApproved(uint256 tokenId) → address operator external","hash":"IERC721-getApproved-uint256-","id":10},{"text":"isApprovedForAll(address owner, address operator) → bool external","hash":"IERC721-isApprovedForAll-address-address-","id":11},{"text":"Transfer(address indexed from, address indexed to, uint256 indexed tokenId) event","hash":"IERC721-Transfer-address-address-uint256-","id":12},{"text":"Approval(address indexed owner, address indexed approved, uint256 indexed tokenId) event","hash":"IERC721-Approval-address-address-uint256-","id":13},{"text":"ApprovalForAll(address indexed owner, address indexed operator, bool approved) event","hash":"IERC721-ApprovalForAll-address-address-bool-","id":14},{"text":"IERC721Metadata ","hash":"IERC721Metadata","id":15},{"text":"name() → string external","hash":"IERC721Metadata-name--","id":16},{"text":"symbol() → string external","hash":"IERC721Metadata-symbol--","id":17},{"text":"tokenURI(uint256 tokenId) → string external","hash":"IERC721Metadata-tokenURI-uint256-","id":18},{"text":"IERC721Enumerable ","hash":"IERC721Enumerable","id":19},{"text":"totalSupply() → uint256 external","hash":"IERC721Enumerable-totalSupply--","id":20},{"text":"tokenOfOwnerByIndex(address owner, uint256 index) → uint256 external","hash":"IERC721Enumerable-tokenOfOwnerByIndex-address-uint256-","id":21},{"text":"tokenByIndex(uint256 index) → uint256 external","hash":"IERC721Enumerable-tokenByIndex-uint256-","id":22},{"text":"ERC721 ","hash":"ERC721","id":23},{"text":"constructor(string name_, string symbol_) internal","hash":"ERC721-constructor-string-string-","id":24},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC721-supportsInterface-bytes4-","id":25},{"text":"balanceOf(address owner) → uint256 public","hash":"ERC721-balanceOf-address-","id":26},{"text":"ownerOf(uint256 tokenId) → address public","hash":"ERC721-ownerOf-uint256-","id":27},{"text":"name() → string public","hash":"ERC721-name--","id":28},{"text":"symbol() → string public","hash":"ERC721-symbol--","id":29},{"text":"tokenURI(uint256 tokenId) → string public","hash":"ERC721-tokenURI-uint256-","id":30},{"text":"_baseURI() → string internal","hash":"ERC721-_baseURI--","id":31},{"text":"approve(address to, uint256 tokenId) public","hash":"ERC721-approve-address-uint256-","id":32},{"text":"getApproved(uint256 tokenId) → address public","hash":"ERC721-getApproved-uint256-","id":33},{"text":"setApprovalForAll(address operator, bool approved) public","hash":"ERC721-setApprovalForAll-address-bool-","id":34},{"text":"isApprovedForAll(address owner, address operator) → bool public","hash":"ERC721-isApprovedForAll-address-address-","id":35},{"text":"transferFrom(address from, address to, uint256 tokenId) public","hash":"ERC721-transferFrom-address-address-uint256-","id":36},{"text":"safeTransferFrom(address from, address to, uint256 tokenId) public","hash":"ERC721-safeTransferFrom-address-address-uint256-","id":37},{"text":"safeTransferFrom(address from, address to, uint256 tokenId, bytes data) public","hash":"ERC721-safeTransferFrom-address-address-uint256-bytes-","id":38},{"text":"_ownerOf(uint256 tokenId) → address internal","hash":"ERC721-_ownerOf-uint256-","id":39},{"text":"_getApproved(uint256 tokenId) → address internal","hash":"ERC721-_getApproved-uint256-","id":40},{"text":"_isAuthorized(address owner, address spender, uint256 tokenId) → bool internal","hash":"ERC721-_isAuthorized-address-address-uint256-","id":41},{"text":"_checkAuthorized(address owner, address spender, uint256 tokenId) internal","hash":"ERC721-_checkAuthorized-address-address-uint256-","id":42},{"text":"_increaseBalance(address account, uint128 value) internal","hash":"ERC721-_increaseBalance-address-uint128-","id":43},{"text":"_update(address to, uint256 tokenId, address auth) → address internal","hash":"ERC721-_update-address-uint256-address-","id":44},{"text":"_mint(address to, uint256 tokenId) internal","hash":"ERC721-_mint-address-uint256-","id":45},{"text":"_safeMint(address to, uint256 tokenId) internal","hash":"ERC721-_safeMint-address-uint256-","id":46},{"text":"_safeMint(address to, uint256 tokenId, bytes data) internal","hash":"ERC721-_safeMint-address-uint256-bytes-","id":47},{"text":"_burn(uint256 tokenId) internal","hash":"ERC721-_burn-uint256-","id":48},{"text":"_transfer(address from, address to, uint256 tokenId) internal","hash":"ERC721-_transfer-address-address-uint256-","id":49},{"text":"_safeTransfer(address from, address to, uint256 tokenId) internal","hash":"ERC721-_safeTransfer-address-address-uint256-","id":50},{"text":"_safeTransfer(address from, address to, uint256 tokenId, bytes data) internal","hash":"ERC721-_safeTransfer-address-address-uint256-bytes-","id":51},{"text":"_approve(address to, uint256 tokenId, address auth) internal","hash":"ERC721-_approve-address-uint256-address-","id":52},{"text":"_approve(address to, uint256 tokenId, address auth, bool emitEvent) internal","hash":"ERC721-_approve-address-uint256-address-bool-","id":53},{"text":"_setApprovalForAll(address owner, address operator, bool approved) internal","hash":"ERC721-_setApprovalForAll-address-address-bool-","id":54},{"text":"_requireOwned(uint256 tokenId) → address internal","hash":"ERC721-_requireOwned-uint256-","id":55},{"text":"ERC721Enumerable ","hash":"ERC721Enumerable","id":56},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC721Enumerable-supportsInterface-bytes4-","id":57},{"text":"tokenOfOwnerByIndex(address owner, uint256 index) → uint256 public","hash":"ERC721Enumerable-tokenOfOwnerByIndex-address-uint256-","id":58},{"text":"totalSupply() → uint256 public","hash":"ERC721Enumerable-totalSupply--","id":59},{"text":"tokenByIndex(uint256 index) → uint256 public","hash":"ERC721Enumerable-tokenByIndex-uint256-","id":60},{"text":"_update(address to, uint256 tokenId, address auth) → address internal","hash":"ERC721Enumerable-_update-address-uint256-address-","id":61},{"text":"_increaseBalance(address account, uint128 amount) internal","hash":"ERC721Enumerable-_increaseBalance-address-uint128-","id":62},{"text":"ERC721OutOfBoundsIndex(address owner, uint256 index) error","hash":"ERC721Enumerable-ERC721OutOfBoundsIndex-address-uint256-","id":63},{"text":"ERC721EnumerableForbiddenBatchMint() error","hash":"ERC721Enumerable-ERC721EnumerableForbiddenBatchMint--","id":64},{"text":"IERC721Receiver ","hash":"IERC721Receiver","id":65},{"text":"onERC721Received(address operator, address from, uint256 tokenId, bytes data) → bytes4 external","hash":"IERC721Receiver-onERC721Received-address-address-uint256-bytes-","id":66},{"text":"Extensions","hash":"extensions","id":67},{"text":"ERC721Pausable ","hash":"ERC721Pausable","id":68},{"text":"_update(address to, uint256 tokenId, address auth) → address internal","hash":"ERC721Pausable-_update-address-uint256-address-","id":69},{"text":"ERC721Burnable ","hash":"ERC721Burnable","id":70},{"text":"burn(uint256 tokenId) public","hash":"ERC721Burnable-burn-uint256-","id":71},{"text":"ERC721Consecutive ","hash":"ERC721Consecutive","id":72},{"text":"_maxBatchSize() → uint96 internal","hash":"ERC721Consecutive-_maxBatchSize--","id":73},{"text":"_ownerOf(uint256 tokenId) → address internal","hash":"ERC721Consecutive-_ownerOf-uint256-","id":74},{"text":"_mintConsecutive(address to, uint96 batchSize) → uint96 internal","hash":"ERC721Consecutive-_mintConsecutive-address-uint96-","id":75},{"text":"_update(address to, uint256 tokenId, address auth) → address internal","hash":"ERC721Consecutive-_update-address-uint256-address-","id":76},{"text":"_firstConsecutiveId() → uint96 internal","hash":"ERC721Consecutive-_firstConsecutiveId--","id":77},{"text":"ERC721ForbiddenBatchMint() error","hash":"ERC721Consecutive-ERC721ForbiddenBatchMint--","id":78},{"text":"ERC721ExceededMaxBatchMint(uint256 batchSize, uint256 maxBatch) error","hash":"ERC721Consecutive-ERC721ExceededMaxBatchMint-uint256-uint256-","id":79},{"text":"ERC721ForbiddenMint() error","hash":"ERC721Consecutive-ERC721ForbiddenMint--","id":80},{"text":"ERC721ForbiddenBatchBurn() error","hash":"ERC721Consecutive-ERC721ForbiddenBatchBurn--","id":81},{"text":"ERC721URIStorage ","hash":"ERC721URIStorage","id":82},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC721URIStorage-supportsInterface-bytes4-","id":83},{"text":"tokenURI(uint256 tokenId) → string public","hash":"ERC721URIStorage-tokenURI-uint256-","id":84},{"text":"_setTokenURI(uint256 tokenId, string _tokenURI) internal","hash":"ERC721URIStorage-_setTokenURI-uint256-string-","id":85},{"text":"ERC721Votes ","hash":"ERC721Votes","id":86},{"text":"_update(address to, uint256 tokenId, address auth) → address internal","hash":"ERC721Votes-_update-address-uint256-address-","id":87},{"text":"_getVotingUnits(address account) → uint256 internal","hash":"ERC721Votes-_getVotingUnits-address-","id":88},{"text":"_increaseBalance(address account, uint128 amount) internal","hash":"ERC721Votes-_increaseBalance-address-uint128-","id":89},{"text":"ERC721Royalty ","hash":"ERC721Royalty","id":90},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC721Royalty-supportsInterface-bytes4-","id":91},{"text":"ERC721Wrapper ","hash":"ERC721Wrapper","id":92},{"text":"constructor(contract IERC721 underlyingToken) internal","hash":"ERC721Wrapper-constructor-contract-IERC721-","id":93},{"text":"depositFor(address account, uint256[] tokenIds) → bool public","hash":"ERC721Wrapper-depositFor-address-uint256---","id":94},{"text":"withdrawTo(address account, uint256[] tokenIds) → bool public","hash":"ERC721Wrapper-withdrawTo-address-uint256---","id":95},{"text":"onERC721Received(address, address from, uint256 tokenId, bytes) → bytes4 public","hash":"ERC721Wrapper-onERC721Received-address-address-uint256-bytes-","id":96},{"text":"_recover(address account, uint256 tokenId) → uint256 internal","hash":"ERC721Wrapper-_recover-address-uint256-","id":97},{"text":"underlying() → contract IERC721 public","hash":"ERC721Wrapper-underlying--","id":98},{"text":"ERC721UnsupportedToken(address token) error","hash":"ERC721Wrapper-ERC721UnsupportedToken-address-","id":99},{"text":"Utilities","hash":"utilities","id":100},{"text":"ERC721Holder ","hash":"ERC721Holder","id":101},{"text":"onERC721Received(address, address, uint256, bytes) → bytes4 public","hash":"ERC721Holder-onERC721Received-address-address-uint256-bytes-","id":102},{"text":"ERC721Utils ","hash":"ERC721Utils","id":103},{"text":"checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes data) internal","hash":"ERC721Utils-checkOnERC721Received-address-address-address-uint256-bytes-","id":104}]},"31":{"id":31,"text":"Functionality that is common to multiple token standards. ERC2981: NFT Royalties compatible with both ERC-721 and ERC-1155. For ERC-721 consider ERC721Royalty which clears the royalty information from storage on burn. import \"@openzeppelin/contracts/token/common/ERC2981.sol\"; Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via _setDefaultRoyalty, and/or individually for specific token ids via _setTokenRoyalty. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. _feeDenominator is overridable but defaults to 10000, meaning the fee is specified in basis points by default. ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See Rationale in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. Functions supportsInterface(interfaceId) royaltyInfo(tokenId, salePrice) _feeDenominator() _setDefaultRoyalty(receiver, feeNumerator) _deleteDefaultRoyalty() _setTokenRoyalty(tokenId, receiver, feeNumerator) _resetTokenRoyalty(tokenId) Errors ERC2981InvalidDefaultRoyalty(numerator, denominator) ERC2981InvalidDefaultRoyaltyReceiver(receiver) ERC2981InvalidTokenRoyalty(tokenId, numerator, denominator) ERC2981InvalidTokenRoyaltyReceiver(tokenId, receiver) See IERC165.supportsInterface. Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers. The denominator with which to interpret the fee set in _setTokenRoyalty and _setDefaultRoyalty as a fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an override. Sets the royalty information that all ids in this contract will default to. Requirements: receiver cannot be the zero address. feeNumerator cannot be greater than the fee denominator. Removes default royalty information. Sets the royalty information for a specific token id, overriding the global default. Requirements: receiver cannot be the zero address. feeNumerator cannot be greater than the fee denominator. Resets royalty information for the token id back to the global default. The default royalty set is invalid (eg. (numerator / denominator) >= 1). The default royalty receiver is invalid. The royalty set for an specific tokenId is invalid (eg. (numerator / denominator) >= 1). The royalty receiver for tokenId is invalid. ← Account ERC 20 →","title":"Common (Tokens)","component":"contracts","version":"5.x","name":"common","url":"/contracts/5.x/api/token/common.html","titles":[{"text":"Contracts","hash":"contracts","id":1},{"text":"ERC2981 ","hash":"ERC2981","id":2},{"text":"supportsInterface(bytes4 interfaceId) → bool public","hash":"ERC2981-supportsInterface-bytes4-","id":3},{"text":"royaltyInfo(uint256 tokenId, uint256 salePrice) → address, uint256 public","hash":"ERC2981-royaltyInfo-uint256-uint256-","id":4},{"text":"_feeDenominator() → uint96 internal","hash":"ERC2981-_feeDenominator--","id":5},{"text":"_setDefaultRoyalty(address receiver, uint96 feeNumerator) internal","hash":"ERC2981-_setDefaultRoyalty-address-uint96-","id":6},{"text":"_deleteDefaultRoyalty() internal","hash":"ERC2981-_deleteDefaultRoyalty--","id":7},{"text":"_setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal","hash":"ERC2981-_setTokenRoyalty-uint256-address-uint96-","id":8},{"text":"_resetTokenRoyalty(uint256 tokenId) internal","hash":"ERC2981-_resetTokenRoyalty-uint256-","id":9},{"text":"ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator) error","hash":"ERC2981-ERC2981InvalidDefaultRoyalty-uint256-uint256-","id":10},{"text":"ERC2981InvalidDefaultRoyaltyReceiver(address receiver) error","hash":"ERC2981-ERC2981InvalidDefaultRoyaltyReceiver-address-","id":11},{"text":"ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator) error","hash":"ERC2981-ERC2981InvalidTokenRoyalty-uint256-uint256-uint256-","id":12},{"text":"ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver) error","hash":"ERC2981-ERC2981InvalidTokenRoyaltyReceiver-uint256-address-","id":13}]}},"components":{},"componentVersions":{"contracts/5.x":{"displayVersion":"5.x","title":"Contracts","version":"5.x","name":"contracts","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"OpenZeppelin Docs","site-url":"https://docs.openzeppelin.com","idprefix":""},"sourcemap":false},"url":"/contracts/5.x/index.html","navigation":[{"items":[{"content":"Overview","url":"/contracts/5.x/index.html","urlType":"internal"},{"content":"Wizard","url":"/contracts/5.x/wizard.html","urlType":"internal"},{"content":"Extending Contracts","url":"/contracts/5.x/extending-contracts.html","urlType":"internal"},{"content":"Using with Upgrades","url":"/contracts/5.x/upgradeable.html","urlType":"internal"},{"content":"Backwards Compatibility","url":"/contracts/5.x/backwards-compatibility.html","urlType":"internal"},{"content":"Access Control","url":"/contracts/5.x/access-control.html","urlType":"internal"},{"content":"Account Abstraction","url":"/contracts/5.x/account-abstraction.html","urlType":"internal","items":[{"content":"ERC-7579","url":"/contracts/5.x/erc7579.html","urlType":"internal"}]},{"content":"Tokens","url":"/contracts/5.x/tokens.html","urlType":"internal","items":[{"content":"ERC-20","url":"/contracts/5.x/erc20.html","urlType":"internal","items":[{"content":"Creating Supply","url":"/contracts/5.x/erc20-supply.html","urlType":"internal"}]},{"content":"ERC-721","url":"/contracts/5.x/erc721.html","urlType":"internal"},{"content":"ERC-1155","url":"/contracts/5.x/erc1155.html","urlType":"internal"},{"content":"ERC-4626","url":"/contracts/5.x/erc4626.html","urlType":"internal"}]},{"content":"Governance","url":"/contracts/5.x/governance.html","urlType":"internal"},{"content":"Utilities","url":"/contracts/5.x/utilities.html","urlType":"internal"},{"content":"Subgraphs","url":"#subgraphs::index.adoc","urlType":"internal","unresolved":true},{"content":"FAQ","url":"/contracts/5.x/faq.html","urlType":"internal"}],"root":true,"order":0},{"content":"API","items":[{"content":"Access","url":"/contracts/5.x/api/access.html","urlType":"internal"},{"content":"Account","url":"/contracts/5.x/api/account.html","urlType":"internal"},{"content":"Common (Tokens)","url":"/contracts/5.x/api/token/common.html","urlType":"internal"},{"content":"ERC 20","url":"/contracts/5.x/api/token/ERC20.html","urlType":"internal"},{"content":"ERC 721","url":"/contracts/5.x/api/token/ERC721.html","urlType":"internal"},{"content":"ERC 1155","url":"/contracts/5.x/api/token/ERC1155.html","urlType":"internal"},{"content":"Finance","url":"/contracts/5.x/api/finance.html","urlType":"internal"},{"content":"Governance","url":"/contracts/5.x/api/governance.html","urlType":"internal"},{"content":"Interfaces","url":"/contracts/5.x/api/interfaces.html","urlType":"internal"},{"content":"Meta Transactions","url":"/contracts/5.x/api/metatx.html","urlType":"internal"},{"content":"Proxy","url":"/contracts/5.x/api/proxy.html","urlType":"internal"},{"content":"Utils","url":"/contracts/5.x/api/utils.html","urlType":"internal"}],"root":true,"order":1}]}}}})